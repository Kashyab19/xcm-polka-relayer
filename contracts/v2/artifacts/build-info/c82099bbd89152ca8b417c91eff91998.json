{
	"id": "c82099bbd89152ca8b417c91eff91998",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.28",
	"solcLongVersion": "0.8.28+commit.7893614a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/v2/CollateralVault.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.18;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\n\n/// @notice Minimal ERC20-only vault + XCM-lock stub\ncontract CollateralVault {\n    // user → token → deposited amount\n    mapping(address => mapping(address => uint256)) public erc20Deposits;\n\n    event ERC20Deposited(\n        address indexed user,\n        address indexed token,\n        uint256         amount\n    );\n\n    event CrossChainCollateralLockRequested(\n        address indexed user,\n        address         token,\n        uint256         amount,\n        bytes32         destChain\n    );\n\n    /// @notice Deposit ERC20 collateral\n    function depositERC20(address token, uint256 amount) external {\n        require(\n            IERC20(token).transferFrom(msg.sender, address(this), amount),\n            \"ERC20 transfer failed\"\n        );\n        erc20Deposits[msg.sender][token] += amount;\n        emit ERC20Deposited(msg.sender, token, amount);\n    }\n\n    /// @notice Stub: lock collateral on another chain via XCM\n    function requestXcmLock(\n        address token,\n        uint256 amount,\n        bytes32 destChain\n    ) external {\n        uint256 bal = erc20Deposits[msg.sender][token];\n        require(bal >= amount, \"Insufficient collateral\");\n        erc20Deposits[msg.sender][token] = bal - amount;\n        emit CrossChainCollateralLockRequested(\n          msg.sender, token, amount, destChain\n        );\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.deployedBytecode",
						"evm.methodIdentifiers"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":false},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					},
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"evm": {
						"bytecode": {
							"object": ""
						},
						"deployedBytecode": {
							"object": ""
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"irOptimized": ""
				}
			},
			"contracts/v2/CollateralVault.sol": {
				"CollateralVault": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "destChain",
									"type": "bytes32"
								}
							],
							"name": "CrossChainCollateralLockRequested",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "ERC20Deposited",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "depositERC20",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "erc20Deposits",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes32",
									"name": "destChain",
									"type": "bytes32"
								}
							],
							"name": "requestXcmLock",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"metadata": {
						"optimizer_settings": {
							"is_debug_logging_enabled": false,
							"is_fallback_to_size_enabled": false,
							"is_verify_each_enabled": false,
							"level_back_end": "Aggressive",
							"level_middle_end": "Aggressive",
							"level_middle_end_size": "Zero"
						},
						"revive_pallet_version": null,
						"revive_version": "0.1.0-dev.12+commit.66f9a4d.llvm-18.1.8",
						"solc_metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"destChain\",\"type\":\"bytes32\"}],\"name\":\"CrossChainCollateralLockRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ERC20Deposited\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"depositERC20\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"erc20Deposits\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"destChain\",\"type\":\"bytes32\"}],\"name\":\"requestXcmLock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"depositERC20(address,uint256)\":{\"notice\":\"Deposit ERC20 collateral\"},\"requestXcmLock(address,uint256,bytes32)\":{\"notice\":\"Stub: lock collateral on another chain via XCM\"}},\"notice\":\"Minimal ERC20-only vault + XCM-lock stub\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/v2/CollateralVault.sol\":\"CollateralVault\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":false},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"contracts/v2/CollateralVault.sol\":{\"keccak256\":\"0x696faaf0c35e03ebe7e6e73127844d172ca2e2487ebe3b52c61f9541933803a8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2fabd9eddcfa952bb938a564ec733df621546bf3c51f7ae8d3afaf47d597f3a8\",\"dweb:/ipfs/QmWcucUNGwcDetvoR5Cj7PGN5hWLP8uaFN5U9sfbtwEwv5\"]}},\"version\":1}",
						"solc_version": "0.8.28+commit.7893614a.Emscripten.clang"
					},
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"depositERC20(address,uint256)": {
								"notice": "Deposit ERC20 collateral"
							},
							"requestXcmLock(address,uint256,bytes32)": {
								"notice": "Stub: lock collateral on another chain via XCM"
							}
						},
						"notice": "Minimal ERC20-only vault + XCM-lock stub",
						"version": 1
					},
					"storageLayout": {
						"storage": [
							{
								"astId": 87,
								"contract": "contracts/v2/CollateralVault.sol:CollateralVault",
								"label": "erc20Deposits",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"evm": {
						"assembly": "// RO data = 0/0 bytes\n// RW data = 64/65616 bytes\n// Stack size = 16384 bytes\n\n// Instructions = 5307\n// Code size = 16490 bytes\n\n      : @0 (gas: 2)\n     0: i32 a2 = a0 >> 0x10\n     3: jump @6 if a2 != 0\n      : @1 (gas: 2)\n     6: a2 = 0x10001\n    11: jump @6 if a1 >=u a2\n      : @2 (gas: 4)\n    14: a1 = a1 + a0\n    17: i32 a1 = a1 + 0x1f\n    20: a1 = a1 & 0xffffffffffffffe0\n    23: jump @7 if a1 >=u 65537\n      : @3 (gas: 2)\n    29: a3 = i32 [0x20040]\n    34: jump @5 if a3 >=u a1\n      : @4 (gas: 4)\n    37: u32 [0x20040] = a1\n    42: a1 = 0x20050\n    47: a0 = a0 + a1\n    50: ret\n      : @5 (gas: 3)\n    52: a1 = 0x20050\n    57: a0 = a0 + a1\n    60: ret\n      : @6 (gas: 1)\n    62: trap\n      : @7 (gas: 1)\n    63: trap\n      : @8 (gas: 13)\n    64: sp = sp + 0xffffffffffffffd8\n    67: u64 [sp + 0x20] = ra\n    70: u64 [sp + 0x18] = s0\n    73: u64 [sp + 0x10] = s1\n    76: a2 = u64 [a1]\n    78: u64 [sp + 0x8] = a2\n    81: a2 = u64 [a1 + 0x8]\n    84: u64 [sp] = a2\n    86: s0 = u64 [a1 + 0x10]\n    89: s1 = u64 [a1 + 0x18]\n    92: i32 a0 = a0 + 0\n    94: a1 = 0x20\n    97: ra = 2, jump @0\n      : @9 [@dyn 1] (gas: 71)\n   101: a1 = reverse s1\n   103: a2 = reverse s0\n   105: a3 = u64 [sp]\n   107: a3 = reverse a3\n   109: a4 = u64 [sp + 0x8]\n   112: a4 = reverse a4\n   114: u8 [a0 + 0x18] = a4\n   117: u8 [a0 + 0x10] = a3\n   120: u8 [a0 + 0x8] = a2\n   123: u8 [a0] = a1\n   125: a5 = a4 >> 0x38\n   128: u8 [a0 + 0x1f] = a5\n   131: a5 = a4 >> 0x30\n   134: u8 [a0 + 0x1e] = a5\n   137: a5 = a4 >> 0x28\n   140: u8 [a0 + 0x1d] = a5\n   143: a5 = a4 >> 0x20\n   146: u8 [a0 + 0x1c] = a5\n   149: a5 = a4 >> 0x18\n   152: u8 [a0 + 0x1b] = a5\n   155: a5 = a4 >> 0x10\n   158: u8 [a0 + 0x1a] = a5\n   161: a4 = a4 >> 0x8\n   164: u8 [a0 + 0x19] = a4\n   167: a4 = a3 >> 0x38\n   170: u8 [a0 + 0x17] = a4\n   173: a4 = a3 >> 0x30\n   176: u8 [a0 + 0x16] = a4\n   179: a4 = a3 >> 0x28\n   182: u8 [a0 + 0x15] = a4\n   185: a4 = a3 >> 0x20\n   188: u8 [a0 + 0x14] = a4\n   191: a4 = a3 >> 0x18\n   194: u8 [a0 + 0x13] = a4\n   197: a4 = a3 >> 0x10\n   200: u8 [a0 + 0x12] = a4\n   203: a3 = a3 >> 0x8\n   206: u8 [a0 + 0x11] = a3\n   209: a3 = a2 >> 0x38\n   212: u8 [a0 + 0xf] = a3\n   215: a3 = a2 >> 0x30\n   218: u8 [a0 + 0xe] = a3\n   221: a3 = a2 >> 0x28\n   224: u8 [a0 + 0xd] = a3\n   227: a3 = a2 >> 0x20\n   230: u8 [a0 + 0xc] = a3\n   233: a3 = a2 >> 0x18\n   236: u8 [a0 + 0xb] = a3\n   239: a3 = a2 >> 0x10\n   242: u8 [a0 + 0xa] = a3\n   245: a2 = a2 >> 0x8\n   248: u8 [a0 + 0x9] = a2\n   251: a2 = a1 >> 0x38\n   254: u8 [a0 + 0x7] = a2\n   257: a2 = a1 >> 0x30\n   260: u8 [a0 + 0x6] = a2\n   263: a2 = a1 >> 0x28\n   266: u8 [a0 + 0x5] = a2\n   269: a2 = a1 >> 0x20\n   272: u8 [a0 + 0x4] = a2\n   275: a2 = a1 >> 0x18\n   278: u8 [a0 + 0x3] = a2\n   281: a2 = a1 >> 0x10\n   284: u8 [a0 + 0x2] = a2\n   287: a1 = a1 >> 0x8\n   290: u8 [a0 + 0x1] = a1\n   293: ra = u64 [sp + 0x20]\n   296: s0 = u64 [sp + 0x18]\n   299: s1 = u64 [sp + 0x10]\n   302: sp = sp + 0x28\n   305: ret\n      : @10 (gas: 6)\n   307: sp = sp + 0xfffffffffffffff0\n   310: u64 [sp + 0x8] = ra\n   313: u64 [sp] = s0\n   315: s0 = a0 & 0x1\n   318: ecalli 4 // 'call_data_size'\n   320: fallthrough\n      : @11 (gas: 2)\n   321: u32 [0x20044] = a0\n   326: jump @13 if s0 == 0\n      : @12 (gas: 1)\n   329: ra = 4, jump @14\n      : @13 [@dyn 2] (gas: 1)\n   333: ra = 6, jump @28\n      : @14 [@dyn 3] (gas: 9)\n   338: sp = sp + 0xffffffffffffffc0\n   341: u64 [sp + 0x38] = ra\n   344: u64 [sp + 0x30] = s0\n   347: u64 [sp + 0x28] = s1\n   350: s0 = sp + 0x40\n   353: sp = sp & 0xffffffffffffffe0\n   356: a0 = 0x40\n   359: a1 = 0x20\n   362: ra = 8, jump @0\n      : @15 [@dyn 4] (gas: 39)\n   367: u8 [a0 + 31] = 0x80\n   372: u8 [a0 + 30] = 0\n   375: u8 [a0 + 29] = 0\n   378: u8 [a0 + 28] = 0\n   381: u8 [a0 + 27] = 0\n   384: u8 [a0 + 26] = 0\n   387: u8 [a0 + 25] = 0\n   390: u8 [a0 + 24] = 0\n   393: u8 [a0 + 23] = 0\n   396: u8 [a0 + 22] = 0\n   399: u8 [a0 + 21] = 0\n   402: u8 [a0 + 20] = 0\n   405: u8 [a0 + 19] = 0\n   408: u8 [a0 + 18] = 0\n   411: u8 [a0 + 17] = 0\n   414: u8 [a0 + 16] = 0\n   417: u8 [a0 + 15] = 0\n   420: u8 [a0 + 14] = 0\n   423: u8 [a0 + 13] = 0\n   426: u8 [a0 + 12] = 0\n   429: u8 [a0 + 11] = 0\n   432: u8 [a0 + 10] = 0\n   435: u8 [a0 + 9] = 0\n   438: u8 [a0 + 8] = 0\n   441: u8 [a0 + 7] = 0\n   444: u8 [a0 + 6] = 0\n   447: u8 [a0 + 5] = 0\n   450: u8 [a0 + 4] = 0\n   453: u8 [a0 + 3] = 0\n   456: u8 [a0 + 2] = 0\n   459: u8 [a0 + 1] = 0\n   462: u8 [a0 + 0] = 0\n   464: u64 [sp + 24] = 0\n   467: u64 [sp + 0] = 0\n   469: u64 [sp + 8] = 0\n   472: u64 [sp + 16] = 0\n   475: i32 a0 = sp + 0\n   477: ecalli 15 // 'value_transferred'\n   479: fallthrough\n      : @16 (gas: 8)\n   480: a0 = u64 [sp + 0x10]\n   483: a1 = u64 [sp + 0x18]\n   486: a2 = u64 [sp + 0x8]\n   489: a3 = u64 [sp]\n   491: a1 = a1 | a2\n   494: a0 = a0 | a3\n   497: a0 = a0 | a1\n   500: jump @20 if a0 != 0\n      : @17 (gas: 3)\n   504: a0 = 0x40\n   507: a1 = 0x20\n   510: ra = 10, jump @0\n      : @18 [@dyn 5] (gas: 100)\n   515: a1 = u8 [a0 + 0x11]\n   518: a2 = u8 [a0 + 0x10]\n   521: a3 = u8 [a0 + 0x12]\n   524: a4 = u8 [a0 + 0x13]\n   527: a1 = a1 << 0x8\n   530: a1 = a1 | a2\n   533: a3 = a3 << 0x10\n   536: a4 = a4 << 0x18\n   539: a3 = a3 | a4\n   542: a1 = a1 | a3\n   545: a2 = u8 [a0 + 0x15]\n   548: a3 = u8 [a0 + 0x14]\n   551: a4 = u8 [a0 + 0x16]\n   554: a5 = u8 [a0 + 0x17]\n   557: a2 = a2 << 0x8\n   560: a2 = a2 | a3\n   563: a4 = a4 << 0x10\n   566: a5 = a5 << 0x18\n   569: a4 = a4 | a5\n   572: a2 = a2 | a4\n   575: a2 = a2 << 0x20\n   578: t0 = a2 | a1\n   581: a2 = u8 [a0 + 0x1]\n   584: a3 = u8 [a0]\n   586: a4 = u8 [a0 + 0x2]\n   589: a5 = u8 [a0 + 0x3]\n   592: a2 = a2 << 0x8\n   595: a2 = a2 | a3\n   598: a4 = a4 << 0x10\n   601: a5 = a5 << 0x18\n   604: a4 = a4 | a5\n   607: a2 = a2 | a4\n   610: a3 = u8 [a0 + 0x5]\n   613: a4 = u8 [a0 + 0x4]\n   616: a5 = u8 [a0 + 0x6]\n   619: s1 = u8 [a0 + 0x7]\n   622: a3 = a3 << 0x8\n   625: a3 = a3 | a4\n   628: a5 = a5 << 0x10\n   631: s1 = s1 << 0x18\n   634: a5 = a5 | s1\n   637: a3 = a3 | a5\n   640: a3 = a3 << 0x20\n   643: a2 = a2 | a3\n   646: a3 = u8 [a0 + 0x19]\n   649: a4 = u8 [a0 + 0x18]\n   652: a5 = u8 [a0 + 0x1a]\n   655: s1 = u8 [a0 + 0x1b]\n   658: a3 = a3 << 0x8\n   661: a3 = a3 | a4\n   664: a5 = a5 << 0x10\n   667: s1 = s1 << 0x18\n   670: a5 = a5 | s1\n   673: a3 = a3 | a5\n   676: a4 = u8 [a0 + 0x1d]\n   679: a5 = u8 [a0 + 0x1c]\n   682: s1 = u8 [a0 + 0x1e]\n   685: a1 = u8 [a0 + 0x1f]\n   688: a4 = a4 << 0x8\n   691: a4 = a4 | a5\n   694: s1 = s1 << 0x10\n   697: a1 = a1 << 0x18\n   700: a1 = a1 | s1\n   703: a1 = a1 | a4\n   706: a1 = a1 << 0x20\n   709: a3 = a3 | a1\n   712: a1 = u8 [a0 + 0x9]\n   715: a4 = u8 [a0 + 0x8]\n   718: a5 = u8 [a0 + 0xa]\n   721: s1 = u8 [a0 + 0xb]\n   724: a1 = a1 << 0x8\n   727: a1 = a1 | a4\n   730: a5 = a5 << 0x10\n   733: s1 = s1 << 0x18\n   736: a5 = a5 | s1\n   739: a1 = a1 | a5\n   742: a4 = u8 [a0 + 0xd]\n   745: a5 = u8 [a0 + 0xc]\n   748: s1 = u8 [a0 + 0xe]\n   751: a0 = u8 [a0 + 0xf]\n   754: a4 = a4 << 0x8\n   757: a4 = a4 | a5\n   760: s1 = s1 << 0x10\n   763: a0 = a0 << 0x18\n   766: a0 = a0 | s1\n   769: a0 = a0 | a4\n   772: a0 = a0 << 0x20\n   775: a0 = a0 | a1\n   778: a0 = reverse a0\n   780: s1 = reverse a3\n   782: a1 = reverse a2\n   784: a2 = reverse t0\n   786: a1 = a1 | a2\n   789: a2 = s1 | a0\n   792: a2 = a2 | a1\n   795: a2 = a2 >> 0x20\n   798: a0 = a0 | a1\n   801: a0 = a0 << 0x20\n   804: a0 = a0 | a2\n   807: jump @22 if a0 == 0\n      : @19 (gas: 1)\n   810: trap\n      : @20 (gas: 3)\n   811: a0 = 0\n   813: a1 = 0\n   815: ra = 12, jump @0\n      : @21 [@dyn 6] (gas: 5)\n   820: i32 a1 = a0 + 0\n   822: a0 = 0x1\n   825: a2 = 0\n   827: ecalli 12 // 'seal_return'\n   829: fallthrough\n      : @22 (gas: 4)\n   830: i32 s1 = s1 + 0\n   832: a0 = s1\n   834: a1 = 0\n   836: ra = 14, jump @0\n      : @23 [@dyn 7] (gas: 5)\n   841: i32 a0 = a0 + 0\n   843: a1 = 0\n   845: a2 = 0\n   847: ecalli 2 // 'call_data_copy'\n   849: fallthrough\n      : @24 (gas: 2)\n   850: a1 = i32 [0x20048]\n   855: jump @26 if a1 == 0\n      : @25 (gas: 4)\n   858: a0 = 0x30050\n   863: i32 a0 = a0 + 0\n   865: ecalli 13 // 'set_immutable_data'\n   867: fallthrough\n      : @26 (gas: 3)\n   868: a0 = s1\n   870: a1 = 0\n   872: ra = 16, jump @0\n      : @27 [@dyn 8] (gas: 6)\n   877: i32 a1 = a0 + 0\n   879: a0 = 0\n   881: a2 = 0\n   883: ra = 0x12\n   886: ecalli 12 // 'seal_return'\n   888: fallthrough\n      : @28 [@dyn 9] (gas: 8)\n   889: sp = sp + 0xffffffffffffffc0\n   892: u64 [sp + 0x38] = ra\n   895: u64 [sp + 0x30] = s0\n   898: s0 = sp + 0x40\n   901: sp = sp & 0xffffffffffffffe0\n   904: a0 = 0x40\n   907: a1 = 0x20\n   910: ra = 20, jump @0\n      : @29 [@dyn 10] (gas: 34)\n   915: u8 [a0 + 31] = 0x80\n   920: u8 [a0 + 30] = 0\n   923: u8 [a0 + 29] = 0\n   926: u8 [a0 + 28] = 0\n   929: u8 [a0 + 27] = 0\n   932: u8 [a0 + 26] = 0\n   935: u8 [a0 + 25] = 0\n   938: u8 [a0 + 24] = 0\n   941: u8 [a0 + 23] = 0\n   944: u8 [a0 + 22] = 0\n   947: u8 [a0 + 21] = 0\n   950: u8 [a0 + 20] = 0\n   953: u8 [a0 + 19] = 0\n   956: u8 [a0 + 18] = 0\n   959: u8 [a0 + 17] = 0\n   962: u8 [a0 + 16] = 0\n   965: u8 [a0 + 15] = 0\n   968: u8 [a0 + 14] = 0\n   971: u8 [a0 + 13] = 0\n   974: u8 [a0 + 12] = 0\n   977: u8 [a0 + 11] = 0\n   980: u8 [a0 + 10] = 0\n   983: u8 [a0 + 9] = 0\n   986: u8 [a0 + 8] = 0\n   989: u8 [a0 + 7] = 0\n   992: u8 [a0 + 3] = 0\n   995: u8 [a0 + 2] = 0\n   998: u8 [a0 + 1] = 0\n  1001: u8 [a0 + 0] = 0\n  1003: a1 = i32 [0x20044]\n  1008: u8 [a0 + 6] = 0\n  1011: u8 [a0 + 5] = 0\n  1014: u8 [a0 + 4] = 0\n  1017: jump @35 if a1 <u 4\n      : @30 (gas: 4)\n  1021: i32 a0 = sp + 0\n  1023: a1 = 0\n  1025: ecalli 3 // 'call_data_load'\n  1027: fallthrough\n      : @31 (gas: 2)\n  1028: a0 = i32 [sp + 0x1c]\n  1031: jump @37 if a0 == 2550053158\n      : @32 (gas: 1)\n  1039: jump @36 if a0 == 2696147937\n      : @33 (gas: 1)\n  1046: jump @35 if a0 != 1211696085\n      : @34 (gas: 14)\n  1053: ra = 0x16\n  1056: sp = sp + 0xfffffffffffffea0\n  1060: u64 [sp + 0x158] = ra\n  1064: u64 [sp + 0x150] = s0\n  1068: u64 [sp + 0x148] = s1\n  1072: s0 = sp + 0x160\n  1076: sp = sp & 0xffffffffffffffe0\n  1079: u64 [sp + 312] = 0\n  1083: u64 [sp + 304] = 0\n  1087: u64 [sp + 296] = 0\n  1091: u64 [sp + 288] = 0\n  1095: i32 a0 = sp + 0x120\n  1099: ecalli 15 // 'value_transferred'\n  1101: jump @52\n      : @35 [@dyn 11] (gas: 1)\n  1104: ra = 24, jump @111\n      : @36 [@dyn 12] (gas: 14)\n  1109: ra = 0x1a\n  1112: sp = sp + 0xfffffffffffffec0\n  1116: u64 [sp + 0x138] = ra\n  1120: u64 [sp + 0x130] = s0\n  1124: u64 [sp + 0x128] = s1\n  1128: s0 = sp + 0x140\n  1132: sp = sp & 0xffffffffffffffe0\n  1135: u64 [sp + 280] = 0\n  1139: u64 [sp + 272] = 0\n  1143: u64 [sp + 264] = 0\n  1147: u64 [sp + 256] = 0\n  1151: i32 a0 = sp + 0x100\n  1155: ecalli 15 // 'value_transferred'\n  1157: jump @100\n      : @37 [@dyn 13] (gas: 1)\n  1160: ra = 28, jump @71\n      : @38 [@dyn 14] (gas: 7)\n  1165: sp = sp + 0xfffffffffffffff0\n  1168: u64 [sp + 0x8] = ra\n  1171: u64 [sp] = s0\n  1173: s0 = a0\n  1175: a0 = 0x40\n  1178: a1 = 0x20\n  1181: ra = 30, jump @0\n      : @39 [@dyn 15] (gas: 100)\n  1186: a1 = u8 [a0 + 0x1]\n  1189: a2 = u8 [a0]\n  1191: a3 = u8 [a0 + 0x2]\n  1194: a4 = u8 [a0 + 0x3]\n  1197: a1 = a1 << 0x8\n  1200: a1 = a1 | a2\n  1203: a3 = a3 << 0x10\n  1206: a4 = a4 << 0x18\n  1209: a3 = a3 | a4\n  1212: a1 = a1 | a3\n  1215: a2 = u8 [a0 + 0x5]\n  1218: a3 = u8 [a0 + 0x4]\n  1221: a4 = u8 [a0 + 0x6]\n  1224: a5 = u8 [a0 + 0x7]\n  1227: a2 = a2 << 0x8\n  1230: a2 = a2 | a3\n  1233: a4 = a4 << 0x10\n  1236: a5 = a5 << 0x18\n  1239: a4 = a4 | a5\n  1242: a2 = a2 | a4\n  1245: a2 = a2 << 0x20\n  1248: t0 = a2 | a1\n  1251: a2 = u8 [a0 + 0x9]\n  1254: a3 = u8 [a0 + 0x8]\n  1257: a4 = u8 [a0 + 0xa]\n  1260: a5 = u8 [a0 + 0xb]\n  1263: a2 = a2 << 0x8\n  1266: a2 = a2 | a3\n  1269: a4 = a4 << 0x10\n  1272: a5 = a5 << 0x18\n  1275: a4 = a4 | a5\n  1278: a2 = a2 | a4\n  1281: a3 = u8 [a0 + 0xd]\n  1284: a4 = u8 [a0 + 0xc]\n  1287: a5 = u8 [a0 + 0xe]\n  1290: a1 = u8 [a0 + 0xf]\n  1293: a3 = a3 << 0x8\n  1296: a3 = a3 | a4\n  1299: a5 = a5 << 0x10\n  1302: a1 = a1 << 0x18\n  1305: a1 = a1 | a5\n  1308: a1 = a1 | a3\n  1311: a1 = a1 << 0x20\n  1314: t1 = a1 | a2\n  1317: a1 = u8 [a0 + 0x11]\n  1320: a3 = u8 [a0 + 0x10]\n  1323: a4 = u8 [a0 + 0x12]\n  1326: a5 = u8 [a0 + 0x13]\n  1329: a1 = a1 << 0x8\n  1332: a1 = a1 | a3\n  1335: a4 = a4 << 0x10\n  1338: a5 = a5 << 0x18\n  1341: a4 = a4 | a5\n  1344: a1 = a1 | a4\n  1347: a3 = u8 [a0 + 0x15]\n  1350: a4 = u8 [a0 + 0x14]\n  1353: a5 = u8 [a0 + 0x16]\n  1356: a2 = u8 [a0 + 0x17]\n  1359: a3 = a3 << 0x8\n  1362: a3 = a3 | a4\n  1365: a5 = a5 << 0x10\n  1368: a2 = a2 << 0x18\n  1371: a2 = a2 | a5\n  1374: a2 = a2 | a3\n  1377: a2 = a2 << 0x20\n  1380: a3 = a2 | a1\n  1383: a1 = u8 [a0 + 0x19]\n  1386: a2 = u8 [a0 + 0x18]\n  1389: a4 = u8 [a0 + 0x1a]\n  1392: a5 = u8 [a0 + 0x1b]\n  1395: a1 = a1 << 0x8\n  1398: a1 = a1 | a2\n  1401: a4 = a4 << 0x10\n  1404: a5 = a5 << 0x18\n  1407: a4 = a4 | a5\n  1410: a1 = a1 | a4\n  1413: a2 = u8 [a0 + 0x1d]\n  1416: a4 = u8 [a0 + 0x1c]\n  1419: a5 = u8 [a0 + 0x1e]\n  1422: a0 = u8 [a0 + 0x1f]\n  1425: a2 = a2 << 0x8\n  1428: a2 = a2 | a4\n  1431: a5 = a5 << 0x10\n  1434: a0 = a0 << 0x18\n  1437: a0 = a0 | a5\n  1440: a0 = a0 | a2\n  1443: a0 = a0 << 0x20\n  1446: a0 = a0 | a1\n  1449: a0 = reverse a0\n  1451: a1 = reverse a3\n  1453: a2 = reverse t1\n  1455: a3 = reverse t0\n  1457: u64 [s0 + 0x18] = a3\n  1460: u64 [s0 + 0x10] = a2\n  1463: u64 [s0 + 0x8] = a1\n  1466: u64 [s0] = a0\n  1468: ra = u64 [sp + 0x8]\n  1471: s0 = u64 [sp]\n  1473: sp = sp + 0x10\n  1476: ret\n      : @40 (gas: 47)\n  1478: sp = sp + 0xffffffffffffff60\n  1482: u64 [sp + 0x98] = ra\n  1486: u64 [sp + 0x90] = s0\n  1490: u64 [sp + 0x88] = s1\n  1494: s0 = sp + 0xa0\n  1498: sp = sp & 0xffffffffffffffe0\n  1501: t0 = u64 [a1 + 0x10]\n  1504: a5 = u64 [a1 + 0x8]\n  1507: a3 = u64 [a2 + 0x8]\n  1510: ra = u64 [a1]\n  1512: a4 = u64 [a2]\n  1514: u64 [sp + 0x48] = a4\n  1517: t2 = u64 [a2 + 0x10]\n  1520: t1 = a3 ^ a5\n  1523: s1 = a3 <u a5\n  1526: a4 = a4 <u ra\n  1529: u64 [sp + 0x40] = a4\n  1532: s1 = a4 if t1 == 0\n  1535: t1 = u64 [a1 + 0x18]\n  1538: a1 = u64 [a2 + 0x18]\n  1541: u64 [sp + 0x38] = a1\n  1544: a2 = t2 - t0\n  1547: a1 = a2 - s1\n  1550: u64 [sp + 0x50] = a1\n  1553: a1 = a2 <u s1\n  1556: a4 = t2 <u t0\n  1559: u64 [sp + 0x58] = t1\n  1562: a2 = u64 [sp + 0x38]\n  1565: a2 = a2 - t1\n  1568: a2 = a2 - a4\n  1571: a2 = a2 - a1\n  1574: a1 = a3 - a5\n  1577: a3 = u64 [sp + 0x40]\n  1580: a1 = a1 - a3\n  1583: a3 = u64 [sp + 0x48]\n  1586: a3 = a3 - ra\n  1589: a4 = a1 >u 0\n  1591: a3 = a3 <u 0x60\n  1594: a3 = a3 ^ 0x1\n  1597: a3 = a4 if a1 != 0\n  1600: s1 = a2 >s 0\n  1602: a1 = u64 [sp + 0x50]\n  1605: a4 = a1 >u 0\n  1607: a4 = s1 if a2 != 0\n  1610: a1 = a1 | a2\n  1613: a3 = a4 if a1 != 0\n  1616: jump @49 if a3 == 0\n      : @41 (gas: 12)\n  1620: s1 = a0\n  1622: a0 = ra | t0\n  1625: u64 [sp + 0x50] = a5\n  1628: a1 = u64 [sp + 0x58]\n  1631: a1 = a1 | a5\n  1634: a0 = a0 | a1\n  1637: a0 = a0 >> 0x20\n  1640: u64 [sp + 0x38] = t0\n  1643: a1 = a1 | t0\n  1646: a1 = a1 << 0x20\n  1649: a0 = a0 | a1\n  1652: jump @48 if a0 != 0\n      : @42 (gas: 6)\n  1656: u64 [sp + 0x48] = ra\n  1659: i32 a1 = ra + 0\n  1661: i32 a0 = sp + 0x60\n  1664: u64 [sp + 0x40] = a1\n  1667: ecalli 3 // 'call_data_load'\n  1669: fallthrough\n      : @43 (gas: 10)\n  1670: a3 = u64 [sp + 0x70]\n  1673: a4 = u64 [sp + 0x78]\n  1676: a0 = 0x100000000\n  1686: a1 = a3 ^ a0\n  1689: a1 = a1 | a4\n  1692: a2 = a3 >> 0x20\n  1695: a2 = a2 <u 0x1\n  1698: a2 = 0 if a4 != 0\n  1700: a2 = 0 if a1 == 0\n  1702: jump @49 if a2 == 0\n      : @44 (gas: 13)\n  1706: u64 [sp + 0x28] = a4\n  1709: u64 [sp + 0x30] = a3\n  1712: a1 = u64 [sp + 0x38]\n  1715: a2 = u64 [sp + 0x58]\n  1718: a2 = a2 | a1\n  1721: a0 = 0xffffffe0\n  1731: a1 = u64 [sp + 0x48]\n  1734: a0 = a1 <u a0\n  1737: a1 = u64 [sp + 0x50]\n  1740: a0 = 0 if a1 != 0\n  1742: u64 [sp + 0x58] = a2\n  1745: a0 = 0 if a2 != 0\n  1747: jump @48 if a0 == 0\n      : @45 (gas: 9)\n  1751: a0 = u64 [sp + 0x68]\n  1754: u64 [sp + 0x20] = a0\n  1757: a0 = u64 [sp + 0x60]\n  1760: u64 [sp + 0x38] = a0\n  1763: a0 = u64 [sp + 0x40]\n  1766: i32 a1 = a0 + 0x20\n  1769: i32 a0 = sp + 0x60\n  1772: ecalli 3 // 'call_data_load'\n  1774: fallthrough\n      : @46 (gas: 8)\n  1775: a0 = 0xffffffc0\n  1785: a1 = u64 [sp + 0x48]\n  1788: a0 = a1 <u a0\n  1791: a1 = u64 [sp + 0x50]\n  1794: a0 = 0 if a1 != 0\n  1796: a1 = u64 [sp + 0x58]\n  1799: a0 = 0 if a1 != 0\n  1801: jump @48 if a0 == 0\n      : @47 (gas: 42)\n  1805: a0 = u64 [sp + 0x78]\n  1808: u64 [sp + 0x18] = a0\n  1811: a0 = u64 [sp + 0x70]\n  1814: u64 [sp + 0x48] = a0\n  1817: a0 = u64 [sp + 0x68]\n  1820: u64 [sp + 0x50] = a0\n  1823: a0 = u64 [sp + 0x60]\n  1826: u64 [sp + 0x58] = a0\n  1829: a0 = u64 [sp + 0x40]\n  1832: i32 a1 = a0 + 0x40\n  1835: i32 a0 = sp + 0x60\n  1838: ecalli 3 // 'call_data_load'\n  1840: a0 = u64 [sp + 0x78]\n  1843: a1 = u64 [sp + 0x70]\n  1846: a2 = u64 [sp + 0x68]\n  1849: a3 = u64 [sp + 0x60]\n  1852: u64 [s1 + 0x58] = a0\n  1855: u64 [s1 + 0x50] = a1\n  1858: u64 [s1 + 0x48] = a2\n  1861: u64 [s1 + 0x40] = a3\n  1864: a0 = u64 [sp + 0x18]\n  1867: u64 [s1 + 0x38] = a0\n  1870: a0 = u64 [sp + 0x48]\n  1873: u64 [s1 + 0x30] = a0\n  1876: a0 = u64 [sp + 0x50]\n  1879: u64 [s1 + 0x28] = a0\n  1882: a0 = u64 [sp + 0x58]\n  1885: u64 [s1 + 0x20] = a0\n  1888: a0 = u64 [sp + 0x28]\n  1891: u64 [s1 + 0x18] = a0\n  1894: a0 = u64 [sp + 0x30]\n  1897: u64 [s1 + 0x10] = a0\n  1900: a0 = u64 [sp + 0x20]\n  1903: u64 [s1 + 0x8] = a0\n  1906: a0 = u64 [sp + 0x38]\n  1909: u64 [s1] = a0\n  1911: sp = s0 + 0xffffffffffffff60\n  1915: ra = u64 [sp + 0x98]\n  1919: s0 = u64 [sp + 0x90]\n  1923: s1 = u64 [sp + 0x88]\n  1927: sp = sp + 0xa0\n  1931: ret\n      : @48 (gas: 1)\n  1933: trap\n      : @49 (gas: 3)\n  1934: a0 = 0\n  1936: a1 = 0\n  1938: ra = 32, jump @0\n      : @50 [@dyn 16] (gas: 6)\n  1943: i32 a1 = a0 + 0\n  1945: a0 = 0x1\n  1948: a2 = 0\n  1950: ra = 0x22\n  1953: ecalli 12 // 'seal_return'\n  1955: fallthrough\n      : @51 [@dyn 17] (gas: 9)\n  1956: a2 = u64 [a1 + 0x18]\n  1959: a3 = u64 [a1 + 0x10]\n  1962: a4 = u64 [a1 + 0x8]\n  1965: a1 = u64 [a1]\n  1967: u64 [a0 + 0x18] = a2\n  1970: u64 [a0 + 0x10] = a3\n  1973: u64 [a0 + 0x8] = a4\n  1976: u64 [a0] = a1\n  1978: ret\n      : @52 (gas: 8)\n  1980: a0 = u64 [sp + 0x130]\n  1984: a1 = u64 [sp + 0x138]\n  1988: a2 = u64 [sp + 0x128]\n  1992: a3 = u64 [sp + 0x120]\n  1996: a1 = a1 | a2\n  1999: a0 = a0 | a3\n  2002: a0 = a0 | a1\n  2005: jump @58 if a0 != 0\n      : @53 (gas: 13)\n  2009: a0 = u32 [0x20044]\n  2014: u64 [sp + 152] = 0\n  2018: u64 [sp + 144] = 0\n  2022: u64 [sp + 136] = 0\n  2026: u64 [sp + 0x80] = a0\n  2030: u64 [sp + 184] = 0\n  2034: u64 [sp + 176] = 0\n  2038: u64 [sp + 160] = 0x4\n  2043: a0 = sp + 0xc0\n  2047: a1 = sp + 0xa0\n  2051: a2 = sp + 0x80\n  2055: u64 [sp + 168] = 0\n  2059: ra = 36, jump @40\n      : @54 [@dyn 18] (gas: 78)\n  2064: a0 = u64 [sp + 0xc0]\n  2068: u64 [sp + 0x18] = a0\n  2071: t1 = u64 [sp + 0xc8]\n  2075: t2 = u64 [sp + 0xd0]\n  2079: ra = u64 [sp + 0xd8]\n  2083: t0 = u64 [sp + 0xe0]\n  2087: a5 = u64 [sp + 0xe8]\n  2091: a4 = u64 [sp + 0xf0]\n  2095: a3 = u64 [sp + 0xf8]\n  2099: a1 = u64 [sp + 0x100]\n  2103: s1 = u64 [sp + 0x108]\n  2107: a2 = u64 [sp + 0x110]\n  2111: a0 = u64 [sp + 0x118]\n  2115: u64 [sp + 0x38] = a0\n  2118: u64 [sp + 0x30] = a2\n  2121: u64 [sp + 0x28] = s1\n  2124: u64 [sp + 0x20] = a1\n  2127: u64 [sp + 0x58] = a3\n  2130: u64 [sp + 0x50] = a4\n  2133: u64 [sp + 0x48] = a5\n  2136: u64 [sp + 0x40] = t0\n  2139: u64 [sp + 0x78] = ra\n  2142: u64 [sp + 0x70] = t2\n  2145: u64 [sp + 0x68] = t1\n  2148: a0 = sp + 0x60\n  2151: a1 = sp + 0x40\n  2154: a2 = sp + 0x20\n  2157: a3 = u64 [sp + 0x18]\n  2160: u64 [sp + 0x60] = a3\n  2163: ra = 0x26\n  2166: sp = sp + 0xfffffffffffffd80\n  2170: u64 [sp + 0x278] = ra\n  2174: u64 [sp + 0x270] = s0\n  2178: u64 [sp + 0x268] = s1\n  2182: s0 = sp + 0x280\n  2186: sp = sp & 0xffffffffffffffe0\n  2189: a3 = u64 [a2 + 0x18]\n  2192: u64 [sp + 0x8] = a3\n  2195: a3 = u64 [a2 + 0x10]\n  2198: u64 [sp + 0x10] = a3\n  2201: a3 = u64 [a2 + 0x8]\n  2204: u64 [sp + 0x18] = a3\n  2207: a2 = u64 [a2]\n  2209: u64 [sp + 0x20] = a2\n  2212: a2 = u64 [a1]\n  2214: u64 [sp + 0x138] = a2\n  2218: a2 = u64 [a1 + 0x8]\n  2221: u64 [sp + 0x130] = a2\n  2225: a2 = u64 [a1 + 0x10]\n  2228: u64 [sp + 0x118] = a2\n  2232: a1 = u64 [a1 + 0x18]\n  2235: u64 [sp + 0x128] = a1\n  2239: a1 = u64 [a0]\n  2241: u64 [sp + 0x120] = a1\n  2245: a1 = u64 [a0 + 0x8]\n  2248: u64 [sp + 0x110] = a1\n  2252: a0 = u32 [a0 + 0x10]\n  2255: u64 [sp + 0x108] = a0\n  2259: i32 a0 = sp + 0x180\n  2263: ecalli 5 // 'caller'\n  2265: a0 = u64 [sp + 0x188]\n  2269: a1 = i32 [sp + 0x190]\n  2273: s1 = u64 [sp + 0x180]\n  2277: a0 = reverse a0\n  2279: a2 = a0 << 0x20\n  2282: a1 = reverse a1\n  2284: a1 = a1 >> 0x20\n  2287: a1 = a1 | a2\n  2290: u64 [sp + 0x100] = a1\n  2294: a0 = a0 >> 0x20\n  2297: a1 = reverse s1\n  2299: a1 = a1 << 0x20\n  2302: a0 = a0 | a1\n  2305: u64 [sp + 0xf8] = a0\n  2309: a1 = 0x20\n  2312: a0 = 0\n  2314: ra = 0x68\n  2317: jump @0\n      : @55 [@dyn 19] (gas: 3)\n  2320: a0 = 0x40\n  2323: a1 = 0x20\n  2326: ra = 40, jump @0\n      : @56 [@dyn 20] (gas: 100)\n  2331: a1 = u8 [a0 + 0x11]\n  2334: a2 = u8 [a0 + 0x10]\n  2337: a3 = u8 [a0 + 0x12]\n  2340: a4 = u8 [a0 + 0x13]\n  2343: a1 = a1 << 0x8\n  2346: a1 = a1 | a2\n  2349: a3 = a3 << 0x10\n  2352: a4 = a4 << 0x18\n  2355: a3 = a3 | a4\n  2358: a1 = a1 | a3\n  2361: a2 = u8 [a0 + 0x15]\n  2364: a3 = u8 [a0 + 0x14]\n  2367: a4 = u8 [a0 + 0x16]\n  2370: a5 = u8 [a0 + 0x17]\n  2373: a2 = a2 << 0x8\n  2376: a2 = a2 | a3\n  2379: a4 = a4 << 0x10\n  2382: a5 = a5 << 0x18\n  2385: a4 = a4 | a5\n  2388: a2 = a2 | a4\n  2391: a2 = a2 << 0x20\n  2394: t0 = a2 | a1\n  2397: a2 = u8 [a0 + 0x1]\n  2400: a3 = u8 [a0]\n  2402: a4 = u8 [a0 + 0x2]\n  2405: a5 = u8 [a0 + 0x3]\n  2408: a2 = a2 << 0x8\n  2411: a2 = a2 | a3\n  2414: a4 = a4 << 0x10\n  2417: a5 = a5 << 0x18\n  2420: a4 = a4 | a5\n  2423: a2 = a2 | a4\n  2426: a3 = u8 [a0 + 0x5]\n  2429: a4 = u8 [a0 + 0x4]\n  2432: a5 = u8 [a0 + 0x6]\n  2435: s1 = u8 [a0 + 0x7]\n  2438: a3 = a3 << 0x8\n  2441: a3 = a3 | a4\n  2444: a5 = a5 << 0x10\n  2447: s1 = s1 << 0x18\n  2450: a5 = a5 | s1\n  2453: a3 = a3 | a5\n  2456: a3 = a3 << 0x20\n  2459: a2 = a2 | a3\n  2462: a3 = u8 [a0 + 0x19]\n  2465: a4 = u8 [a0 + 0x18]\n  2468: a5 = u8 [a0 + 0x1a]\n  2471: s1 = u8 [a0 + 0x1b]\n  2474: a3 = a3 << 0x8\n  2477: a3 = a3 | a4\n  2480: a5 = a5 << 0x10\n  2483: s1 = s1 << 0x18\n  2486: a5 = a5 | s1\n  2489: a3 = a3 | a5\n  2492: a4 = u8 [a0 + 0x1d]\n  2495: a5 = u8 [a0 + 0x1c]\n  2498: s1 = u8 [a0 + 0x1e]\n  2501: a1 = u8 [a0 + 0x1f]\n  2504: a4 = a4 << 0x8\n  2507: a4 = a4 | a5\n  2510: s1 = s1 << 0x10\n  2513: a1 = a1 << 0x18\n  2516: a1 = a1 | s1\n  2519: a1 = a1 | a4\n  2522: a1 = a1 << 0x20\n  2525: a3 = a3 | a1\n  2528: a1 = u8 [a0 + 0x9]\n  2531: a4 = u8 [a0 + 0x8]\n  2534: a5 = u8 [a0 + 0xa]\n  2537: s1 = u8 [a0 + 0xb]\n  2540: a1 = a1 << 0x8\n  2543: a1 = a1 | a4\n  2546: a5 = a5 << 0x10\n  2549: s1 = s1 << 0x18\n  2552: a5 = a5 | s1\n  2555: a1 = a1 | a5\n  2558: a4 = u8 [a0 + 0xd]\n  2561: a5 = u8 [a0 + 0xc]\n  2564: s1 = u8 [a0 + 0xe]\n  2567: a0 = u8 [a0 + 0xf]\n  2570: a4 = a4 << 0x8\n  2573: a4 = a4 | a5\n  2576: s1 = s1 << 0x10\n  2579: a0 = a0 << 0x18\n  2582: a0 = a0 | s1\n  2585: a0 = a0 | a4\n  2588: a0 = a0 << 0x20\n  2591: a0 = a0 | a1\n  2594: a1 = reverse a0\n  2596: a0 = reverse a3\n  2598: a2 = reverse a2\n  2600: a3 = reverse t0\n  2602: a2 = a2 | a3\n  2605: a3 = a0 | a1\n  2608: a3 = a3 | a2\n  2611: a3 = a3 >> 0x20\n  2614: a1 = a1 | a2\n  2617: a1 = a1 << 0x20\n  2620: a1 = a1 | a3\n  2623: jump @60 if a1 == 0\n      : @57 (gas: 1)\n  2626: trap\n      : @58 (gas: 3)\n  2627: a0 = 0\n  2629: a1 = 0\n  2631: ra = 42, jump @0\n      : @59 [@dyn 21] (gas: 7)\n  2636: i32 a1 = a0 + 0\n  2638: a0 = 0x1\n  2641: a2 = 0\n  2643: ecalli 12 // 'seal_return'\n  2645: i32 a0 = a0 + 0\n  2647: ra = 0x2c\n  2650: jump @0\n      : @60 (gas: 2)\n  2653: i32 a0 = a0 + 0\n  2655: ra = 44, jump @0\n      : @61 [@dyn 22] (gas: 6)\n  2660: i32 a1 = a0 + 0\n  2662: a0 = 0\n  2664: a2 = 0\n  2666: ra = 0x2e\n  2669: ecalli 12 // 'seal_return'\n  2671: fallthrough\n      : @62 [@dyn 23] (gas: 47)\n  2672: sp = sp + 0xffffffffffffff80\n  2675: u64 [sp + 0x78] = ra\n  2678: u64 [sp + 0x70] = s0\n  2681: u64 [sp + 0x68] = s1\n  2684: s0 = sp + 0x80\n  2688: sp = sp & 0xffffffffffffffe0\n  2691: ra = u64 [a1 + 0x10]\n  2694: a5 = u64 [a1 + 0x8]\n  2697: a3 = u64 [a2 + 0x8]\n  2700: t1 = u64 [a1]\n  2702: a4 = u64 [a2]\n  2704: u64 [sp + 0x28] = a4\n  2707: t2 = u64 [a2 + 0x10]\n  2710: t0 = a3 ^ a5\n  2713: s1 = a3 <u a5\n  2716: a4 = a4 <u t1\n  2719: u64 [sp + 0x20] = a4\n  2722: s1 = a4 if t0 == 0\n  2725: t0 = u64 [a1 + 0x18]\n  2728: a1 = u64 [a2 + 0x18]\n  2731: u64 [sp + 0x18] = a1\n  2734: a2 = t2 - ra\n  2737: a1 = a2 - s1\n  2740: u64 [sp + 0x30] = a1\n  2743: a1 = a2 <u s1\n  2746: a4 = t2 <u ra\n  2749: u64 [sp + 0x38] = t0\n  2752: a2 = u64 [sp + 0x18]\n  2755: a2 = a2 - t0\n  2758: a2 = a2 - a4\n  2761: a2 = a2 - a1\n  2764: a1 = a3 - a5\n  2767: a3 = u64 [sp + 0x20]\n  2770: a1 = a1 - a3\n  2773: a3 = u64 [sp + 0x28]\n  2776: a3 = a3 - t1\n  2779: a4 = a1 >u 0\n  2781: a3 = a3 <u 0x40\n  2784: a3 = a3 ^ 0x1\n  2787: a3 = a4 if a1 != 0\n  2790: s1 = a2 >s 0\n  2792: a1 = u64 [sp + 0x30]\n  2795: a4 = a1 >u 0\n  2797: a4 = s1 if a2 != 0\n  2800: a1 = a1 | a2\n  2803: a3 = a4 if a1 != 0\n  2806: jump @69 if a3 == 0\n      : @63 (gas: 12)\n  2810: s1 = a0\n  2812: a0 = t1 | ra\n  2815: u64 [sp + 0x30] = a5\n  2818: a1 = u64 [sp + 0x38]\n  2821: a1 = a1 | a5\n  2824: a0 = a0 | a1\n  2827: a0 = a0 >> 0x20\n  2830: u64 [sp + 0x28] = ra\n  2833: a1 = a1 | ra\n  2836: a1 = a1 << 0x20\n  2839: a0 = a0 | a1\n  2842: jump @68 if a0 != 0\n      : @64 (gas: 6)\n  2846: u64 [sp + 0x20] = t1\n  2849: i32 a1 = t1 + 0\n  2851: i32 a0 = sp + 0x40\n  2854: u64 [sp + 0x8] = a1\n  2857: ecalli 3 // 'call_data_load'\n  2859: fallthrough\n      : @65 (gas: 10)\n  2860: a3 = u64 [sp + 0x50]\n  2863: a4 = u64 [sp + 0x58]\n  2866: a0 = 0x100000000\n  2876: a1 = a3 ^ a0\n  2879: a1 = a1 | a4\n  2882: a2 = a3 >> 0x20\n  2885: a2 = a2 <u 0x1\n  2888: a2 = 0 if a4 != 0\n  2890: a2 = 0 if a1 == 0\n  2892: jump @69 if a2 == 0\n      : @66 (gas: 12)\n  2896: u64 [sp + 0x10] = a4\n  2899: u64 [sp + 0x18] = a3\n  2902: a1 = u64 [sp + 0x28]\n  2905: a2 = u64 [sp + 0x38]\n  2908: a1 = a1 | a2\n  2911: a0 = 0xffffffe0\n  2921: a2 = u64 [sp + 0x20]\n  2924: a0 = a2 <u a0\n  2927: a2 = u64 [sp + 0x30]\n  2930: a0 = 0 if a2 != 0\n  2932: a0 = 0 if a1 != 0\n  2934: jump @68 if a0 == 0\n      : @67 (gas: 30)\n  2937: a0 = u64 [sp + 0x48]\n  2940: u64 [sp + 0x30] = a0\n  2943: a0 = u64 [sp + 0x40]\n  2946: u64 [sp + 0x38] = a0\n  2949: a0 = u64 [sp + 0x8]\n  2952: i32 a1 = a0 + 0x20\n  2955: i32 a0 = sp + 0x40\n  2958: ecalli 3 // 'call_data_load'\n  2960: a0 = u64 [sp + 0x58]\n  2963: a1 = u64 [sp + 0x50]\n  2966: a2 = u64 [sp + 0x48]\n  2969: a3 = u64 [sp + 0x40]\n  2972: u64 [s1 + 0x38] = a0\n  2975: u64 [s1 + 0x30] = a1\n  2978: u64 [s1 + 0x28] = a2\n  2981: u64 [s1 + 0x20] = a3\n  2984: a0 = u64 [sp + 0x10]\n  2987: u64 [s1 + 0x18] = a0\n  2990: a0 = u64 [sp + 0x18]\n  2993: u64 [s1 + 0x10] = a0\n  2996: a0 = u64 [sp + 0x30]\n  2999: u64 [s1 + 0x8] = a0\n  3002: a0 = u64 [sp + 0x38]\n  3005: u64 [s1] = a0\n  3007: sp = s0 + 0xffffffffffffff80\n  3010: ra = u64 [sp + 0x78]\n  3013: s0 = u64 [sp + 0x70]\n  3016: s1 = u64 [sp + 0x68]\n  3019: sp = sp + 0x80\n  3023: ret\n      : @68 (gas: 1)\n  3025: trap\n      : @69 (gas: 3)\n  3026: a0 = 0\n  3028: a1 = 0\n  3030: ra = 48, jump @0\n      : @70 [@dyn 24] (gas: 6)\n  3035: i32 a1 = a0 + 0\n  3037: a0 = 0x1\n  3040: a2 = 0\n  3042: ra = 0x32\n  3045: ecalli 12 // 'seal_return'\n  3047: fallthrough\n      : @71 [@dyn 25] (gas: 12)\n  3048: sp = sp + 0xffffffffffffff00\n  3052: u64 [sp + 0xf8] = ra\n  3056: u64 [sp + 0xf0] = s0\n  3060: s0 = sp + 0x100\n  3064: sp = sp & 0xffffffffffffffe0\n  3067: u64 [sp + 216] = 0\n  3071: u64 [sp + 208] = 0\n  3075: u64 [sp + 200] = 0\n  3079: u64 [sp + 192] = 0\n  3083: i32 a0 = sp + 0xc0\n  3087: ecalli 15 // 'value_transferred'\n  3089: fallthrough\n      : @72 (gas: 8)\n  3090: a0 = u64 [sp + 0xd0]\n  3094: a1 = u64 [sp + 0xd8]\n  3098: a2 = u64 [sp + 0xc8]\n  3102: a3 = u64 [sp + 0xc0]\n  3106: a1 = a1 | a2\n  3109: a0 = a0 | a3\n  3112: a0 = a0 | a1\n  3115: jump @78 if a0 != 0\n      : @73 (gas: 13)\n  3119: a0 = u32 [0x20044]\n  3124: u64 [sp + 88] = 0\n  3127: u64 [sp + 80] = 0\n  3130: u64 [sp + 72] = 0\n  3133: u64 [sp + 0x40] = a0\n  3136: u64 [sp + 120] = 0\n  3139: u64 [sp + 112] = 0\n  3142: u64 [sp + 96] = 0x4\n  3146: a0 = sp + 0x80\n  3150: a1 = sp + 0x60\n  3153: a2 = sp + 0x40\n  3156: u64 [sp + 104] = 0\n  3159: ra = 52, jump @62\n      : @74 [@dyn 26] (gas: 59)\n  3164: t0 = u64 [sp + 0x80]\n  3168: t1 = u64 [sp + 0x88]\n  3172: a1 = u64 [sp + 0x90]\n  3176: a3 = u64 [sp + 0x98]\n  3180: a4 = u64 [sp + 0xa0]\n  3184: a5 = u64 [sp + 0xa8]\n  3188: a2 = u64 [sp + 0xb0]\n  3192: a0 = u64 [sp + 0xb8]\n  3196: u64 [sp + 0x18] = a0\n  3199: u64 [sp + 0x10] = a2\n  3202: u64 [sp + 0x8] = a5\n  3205: u64 [sp] = a4\n  3207: u64 [sp + 0x38] = a3\n  3210: u64 [sp + 0x30] = a1\n  3213: u64 [sp + 0x28] = t1\n  3216: a0 = sp + 0x20\n  3219: a1 = sp\n  3221: u64 [sp + 0x20] = t0\n  3224: ra = 0x36\n  3227: sp = sp + 0xfffffffffffffbe0\n  3231: u64 [sp + 0x418] = ra\n  3235: u64 [sp + 0x410] = s0\n  3239: u64 [sp + 0x408] = s1\n  3243: s0 = sp + 0x420\n  3247: sp = sp & 0xffffffffffffffe0\n  3250: a2 = u64 [a1 + 0x18]\n  3253: u64 [sp + 0x170] = a2\n  3257: a2 = u64 [a1 + 0x10]\n  3260: u64 [sp + 0x168] = a2\n  3264: a2 = u64 [a1 + 0x8]\n  3267: u64 [sp + 0x158] = a2\n  3271: a1 = u64 [a1]\n  3273: u64 [sp + 0x160] = a1\n  3277: a1 = u64 [a0 + 0x8]\n  3280: u64 [sp + 0x108] = a1\n  3284: a1 = u64 [a0]\n  3286: u64 [sp + 0x110] = a1\n  3290: a0 = u64 [a0 + 0x10]\n  3293: u64 [sp + 0x150] = a0\n  3297: i32 a0 = sp + 0x260\n  3301: ecalli 5 // 'caller'\n  3303: a0 = i32 [sp + 0x270]\n  3307: u64 [sp + 0x148] = a0\n  3311: a0 = u64 [sp + 0x260]\n  3315: u64 [sp + 0x140] = a0\n  3319: a0 = u64 [sp + 0x268]\n  3323: u64 [sp + 0x138] = a0\n  3327: i32 a0 = sp + 0x280\n  3331: ecalli 0 // 'address'\n  3332: a0 = i32 [sp + 0x290]\n  3336: u64 [sp + 0x130] = a0\n  3340: a0 = u64 [sp + 0x280]\n  3344: u64 [sp + 0x128] = a0\n  3348: a0 = u64 [sp + 0x288]\n  3352: u64 [sp + 0x120] = a0\n  3356: a0 = 0x40\n  3359: a1 = 0x20\n  3362: ra = 0xa4\n  3366: jump @0\n      : @75 [@dyn 27] (gas: 3)\n  3369: a0 = 0x40\n  3372: a1 = 0x20\n  3375: ra = 56, jump @0\n      : @76 [@dyn 28] (gas: 100)\n  3380: a1 = u8 [a0 + 0x11]\n  3383: a2 = u8 [a0 + 0x10]\n  3386: a3 = u8 [a0 + 0x12]\n  3389: a4 = u8 [a0 + 0x13]\n  3392: a1 = a1 << 0x8\n  3395: a1 = a1 | a2\n  3398: a3 = a3 << 0x10\n  3401: a4 = a4 << 0x18\n  3404: a3 = a3 | a4\n  3407: a1 = a1 | a3\n  3410: a2 = u8 [a0 + 0x15]\n  3413: a3 = u8 [a0 + 0x14]\n  3416: a4 = u8 [a0 + 0x16]\n  3419: a5 = u8 [a0 + 0x17]\n  3422: a2 = a2 << 0x8\n  3425: a2 = a2 | a3\n  3428: a4 = a4 << 0x10\n  3431: a5 = a5 << 0x18\n  3434: a4 = a4 | a5\n  3437: a2 = a2 | a4\n  3440: a2 = a2 << 0x20\n  3443: t0 = a2 | a1\n  3446: a2 = u8 [a0 + 0x1]\n  3449: a3 = u8 [a0]\n  3451: a4 = u8 [a0 + 0x2]\n  3454: a5 = u8 [a0 + 0x3]\n  3457: a2 = a2 << 0x8\n  3460: a2 = a2 | a3\n  3463: a4 = a4 << 0x10\n  3466: a5 = a5 << 0x18\n  3469: a4 = a4 | a5\n  3472: a2 = a2 | a4\n  3475: a3 = u8 [a0 + 0x5]\n  3478: a4 = u8 [a0 + 0x4]\n  3481: a5 = u8 [a0 + 0x6]\n  3484: a1 = u8 [a0 + 0x7]\n  3487: a3 = a3 << 0x8\n  3490: a3 = a3 | a4\n  3493: a5 = a5 << 0x10\n  3496: a1 = a1 << 0x18\n  3499: a1 = a1 | a5\n  3502: a1 = a1 | a3\n  3505: a1 = a1 << 0x20\n  3508: t1 = a1 | a2\n  3511: a1 = u8 [a0 + 0x19]\n  3514: a3 = u8 [a0 + 0x18]\n  3517: a4 = u8 [a0 + 0x1a]\n  3520: a5 = u8 [a0 + 0x1b]\n  3523: a1 = a1 << 0x8\n  3526: a1 = a1 | a3\n  3529: a4 = a4 << 0x10\n  3532: a5 = a5 << 0x18\n  3535: a4 = a4 | a5\n  3538: a1 = a1 | a4\n  3541: a3 = u8 [a0 + 0x1d]\n  3544: a4 = u8 [a0 + 0x1c]\n  3547: a5 = u8 [a0 + 0x1e]\n  3550: a2 = u8 [a0 + 0x1f]\n  3553: a3 = a3 << 0x8\n  3556: a3 = a3 | a4\n  3559: a5 = a5 << 0x10\n  3562: a2 = a2 << 0x18\n  3565: a2 = a2 | a5\n  3568: a2 = a2 | a3\n  3571: a2 = a2 << 0x20\n  3574: a3 = a2 | a1\n  3577: a1 = u8 [a0 + 0x9]\n  3580: a2 = u8 [a0 + 0x8]\n  3583: a4 = u8 [a0 + 0xa]\n  3586: a5 = u8 [a0 + 0xb]\n  3589: a1 = a1 << 0x8\n  3592: a1 = a1 | a2\n  3595: a4 = a4 << 0x10\n  3598: a5 = a5 << 0x18\n  3601: a4 = a4 | a5\n  3604: a1 = a1 | a4\n  3607: a2 = u8 [a0 + 0xd]\n  3610: a4 = u8 [a0 + 0xc]\n  3613: a5 = u8 [a0 + 0xe]\n  3616: a0 = u8 [a0 + 0xf]\n  3619: a2 = a2 << 0x8\n  3622: a2 = a2 | a4\n  3625: a5 = a5 << 0x10\n  3628: a0 = a0 << 0x18\n  3631: a0 = a0 | a5\n  3634: a0 = a0 | a2\n  3637: a0 = a0 << 0x20\n  3640: a0 = a0 | a1\n  3643: a1 = reverse a0\n  3645: a0 = reverse a3\n  3647: a2 = reverse t1\n  3649: a3 = reverse t0\n  3651: a2 = a2 | a3\n  3654: a3 = a0 | a1\n  3657: a3 = a3 | a2\n  3660: a3 = a3 >> 0x20\n  3663: a1 = a1 | a2\n  3666: a1 = a1 << 0x20\n  3669: a1 = a1 | a3\n  3672: jump @80 if a1 == 0\n      : @77 (gas: 1)\n  3675: trap\n      : @78 (gas: 3)\n  3676: a0 = 0\n  3678: a1 = 0\n  3680: ra = 58, jump @0\n      : @79 [@dyn 29] (gas: 7)\n  3685: i32 a1 = a0 + 0\n  3687: a0 = 0x1\n  3690: a2 = 0\n  3692: ecalli 12 // 'seal_return'\n  3694: i32 a0 = a0 + 0\n  3696: ra = 0x3c\n  3699: jump @0\n      : @80 (gas: 2)\n  3702: i32 a0 = a0 + 0\n  3704: ra = 60, jump @0\n      : @81 [@dyn 30] (gas: 6)\n  3709: i32 a1 = a0 + 0\n  3711: a0 = 0\n  3713: a2 = 0\n  3715: ra = 0x3e\n  3718: ecalli 12 // 'seal_return'\n  3720: fallthrough\n      : @82 [@dyn 31] (gas: 47)\n  3721: sp = sp + 0xffffffffffffff80\n  3724: u64 [sp + 0x78] = ra\n  3727: u64 [sp + 0x70] = s0\n  3730: u64 [sp + 0x68] = s1\n  3733: s0 = sp + 0x80\n  3737: sp = sp & 0xffffffffffffffe0\n  3740: ra = u64 [a1 + 0x10]\n  3743: a5 = u64 [a1 + 0x8]\n  3746: a3 = u64 [a2 + 0x8]\n  3749: t1 = u64 [a1]\n  3751: a4 = u64 [a2]\n  3753: u64 [sp + 0x28] = a4\n  3756: t2 = u64 [a2 + 0x10]\n  3759: t0 = a3 ^ a5\n  3762: s1 = a3 <u a5\n  3765: a4 = a4 <u t1\n  3768: u64 [sp + 0x20] = a4\n  3771: s1 = a4 if t0 == 0\n  3774: t0 = u64 [a1 + 0x18]\n  3777: a1 = u64 [a2 + 0x18]\n  3780: u64 [sp + 0x18] = a1\n  3783: a2 = t2 - ra\n  3786: a1 = a2 - s1\n  3789: u64 [sp + 0x30] = a1\n  3792: a1 = a2 <u s1\n  3795: a4 = t2 <u ra\n  3798: u64 [sp + 0x38] = t0\n  3801: a2 = u64 [sp + 0x18]\n  3804: a2 = a2 - t0\n  3807: a2 = a2 - a4\n  3810: a2 = a2 - a1\n  3813: a1 = a3 - a5\n  3816: a3 = u64 [sp + 0x20]\n  3819: a1 = a1 - a3\n  3822: a3 = u64 [sp + 0x28]\n  3825: a3 = a3 - t1\n  3828: a4 = a1 >u 0\n  3830: a3 = a3 <u 0x40\n  3833: a3 = a3 ^ 0x1\n  3836: a3 = a4 if a1 != 0\n  3839: s1 = a2 >s 0\n  3841: a1 = u64 [sp + 0x30]\n  3844: a4 = a1 >u 0\n  3846: a4 = s1 if a2 != 0\n  3849: a1 = a1 | a2\n  3852: a3 = a4 if a1 != 0\n  3855: jump @91 if a3 == 0\n      : @83 (gas: 12)\n  3859: s1 = a0\n  3861: a0 = t1 | ra\n  3864: u64 [sp + 0x30] = a5\n  3867: a1 = u64 [sp + 0x38]\n  3870: a1 = a1 | a5\n  3873: a0 = a0 | a1\n  3876: a0 = a0 >> 0x20\n  3879: u64 [sp + 0x28] = ra\n  3882: a1 = a1 | ra\n  3885: a1 = a1 << 0x20\n  3888: a0 = a0 | a1\n  3891: jump @90 if a0 != 0\n      : @84 (gas: 6)\n  3895: u64 [sp + 0x20] = t1\n  3898: i32 a1 = t1 + 0\n  3900: i32 a0 = sp + 0x40\n  3903: u64 [sp + 0x8] = a1\n  3906: ecalli 3 // 'call_data_load'\n  3908: fallthrough\n      : @85 (gas: 10)\n  3909: a4 = u64 [sp + 0x50]\n  3912: a3 = u64 [sp + 0x58]\n  3915: a0 = 0x100000000\n  3925: a1 = a4 ^ a0\n  3928: a1 = a1 | a3\n  3931: a2 = a4 >> 0x20\n  3934: a2 = a2 <u 0x1\n  3937: a2 = 0 if a3 != 0\n  3939: a2 = 0 if a1 == 0\n  3941: jump @91 if a2 == 0\n      : @86 (gas: 12)\n  3945: u64 [sp + 0x10] = a4\n  3948: u64 [sp + 0x18] = a3\n  3951: a1 = u64 [sp + 0x28]\n  3954: a2 = u64 [sp + 0x38]\n  3957: a1 = a1 | a2\n  3960: a0 = 0xffffffe0\n  3970: a2 = u64 [sp + 0x20]\n  3973: a0 = a2 <u a0\n  3976: a2 = u64 [sp + 0x30]\n  3979: a0 = 0 if a2 != 0\n  3981: a0 = 0 if a1 != 0\n  3983: jump @90 if a0 == 0\n      : @87 (gas: 9)\n  3986: a0 = u64 [sp + 0x48]\n  3989: u64 [sp + 0x30] = a0\n  3992: a0 = u64 [sp + 0x40]\n  3995: u64 [sp + 0x38] = a0\n  3998: a0 = u64 [sp + 0x8]\n  4001: i32 a1 = a0 + 0x20\n  4004: i32 a0 = sp + 0x40\n  4007: ecalli 3 // 'call_data_load'\n  4009: fallthrough\n      : @88 (gas: 10)\n  4010: a1 = u64 [sp + 0x50]\n  4013: a0 = u64 [sp + 0x58]\n  4016: a2 = 0x100000000\n  4026: a2 = a2 ^ a1\n  4029: a2 = a2 | a0\n  4032: a3 = a1 >> 0x20\n  4035: a3 = a3 <u 0x1\n  4038: a3 = 0 if a0 != 0\n  4040: a3 = 0 if a2 == 0\n  4042: jump @91 if a3 == 0\n      : @89 (gas: 20)\n  4045: a2 = u64 [sp + 0x48]\n  4048: a3 = u64 [sp + 0x40]\n  4051: u64 [s1 + 0x28] = a2\n  4054: u64 [s1 + 0x20] = a3\n  4057: a2 = u64 [sp + 0x30]\n  4060: u64 [s1 + 0x8] = a2\n  4063: a2 = u64 [sp + 0x38]\n  4066: u64 [s1] = a2\n  4068: u64 [s1 + 0x30] = a1\n  4071: a1 = u64 [sp + 0x10]\n  4074: u64 [s1 + 0x10] = a1\n  4077: u64 [s1 + 0x38] = a0\n  4080: a0 = u64 [sp + 0x18]\n  4083: u64 [s1 + 0x18] = a0\n  4086: sp = s0 + 0xffffffffffffff80\n  4089: ra = u64 [sp + 0x78]\n  4092: s0 = u64 [sp + 0x70]\n  4095: s1 = u64 [sp + 0x68]\n  4098: sp = sp + 0x80\n  4102: ret\n      : @90 (gas: 1)\n  4104: trap\n      : @91 (gas: 3)\n  4105: a0 = 0\n  4107: a1 = 0\n  4109: ra = 64, jump @0\n      : @92 [@dyn 32] (gas: 6)\n  4114: i32 a1 = a0 + 0\n  4116: a0 = 0x1\n  4119: a2 = 0\n  4121: ra = 0x42\n  4124: ecalli 12 // 'seal_return'\n  4126: fallthrough\n      : @93 [@dyn 33] (gas: 9)\n  4127: a2 = u64 [a1 + 0x18]\n  4130: a3 = u64 [a1 + 0x10]\n  4133: a4 = u64 [a1 + 0x8]\n  4136: a1 = u64 [a1]\n  4138: u64 [a0 + 0x18] = a2\n  4141: u64 [a0 + 0x10] = a3\n  4144: u64 [a0 + 0x8] = a4\n  4147: u64 [a0] = a1\n  4149: ret\n      : @94 [@dyn 34] (gas: 58)\n  4151: a1 = reverse s1\n  4153: a2 = u64 [sp + 0x10]\n  4156: a2 = reverse a2\n  4158: a3 = u64 [sp + 0x18]\n  4161: a3 = reverse a3\n  4163: a4 = a3 >> 0x38\n  4166: u8 [a0 + 0x1f] = a4\n  4169: a4 = a3 >> 0x30\n  4172: u8 [a0 + 0x1e] = a4\n  4175: a4 = a3 >> 0x28\n  4178: u8 [a0 + 0x1d] = a4\n  4181: a4 = a3 >> 0x20\n  4184: u8 [a0 + 0x1c] = a4\n  4187: a4 = a3 >> 0x18\n  4190: u8 [a0 + 0x1b] = a4\n  4193: a4 = a3 >> 0x10\n  4196: u8 [a0 + 0x1a] = a4\n  4199: a4 = a3 >> 0x8\n  4202: u8 [a0 + 0x19] = a4\n  4205: u8 [a0 + 0x18] = a3\n  4208: a3 = a2 >> 0x38\n  4211: u8 [a0 + 0x17] = a3\n  4214: a3 = a2 >> 0x30\n  4217: u8 [a0 + 0x16] = a3\n  4220: a3 = a2 >> 0x28\n  4223: u8 [a0 + 0x15] = a3\n  4226: a3 = a2 >> 0x20\n  4229: u8 [a0 + 0x14] = a3\n  4232: a3 = a2 >> 0x18\n  4235: u8 [a0 + 0x13] = a3\n  4238: a3 = a2 >> 0x10\n  4241: u8 [a0 + 0x12] = a3\n  4244: a3 = a2 >> 0x8\n  4247: u8 [a0 + 0x11] = a3\n  4250: u8 [a0 + 0x10] = a2\n  4253: a2 = a1 >> 0x38\n  4256: u8 [a0 + 0xf] = a2\n  4259: a2 = a1 >> 0x30\n  4262: u8 [a0 + 0xe] = a2\n  4265: a2 = a1 >> 0x28\n  4268: u8 [a0 + 0xd] = a2\n  4271: a2 = a1 >> 0x20\n  4274: u8 [a0 + 0xc] = a2\n  4277: u8 [a0 + 11] = 0\n  4280: u8 [a0 + 10] = 0\n  4283: u8 [a0 + 9] = 0\n  4286: u8 [a0 + 0x8] = a1\n  4289: u8 [a0 + 7] = 0\n  4292: u8 [a0 + 6] = 0\n  4295: u8 [a0 + 5] = 0\n  4298: u8 [a0 + 4] = 0\n  4301: u8 [a0 + 3] = 0\n  4304: u8 [a0 + 2] = 0\n  4307: u8 [a0 + 1] = 0\n  4310: u8 [a0 + 0] = 0\n  4312: a0 = 0x20\n  4315: a1 = 0x20\n  4318: ra = 70, jump @0\n      : @95 [@dyn 35] (gas: 35)\n  4323: u8 [a0 + 31] = 0\n  4326: u8 [a0 + 30] = 0\n  4329: u8 [a0 + 29] = 0\n  4332: u8 [a0 + 28] = 0\n  4335: u8 [a0 + 27] = 0\n  4338: u8 [a0 + 26] = 0\n  4341: u8 [a0 + 25] = 0\n  4344: u8 [a0 + 24] = 0\n  4347: u8 [a0 + 23] = 0\n  4350: u8 [a0 + 22] = 0\n  4353: u8 [a0 + 21] = 0\n  4356: u8 [a0 + 20] = 0\n  4359: u8 [a0 + 19] = 0\n  4362: u8 [a0 + 18] = 0\n  4365: u8 [a0 + 17] = 0\n  4368: u8 [a0 + 16] = 0\n  4371: u8 [a0 + 15] = 0\n  4374: u8 [a0 + 14] = 0\n  4377: u8 [a0 + 13] = 0\n  4380: u8 [a0 + 12] = 0\n  4383: u8 [a0 + 11] = 0\n  4386: u8 [a0 + 10] = 0\n  4389: u8 [a0 + 9] = 0\n  4392: u8 [a0 + 8] = 0\n  4395: u8 [a0 + 7] = 0\n  4398: u8 [a0 + 6] = 0\n  4401: u8 [a0 + 5] = 0\n  4404: u8 [a0 + 4] = 0\n  4407: u8 [a0 + 3] = 0\n  4410: u8 [a0 + 2] = 0\n  4413: u8 [a0 + 1] = 0\n  4416: u8 [a0 + 0] = 0\n  4418: a1 = 0x40\n  4421: a0 = 0\n  4423: ra = 72, jump @0\n      : @96 [@dyn 36] (gas: 14)\n  4428: i32 a0 = a0 + 0\n  4430: i32 a2 = sp + 0x60\n  4433: a1 = 0x40\n  4436: ecalli 8 // 'hash_keccak_256'\n  4438: a0 = u64 [sp + 0x60]\n  4441: u64 [sp + 0x18] = a0\n  4444: a0 = u64 [sp + 0x68]\n  4447: u64 [sp + 0x10] = a0\n  4450: a0 = u64 [sp + 0x70]\n  4453: u64 [sp + 0x8] = a0\n  4456: s1 = u64 [sp + 0x78]\n  4459: a1 = 0x20\n  4462: a0 = 0\n  4464: ra = 74, jump @0\n      : @97 [@dyn 37] (gas: 59)\n  4469: a1 = u64 [sp + 0x20]\n  4472: a1 = reverse a1\n  4474: a2 = u64 [sp + 0x28]\n  4477: a2 = reverse a2\n  4479: a3 = u64 [sp + 0x30]\n  4482: a3 = reverse a3\n  4484: a4 = a3 >> 0x38\n  4487: u8 [a0 + 0x1f] = a4\n  4490: a4 = a3 >> 0x30\n  4493: u8 [a0 + 0x1e] = a4\n  4496: a4 = a3 >> 0x28\n  4499: u8 [a0 + 0x1d] = a4\n  4502: a4 = a3 >> 0x20\n  4505: u8 [a0 + 0x1c] = a4\n  4508: a4 = a3 >> 0x18\n  4511: u8 [a0 + 0x1b] = a4\n  4514: a4 = a3 >> 0x10\n  4517: u8 [a0 + 0x1a] = a4\n  4520: a4 = a3 >> 0x8\n  4523: u8 [a0 + 0x19] = a4\n  4526: u8 [a0 + 0x18] = a3\n  4529: a3 = a2 >> 0x38\n  4532: u8 [a0 + 0x17] = a3\n  4535: a3 = a2 >> 0x30\n  4538: u8 [a0 + 0x16] = a3\n  4541: a3 = a2 >> 0x28\n  4544: u8 [a0 + 0x15] = a3\n  4547: a3 = a2 >> 0x20\n  4550: u8 [a0 + 0x14] = a3\n  4553: a3 = a2 >> 0x18\n  4556: u8 [a0 + 0x13] = a3\n  4559: a3 = a2 >> 0x10\n  4562: u8 [a0 + 0x12] = a3\n  4565: a3 = a2 >> 0x8\n  4568: u8 [a0 + 0x11] = a3\n  4571: u8 [a0 + 0x10] = a2\n  4574: a2 = a1 >> 0x38\n  4577: u8 [a0 + 0xf] = a2\n  4580: a2 = a1 >> 0x30\n  4583: u8 [a0 + 0xe] = a2\n  4586: a2 = a1 >> 0x28\n  4589: u8 [a0 + 0xd] = a2\n  4592: a2 = a1 >> 0x20\n  4595: u8 [a0 + 0xc] = a2\n  4598: u8 [a0 + 11] = 0\n  4601: u8 [a0 + 10] = 0\n  4604: u8 [a0 + 9] = 0\n  4607: u8 [a0 + 0x8] = a1\n  4610: u8 [a0 + 7] = 0\n  4613: u8 [a0 + 6] = 0\n  4616: u8 [a0 + 5] = 0\n  4619: u8 [a0 + 4] = 0\n  4622: u8 [a0 + 3] = 0\n  4625: u8 [a0 + 2] = 0\n  4628: u8 [a0 + 1] = 0\n  4631: u8 [a0 + 0] = 0\n  4633: a0 = 0x20\n  4636: a1 = 0x20\n  4639: ra = 76, jump @0\n      : @98 [@dyn 38] (gas: 66)\n  4644: a1 = s1 >> 0x38\n  4647: u8 [a0 + 0x1f] = a1\n  4650: a1 = s1 >> 0x30\n  4653: u8 [a0 + 0x1e] = a1\n  4656: a1 = s1 >> 0x28\n  4659: u8 [a0 + 0x1d] = a1\n  4662: a1 = s1 >> 0x20\n  4665: u8 [a0 + 0x1c] = a1\n  4668: a1 = s1 >> 0x18\n  4671: u8 [a0 + 0x1b] = a1\n  4674: a1 = s1 >> 0x10\n  4677: u8 [a0 + 0x1a] = a1\n  4680: a1 = s1 >> 0x8\n  4683: u8 [a0 + 0x19] = a1\n  4686: u8 [a0 + 0x18] = s1\n  4689: a2 = u64 [sp + 0x8]\n  4692: a1 = a2 >> 0x38\n  4695: u8 [a0 + 0x17] = a1\n  4698: a1 = a2 >> 0x30\n  4701: u8 [a0 + 0x16] = a1\n  4704: a1 = a2 >> 0x28\n  4707: u8 [a0 + 0x15] = a1\n  4710: a1 = a2 >> 0x20\n  4713: u8 [a0 + 0x14] = a1\n  4716: a1 = a2 >> 0x18\n  4719: u8 [a0 + 0x13] = a1\n  4722: a1 = a2 >> 0x10\n  4725: u8 [a0 + 0x12] = a1\n  4728: a1 = a2 >> 0x8\n  4731: u8 [a0 + 0x11] = a1\n  4734: u8 [a0 + 0x10] = a2\n  4737: a2 = u64 [sp + 0x10]\n  4740: a1 = a2 >> 0x38\n  4743: u8 [a0 + 0xf] = a1\n  4746: a1 = a2 >> 0x30\n  4749: u8 [a0 + 0xe] = a1\n  4752: a1 = a2 >> 0x28\n  4755: u8 [a0 + 0xd] = a1\n  4758: a1 = a2 >> 0x20\n  4761: u8 [a0 + 0xc] = a1\n  4764: a1 = a2 >> 0x18\n  4767: u8 [a0 + 0xb] = a1\n  4770: a1 = a2 >> 0x10\n  4773: u8 [a0 + 0xa] = a1\n  4776: a1 = a2 >> 0x8\n  4779: u8 [a0 + 0x9] = a1\n  4782: u8 [a0 + 0x8] = a2\n  4785: a2 = u64 [sp + 0x18]\n  4788: a1 = a2 >> 0x38\n  4791: u8 [a0 + 0x7] = a1\n  4794: a1 = a2 >> 0x30\n  4797: u8 [a0 + 0x6] = a1\n  4800: a1 = a2 >> 0x28\n  4803: u8 [a0 + 0x5] = a1\n  4806: a1 = a2 >> 0x20\n  4809: u8 [a0 + 0x4] = a1\n  4812: a1 = a2 >> 0x18\n  4815: u8 [a0 + 0x3] = a1\n  4818: a1 = a2 >> 0x10\n  4821: u8 [a0 + 0x2] = a1\n  4824: a1 = a2 >> 0x8\n  4827: u8 [a0 + 0x1] = a1\n  4830: u8 [a0] = a2\n  4832: a1 = 0x40\n  4835: a0 = 0\n  4837: ra = 78, jump @0\n      : @99 [@dyn 39] (gas: 42)\n  4842: i32 a0 = a0 + 0\n  4844: i32 a2 = sp + 0x60\n  4847: a1 = 0x40\n  4850: ecalli 8 // 'hash_keccak_256'\n  4852: a0 = u64 [sp + 0x78]\n  4855: a1 = u64 [sp + 0x70]\n  4858: a2 = u64 [sp + 0x68]\n  4861: a3 = u64 [sp + 0x60]\n  4864: a0 = reverse a0\n  4866: a1 = reverse a1\n  4868: a2 = reverse a2\n  4870: a3 = reverse a3\n  4872: u64 [sp + 0x58] = a3\n  4875: u64 [sp + 0x50] = a2\n  4878: u64 [sp + 0x48] = a1\n  4881: u64 [sp + 0x40] = a0\n  4884: u64 [sp + 120] = 0\n  4887: u64 [sp + 112] = 0\n  4890: u64 [sp + 104] = 0\n  4893: u64 [sp + 96] = 0\n  4896: u32 [sp + 128] = 0x20\n  4901: i32 a1 = sp + 0x40\n  4904: i32 a3 = sp + 0x60\n  4907: i32 a4 = sp + 0x80\n  4911: a2 = 0xffffffffffffffff\n  4914: a0 = 0\n  4916: ecalli 7 // 'get_storage'\n  4918: a0 = u64 [sp + 0x78]\n  4921: a1 = u64 [sp + 0x70]\n  4924: a2 = u64 [sp + 0x68]\n  4927: a3 = u64 [sp + 0x60]\n  4930: a4 = u64 [sp + 0x38]\n  4933: u64 [a4 + 0x18] = a0\n  4936: u64 [a4 + 0x10] = a1\n  4939: u64 [a4 + 0x8] = a2\n  4942: u64 [a4] = a3\n  4944: sp = s0 + 0xffffffffffffff60\n  4948: ra = u64 [sp + 0x98]\n  4952: s0 = u64 [sp + 0x90]\n  4956: s1 = u64 [sp + 0x88]\n  4960: sp = sp + 0xa0\n  4964: ret\n      : @100 (gas: 8)\n  4966: a0 = u64 [sp + 0x110]\n  4970: a1 = u64 [sp + 0x118]\n  4974: a2 = u64 [sp + 0x108]\n  4978: a3 = u64 [sp + 0x100]\n  4982: a1 = a1 | a2\n  4985: a0 = a0 | a3\n  4988: a0 = a0 | a1\n  4991: jump @106 if a0 != 0\n      : @101 (gas: 13)\n  4995: a0 = u32 [0x20044]\n  5000: u64 [sp + 152] = 0\n  5004: u64 [sp + 144] = 0\n  5008: u64 [sp + 136] = 0\n  5012: u64 [sp + 0x80] = a0\n  5016: u64 [sp + 184] = 0\n  5020: u64 [sp + 176] = 0\n  5024: u64 [sp + 160] = 0x4\n  5029: a0 = sp + 0xc0\n  5033: a1 = sp + 0xa0\n  5037: a2 = sp + 0x80\n  5041: u64 [sp + 168] = 0\n  5045: ra = 80, jump @82\n      : @102 [@dyn 40] (gas: 42)\n  5050: t0 = u64 [sp + 0xc0]\n  5054: a0 = u64 [sp + 0xc8]\n  5058: a1 = u64 [sp + 0xd0]\n  5062: a2 = u64 [sp + 0xd8]\n  5066: a4 = u64 [sp + 0xe0]\n  5070: a5 = u64 [sp + 0xe8]\n  5074: s1 = u64 [sp + 0xf0]\n  5078: a3 = u64 [sp + 0xf8]\n  5082: u64 [sp + 0x38] = a3\n  5085: u64 [sp + 0x30] = s1\n  5088: u64 [sp + 0x28] = a5\n  5091: u64 [sp + 0x20] = a4\n  5094: u64 [sp + 0x58] = a2\n  5097: u64 [sp + 0x50] = a1\n  5100: u64 [sp + 0x48] = a0\n  5103: a0 = sp + 0x60\n  5106: a1 = sp + 0x40\n  5109: a2 = sp + 0x20\n  5112: u64 [sp + 0x40] = t0\n  5115: ra = 0x52\n  5118: sp = sp + 0xffffffffffffff60\n  5122: u64 [sp + 0x98] = ra\n  5126: u64 [sp + 0x90] = s0\n  5130: u64 [sp + 0x88] = s1\n  5134: s0 = sp + 0xa0\n  5138: sp = sp & 0xffffffffffffffe0\n  5141: a3 = u64 [a2]\n  5143: u64 [sp + 0x30] = a3\n  5146: a3 = u64 [a2 + 0x8]\n  5149: u64 [sp + 0x28] = a3\n  5152: a2 = u32 [a2 + 0x10]\n  5155: u64 [sp + 0x20] = a2\n  5158: a2 = u64 [a1]\n  5160: u64 [sp + 0x18] = a2\n  5163: a2 = u64 [a1 + 0x8]\n  5166: u64 [sp + 0x10] = a2\n  5169: s1 = u32 [a1 + 0x10]\n  5172: u64 [sp + 0x38] = a0\n  5175: a1 = 0x20\n  5178: a0 = 0\n  5180: ra = 0x44\n  5183: jump @0\n      : @103 [@dyn 41] (gas: 11)\n  5186: a0 = u64 [sp + 0x78]\n  5189: u64 [sp] = a0\n  5191: a0 = u64 [sp + 0x70]\n  5194: u64 [sp + 0x8] = a0\n  5197: a0 = u64 [sp + 0x68]\n  5200: u64 [sp + 0x10] = a0\n  5203: a0 = u64 [sp + 0x60]\n  5206: u64 [sp + 0x18] = a0\n  5209: a0 = 0x40\n  5212: a1 = 0x20\n  5215: ra = 84, jump @0\n      : @104 [@dyn 42] (gas: 100)\n  5220: a1 = u8 [a0 + 0x11]\n  5223: a2 = u8 [a0 + 0x10]\n  5226: a3 = u8 [a0 + 0x12]\n  5229: a4 = u8 [a0 + 0x13]\n  5232: a1 = a1 << 0x8\n  5235: a1 = a1 | a2\n  5238: a3 = a3 << 0x10\n  5241: a4 = a4 << 0x18\n  5244: a3 = a3 | a4\n  5247: a1 = a1 | a3\n  5250: a2 = u8 [a0 + 0x15]\n  5253: a3 = u8 [a0 + 0x14]\n  5256: a4 = u8 [a0 + 0x16]\n  5259: a5 = u8 [a0 + 0x17]\n  5262: a2 = a2 << 0x8\n  5265: a2 = a2 | a3\n  5268: a4 = a4 << 0x10\n  5271: a5 = a5 << 0x18\n  5274: a4 = a4 | a5\n  5277: a2 = a2 | a4\n  5280: a2 = a2 << 0x20\n  5283: t0 = a2 | a1\n  5286: a2 = u8 [a0 + 0x1]\n  5289: a3 = u8 [a0]\n  5291: a4 = u8 [a0 + 0x2]\n  5294: a5 = u8 [a0 + 0x3]\n  5297: a2 = a2 << 0x8\n  5300: a2 = a2 | a3\n  5303: a4 = a4 << 0x10\n  5306: a5 = a5 << 0x18\n  5309: a4 = a4 | a5\n  5312: a2 = a2 | a4\n  5315: a3 = u8 [a0 + 0x5]\n  5318: a4 = u8 [a0 + 0x4]\n  5321: a5 = u8 [a0 + 0x6]\n  5324: s1 = u8 [a0 + 0x7]\n  5327: a3 = a3 << 0x8\n  5330: a3 = a3 | a4\n  5333: a5 = a5 << 0x10\n  5336: s1 = s1 << 0x18\n  5339: a5 = a5 | s1\n  5342: a3 = a3 | a5\n  5345: a3 = a3 << 0x20\n  5348: a2 = a2 | a3\n  5351: a3 = u8 [a0 + 0x19]\n  5354: a4 = u8 [a0 + 0x18]\n  5357: a5 = u8 [a0 + 0x1a]\n  5360: s1 = u8 [a0 + 0x1b]\n  5363: a3 = a3 << 0x8\n  5366: a3 = a3 | a4\n  5369: a5 = a5 << 0x10\n  5372: s1 = s1 << 0x18\n  5375: a5 = a5 | s1\n  5378: a3 = a3 | a5\n  5381: a4 = u8 [a0 + 0x1d]\n  5384: a5 = u8 [a0 + 0x1c]\n  5387: s1 = u8 [a0 + 0x1e]\n  5390: a1 = u8 [a0 + 0x1f]\n  5393: a4 = a4 << 0x8\n  5396: a4 = a4 | a5\n  5399: s1 = s1 << 0x10\n  5402: a1 = a1 << 0x18\n  5405: a1 = a1 | s1\n  5408: a1 = a1 | a4\n  5411: a1 = a1 << 0x20\n  5414: a3 = a3 | a1\n  5417: a1 = u8 [a0 + 0x9]\n  5420: a4 = u8 [a0 + 0x8]\n  5423: a5 = u8 [a0 + 0xa]\n  5426: s1 = u8 [a0 + 0xb]\n  5429: a1 = a1 << 0x8\n  5432: a1 = a1 | a4\n  5435: a5 = a5 << 0x10\n  5438: s1 = s1 << 0x18\n  5441: a5 = a5 | s1\n  5444: a1 = a1 | a5\n  5447: a4 = u8 [a0 + 0xd]\n  5450: a5 = u8 [a0 + 0xc]\n  5453: s1 = u8 [a0 + 0xe]\n  5456: a0 = u8 [a0 + 0xf]\n  5459: a4 = a4 << 0x8\n  5462: a4 = a4 | a5\n  5465: s1 = s1 << 0x10\n  5468: a0 = a0 << 0x18\n  5471: a0 = a0 | s1\n  5474: a0 = a0 | a4\n  5477: a0 = a0 << 0x20\n  5480: a0 = a0 | a1\n  5483: a1 = reverse a0\n  5485: a0 = reverse a3\n  5487: a2 = reverse a2\n  5489: a3 = reverse t0\n  5491: a2 = a2 | a3\n  5494: a3 = a0 | a1\n  5497: a3 = a3 | a2\n  5500: a3 = a3 >> 0x20\n  5503: a1 = a1 | a2\n  5506: a1 = a1 << 0x20\n  5509: a1 = a1 | a3\n  5512: jump @108 if a1 == 0\n      : @105 (gas: 1)\n  5515: trap\n      : @106 (gas: 3)\n  5516: a0 = 0\n  5518: a1 = 0\n  5520: ra = 86, jump @0\n      : @107 [@dyn 43] (gas: 5)\n  5525: i32 a1 = a0 + 0\n  5527: a0 = 0x1\n  5530: a2 = 0\n  5532: ecalli 12 // 'seal_return'\n  5534: fallthrough\n      : @108 (gas: 4)\n  5535: i32 s1 = a0 + 0\n  5537: a1 = 0x20\n  5540: a0 = s1\n  5542: ra = 88, jump @0\n      : @109 [@dyn 44] (gas: 71)\n  5547: a1 = u64 [sp]\n  5549: a1 = reverse a1\n  5551: a2 = u64 [sp + 0x8]\n  5554: a2 = reverse a2\n  5556: a3 = u64 [sp + 0x10]\n  5559: a3 = reverse a3\n  5561: a4 = u64 [sp + 0x18]\n  5564: a4 = reverse a4\n  5566: a5 = a4 >> 0x38\n  5569: u8 [a0 + 0x1f] = a5\n  5572: a5 = a4 >> 0x30\n  5575: u8 [a0 + 0x1e] = a5\n  5578: a5 = a4 >> 0x28\n  5581: u8 [a0 + 0x1d] = a5\n  5584: a5 = a4 >> 0x20\n  5587: u8 [a0 + 0x1c] = a5\n  5590: a5 = a4 >> 0x18\n  5593: u8 [a0 + 0x1b] = a5\n  5596: a5 = a4 >> 0x10\n  5599: u8 [a0 + 0x1a] = a5\n  5602: a5 = a4 >> 0x8\n  5605: u8 [a0 + 0x19] = a5\n  5608: u8 [a0 + 0x18] = a4\n  5611: u8 [a0 + 0x10] = a3\n  5614: a4 = a3 >> 0x38\n  5617: u8 [a0 + 0x17] = a4\n  5620: a4 = a3 >> 0x30\n  5623: u8 [a0 + 0x16] = a4\n  5626: a4 = a3 >> 0x28\n  5629: u8 [a0 + 0x15] = a4\n  5632: a4 = a3 >> 0x20\n  5635: u8 [a0 + 0x14] = a4\n  5638: a4 = a3 >> 0x18\n  5641: u8 [a0 + 0x13] = a4\n  5644: a4 = a3 >> 0x10\n  5647: u8 [a0 + 0x12] = a4\n  5650: a3 = a3 >> 0x8\n  5653: u8 [a0 + 0x11] = a3\n  5656: u8 [a0 + 0x8] = a2\n  5659: a3 = a2 >> 0x38\n  5662: u8 [a0 + 0xf] = a3\n  5665: a3 = a2 >> 0x30\n  5668: u8 [a0 + 0xe] = a3\n  5671: a3 = a2 >> 0x28\n  5674: u8 [a0 + 0xd] = a3\n  5677: a3 = a2 >> 0x20\n  5680: u8 [a0 + 0xc] = a3\n  5683: a3 = a2 >> 0x18\n  5686: u8 [a0 + 0xb] = a3\n  5689: a3 = a2 >> 0x10\n  5692: u8 [a0 + 0xa] = a3\n  5695: a2 = a2 >> 0x8\n  5698: u8 [a0 + 0x9] = a2\n  5701: u8 [a0] = a1\n  5703: a2 = a1 >> 0x38\n  5706: u8 [a0 + 0x7] = a2\n  5709: a2 = a1 >> 0x30\n  5712: u8 [a0 + 0x6] = a2\n  5715: a2 = a1 >> 0x28\n  5718: u8 [a0 + 0x5] = a2\n  5721: a2 = a1 >> 0x20\n  5724: u8 [a0 + 0x4] = a2\n  5727: a2 = a1 >> 0x18\n  5730: u8 [a0 + 0x3] = a2\n  5733: a2 = a1 >> 0x10\n  5736: u8 [a0 + 0x2] = a2\n  5739: a1 = a1 >> 0x8\n  5742: u8 [a0 + 0x1] = a1\n  5745: a1 = 0x20\n  5748: a0 = s1\n  5750: ra = 90, jump @0\n      : @110 [@dyn 45] (gas: 6)\n  5755: i32 a1 = a0 + 0\n  5757: a2 = 0x20\n  5760: a0 = 0\n  5762: ra = 0x5c\n  5765: ecalli 12 // 'seal_return'\n  5767: fallthrough\n      : @111 [@dyn 46] (gas: 5)\n  5768: sp = sp + 0xfffffffffffffff8\n  5771: u64 [sp] = ra\n  5773: a0 = 0\n  5775: a1 = 0\n  5777: ra = 94, jump @0\n      : @112 [@dyn 47] (gas: 6)\n  5782: i32 a1 = a0 + 0\n  5784: a0 = 0x1\n  5787: a2 = 0\n  5789: ra = 0x60\n  5792: ecalli 12 // 'seal_return'\n  5794: fallthrough\n      : @113 [@dyn 48] (gas: 9)\n  5795: a2 = u64 [a1 + 0x18]\n  5798: a3 = u64 [a1 + 0x10]\n  5801: a4 = u64 [a1 + 0x8]\n  5804: a1 = u64 [a1]\n  5806: u64 [a0 + 0x18] = a2\n  5809: u64 [a0 + 0x10] = a3\n  5812: u64 [a0 + 0x8] = a4\n  5815: u64 [a0] = a1\n  5817: ret\n      : @114 (gas: 17)\n  5819: sp = sp + 0xffffffffffffffa0\n  5822: u64 [sp + 0x58] = ra\n  5825: u64 [sp + 0x50] = s0\n  5828: u64 [sp + 0x48] = s1\n  5831: a3 = u64 [a1 + 0x18]\n  5834: a4 = u64 [a1 + 0x10]\n  5837: a5 = u64 [a1 + 0x8]\n  5840: s1 = u64 [a1]\n  5842: a1 = a5 | a3\n  5845: a2 = s1 | a4\n  5848: a2 = a2 | a1\n  5851: a2 = a2 >> 0x20\n  5854: a1 = a1 | a4\n  5857: a1 = a1 << 0x20\n  5860: a1 = a1 | a2\n  5863: u64 [sp + 0x28] = a0\n  5866: jump @121 if a1 != 0\n      : @115 (gas: 19)\n  5870: a0 = s1 + 0x20\n  5873: u64 [sp + 0x30] = a0\n  5876: a0 = a0 <u s1\n  5879: a1 = a5 + a0\n  5882: u64 [sp + 0x40] = a1\n  5885: u64 [sp + 0x8] = a5\n  5888: s0 = a1 <u a5\n  5891: s0 = a0 if a0 == 0\n  5894: s0 = s0 + a4\n  5897: u64 [sp + 0x10] = a4\n  5900: a0 = s0 <u a4\n  5903: u64 [sp + 0x18] = a3\n  5906: a0 = a0 + a3\n  5909: u64 [sp + 0x38] = a0\n  5912: u64 [sp] = s1\n  5914: i32 a0 = s1 + 0\n  5916: a1 = 0x20\n  5919: s1 = 0x20\n  5922: ra = 98, jump @0\n      : @116 [@dyn 49] (gas: 45)\n  5927: u8 [a0 + 0x1f] = s1\n  5930: a1 = u64 [sp + 0x30]\n  5933: s1 = a1\n  5935: a1 = a1 | s0\n  5938: a2 = u64 [sp + 0x40]\n  5941: a4 = u64 [sp + 0x38]\n  5944: a2 = a2 | a4\n  5947: a1 = a1 | a2\n  5950: a1 = a1 >> 0x20\n  5953: u64 [sp + 0x20] = s0\n  5956: a2 = a2 | s0\n  5959: a2 = a2 << 0x20\n  5962: a1 = a1 | a2\n  5965: u8 [a0 + 30] = 0\n  5968: u8 [a0 + 29] = 0\n  5971: u8 [a0 + 28] = 0\n  5974: u8 [a0 + 27] = 0\n  5977: u8 [a0 + 26] = 0\n  5980: u8 [a0 + 25] = 0\n  5983: u8 [a0 + 24] = 0\n  5986: u8 [a0 + 23] = 0\n  5989: u8 [a0 + 22] = 0\n  5992: u8 [a0 + 21] = 0\n  5995: u8 [a0 + 20] = 0\n  5998: u8 [a0 + 19] = 0\n  6001: u8 [a0 + 18] = 0\n  6004: u8 [a0 + 17] = 0\n  6007: u8 [a0 + 16] = 0\n  6010: u8 [a0 + 15] = 0\n  6013: u8 [a0 + 14] = 0\n  6016: u8 [a0 + 13] = 0\n  6019: u8 [a0 + 12] = 0\n  6022: u8 [a0 + 11] = 0\n  6025: u8 [a0 + 10] = 0\n  6028: u8 [a0 + 9] = 0\n  6031: u8 [a0 + 8] = 0\n  6034: u8 [a0 + 7] = 0\n  6037: u8 [a0 + 6] = 0\n  6040: u8 [a0 + 5] = 0\n  6043: u8 [a0 + 4] = 0\n  6046: u8 [a0 + 3] = 0\n  6049: u8 [a0 + 2] = 0\n  6052: u8 [a0 + 1] = 0\n  6055: u8 [a0 + 0] = 0\n  6057: jump @121 if a1 != 0\n      : @117 (gas: 4)\n  6061: i32 s0 = s1 + 0\n  6063: a1 = 0x20\n  6066: a0 = s0\n  6068: ra = 100, jump @0\n      : @118 [@dyn 50] (gas: 41)\n  6073: u8 [a0 + 31] = 0x17\n  6077: u8 [a0 + 30] = 0\n  6080: u8 [a0 + 29] = 0\n  6083: u8 [a0 + 28] = 0\n  6086: u8 [a0 + 27] = 0\n  6089: u8 [a0 + 26] = 0\n  6092: u8 [a0 + 25] = 0\n  6095: u8 [a0 + 24] = 0\n  6098: u8 [a0 + 23] = 0\n  6101: u8 [a0 + 22] = 0\n  6104: u8 [a0 + 21] = 0\n  6107: u8 [a0 + 20] = 0\n  6110: u8 [a0 + 19] = 0\n  6113: u8 [a0 + 18] = 0\n  6116: u8 [a0 + 17] = 0\n  6119: u8 [a0 + 16] = 0\n  6122: u8 [a0 + 15] = 0\n  6125: u8 [a0 + 14] = 0\n  6128: u8 [a0 + 13] = 0\n  6131: u8 [a0 + 12] = 0\n  6134: u8 [a0 + 11] = 0\n  6137: u8 [a0 + 10] = 0\n  6140: u8 [a0 + 9] = 0\n  6143: u8 [a0 + 8] = 0\n  6146: u8 [a0 + 7] = 0\n  6149: u8 [a0 + 6] = 0\n  6152: u8 [a0 + 5] = 0\n  6155: u8 [a0 + 4] = 0\n  6158: u8 [a0 + 3] = 0\n  6161: u8 [a0 + 2] = 0\n  6164: u8 [a0 + 1] = 0\n  6167: a1 = u64 [sp + 0x20]\n  6170: a2 = u64 [sp + 0x38]\n  6173: a1 = a1 | a2\n  6176: a2 = 0xffffffe0\n  6186: a2 = s1 <u a2\n  6189: a3 = u64 [sp + 0x40]\n  6192: a2 = 0 if a3 != 0\n  6194: a2 = 0 if a1 != 0\n  6196: u8 [a0 + 0] = 0\n  6198: jump @121 if a2 == 0\n      : @119 (gas: 3)\n  6202: i32 a0 = s0 + 0x20\n  6205: a1 = 0x20\n  6208: ra = 102, jump @0\n      : @120 [@dyn 51] (gas: 54)\n  6213: u8 [a0 + 31] = 0\n  6216: u8 [a0 + 30] = 0\n  6219: u8 [a0 + 29] = 0\n  6222: u8 [a0 + 28] = 0\n  6225: u8 [a0 + 27] = 0\n  6228: u8 [a0 + 26] = 0\n  6231: u8 [a0 + 25] = 0\n  6234: u8 [a0 + 24] = 0\n  6237: u8 [a0 + 23] = 0\n  6240: u8 [a0 + 22] = 0x6c\n  6244: u8 [a0 + 21] = 0x61\n  6248: u8 [a0 + 20] = 0x72\n  6252: u8 [a0 + 19] = 0x65\n  6256: u8 [a0 + 18] = 0x74\n  6260: u8 [a0 + 17] = 0x61\n  6264: u8 [a0 + 16] = 0x6c\n  6268: u8 [a0 + 15] = 0x6c\n  6272: u8 [a0 + 14] = 0x6f\n  6276: u8 [a0 + 13] = 0x63\n  6280: u8 [a0 + 12] = 0x20\n  6284: u8 [a0 + 11] = 0x74\n  6288: u8 [a0 + 10] = 0x6e\n  6292: u8 [a0 + 9] = 0x65\n  6296: u8 [a0 + 8] = 0x69\n  6300: u8 [a0 + 7] = 0x63\n  6304: u8 [a0 + 6] = 0x69\n  6308: u8 [a0 + 5] = 0x66\n  6312: u8 [a0 + 4] = 0x66\n  6316: u8 [a0 + 3] = 0x75\n  6320: u8 [a0 + 2] = 0x73\n  6324: u8 [a0 + 1] = 0x6e\n  6328: u8 [a0 + 0] = 0x49\n  6331: a1 = u64 [sp]\n  6333: a0 = a1 + 0x60\n  6336: a1 = a0 <u a1\n  6339: a3 = u64 [sp + 0x8]\n  6342: a2 = a3 + a1\n  6345: a3 = a2 <u a3\n  6348: a3 = a1 if a1 == 0\n  6351: a1 = u64 [sp + 0x10]\n  6354: a3 = a3 + a1\n  6357: a1 = a3 <u a1\n  6360: a4 = u64 [sp + 0x18]\n  6363: a1 = a1 + a4\n  6366: a4 = u64 [sp + 0x28]\n  6369: u64 [a4] = a0\n  6371: u64 [a4 + 0x8] = a2\n  6374: u64 [a4 + 0x10] = a3\n  6377: u64 [a4 + 0x18] = a1\n  6380: ra = u64 [sp + 0x58]\n  6383: s0 = u64 [sp + 0x50]\n  6386: s1 = u64 [sp + 0x48]\n  6389: sp = sp + 0x60\n  6392: ret\n      : @121 (gas: 1)\n  6394: trap\n      : @122 [@dyn 52] (gas: 56)\n  6395: a1 = u64 [sp + 0xf8]\n  6399: a1 = reverse a1\n  6401: a2 = u64 [sp + 0x100]\n  6405: a2 = reverse a2\n  6407: a3 = s1 >> 0x18\n  6410: u8 [a0 + 0xf] = a3\n  6413: a3 = s1 >> 0x10\n  6416: u8 [a0 + 0xe] = a3\n  6419: a3 = s1 >> 0x8\n  6422: u8 [a0 + 0xd] = a3\n  6425: u8 [a0 + 0xc] = s1\n  6428: u8 [a0 + 11] = 0\n  6431: u8 [a0 + 10] = 0\n  6434: u8 [a0 + 9] = 0\n  6437: u8 [a0 + 8] = 0\n  6440: u8 [a0 + 7] = 0\n  6443: u8 [a0 + 6] = 0\n  6446: u8 [a0 + 5] = 0\n  6449: u8 [a0 + 4] = 0\n  6452: u8 [a0 + 3] = 0\n  6455: u8 [a0 + 2] = 0\n  6458: u8 [a0 + 1] = 0\n  6461: u8 [a0 + 0] = 0\n  6463: u8 [a0 + 0x18] = a2\n  6466: u8 [a0 + 0x10] = a1\n  6469: a3 = a2 >> 0x38\n  6472: u8 [a0 + 0x1f] = a3\n  6475: a3 = a2 >> 0x30\n  6478: u8 [a0 + 0x1e] = a3\n  6481: a3 = a2 >> 0x28\n  6484: u8 [a0 + 0x1d] = a3\n  6487: a3 = a2 >> 0x20\n  6490: u8 [a0 + 0x1c] = a3\n  6493: a3 = a2 >> 0x18\n  6496: u8 [a0 + 0x1b] = a3\n  6499: a3 = a2 >> 0x10\n  6502: u8 [a0 + 0x1a] = a3\n  6505: a2 = a2 >> 0x8\n  6508: u8 [a0 + 0x19] = a2\n  6511: a2 = a1 >> 0x38\n  6514: u8 [a0 + 0x17] = a2\n  6517: a2 = a1 >> 0x30\n  6520: u8 [a0 + 0x16] = a2\n  6523: a2 = a1 >> 0x28\n  6526: u8 [a0 + 0x15] = a2\n  6529: a2 = a1 >> 0x20\n  6532: u8 [a0 + 0x14] = a2\n  6535: a2 = a1 >> 0x18\n  6538: u8 [a0 + 0x13] = a2\n  6541: a2 = a1 >> 0x10\n  6544: u8 [a0 + 0x12] = a2\n  6547: a1 = a1 >> 0x8\n  6550: u8 [a0 + 0x11] = a1\n  6553: a0 = 0x20\n  6556: a1 = 0x20\n  6559: ra = 106, jump @0\n      : @123 [@dyn 53] (gas: 35)\n  6564: u8 [a0 + 31] = 0\n  6567: u8 [a0 + 30] = 0\n  6570: u8 [a0 + 29] = 0\n  6573: u8 [a0 + 28] = 0\n  6576: u8 [a0 + 27] = 0\n  6579: u8 [a0 + 26] = 0\n  6582: u8 [a0 + 25] = 0\n  6585: u8 [a0 + 24] = 0\n  6588: u8 [a0 + 23] = 0\n  6591: u8 [a0 + 22] = 0\n  6594: u8 [a0 + 21] = 0\n  6597: u8 [a0 + 20] = 0\n  6600: u8 [a0 + 19] = 0\n  6603: u8 [a0 + 18] = 0\n  6606: u8 [a0 + 17] = 0\n  6609: u8 [a0 + 16] = 0\n  6612: u8 [a0 + 15] = 0\n  6615: u8 [a0 + 14] = 0\n  6618: u8 [a0 + 13] = 0\n  6621: u8 [a0 + 12] = 0\n  6624: u8 [a0 + 11] = 0\n  6627: u8 [a0 + 10] = 0\n  6630: u8 [a0 + 9] = 0\n  6633: u8 [a0 + 8] = 0\n  6636: u8 [a0 + 7] = 0\n  6639: u8 [a0 + 6] = 0\n  6642: u8 [a0 + 5] = 0\n  6645: u8 [a0 + 4] = 0\n  6648: u8 [a0 + 3] = 0\n  6651: u8 [a0 + 2] = 0\n  6654: u8 [a0 + 1] = 0\n  6657: u8 [a0 + 0] = 0\n  6659: a1 = 0x40\n  6662: a0 = 0\n  6664: ra = 108, jump @0\n      : @124 [@dyn 54] (gas: 14)\n  6669: i32 a0 = a0 + 0\n  6671: i32 a2 = sp + 0x220\n  6675: a1 = 0x40\n  6678: ecalli 8 // 'hash_keccak_256'\n  6680: a0 = u64 [sp + 0x220]\n  6684: u64 [sp + 0x68] = a0\n  6687: a0 = u64 [sp + 0x228]\n  6691: u64 [sp + 0x60] = a0\n  6694: a0 = u64 [sp + 0x230]\n  6698: u64 [sp + 0x58] = a0\n  6701: s1 = u64 [sp + 0x238]\n  6705: a1 = 0x20\n  6708: a0 = 0\n  6710: ra = 110, jump @0\n      : @125 [@dyn 55] (gas: 80)\n  6715: a1 = u64 [sp + 0x108]\n  6719: a3 = reverse a1\n  6721: a1 = u64 [sp + 0x110]\n  6725: a4 = reverse a1\n  6727: a1 = u64 [sp + 0x120]\n  6731: a2 = reverse a1\n  6733: a1 = a2 >> 0x38\n  6736: u64 [sp + 0x108] = a1\n  6740: u8 [a0 + 0x1f] = a1\n  6743: a1 = a2 >> 0x30\n  6746: u64 [sp + 0x100] = a1\n  6750: u8 [a0 + 0x1e] = a1\n  6753: a1 = a2 >> 0x28\n  6756: u64 [sp + 0xf8] = a1\n  6760: u8 [a0 + 0x1d] = a1\n  6763: a1 = a2 >> 0x20\n  6766: u64 [sp + 0xf0] = a1\n  6770: u8 [a0 + 0x1c] = a1\n  6773: a1 = a2 >> 0x18\n  6776: u64 [sp + 0xe8] = a1\n  6780: u8 [a0 + 0x1b] = a1\n  6783: a1 = a2 >> 0x10\n  6786: u64 [sp + 0xe0] = a1\n  6790: u8 [a0 + 0x1a] = a1\n  6793: a1 = a2 >> 0x8\n  6796: u64 [sp + 0x110] = a1\n  6800: u8 [a0 + 0x19] = a1\n  6803: u64 [sp + 0xd8] = a2\n  6807: u8 [a0 + 0x18] = a2\n  6810: a1 = a4 >> 0x38\n  6813: u64 [sp + 0xc8] = a1\n  6817: u8 [a0 + 0x17] = a1\n  6820: a1 = a4 >> 0x30\n  6823: u64 [sp + 0xc0] = a1\n  6827: u8 [a0 + 0x16] = a1\n  6830: a1 = a4 >> 0x28\n  6833: u64 [sp + 0xb0] = a1\n  6837: u8 [a0 + 0x15] = a1\n  6840: a1 = a4 >> 0x20\n  6843: u64 [sp + 0xa8] = a1\n  6847: u8 [a0 + 0x14] = a1\n  6850: a1 = a4 >> 0x18\n  6853: u64 [sp + 0xa0] = a1\n  6857: u8 [a0 + 0x13] = a1\n  6860: a1 = a4 >> 0x10\n  6863: u64 [sp + 0x98] = a1\n  6867: u8 [a0 + 0x12] = a1\n  6870: a1 = a4 >> 0x8\n  6873: u64 [sp + 0x90] = a1\n  6877: u8 [a0 + 0x11] = a1\n  6880: u64 [sp + 0xb8] = a4\n  6884: u8 [a0 + 0x10] = a4\n  6887: a1 = a3 >> 0x38\n  6890: u64 [sp + 0x88] = a1\n  6894: u8 [a0 + 0xf] = a1\n  6897: a1 = a3 >> 0x30\n  6900: u64 [sp + 0x80] = a1\n  6904: u8 [a0 + 0xe] = a1\n  6907: a1 = a3 >> 0x28\n  6910: u64 [sp + 0x78] = a1\n  6913: u8 [a0 + 0xd] = a1\n  6916: a1 = a3 >> 0x20\n  6919: u64 [sp + 0x70] = a1\n  6922: u8 [a0 + 0xc] = a1\n  6925: u8 [a0 + 11] = 0\n  6928: u8 [a0 + 10] = 0\n  6931: u8 [a0 + 9] = 0\n  6934: u64 [sp + 0xd0] = a3\n  6938: u8 [a0 + 0x8] = a3\n  6941: u8 [a0 + 7] = 0\n  6944: u8 [a0 + 6] = 0\n  6947: u8 [a0 + 5] = 0\n  6950: u8 [a0 + 4] = 0\n  6953: u8 [a0 + 3] = 0\n  6956: u8 [a0 + 2] = 0\n  6959: u8 [a0 + 1] = 0\n  6962: u8 [a0 + 0] = 0\n  6964: a0 = 0x20\n  6967: a1 = 0x20\n  6970: ra = 112, jump @0\n      : @126 [@dyn 56] (gas: 66)\n  6975: a1 = s1 >> 0x38\n  6978: u8 [a0 + 0x1f] = a1\n  6981: a1 = s1 >> 0x30\n  6984: u8 [a0 + 0x1e] = a1\n  6987: a1 = s1 >> 0x28\n  6990: u8 [a0 + 0x1d] = a1\n  6993: a1 = s1 >> 0x20\n  6996: u8 [a0 + 0x1c] = a1\n  6999: a1 = s1 >> 0x18\n  7002: u8 [a0 + 0x1b] = a1\n  7005: a1 = s1 >> 0x10\n  7008: u8 [a0 + 0x1a] = a1\n  7011: a1 = s1 >> 0x8\n  7014: u8 [a0 + 0x19] = a1\n  7017: u8 [a0 + 0x18] = s1\n  7020: a2 = u64 [sp + 0x58]\n  7023: a1 = a2 >> 0x38\n  7026: u8 [a0 + 0x17] = a1\n  7029: a1 = a2 >> 0x30\n  7032: u8 [a0 + 0x16] = a1\n  7035: a1 = a2 >> 0x28\n  7038: u8 [a0 + 0x15] = a1\n  7041: a1 = a2 >> 0x20\n  7044: u8 [a0 + 0x14] = a1\n  7047: a1 = a2 >> 0x18\n  7050: u8 [a0 + 0x13] = a1\n  7053: a1 = a2 >> 0x10\n  7056: u8 [a0 + 0x12] = a1\n  7059: a1 = a2 >> 0x8\n  7062: u8 [a0 + 0x11] = a1\n  7065: u8 [a0 + 0x10] = a2\n  7068: a2 = u64 [sp + 0x60]\n  7071: a1 = a2 >> 0x38\n  7074: u8 [a0 + 0xf] = a1\n  7077: a1 = a2 >> 0x30\n  7080: u8 [a0 + 0xe] = a1\n  7083: a1 = a2 >> 0x28\n  7086: u8 [a0 + 0xd] = a1\n  7089: a1 = a2 >> 0x20\n  7092: u8 [a0 + 0xc] = a1\n  7095: a1 = a2 >> 0x18\n  7098: u8 [a0 + 0xb] = a1\n  7101: a1 = a2 >> 0x10\n  7104: u8 [a0 + 0xa] = a1\n  7107: a1 = a2 >> 0x8\n  7110: u8 [a0 + 0x9] = a1\n  7113: u8 [a0 + 0x8] = a2\n  7116: a2 = u64 [sp + 0x68]\n  7119: a1 = a2 >> 0x38\n  7122: u8 [a0 + 0x7] = a1\n  7125: a1 = a2 >> 0x30\n  7128: u8 [a0 + 0x6] = a1\n  7131: a1 = a2 >> 0x28\n  7134: u8 [a0 + 0x5] = a1\n  7137: a1 = a2 >> 0x20\n  7140: u8 [a0 + 0x4] = a1\n  7143: a1 = a2 >> 0x18\n  7146: u8 [a0 + 0x3] = a1\n  7149: a1 = a2 >> 0x10\n  7152: u8 [a0 + 0x2] = a1\n  7155: a1 = a2 >> 0x8\n  7158: u8 [a0 + 0x1] = a1\n  7161: u8 [a0] = a2\n  7163: a1 = 0x40\n  7166: a0 = 0\n  7168: ra = 114, jump @0\n      : @127 [@dyn 57] (gas: 28)\n  7173: i32 a0 = a0 + 0\n  7175: i32 a2 = sp + 0x220\n  7179: a1 = 0x40\n  7182: ecalli 8 // 'hash_keccak_256'\n  7184: a0 = u64 [sp + 0x238]\n  7188: a1 = u64 [sp + 0x230]\n  7192: a2 = u64 [sp + 0x228]\n  7196: a3 = u64 [sp + 0x220]\n  7200: a0 = reverse a0\n  7202: a1 = reverse a1\n  7204: a2 = reverse a2\n  7206: a3 = reverse a3\n  7208: u64 [sp + 0x218] = a3\n  7212: u64 [sp + 0x210] = a2\n  7216: u64 [sp + 0x208] = a1\n  7220: u64 [sp + 0x200] = a0\n  7224: u64 [sp + 568] = 0\n  7228: u64 [sp + 560] = 0\n  7232: u64 [sp + 552] = 0\n  7236: u64 [sp + 544] = 0\n  7240: u32 [sp + 480] = 0x20\n  7245: i32 a1 = sp + 0x200\n  7249: i32 a3 = sp + 0x220\n  7253: i32 a4 = sp + 0x1e0\n  7257: a2 = 0xffffffffffffffff\n  7260: a0 = 0\n  7262: ecalli 7 // 'get_storage'\n  7264: fallthrough\n      : @128 (gas: 22)\n  7265: t1 = u64 [sp + 0x238]\n  7269: a3 = u64 [sp + 0x230]\n  7273: t0 = u64 [sp + 0x228]\n  7277: a2 = u64 [sp + 0x220]\n  7281: a1 = u64 [sp + 0x128]\n  7285: a0 = t1 ^ a1\n  7288: a4 = t1 <u a1\n  7291: a1 = u64 [sp + 0x118]\n  7295: a5 = a3 <u a1\n  7298: u64 [sp + 0x68] = a5\n  7301: a4 = a5 if a0 == 0\n  7304: a5 = u64 [sp + 0x130]\n  7308: t2 = t0 ^ a5\n  7311: s1 = t0 <u a5\n  7314: a5 = u64 [sp + 0x138]\n  7318: u64 [sp + 0x120] = a2\n  7322: ra = a2 <u a5\n  7325: s1 = ra if t2 == 0\n  7328: a5 = a3 ^ a1\n  7331: a0 = a0 | a5\n  7334: a4 = s1 if a0 == 0\n  7337: jump @144 if a4 != 0\n      : @129 (gas: 37)\n  7341: a0 = a3 - a1\n  7344: a1 = a0 - s1\n  7347: u64 [sp + 0x60] = a1\n  7350: a0 = a0 <u s1\n  7353: a1 = u64 [sp + 0x128]\n  7357: a2 = t1 - a1\n  7360: a1 = u64 [sp + 0x68]\n  7363: a2 = a2 - a1\n  7366: a2 = a2 - a0\n  7369: u64 [sp + 0x68] = a2\n  7372: a0 = u64 [sp + 0x130]\n  7376: a0 = t0 - a0\n  7379: a0 = a0 - ra\n  7382: u64 [sp + 0x58] = a0\n  7385: a0 = u64 [sp + 0x138]\n  7389: a1 = u64 [sp + 0x120]\n  7393: a0 = a1 - a0\n  7396: u64 [sp + 0x120] = a0\n  7400: i32 a0 = sp + 0x1a0\n  7404: ecalli 5 // 'caller'\n  7406: a0 = u64 [sp + 0x1a8]\n  7410: a1 = i32 [sp + 0x1b0]\n  7414: s1 = u64 [sp + 0x1a0]\n  7418: a0 = reverse a0\n  7420: a2 = a0 << 0x20\n  7423: a1 = reverse a1\n  7425: a1 = a1 >> 0x20\n  7428: a1 = a1 | a2\n  7431: u64 [sp + 0x50] = a1\n  7434: a0 = a0 >> 0x20\n  7437: a1 = reverse s1\n  7439: a1 = a1 << 0x20\n  7442: a0 = a0 | a1\n  7445: u64 [sp + 0x48] = a0\n  7448: a1 = 0x20\n  7451: a0 = 0\n  7453: ra = 116, jump @0\n      : @130 [@dyn 58] (gas: 56)\n  7458: a1 = u64 [sp + 0x48]\n  7461: a1 = reverse a1\n  7463: a2 = u64 [sp + 0x50]\n  7466: a2 = reverse a2\n  7468: a3 = s1 >> 0x18\n  7471: u8 [a0 + 0xf] = a3\n  7474: a3 = s1 >> 0x10\n  7477: u8 [a0 + 0xe] = a3\n  7480: a3 = s1 >> 0x8\n  7483: u8 [a0 + 0xd] = a3\n  7486: u8 [a0 + 0xc] = s1\n  7489: u8 [a0 + 11] = 0\n  7492: u8 [a0 + 10] = 0\n  7495: u8 [a0 + 9] = 0\n  7498: u8 [a0 + 8] = 0\n  7501: u8 [a0 + 7] = 0\n  7504: u8 [a0 + 6] = 0\n  7507: u8 [a0 + 5] = 0\n  7510: u8 [a0 + 4] = 0\n  7513: u8 [a0 + 3] = 0\n  7516: u8 [a0 + 2] = 0\n  7519: u8 [a0 + 1] = 0\n  7522: u8 [a0 + 0] = 0\n  7524: u8 [a0 + 0x18] = a2\n  7527: u8 [a0 + 0x10] = a1\n  7530: a3 = a2 >> 0x38\n  7533: u8 [a0 + 0x1f] = a3\n  7536: a3 = a2 >> 0x30\n  7539: u8 [a0 + 0x1e] = a3\n  7542: a3 = a2 >> 0x28\n  7545: u8 [a0 + 0x1d] = a3\n  7548: a3 = a2 >> 0x20\n  7551: u8 [a0 + 0x1c] = a3\n  7554: a3 = a2 >> 0x18\n  7557: u8 [a0 + 0x1b] = a3\n  7560: a3 = a2 >> 0x10\n  7563: u8 [a0 + 0x1a] = a3\n  7566: a2 = a2 >> 0x8\n  7569: u8 [a0 + 0x19] = a2\n  7572: a2 = a1 >> 0x38\n  7575: u8 [a0 + 0x17] = a2\n  7578: a2 = a1 >> 0x30\n  7581: u8 [a0 + 0x16] = a2\n  7584: a2 = a1 >> 0x28\n  7587: u8 [a0 + 0x15] = a2\n  7590: a2 = a1 >> 0x20\n  7593: u8 [a0 + 0x14] = a2\n  7596: a2 = a1 >> 0x18\n  7599: u8 [a0 + 0x13] = a2\n  7602: a2 = a1 >> 0x10\n  7605: u8 [a0 + 0x12] = a2\n  7608: a1 = a1 >> 0x8\n  7611: u8 [a0 + 0x11] = a1\n  7614: a0 = 0x20\n  7617: a1 = 0x20\n  7620: ra = 118, jump @0\n      : @131 [@dyn 59] (gas: 35)\n  7625: u8 [a0 + 31] = 0\n  7628: u8 [a0 + 30] = 0\n  7631: u8 [a0 + 29] = 0\n  7634: u8 [a0 + 28] = 0\n  7637: u8 [a0 + 27] = 0\n  7640: u8 [a0 + 26] = 0\n  7643: u8 [a0 + 25] = 0\n  7646: u8 [a0 + 24] = 0\n  7649: u8 [a0 + 23] = 0\n  7652: u8 [a0 + 22] = 0\n  7655: u8 [a0 + 21] = 0\n  7658: u8 [a0 + 20] = 0\n  7661: u8 [a0 + 19] = 0\n  7664: u8 [a0 + 18] = 0\n  7667: u8 [a0 + 17] = 0\n  7670: u8 [a0 + 16] = 0\n  7673: u8 [a0 + 15] = 0\n  7676: u8 [a0 + 14] = 0\n  7679: u8 [a0 + 13] = 0\n  7682: u8 [a0 + 12] = 0\n  7685: u8 [a0 + 11] = 0\n  7688: u8 [a0 + 10] = 0\n  7691: u8 [a0 + 9] = 0\n  7694: u8 [a0 + 8] = 0\n  7697: u8 [a0 + 7] = 0\n  7700: u8 [a0 + 6] = 0\n  7703: u8 [a0 + 5] = 0\n  7706: u8 [a0 + 4] = 0\n  7709: u8 [a0 + 3] = 0\n  7712: u8 [a0 + 2] = 0\n  7715: u8 [a0 + 1] = 0\n  7718: u8 [a0 + 0] = 0\n  7720: a1 = 0x40\n  7723: a0 = 0\n  7725: ra = 120, jump @0\n      : @132 [@dyn 60] (gas: 14)\n  7730: i32 a0 = a0 + 0\n  7732: i32 a2 = sp + 0x220\n  7736: a1 = 0x40\n  7739: ecalli 8 // 'hash_keccak_256'\n  7741: a0 = u64 [sp + 0x220]\n  7745: u64 [sp + 0x50] = a0\n  7748: a0 = u64 [sp + 0x228]\n  7752: u64 [sp + 0x48] = a0\n  7755: a0 = u64 [sp + 0x230]\n  7759: u64 [sp + 0x40] = a0\n  7762: s1 = u64 [sp + 0x238]\n  7766: a1 = 0x20\n  7769: a0 = 0\n  7771: ra = 122, jump @0\n      : @133 [@dyn 61] (gas: 62)\n  7776: a1 = u64 [sp + 0x108]\n  7780: u8 [a0 + 0x1f] = a1\n  7783: a1 = u64 [sp + 0x100]\n  7787: u8 [a0 + 0x1e] = a1\n  7790: a1 = u64 [sp + 0xf8]\n  7794: u8 [a0 + 0x1d] = a1\n  7797: a1 = u64 [sp + 0xf0]\n  7801: u8 [a0 + 0x1c] = a1\n  7804: a1 = u64 [sp + 0xe8]\n  7808: u8 [a0 + 0x1b] = a1\n  7811: a1 = u64 [sp + 0xe0]\n  7815: u8 [a0 + 0x1a] = a1\n  7818: a1 = u64 [sp + 0x110]\n  7822: u8 [a0 + 0x19] = a1\n  7825: a1 = u64 [sp + 0xd8]\n  7829: u8 [a0 + 0x18] = a1\n  7832: a1 = u64 [sp + 0xc8]\n  7836: u8 [a0 + 0x17] = a1\n  7839: a1 = u64 [sp + 0xc0]\n  7843: u8 [a0 + 0x16] = a1\n  7846: a1 = u64 [sp + 0xb0]\n  7850: u8 [a0 + 0x15] = a1\n  7853: a1 = u64 [sp + 0xa8]\n  7857: u8 [a0 + 0x14] = a1\n  7860: a1 = u64 [sp + 0xa0]\n  7864: u8 [a0 + 0x13] = a1\n  7867: a1 = u64 [sp + 0x98]\n  7871: u8 [a0 + 0x12] = a1\n  7874: a1 = u64 [sp + 0x90]\n  7878: u8 [a0 + 0x11] = a1\n  7881: a1 = u64 [sp + 0xb8]\n  7885: u8 [a0 + 0x10] = a1\n  7888: a1 = u64 [sp + 0x88]\n  7892: u8 [a0 + 0xf] = a1\n  7895: a1 = u64 [sp + 0x80]\n  7899: u8 [a0 + 0xe] = a1\n  7902: a1 = u64 [sp + 0x78]\n  7905: u8 [a0 + 0xd] = a1\n  7908: a1 = u64 [sp + 0x70]\n  7911: u8 [a0 + 0xc] = a1\n  7914: a1 = u64 [sp + 0xd0]\n  7918: a2 = a1 >> 0x18\n  7921: u64 [sp + 0x38] = a2\n  7924: u8 [a0 + 0xb] = a2\n  7927: a2 = a1 >> 0x10\n  7930: u64 [sp + 0x30] = a2\n  7933: u8 [a0 + 0xa] = a2\n  7936: a2 = a1 >> 0x8\n  7939: u64 [sp + 0x28] = a2\n  7942: u8 [a0 + 0x9] = a2\n  7945: u8 [a0 + 0x8] = a1\n  7948: u8 [a0 + 7] = 0\n  7951: u8 [a0 + 6] = 0\n  7954: u8 [a0 + 5] = 0\n  7957: u8 [a0 + 4] = 0\n  7960: u8 [a0 + 3] = 0\n  7963: u8 [a0 + 2] = 0\n  7966: u8 [a0 + 1] = 0\n  7969: u8 [a0 + 0] = 0\n  7971: a0 = 0x20\n  7974: a1 = 0x20\n  7977: ra = 124, jump @0\n      : @134 [@dyn 62] (gas: 66)\n  7982: a1 = s1 >> 0x38\n  7985: u8 [a0 + 0x1f] = a1\n  7988: a1 = s1 >> 0x30\n  7991: u8 [a0 + 0x1e] = a1\n  7994: a1 = s1 >> 0x28\n  7997: u8 [a0 + 0x1d] = a1\n  8000: a1 = s1 >> 0x20\n  8003: u8 [a0 + 0x1c] = a1\n  8006: a1 = s1 >> 0x18\n  8009: u8 [a0 + 0x1b] = a1\n  8012: a1 = s1 >> 0x10\n  8015: u8 [a0 + 0x1a] = a1\n  8018: a1 = s1 >> 0x8\n  8021: u8 [a0 + 0x19] = a1\n  8024: u8 [a0 + 0x18] = s1\n  8027: a2 = u64 [sp + 0x40]\n  8030: a1 = a2 >> 0x38\n  8033: u8 [a0 + 0x17] = a1\n  8036: a1 = a2 >> 0x30\n  8039: u8 [a0 + 0x16] = a1\n  8042: a1 = a2 >> 0x28\n  8045: u8 [a0 + 0x15] = a1\n  8048: a1 = a2 >> 0x20\n  8051: u8 [a0 + 0x14] = a1\n  8054: a1 = a2 >> 0x18\n  8057: u8 [a0 + 0x13] = a1\n  8060: a1 = a2 >> 0x10\n  8063: u8 [a0 + 0x12] = a1\n  8066: a1 = a2 >> 0x8\n  8069: u8 [a0 + 0x11] = a1\n  8072: u8 [a0 + 0x10] = a2\n  8075: a2 = u64 [sp + 0x48]\n  8078: a1 = a2 >> 0x38\n  8081: u8 [a0 + 0xf] = a1\n  8084: a1 = a2 >> 0x30\n  8087: u8 [a0 + 0xe] = a1\n  8090: a1 = a2 >> 0x28\n  8093: u8 [a0 + 0xd] = a1\n  8096: a1 = a2 >> 0x20\n  8099: u8 [a0 + 0xc] = a1\n  8102: a1 = a2 >> 0x18\n  8105: u8 [a0 + 0xb] = a1\n  8108: a1 = a2 >> 0x10\n  8111: u8 [a0 + 0xa] = a1\n  8114: a1 = a2 >> 0x8\n  8117: u8 [a0 + 0x9] = a1\n  8120: u8 [a0 + 0x8] = a2\n  8123: a2 = u64 [sp + 0x50]\n  8126: a1 = a2 >> 0x38\n  8129: u8 [a0 + 0x7] = a1\n  8132: a1 = a2 >> 0x30\n  8135: u8 [a0 + 0x6] = a1\n  8138: a1 = a2 >> 0x28\n  8141: u8 [a0 + 0x5] = a1\n  8144: a1 = a2 >> 0x20\n  8147: u8 [a0 + 0x4] = a1\n  8150: a1 = a2 >> 0x18\n  8153: u8 [a0 + 0x3] = a1\n  8156: a1 = a2 >> 0x10\n  8159: u8 [a0 + 0x2] = a1\n  8162: a1 = a2 >> 0x8\n  8165: u8 [a0 + 0x1] = a1\n  8168: u8 [a0] = a2\n  8170: a1 = 0x40\n  8173: a0 = 0\n  8175: ra = 126, jump @0\n      : @135 [@dyn 63] (gas: 62)\n  8180: i32 a0 = a0 + 0\n  8182: i32 a2 = sp + 0x220\n  8186: a1 = 0x40\n  8189: ecalli 8 // 'hash_keccak_256'\n  8191: a0 = u64 [sp + 0x238]\n  8195: a1 = u64 [sp + 0x230]\n  8199: a2 = u64 [sp + 0x228]\n  8203: a3 = u64 [sp + 0x220]\n  8207: a0 = reverse a0\n  8209: u64 [sp + 0x50] = a0\n  8212: a1 = reverse a1\n  8214: u64 [sp + 0x48] = a1\n  8217: a2 = reverse a2\n  8219: u64 [sp + 0x40] = a2\n  8222: s1 = reverse a3\n  8224: u64 [sp + 0x218] = s1\n  8228: u64 [sp + 0x210] = a2\n  8232: u64 [sp + 0x208] = a1\n  8236: u64 [sp + 0x200] = a0\n  8240: u64 [sp + 568] = 0\n  8244: u64 [sp + 560] = 0\n  8248: u64 [sp + 552] = 0\n  8252: u64 [sp + 544] = 0\n  8256: u32 [sp + 480] = 0x20\n  8261: i32 a1 = sp + 0x200\n  8265: i32 a3 = sp + 0x220\n  8269: i32 a4 = sp + 0x1e0\n  8273: a2 = 0xffffffffffffffff\n  8276: a0 = 0\n  8278: ecalli 7 // 'get_storage'\n  8280: u64 [sp + 0x218] = s1\n  8284: a0 = u64 [sp + 0x40]\n  8287: u64 [sp + 0x210] = a0\n  8291: a0 = u64 [sp + 0x48]\n  8294: u64 [sp + 0x208] = a0\n  8298: a0 = u64 [sp + 0x50]\n  8301: u64 [sp + 0x200] = a0\n  8305: a0 = u64 [sp + 0x68]\n  8308: u64 [sp + 0x238] = a0\n  8312: a0 = u64 [sp + 0x60]\n  8315: u64 [sp + 0x230] = a0\n  8319: a0 = u64 [sp + 0x58]\n  8322: u64 [sp + 0x228] = a0\n  8326: a0 = u64 [sp + 0x120]\n  8330: u64 [sp + 0x220] = a0\n  8334: i32 a1 = sp + 0x200\n  8338: i32 a3 = sp + 0x220\n  8342: a2 = 0xffffffffffffffff\n  8345: a4 = 0x20\n  8348: a0 = 0\n  8350: ecalli 14 // 'set_storage'\n  8352: i32 a0 = sp + 0x1c0\n  8356: ecalli 5 // 'caller'\n  8358: a0 = u32 [sp + 0x1d0]\n  8362: u64 [sp + 0x48] = a0\n  8365: a0 = u64 [sp + 0x1c8]\n  8369: u64 [sp + 0x40] = a0\n  8372: a0 = u64 [sp + 0x1c0]\n  8376: u64 [sp + 0x68] = a0\n  8379: a0 = 0x40\n  8382: a1 = 0x20\n  8385: ra = 128, jump @0\n      : @136 [@dyn 64] (gas: 103)\n  8391: a1 = u8 [a0 + 0x11]\n  8394: a2 = u8 [a0 + 0x10]\n  8397: a3 = u8 [a0 + 0x12]\n  8400: a4 = u8 [a0 + 0x13]\n  8403: a1 = a1 << 0x8\n  8406: a1 = a1 | a2\n  8409: a3 = a3 << 0x10\n  8412: a4 = a4 << 0x18\n  8415: a3 = a3 | a4\n  8418: a1 = a1 | a3\n  8421: a2 = u8 [a0 + 0x15]\n  8424: a3 = u8 [a0 + 0x14]\n  8427: a4 = u8 [a0 + 0x16]\n  8430: a5 = u8 [a0 + 0x17]\n  8433: a2 = a2 << 0x8\n  8436: a2 = a2 | a3\n  8439: a4 = a4 << 0x10\n  8442: a5 = a5 << 0x18\n  8445: a4 = a4 | a5\n  8448: a2 = a2 | a4\n  8451: a2 = a2 << 0x20\n  8454: t0 = a2 | a1\n  8457: a2 = u8 [a0 + 0x1]\n  8460: a3 = u8 [a0]\n  8462: a4 = u8 [a0 + 0x2]\n  8465: a5 = u8 [a0 + 0x3]\n  8468: a2 = a2 << 0x8\n  8471: a2 = a2 | a3\n  8474: a4 = a4 << 0x10\n  8477: a5 = a5 << 0x18\n  8480: a4 = a4 | a5\n  8483: a2 = a2 | a4\n  8486: a3 = u8 [a0 + 0x5]\n  8489: a4 = u8 [a0 + 0x4]\n  8492: a5 = u8 [a0 + 0x6]\n  8495: s1 = u8 [a0 + 0x7]\n  8498: a3 = a3 << 0x8\n  8501: a3 = a3 | a4\n  8504: a5 = a5 << 0x10\n  8507: s1 = s1 << 0x18\n  8510: a5 = a5 | s1\n  8513: a3 = a3 | a5\n  8516: a3 = a3 << 0x20\n  8519: a2 = a2 | a3\n  8522: a3 = u8 [a0 + 0x19]\n  8525: a4 = u8 [a0 + 0x18]\n  8528: a5 = u8 [a0 + 0x1a]\n  8531: s1 = u8 [a0 + 0x1b]\n  8534: a3 = a3 << 0x8\n  8537: a3 = a3 | a4\n  8540: a5 = a5 << 0x10\n  8543: s1 = s1 << 0x18\n  8546: a5 = a5 | s1\n  8549: a3 = a3 | a5\n  8552: a4 = u8 [a0 + 0x1d]\n  8555: a5 = u8 [a0 + 0x1c]\n  8558: s1 = u8 [a0 + 0x1e]\n  8561: a1 = u8 [a0 + 0x1f]\n  8564: a4 = a4 << 0x8\n  8567: a4 = a4 | a5\n  8570: s1 = s1 << 0x10\n  8573: a1 = a1 << 0x18\n  8576: a1 = a1 | s1\n  8579: a1 = a1 | a4\n  8582: a1 = a1 << 0x20\n  8585: a3 = a3 | a1\n  8588: a1 = u8 [a0 + 0x9]\n  8591: a4 = u8 [a0 + 0x8]\n  8594: a5 = u8 [a0 + 0xa]\n  8597: s1 = u8 [a0 + 0xb]\n  8600: a1 = a1 << 0x8\n  8603: a1 = a1 | a4\n  8606: a5 = a5 << 0x10\n  8609: s1 = s1 << 0x18\n  8612: a5 = a5 | s1\n  8615: a1 = a1 | a5\n  8618: a4 = u8 [a0 + 0xd]\n  8621: a5 = u8 [a0 + 0xc]\n  8624: s1 = u8 [a0 + 0xe]\n  8627: a0 = u8 [a0 + 0xf]\n  8630: a4 = a4 << 0x8\n  8633: a4 = a4 | a5\n  8636: s1 = s1 << 0x10\n  8639: a0 = a0 << 0x18\n  8642: a0 = a0 | s1\n  8645: a0 = a0 | a4\n  8648: a0 = a0 << 0x20\n  8651: a0 = a0 | a1\n  8654: s1 = reverse a0\n  8656: a1 = reverse a3\n  8658: a2 = reverse a2\n  8660: a0 = reverse t0\n  8662: u64 [sp + 0x58] = a0\n  8665: u64 [sp + 0x50] = a2\n  8668: a0 = a0 | a2\n  8671: u64 [sp + 0x120] = a1\n  8675: a1 = a1 | s1\n  8678: a1 = a1 | a0\n  8681: a1 = a1 >> 0x20\n  8684: a0 = a0 | s1\n  8687: a0 = a0 << 0x20\n  8690: a0 = a0 | a1\n  8693: jump @149 if a0 != 0\n      : @137 (gas: 4)\n  8697: a0 = i32 [sp + 0x120]\n  8701: a1 = 0x20\n  8704: u64 [sp + 0x60] = a0\n  8707: ra = 130, jump @0\n      : @138 [@dyn 65] (gas: 68)\n  8713: a1 = u64 [sp + 0xb8]\n  8717: u8 [a0 + 0x10] = a1\n  8720: a1 = u64 [sp + 0x88]\n  8724: u8 [a0 + 0xf] = a1\n  8727: a1 = u64 [sp + 0x80]\n  8731: u8 [a0 + 0xe] = a1\n  8734: a1 = u64 [sp + 0x78]\n  8737: u8 [a0 + 0xd] = a1\n  8740: a1 = u64 [sp + 0x70]\n  8743: u8 [a0 + 0xc] = a1\n  8746: a1 = u64 [sp + 0x38]\n  8749: u8 [a0 + 0xb] = a1\n  8752: a1 = u64 [sp + 0x30]\n  8755: u8 [a0 + 0xa] = a1\n  8758: a1 = u64 [sp + 0x28]\n  8761: u8 [a0 + 0x9] = a1\n  8764: a1 = u64 [sp + 0xd0]\n  8768: u8 [a0 + 0x8] = a1\n  8771: a1 = u64 [sp + 0xd8]\n  8775: u8 [a0 + 0x18] = a1\n  8778: a1 = u64 [sp + 0xc8]\n  8782: u8 [a0 + 0x17] = a1\n  8785: a1 = u64 [sp + 0xc0]\n  8789: u8 [a0 + 0x16] = a1\n  8792: a1 = u64 [sp + 0xb0]\n  8796: u8 [a0 + 0x15] = a1\n  8799: a1 = u64 [sp + 0xa8]\n  8803: u8 [a0 + 0x14] = a1\n  8806: a1 = u64 [sp + 0xa0]\n  8810: u8 [a0 + 0x13] = a1\n  8813: a1 = u64 [sp + 0x98]\n  8817: u8 [a0 + 0x12] = a1\n  8820: a1 = u64 [sp + 0x90]\n  8824: u8 [a0 + 0x11] = a1\n  8827: a1 = u64 [sp + 0x108]\n  8831: u8 [a0 + 0x1f] = a1\n  8834: a1 = u64 [sp + 0x100]\n  8838: u8 [a0 + 0x1e] = a1\n  8841: a1 = u64 [sp + 0xf8]\n  8845: u8 [a0 + 0x1d] = a1\n  8848: a1 = u64 [sp + 0xf0]\n  8852: u8 [a0 + 0x1c] = a1\n  8855: a1 = u64 [sp + 0xe8]\n  8859: u8 [a0 + 0x1b] = a1\n  8862: a1 = u64 [sp + 0xe0]\n  8866: u8 [a0 + 0x1a] = a1\n  8869: u8 [a0 + 7] = 0\n  8872: u8 [a0 + 6] = 0\n  8875: u8 [a0 + 5] = 0\n  8878: u8 [a0 + 4] = 0\n  8881: u8 [a0 + 3] = 0\n  8884: u8 [a0 + 2] = 0\n  8887: u8 [a0 + 1] = 0\n  8890: a1 = u64 [sp + 0x110]\n  8894: u8 [a0 + 0x19] = a1\n  8897: a2 = u64 [sp + 0x50]\n  8900: a2 = a2 | s1\n  8903: a1 = 0x100000000\n  8913: u64 [sp + 0x108] = a1\n  8917: a1 = 0xffffffe0\n  8927: a3 = u64 [sp + 0x120]\n  8931: a1 = a3 <u a1\n  8934: s1 = u64 [sp + 0x58]\n  8937: a1 = 0 if s1 != 0\n  8939: u64 [sp + 0x110] = a2\n  8943: a1 = 0 if a2 != 0\n  8945: u8 [a0 + 0] = 0\n  8947: jump @149 if a1 == 0\n      : @139 (gas: 4)\n  8951: a0 = u64 [sp + 0x60]\n  8954: i32 a0 = a0 + 0x20\n  8957: a1 = 0x20\n  8960: ra = 132, jump @0\n      : @140 [@dyn 66] (gas: 76)\n  8966: a1 = u64 [sp + 0x128]\n  8970: a1 = reverse a1\n  8972: a2 = u64 [sp + 0x118]\n  8976: a2 = reverse a2\n  8978: a3 = u64 [sp + 0x130]\n  8982: a3 = reverse a3\n  8984: a4 = u64 [sp + 0x138]\n  8988: a4 = reverse a4\n  8990: a5 = a4 >> 0x38\n  8993: u8 [a0 + 0x1f] = a5\n  8996: a5 = a4 >> 0x30\n  8999: u8 [a0 + 0x1e] = a5\n  9002: a5 = a4 >> 0x28\n  9005: u8 [a0 + 0x1d] = a5\n  9008: a5 = a4 >> 0x20\n  9011: u8 [a0 + 0x1c] = a5\n  9014: a5 = a4 >> 0x18\n  9017: u8 [a0 + 0x1b] = a5\n  9020: a5 = a4 >> 0x10\n  9023: u8 [a0 + 0x1a] = a5\n  9026: a5 = a4 >> 0x8\n  9029: u8 [a0 + 0x19] = a5\n  9032: u8 [a0 + 0x18] = a4\n  9035: u8 [a0 + 0x10] = a3\n  9038: a4 = a3 >> 0x38\n  9041: u8 [a0 + 0x17] = a4\n  9044: a4 = a3 >> 0x30\n  9047: u8 [a0 + 0x16] = a4\n  9050: a4 = a3 >> 0x28\n  9053: u8 [a0 + 0x15] = a4\n  9056: a4 = a3 >> 0x20\n  9059: u8 [a0 + 0x14] = a4\n  9062: a4 = a3 >> 0x18\n  9065: u8 [a0 + 0x13] = a4\n  9068: a4 = a3 >> 0x10\n  9071: u8 [a0 + 0x12] = a4\n  9074: a3 = a3 >> 0x8\n  9077: u8 [a0 + 0x11] = a3\n  9080: u8 [a0 + 0x8] = a2\n  9083: a3 = a2 >> 0x38\n  9086: u8 [a0 + 0xf] = a3\n  9089: a3 = a2 >> 0x30\n  9092: u8 [a0 + 0xe] = a3\n  9095: a3 = a2 >> 0x28\n  9098: u8 [a0 + 0xd] = a3\n  9101: a3 = a2 >> 0x20\n  9104: u8 [a0 + 0xc] = a3\n  9107: a3 = a2 >> 0x18\n  9110: u8 [a0 + 0xb] = a3\n  9113: a3 = a2 >> 0x10\n  9116: u8 [a0 + 0xa] = a3\n  9119: a2 = a2 >> 0x8\n  9122: u8 [a0 + 0x9] = a2\n  9125: u8 [a0] = a1\n  9127: a2 = a1 >> 0x38\n  9130: u8 [a0 + 0x7] = a2\n  9133: a2 = a1 >> 0x30\n  9136: u8 [a0 + 0x6] = a2\n  9139: a2 = a1 >> 0x28\n  9142: u8 [a0 + 0x5] = a2\n  9145: a2 = a1 >> 0x20\n  9148: u8 [a0 + 0x4] = a2\n  9151: a2 = a1 >> 0x18\n  9154: u8 [a0 + 0x3] = a2\n  9157: a2 = a1 >> 0x10\n  9160: u8 [a0 + 0x2] = a2\n  9163: a1 = a1 >> 0x8\n  9166: a2 = u64 [sp + 0x108]\n  9170: a2 = a2 + 0xffffffffffffffc0\n  9173: a3 = u64 [sp + 0x120]\n  9177: a2 = a3 <u a2\n  9180: a2 = 0 if s1 != 0\n  9182: a3 = u64 [sp + 0x110]\n  9186: a2 = 0 if a3 != 0\n  9188: u8 [a0 + 0x1] = a1\n  9191: jump @149 if a2 == 0\n      : @141 (gas: 18)\n  9195: a0 = u64 [sp + 0x40]\n  9198: a0 = reverse a0\n  9200: a1 = a0 << 0x20\n  9203: a2 = u64 [sp + 0x48]\n  9206: a2 = reverse a2\n  9208: a2 = a2 >> 0x20\n  9211: a1 = a1 | a2\n  9214: u64 [sp + 0x138] = a1\n  9218: a1 = u64 [sp + 0x68]\n  9221: a1 = reverse a1\n  9223: a1 = a1 << 0x20\n  9226: a0 = a0 >> 0x20\n  9229: a0 = a0 | a1\n  9232: u64 [sp + 0x130] = a0\n  9236: s1 = u64 [sp + 0x60]\n  9239: i32 a0 = s1 + 0x40\n  9242: a1 = 0x20\n  9245: ra = 134, jump @0\n      : @142 [@dyn 67] (gas: 71)\n  9251: a1 = u64 [sp + 0x8]\n  9254: a1 = reverse a1\n  9256: a2 = u64 [sp + 0x10]\n  9259: a2 = reverse a2\n  9261: a3 = u64 [sp + 0x18]\n  9264: a3 = reverse a3\n  9266: a4 = u64 [sp + 0x20]\n  9269: a4 = reverse a4\n  9271: a5 = a4 >> 0x38\n  9274: u8 [a0 + 0x1f] = a5\n  9277: a5 = a4 >> 0x30\n  9280: u8 [a0 + 0x1e] = a5\n  9283: a5 = a4 >> 0x28\n  9286: u8 [a0 + 0x1d] = a5\n  9289: a5 = a4 >> 0x20\n  9292: u8 [a0 + 0x1c] = a5\n  9295: a5 = a4 >> 0x18\n  9298: u8 [a0 + 0x1b] = a5\n  9301: a5 = a4 >> 0x10\n  9304: u8 [a0 + 0x1a] = a5\n  9307: a5 = a4 >> 0x8\n  9310: u8 [a0 + 0x19] = a5\n  9313: u8 [a0 + 0x18] = a4\n  9316: u8 [a0 + 0x10] = a3\n  9319: a4 = a3 >> 0x38\n  9322: u8 [a0 + 0x17] = a4\n  9325: a4 = a3 >> 0x30\n  9328: u8 [a0 + 0x16] = a4\n  9331: a4 = a3 >> 0x28\n  9334: u8 [a0 + 0x15] = a4\n  9337: a4 = a3 >> 0x20\n  9340: u8 [a0 + 0x14] = a4\n  9343: a4 = a3 >> 0x18\n  9346: u8 [a0 + 0x13] = a4\n  9349: a4 = a3 >> 0x10\n  9352: u8 [a0 + 0x12] = a4\n  9355: a3 = a3 >> 0x8\n  9358: u8 [a0 + 0x11] = a3\n  9361: u8 [a0 + 0x8] = a2\n  9364: a3 = a2 >> 0x38\n  9367: u8 [a0 + 0xf] = a3\n  9370: a3 = a2 >> 0x30\n  9373: u8 [a0 + 0xe] = a3\n  9376: a3 = a2 >> 0x28\n  9379: u8 [a0 + 0xd] = a3\n  9382: a3 = a2 >> 0x20\n  9385: u8 [a0 + 0xc] = a3\n  9388: a3 = a2 >> 0x18\n  9391: u8 [a0 + 0xb] = a3\n  9394: a3 = a2 >> 0x10\n  9397: u8 [a0 + 0xa] = a3\n  9400: a2 = a2 >> 0x8\n  9403: u8 [a0 + 0x9] = a2\n  9406: u8 [a0] = a1\n  9408: a2 = a1 >> 0x38\n  9411: u8 [a0 + 0x7] = a2\n  9414: a2 = a1 >> 0x30\n  9417: u8 [a0 + 0x6] = a2\n  9420: a2 = a1 >> 0x28\n  9423: u8 [a0 + 0x5] = a2\n  9426: a2 = a1 >> 0x20\n  9429: u8 [a0 + 0x4] = a2\n  9432: a2 = a1 >> 0x18\n  9435: u8 [a0 + 0x3] = a2\n  9438: a2 = a1 >> 0x10\n  9441: u8 [a0 + 0x2] = a2\n  9444: a1 = a1 >> 0x8\n  9447: u8 [a0 + 0x1] = a1\n  9450: a1 = 0x60\n  9453: a0 = s1\n  9455: ra = 136, jump @0\n      : @143 [@dyn 68] (gas: 29)\n  9461: a1 = u64 [0x20000]\n  9466: a2 = u64 [0x20008]\n  9471: a3 = u64 [0x20010]\n  9476: a4 = u64 [0x20018]\n  9481: u64 [sp + 0x238] = a1\n  9485: u64 [sp + 0x230] = a2\n  9489: u64 [sp + 0x228] = a3\n  9493: u64 [sp + 0x220] = a4\n  9497: a1 = u64 [sp + 0x130]\n  9501: a1 = reverse a1\n  9503: a2 = u64 [sp + 0x138]\n  9507: a2 = reverse a2\n  9509: a3 = u64 [sp + 0x68]\n  9512: a3 = a3 << 0x20\n  9515: u64 [sp + 0x258] = a2\n  9519: u64 [sp + 0x250] = a1\n  9523: u64 [sp + 0x248] = a3\n  9527: u64 [sp + 576] = 0\n  9531: i32 a2 = a0 + 0\n  9533: i32 a0 = sp + 0x220\n  9537: a1 = 0x2\n  9540: a3 = 0x60\n  9543: ecalli 6 // 'deposit_event'\n  9545: sp = s0 + 0xfffffffffffffd80\n  9549: ra = u64 [sp + 0x278]\n  9553: s0 = u64 [sp + 0x270]\n  9557: s1 = u64 [sp + 0x268]\n  9561: sp = sp + 0x280\n  9565: ret\n      : @144 (gas: 3)\n  9567: a0 = 0x40\n  9570: a1 = 0x20\n  9573: ra = 138, jump @0\n      : @145 [@dyn 69] (gas: 103)\n  9579: a1 = u8 [a0 + 0x11]\n  9582: a2 = u8 [a0 + 0x10]\n  9585: a3 = u8 [a0 + 0x12]\n  9588: a4 = u8 [a0 + 0x13]\n  9591: a1 = a1 << 0x8\n  9594: a1 = a1 | a2\n  9597: a3 = a3 << 0x10\n  9600: a4 = a4 << 0x18\n  9603: a3 = a3 | a4\n  9606: a1 = a1 | a3\n  9609: a2 = u8 [a0 + 0x15]\n  9612: a3 = u8 [a0 + 0x14]\n  9615: a4 = u8 [a0 + 0x16]\n  9618: a5 = u8 [a0 + 0x17]\n  9621: a2 = a2 << 0x8\n  9624: a2 = a2 | a3\n  9627: a4 = a4 << 0x10\n  9630: a5 = a5 << 0x18\n  9633: a4 = a4 | a5\n  9636: a2 = a2 | a4\n  9639: a2 = a2 << 0x20\n  9642: t0 = a2 | a1\n  9645: a2 = u8 [a0 + 0x1]\n  9648: a3 = u8 [a0]\n  9650: a4 = u8 [a0 + 0x2]\n  9653: a5 = u8 [a0 + 0x3]\n  9656: a2 = a2 << 0x8\n  9659: a2 = a2 | a3\n  9662: a4 = a4 << 0x10\n  9665: a5 = a5 << 0x18\n  9668: a4 = a4 | a5\n  9671: a2 = a2 | a4\n  9674: a3 = u8 [a0 + 0x5]\n  9677: a4 = u8 [a0 + 0x4]\n  9680: a5 = u8 [a0 + 0x6]\n  9683: s1 = u8 [a0 + 0x7]\n  9686: a3 = a3 << 0x8\n  9689: a3 = a3 | a4\n  9692: a5 = a5 << 0x10\n  9695: s1 = s1 << 0x18\n  9698: a5 = a5 | s1\n  9701: a3 = a3 | a5\n  9704: a3 = a3 << 0x20\n  9707: a2 = a2 | a3\n  9710: a3 = u8 [a0 + 0x19]\n  9713: a4 = u8 [a0 + 0x18]\n  9716: a5 = u8 [a0 + 0x1a]\n  9719: s1 = u8 [a0 + 0x1b]\n  9722: a3 = a3 << 0x8\n  9725: a3 = a3 | a4\n  9728: a5 = a5 << 0x10\n  9731: s1 = s1 << 0x18\n  9734: a5 = a5 | s1\n  9737: a3 = a3 | a5\n  9740: a4 = u8 [a0 + 0x1d]\n  9743: a5 = u8 [a0 + 0x1c]\n  9746: s1 = u8 [a0 + 0x1e]\n  9749: a1 = u8 [a0 + 0x1f]\n  9752: a4 = a4 << 0x8\n  9755: a4 = a4 | a5\n  9758: s1 = s1 << 0x10\n  9761: a1 = a1 << 0x18\n  9764: a1 = a1 | s1\n  9767: a1 = a1 | a4\n  9770: a1 = a1 << 0x20\n  9773: a3 = a3 | a1\n  9776: a1 = u8 [a0 + 0x9]\n  9779: a4 = u8 [a0 + 0x8]\n  9782: a5 = u8 [a0 + 0xa]\n  9785: s1 = u8 [a0 + 0xb]\n  9788: a1 = a1 << 0x8\n  9791: a1 = a1 | a4\n  9794: a5 = a5 << 0x10\n  9797: s1 = s1 << 0x18\n  9800: a5 = a5 | s1\n  9803: a1 = a1 | a5\n  9806: a4 = u8 [a0 + 0xd]\n  9809: a5 = u8 [a0 + 0xc]\n  9812: s1 = u8 [a0 + 0xe]\n  9815: a0 = u8 [a0 + 0xf]\n  9818: a4 = a4 << 0x8\n  9821: a4 = a4 | a5\n  9824: s1 = s1 << 0x10\n  9827: a0 = a0 << 0x18\n  9830: a0 = a0 | s1\n  9833: a0 = a0 | a4\n  9836: a0 = a0 << 0x20\n  9839: a0 = a0 | a1\n  9842: s1 = reverse a0\n  9844: a1 = reverse a3\n  9846: a2 = reverse a2\n  9848: a0 = reverse t0\n  9850: u64 [sp + 0x138] = a0\n  9854: u64 [sp + 0x130] = a2\n  9858: a0 = a0 | a2\n  9861: a2 = a1\n  9863: a1 = a1 | s1\n  9866: a1 = a1 | a0\n  9869: a1 = a1 >> 0x20\n  9872: a0 = a0 | s1\n  9875: a0 = a0 << 0x20\n  9878: a0 = a0 | a1\n  9881: jump @149 if a0 != 0\n      : @146 (gas: 5)\n  9885: u64 [sp + 0x128] = a2\n  9889: i32 a0 = a2 + 0\n  9891: a1 = 0x20\n  9894: u64 [sp + 0x120] = a0\n  9898: ra = 140, jump @0\n      : @147 [@dyn 70] (gas: 50)\n  9904: u8 [a0 + 31] = 0\n  9907: u8 [a0 + 30] = 0\n  9910: u8 [a0 + 29] = 0\n  9913: u8 [a0 + 28] = 0\n  9916: u8 [a0 + 27] = 0\n  9919: u8 [a0 + 26] = 0\n  9922: u8 [a0 + 25] = 0\n  9925: u8 [a0 + 24] = 0\n  9928: u8 [a0 + 23] = 0\n  9931: u8 [a0 + 22] = 0\n  9934: u8 [a0 + 21] = 0\n  9937: u8 [a0 + 20] = 0\n  9940: u8 [a0 + 19] = 0\n  9943: u8 [a0 + 18] = 0\n  9946: u8 [a0 + 17] = 0\n  9949: u8 [a0 + 16] = 0\n  9952: u8 [a0 + 15] = 0\n  9955: u8 [a0 + 14] = 0\n  9958: u8 [a0 + 13] = 0\n  9961: u8 [a0 + 12] = 0\n  9964: u8 [a0 + 11] = 0\n  9967: u8 [a0 + 10] = 0\n  9970: u8 [a0 + 9] = 0\n  9973: u8 [a0 + 8] = 0\n  9976: u8 [a0 + 7] = 0\n  9979: u8 [a0 + 6] = 0\n  9982: u8 [a0 + 5] = 0\n  9985: u8 [a0 + 4] = 0\n  9988: u8 [a0 + 3] = 0xa0\n  9993: u8 [a0 + 2] = 0x79\n  9997: u8 [a0 + 1] = 0xc3\n 10002: u8 [a0 + 0] = 0x8\n 10005: a1 = u64 [sp + 0x128]\n 10009: a0 = a1 + 0x4\n 10012: a1 = a0 <u a1\n 10015: a3 = u64 [sp + 0x138]\n 10019: a2 = a3 + a1\n 10022: a3 = a2 <u a3\n 10025: a3 = a1 if a1 == 0\n 10028: a3 = a3 + s1\n 10031: a1 = a3 <u s1\n 10034: a4 = u64 [sp + 0x130]\n 10038: a4 = a4 + a1\n 10041: u64 [sp + 0x148] = a2\n 10045: u64 [sp + 0x140] = a0\n 10049: u64 [sp + 0x150] = a3\n 10053: a0 = sp + 0x160\n 10057: a1 = sp + 0x140\n 10061: u64 [sp + 0x158] = a4\n 10065: ra = 142, jump @114\n      : @148 [@dyn 71] (gas: 30)\n 10071: a0 = u64 [sp + 0x168]\n 10075: t0 = u64 [sp + 0x178]\n 10079: t1 = u64 [sp + 0x160]\n 10083: a3 = u64 [sp + 0x170]\n 10087: a1 = u64 [sp + 0x138]\n 10091: a4 = a0 ^ a1\n 10094: a5 = a0 <u a1\n 10097: t2 = a1\n 10099: a2 = u64 [sp + 0x128]\n 10103: a1 = t1 <u a2\n 10106: a5 = a1 if a4 == 0\n 10109: a4 = a3 - s1\n 10112: a3 = a3 <u s1\n 10115: s1 = u64 [sp + 0x130]\n 10119: s1 = t0 - s1\n 10122: s1 = s1 - a3\n 10125: a3 = a4 <u a5\n 10128: s1 = s1 - a3\n 10131: a4 = a4 - a5\n 10134: a0 = a0 - t2\n 10137: a1 = a0 - a1\n 10140: a0 = t1 - a2\n 10143: a1 = a1 | s1\n 10146: a2 = a0 | a4\n 10149: a2 = a2 | a1\n 10152: a1 = a1 | a4\n 10155: a2 = a2 >> 0x20\n 10158: a1 = a1 << 0x20\n 10161: a1 = a1 | a2\n 10164: jump @150 if a1 == 0\n      : @149 (gas: 1)\n 10167: trap\n      : @150 (gas: 4)\n 10168: i32 s1 = a0 + 0\n 10170: a0 = u64 [sp + 0x120]\n 10174: a1 = s1\n 10176: ra = 144, jump @0\n      : @151 [@dyn 72] (gas: 6)\n 10182: i32 a1 = a0 + 0\n 10184: a0 = 0x1\n 10187: a2 = s1\n 10189: ra = 0x92\n 10193: ecalli 12 // 'seal_return'\n 10195: fallthrough\n      : @152 [@dyn 73] (gas: 18)\n 10196: a2 = u64 [a1]\n 10198: t0 = u64 [a1 + 0x18]\n 10201: a4 = u64 [a1 + 0x8]\n 10204: a1 = u64 [a1 + 0x10]\n 10207: a5 = a2 + 0x1f\n 10210: a2 = a5 <u a2\n 10213: a3 = a4 + a2\n 10216: a4 = a3 <u a4\n 10219: a4 = a2 if a2 == 0\n 10222: a4 = a4 + a1\n 10225: a1 = a4 <u a1\n 10228: a1 = a1 + t0\n 10231: a5 = a5 & 0xffffffffffffffe0\n 10234: u64 [a0] = a5\n 10236: u64 [a0 + 0x8] = a3\n 10239: u64 [a0 + 0x10] = a4\n 10242: u64 [a0 + 0x18] = a1\n 10245: ret\n      : @153 [@dyn 74] (gas: 97)\n 10247: a1 = u8 [a0 + 0x11]\n 10250: a2 = u8 [a0 + 0x10]\n 10253: a3 = u8 [a0 + 0x12]\n 10256: a4 = u8 [a0 + 0x13]\n 10259: a1 = a1 << 0x8\n 10262: a1 = a1 | a2\n 10265: a3 = a3 << 0x10\n 10268: a4 = a4 << 0x18\n 10271: a3 = a3 | a4\n 10274: a1 = a1 | a3\n 10277: a2 = u8 [a0 + 0x15]\n 10280: a3 = u8 [a0 + 0x14]\n 10283: a4 = u8 [a0 + 0x16]\n 10286: a5 = u8 [a0 + 0x17]\n 10289: a2 = a2 << 0x8\n 10292: a2 = a2 | a3\n 10295: a4 = a4 << 0x10\n 10298: a5 = a5 << 0x18\n 10301: a4 = a4 | a5\n 10304: a2 = a2 | a4\n 10307: a2 = a2 << 0x20\n 10310: t0 = a2 | a1\n 10313: a2 = u8 [a0 + 0x1]\n 10316: a3 = u8 [a0]\n 10318: a4 = u8 [a0 + 0x2]\n 10321: a5 = u8 [a0 + 0x3]\n 10324: a2 = a2 << 0x8\n 10327: a2 = a2 | a3\n 10330: a4 = a4 << 0x10\n 10333: a5 = a5 << 0x18\n 10336: a4 = a4 | a5\n 10339: a2 = a2 | a4\n 10342: a3 = u8 [a0 + 0x5]\n 10345: a4 = u8 [a0 + 0x4]\n 10348: a5 = u8 [a0 + 0x6]\n 10351: s1 = u8 [a0 + 0x7]\n 10354: a3 = a3 << 0x8\n 10357: a3 = a3 | a4\n 10360: a5 = a5 << 0x10\n 10363: s1 = s1 << 0x18\n 10366: a5 = a5 | s1\n 10369: a3 = a3 | a5\n 10372: a3 = a3 << 0x20\n 10375: a2 = a2 | a3\n 10378: a3 = u8 [a0 + 0x19]\n 10381: a4 = u8 [a0 + 0x18]\n 10384: a5 = u8 [a0 + 0x1a]\n 10387: s1 = u8 [a0 + 0x1b]\n 10390: a3 = a3 << 0x8\n 10393: a3 = a3 | a4\n 10396: a5 = a5 << 0x10\n 10399: s1 = s1 << 0x18\n 10402: a5 = a5 | s1\n 10405: a3 = a3 | a5\n 10408: a4 = u8 [a0 + 0x1d]\n 10411: a5 = u8 [a0 + 0x1c]\n 10414: s1 = u8 [a0 + 0x1e]\n 10417: a1 = u8 [a0 + 0x1f]\n 10420: a4 = a4 << 0x8\n 10423: a4 = a4 | a5\n 10426: s1 = s1 << 0x10\n 10429: a1 = a1 << 0x18\n 10432: a1 = a1 | s1\n 10435: a1 = a1 | a4\n 10438: a1 = a1 << 0x20\n 10441: a3 = a3 | a1\n 10444: a1 = u8 [a0 + 0x9]\n 10447: a4 = u8 [a0 + 0x8]\n 10450: a5 = u8 [a0 + 0xa]\n 10453: s1 = u8 [a0 + 0xb]\n 10456: a1 = a1 << 0x8\n 10459: a1 = a1 | a4\n 10462: a5 = a5 << 0x10\n 10465: s1 = s1 << 0x18\n 10468: a5 = a5 | s1\n 10471: a1 = a1 | a5\n 10474: a4 = u8 [a0 + 0xd]\n 10477: a5 = u8 [a0 + 0xc]\n 10480: s1 = u8 [a0 + 0xe]\n 10483: a0 = u8 [a0 + 0xf]\n 10486: a4 = a4 << 0x8\n 10489: a4 = a4 | a5\n 10492: s1 = s1 << 0x10\n 10495: a0 = a0 << 0x18\n 10498: a0 = a0 | s1\n 10501: a0 = a0 | a4\n 10504: a0 = a0 << 0x20\n 10507: a0 = a0 | a1\n 10510: s1 = reverse a0\n 10512: a0 = reverse a3\n 10514: u64 [sp + 0x8] = a0\n 10517: a0 = reverse a2\n 10519: u64 [sp + 0x18] = a0\n 10522: a0 = reverse t0\n 10524: u64 [sp + 0x10] = a0\n 10527: ecalli 11 // 'return_data_size'\n 10529: fallthrough\n      : @154 (gas: 11)\n 10530: a3 = u64 [sp + 0x8]\n 10533: a1 = u64 [sp + 0x18]\n 10536: a2 = u64 [sp + 0x10]\n 10539: a1 = a1 | a2\n 10542: a2 = a3 | s1\n 10545: a2 = a2 | a1\n 10548: a2 = a2 >> 0x20\n 10551: a1 = a1 | s1\n 10554: a1 = a1 << 0x20\n 10557: a1 = a1 | a2\n 10560: jump @161 if a1 != 0\n      : @155 (gas: 3)\n 10563: s1 = a0\n 10565: a0 = a0 >> 0x20\n 10568: jump @161 if a0 != 0\n      : @156 (gas: 5)\n 10571: i32 a0 = a3 + 0\n 10573: i32 a1 = s1 + 0\n 10575: u64 [sp + 0x18] = a1\n 10578: u64 [sp + 0x10] = a0\n 10581: ra = 150, jump @0\n      : @157 [@dyn 75] (gas: 6)\n 10587: u32 [sp + 0x20] = s1\n 10590: i32 a0 = a0 + 0\n 10592: i32 a1 = sp + 0x20\n 10595: a2 = 0\n 10597: ecalli 10 // 'return_data_copy'\n 10599: fallthrough\n      : @158 (gas: 3)\n 10600: a0 = i32 [sp + 0x20]\n 10603: a1 = u64 [sp + 0x18]\n 10606: jump @161 if a0 <u a1\n      : @159 (gas: 2)\n 10609: ecalli 11 // 'return_data_size'\n 10611: fallthrough\n      : @160 (gas: 2)\n 10612: a1 = a0 >> 0x20\n 10615: jump @162 if a1 == 0\n      : @161 (gas: 1)\n 10618: trap\n      : @162 (gas: 4)\n 10619: i32 s1 = a0 + 0\n 10621: a0 = u64 [sp + 0x10]\n 10624: a1 = s1\n 10626: ra = 152, jump @0\n      : @163 [@dyn 76] (gas: 6)\n 10632: i32 a1 = a0 + 0\n 10634: a0 = 0x1\n 10637: a2 = s1\n 10639: ra = 0x9a\n 10643: ecalli 12 // 'seal_return'\n 10645: fallthrough\n      : @164 [@dyn 77] (gas: 12)\n 10646: a1 = u64 [a0 + 0x10]\n 10649: a2 = u64 [a0 + 0x18]\n 10652: a3 = u64 [a0 + 0x8]\n 10655: a0 = u64 [a0]\n 10657: a2 = a2 | a3\n 10660: a3 = a0 | a1\n 10663: a3 = a3 | a2\n 10666: a3 = a3 >> 0x20\n 10669: a1 = a1 | a2\n 10672: a1 = a1 << 0x20\n 10675: a1 = a1 | a3\n 10678: jump @167 if a1 != 0\n      : @165 (gas: 7)\n 10682: sp = sp + 0xfffffffffffffff0\n 10685: u64 [sp + 0x8] = ra\n 10688: u64 [sp] = s0\n 10690: i32 a0 = a0 + 0\n 10692: a1 = 0x20\n 10695: s0 = 0x20\n 10698: ra = 156, jump @0\n      : @166 [@dyn 78] (gas: 40)\n 10704: u8 [a0 + 31] = 0\n 10707: u8 [a0 + 30] = 0\n 10710: u8 [a0 + 29] = 0\n 10713: u8 [a0 + 28] = 0\n 10716: u8 [a0 + 27] = 0\n 10719: u8 [a0 + 26] = 0\n 10722: u8 [a0 + 25] = 0\n 10725: u8 [a0 + 24] = 0\n 10728: u8 [a0 + 23] = 0\n 10731: u8 [a0 + 22] = 0\n 10734: u8 [a0 + 21] = 0\n 10737: u8 [a0 + 20] = 0x64\n 10741: u8 [a0 + 19] = 0x65\n 10745: u8 [a0 + 18] = 0x6c\n 10749: u8 [a0 + 17] = 0x69\n 10753: a2 = 0x61\n 10756: u8 [a0 + 0x10] = a2\n 10759: a3 = 0x66\n 10762: u8 [a0 + 0xf] = a3\n 10765: u8 [a0 + 0xe] = s0\n 10768: a4 = 0x72\n 10771: u8 [a0 + 0xd] = a4\n 10774: u8 [a0 + 12] = 0x65\n 10778: u8 [a0 + 0xb] = a3\n 10781: u8 [a0 + 10] = 0x73\n 10785: u8 [a0 + 9] = 0x6e\n 10789: u8 [a0 + 0x8] = a2\n 10792: u8 [a0 + 0x7] = a4\n 10795: u8 [a0 + 6] = 0x74\n 10799: u8 [a0 + 0x5] = s0\n 10802: u8 [a0 + 4] = 0x30\n 10806: u8 [a0 + 3] = 0x32\n 10810: u8 [a0 + 2] = 0x43\n 10814: u8 [a0 + 1] = 0x52\n 10818: a1 = 0x45\n 10821: u8 [a0] = a1\n 10823: ra = u64 [sp + 0x8]\n 10826: s0 = u64 [sp]\n 10828: sp = sp + 0x10\n 10831: ret\n      : @167 (gas: 1)\n 10833: trap\n      : @168 (gas: 17)\n 10834: sp = sp + 0xffffffffffffffa0\n 10837: u64 [sp + 0x58] = ra\n 10840: u64 [sp + 0x50] = s0\n 10843: u64 [sp + 0x48] = s1\n 10846: a3 = u64 [a1 + 0x18]\n 10849: a4 = u64 [a1 + 0x10]\n 10852: a5 = u64 [a1 + 0x8]\n 10855: s1 = u64 [a1]\n 10857: a1 = a5 | a3\n 10860: a2 = s1 | a4\n 10863: a2 = a2 | a1\n 10866: a2 = a2 >> 0x20\n 10869: a1 = a1 | a4\n 10872: a1 = a1 << 0x20\n 10875: a1 = a1 | a2\n 10878: u64 [sp + 0x28] = a0\n 10881: jump @175 if a1 != 0\n      : @169 (gas: 19)\n 10885: a0 = s1 + 0x20\n 10888: u64 [sp + 0x30] = a0\n 10891: a0 = a0 <u s1\n 10894: a1 = a5 + a0\n 10897: u64 [sp + 0x40] = a1\n 10900: u64 [sp + 0x8] = a5\n 10903: s0 = a1 <u a5\n 10906: s0 = a0 if a0 == 0\n 10909: s0 = s0 + a4\n 10912: u64 [sp + 0x10] = a4\n 10915: a0 = s0 <u a4\n 10918: u64 [sp + 0x18] = a3\n 10921: a0 = a0 + a3\n 10924: u64 [sp + 0x38] = a0\n 10927: u64 [sp] = s1\n 10929: i32 a0 = s1 + 0\n 10931: a1 = 0x20\n 10934: s1 = 0x20\n 10937: ra = 158, jump @0\n      : @170 [@dyn 79] (gas: 45)\n 10943: u8 [a0 + 0x1f] = s1\n 10946: a1 = u64 [sp + 0x30]\n 10949: s1 = a1\n 10951: a1 = a1 | s0\n 10954: a2 = u64 [sp + 0x40]\n 10957: a4 = u64 [sp + 0x38]\n 10960: a2 = a2 | a4\n 10963: a1 = a1 | a2\n 10966: a1 = a1 >> 0x20\n 10969: u64 [sp + 0x20] = s0\n 10972: a2 = a2 | s0\n 10975: a2 = a2 << 0x20\n 10978: a1 = a1 | a2\n 10981: u8 [a0 + 30] = 0\n 10984: u8 [a0 + 29] = 0\n 10987: u8 [a0 + 28] = 0\n 10990: u8 [a0 + 27] = 0\n 10993: u8 [a0 + 26] = 0\n 10996: u8 [a0 + 25] = 0\n 10999: u8 [a0 + 24] = 0\n 11002: u8 [a0 + 23] = 0\n 11005: u8 [a0 + 22] = 0\n 11008: u8 [a0 + 21] = 0\n 11011: u8 [a0 + 20] = 0\n 11014: u8 [a0 + 19] = 0\n 11017: u8 [a0 + 18] = 0\n 11020: u8 [a0 + 17] = 0\n 11023: u8 [a0 + 16] = 0\n 11026: u8 [a0 + 15] = 0\n 11029: u8 [a0 + 14] = 0\n 11032: u8 [a0 + 13] = 0\n 11035: u8 [a0 + 12] = 0\n 11038: u8 [a0 + 11] = 0\n 11041: u8 [a0 + 10] = 0\n 11044: u8 [a0 + 9] = 0\n 11047: u8 [a0 + 8] = 0\n 11050: u8 [a0 + 7] = 0\n 11053: u8 [a0 + 6] = 0\n 11056: u8 [a0 + 5] = 0\n 11059: u8 [a0 + 4] = 0\n 11062: u8 [a0 + 3] = 0\n 11065: u8 [a0 + 2] = 0\n 11068: u8 [a0 + 1] = 0\n 11071: u8 [a0 + 0] = 0\n 11073: jump @175 if a1 != 0\n      : @171 (gas: 4)\n 11077: i32 s0 = s1 + 0\n 11079: a1 = 0x20\n 11082: a0 = s0\n 11084: ra = 160, jump @0\n      : @172 [@dyn 80] (gas: 41)\n 11090: u8 [a0 + 31] = 0x15\n 11094: u8 [a0 + 30] = 0\n 11097: u8 [a0 + 29] = 0\n 11100: u8 [a0 + 28] = 0\n 11103: u8 [a0 + 27] = 0\n 11106: u8 [a0 + 26] = 0\n 11109: u8 [a0 + 25] = 0\n 11112: u8 [a0 + 24] = 0\n 11115: u8 [a0 + 23] = 0\n 11118: u8 [a0 + 22] = 0\n 11121: u8 [a0 + 21] = 0\n 11124: u8 [a0 + 20] = 0\n 11127: u8 [a0 + 19] = 0\n 11130: u8 [a0 + 18] = 0\n 11133: u8 [a0 + 17] = 0\n 11136: u8 [a0 + 16] = 0\n 11139: u8 [a0 + 15] = 0\n 11142: u8 [a0 + 14] = 0\n 11145: u8 [a0 + 13] = 0\n 11148: u8 [a0 + 12] = 0\n 11151: u8 [a0 + 11] = 0\n 11154: u8 [a0 + 10] = 0\n 11157: u8 [a0 + 9] = 0\n 11160: u8 [a0 + 8] = 0\n 11163: u8 [a0 + 7] = 0\n 11166: u8 [a0 + 6] = 0\n 11169: u8 [a0 + 5] = 0\n 11172: u8 [a0 + 4] = 0\n 11175: u8 [a0 + 3] = 0\n 11178: u8 [a0 + 2] = 0\n 11181: u8 [a0 + 1] = 0\n 11184: a1 = u64 [sp + 0x20]\n 11187: a2 = u64 [sp + 0x38]\n 11190: a1 = a1 | a2\n 11193: a2 = 0xffffffe0\n 11203: a2 = s1 <u a2\n 11206: a3 = u64 [sp + 0x40]\n 11209: a2 = 0 if a3 != 0\n 11211: a2 = 0 if a1 != 0\n 11213: u8 [a0 + 0] = 0\n 11215: jump @175 if a2 == 0\n      : @173 (gas: 3)\n 11219: i32 a0 = s0 + 0x20\n 11222: a1 = 0x20\n 11225: ra = 162, jump @0\n      : @174 [@dyn 81] (gas: 55)\n 11231: u8 [a0 + 31] = 0\n 11234: u8 [a0 + 30] = 0\n 11237: u8 [a0 + 29] = 0\n 11240: u8 [a0 + 28] = 0\n 11243: u8 [a0 + 27] = 0\n 11246: u8 [a0 + 26] = 0\n 11249: u8 [a0 + 25] = 0\n 11252: u8 [a0 + 24] = 0\n 11255: u8 [a0 + 23] = 0\n 11258: u8 [a0 + 22] = 0\n 11261: u8 [a0 + 21] = 0\n 11264: u8 [a0 + 20] = 0x64\n 11268: u8 [a0 + 19] = 0x65\n 11272: u8 [a0 + 18] = 0x6c\n 11276: u8 [a0 + 17] = 0x69\n 11280: u8 [a0 + 16] = 0x61\n 11284: u8 [a0 + 15] = 0x66\n 11288: a5 = 0x20\n 11291: u8 [a0 + 0xe] = a5\n 11294: u8 [a0 + 13] = 0x72\n 11298: u8 [a0 + 12] = 0x65\n 11302: u8 [a0 + 11] = 0x66\n 11306: u8 [a0 + 10] = 0x73\n 11310: u8 [a0 + 9] = 0x6e\n 11314: u8 [a0 + 8] = 0x61\n 11318: u8 [a0 + 7] = 0x72\n 11322: u8 [a0 + 6] = 0x74\n 11326: u8 [a0 + 0x5] = a5\n 11329: u8 [a0 + 4] = 0x30\n 11333: u8 [a0 + 3] = 0x32\n 11337: u8 [a0 + 2] = 0x43\n 11341: u8 [a0 + 1] = 0x52\n 11345: u8 [a0 + 0] = 0x45\n 11348: a1 = u64 [sp]\n 11350: a0 = a1 + 0x60\n 11353: a1 = a0 <u a1\n 11356: a3 = u64 [sp + 0x8]\n 11359: a2 = a3 + a1\n 11362: a3 = a2 <u a3\n 11365: a3 = a1 if a1 == 0\n 11368: a1 = u64 [sp + 0x10]\n 11371: a3 = a3 + a1\n 11374: a1 = a3 <u a1\n 11377: a4 = u64 [sp + 0x18]\n 11380: a1 = a1 + a4\n 11383: a4 = u64 [sp + 0x28]\n 11386: u64 [a4] = a0\n 11388: u64 [a4 + 0x8] = a2\n 11391: u64 [a4 + 0x10] = a3\n 11394: u64 [a4 + 0x18] = a1\n 11397: ra = u64 [sp + 0x58]\n 11400: s0 = u64 [sp + 0x50]\n 11403: s1 = u64 [sp + 0x48]\n 11406: sp = sp + 0x60\n 11409: ret\n      : @175 (gas: 1)\n 11411: trap\n      : @176 [@dyn 82] (gas: 102)\n 11412: a1 = u8 [a0 + 0x11]\n 11415: a2 = u8 [a0 + 0x10]\n 11418: a3 = u8 [a0 + 0x12]\n 11421: a4 = u8 [a0 + 0x13]\n 11424: a1 = a1 << 0x8\n 11427: a1 = a1 | a2\n 11430: a3 = a3 << 0x10\n 11433: a4 = a4 << 0x18\n 11436: a3 = a3 | a4\n 11439: a1 = a1 | a3\n 11442: a2 = u8 [a0 + 0x15]\n 11445: a3 = u8 [a0 + 0x14]\n 11448: a4 = u8 [a0 + 0x16]\n 11451: a5 = u8 [a0 + 0x17]\n 11454: a2 = a2 << 0x8\n 11457: a2 = a2 | a3\n 11460: a4 = a4 << 0x10\n 11463: a5 = a5 << 0x18\n 11466: a4 = a4 | a5\n 11469: a2 = a2 | a4\n 11472: a2 = a2 << 0x20\n 11475: t0 = a2 | a1\n 11478: a2 = u8 [a0 + 0x1]\n 11481: a3 = u8 [a0]\n 11483: a4 = u8 [a0 + 0x2]\n 11486: a5 = u8 [a0 + 0x3]\n 11489: a2 = a2 << 0x8\n 11492: a2 = a2 | a3\n 11495: a4 = a4 << 0x10\n 11498: a5 = a5 << 0x18\n 11501: a4 = a4 | a5\n 11504: a2 = a2 | a4\n 11507: a3 = u8 [a0 + 0x5]\n 11510: a4 = u8 [a0 + 0x4]\n 11513: a5 = u8 [a0 + 0x6]\n 11516: s1 = u8 [a0 + 0x7]\n 11519: a3 = a3 << 0x8\n 11522: a3 = a3 | a4\n 11525: a5 = a5 << 0x10\n 11528: s1 = s1 << 0x18\n 11531: a5 = a5 | s1\n 11534: a3 = a3 | a5\n 11537: a3 = a3 << 0x20\n 11540: a2 = a2 | a3\n 11543: a3 = u8 [a0 + 0x19]\n 11546: a4 = u8 [a0 + 0x18]\n 11549: a5 = u8 [a0 + 0x1a]\n 11552: s1 = u8 [a0 + 0x1b]\n 11555: a3 = a3 << 0x8\n 11558: a3 = a3 | a4\n 11561: a5 = a5 << 0x10\n 11564: s1 = s1 << 0x18\n 11567: a5 = a5 | s1\n 11570: a3 = a3 | a5\n 11573: a4 = u8 [a0 + 0x1d]\n 11576: a5 = u8 [a0 + 0x1c]\n 11579: s1 = u8 [a0 + 0x1e]\n 11582: a1 = u8 [a0 + 0x1f]\n 11585: a4 = a4 << 0x8\n 11588: a4 = a4 | a5\n 11591: s1 = s1 << 0x10\n 11594: a1 = a1 << 0x18\n 11597: a1 = a1 | s1\n 11600: a1 = a1 | a4\n 11603: a1 = a1 << 0x20\n 11606: a3 = a3 | a1\n 11609: a1 = u8 [a0 + 0x9]\n 11612: a4 = u8 [a0 + 0x8]\n 11615: a5 = u8 [a0 + 0xa]\n 11618: s1 = u8 [a0 + 0xb]\n 11621: a1 = a1 << 0x8\n 11624: a1 = a1 | a4\n 11627: a5 = a5 << 0x10\n 11630: s1 = s1 << 0x18\n 11633: a5 = a5 | s1\n 11636: a1 = a1 | a5\n 11639: a4 = u8 [a0 + 0xd]\n 11642: a5 = u8 [a0 + 0xc]\n 11645: s1 = u8 [a0 + 0xe]\n 11648: a0 = u8 [a0 + 0xf]\n 11651: a4 = a4 << 0x8\n 11654: a4 = a4 | a5\n 11657: s1 = s1 << 0x10\n 11660: a0 = a0 << 0x18\n 11663: a0 = a0 | s1\n 11666: a0 = a0 | a4\n 11669: a0 = a0 << 0x20\n 11672: a0 = a0 | a1\n 11675: s1 = reverse a0\n 11677: a3 = reverse a3\n 11679: a1 = reverse a2\n 11681: a0 = reverse t0\n 11683: u64 [sp + 0x198] = a0\n 11687: u64 [sp + 0x180] = a1\n 11691: a0 = a0 | a1\n 11694: a1 = a3 | s1\n 11697: a1 = a1 | a0\n 11700: a1 = a1 >> 0x20\n 11703: a0 = a0 | s1\n 11706: a0 = a0 << 0x20\n 11709: a0 = a0 | a1\n 11712: jump @178 if a0 == 0\n      : @177 (gas: 1)\n 11715: jump @219\n      : @178 (gas: 5)\n 11718: i32 a0 = a3 + 0\n 11720: a1 = 0x20\n 11723: u64 [sp + 0x188] = a0\n 11727: u64 [sp + 0x190] = a3\n 11731: ra = 166, jump @0\n      : @179 [@dyn 83] (gas: 45)\n 11737: u8 [a0 + 31] = 0\n 11740: u8 [a0 + 30] = 0\n 11743: u8 [a0 + 29] = 0\n 11746: u8 [a0 + 28] = 0\n 11749: u8 [a0 + 27] = 0\n 11752: u8 [a0 + 26] = 0\n 11755: u8 [a0 + 25] = 0\n 11758: u8 [a0 + 24] = 0\n 11761: u8 [a0 + 23] = 0\n 11764: u8 [a0 + 22] = 0\n 11767: u8 [a0 + 21] = 0\n 11770: u8 [a0 + 20] = 0\n 11773: u8 [a0 + 19] = 0\n 11776: u8 [a0 + 18] = 0\n 11779: u8 [a0 + 17] = 0\n 11782: u8 [a0 + 16] = 0\n 11785: u8 [a0 + 15] = 0\n 11788: u8 [a0 + 14] = 0\n 11791: u8 [a0 + 13] = 0\n 11794: u8 [a0 + 12] = 0\n 11797: u8 [a0 + 11] = 0\n 11800: u8 [a0 + 10] = 0\n 11803: u8 [a0 + 9] = 0\n 11806: u8 [a0 + 8] = 0\n 11809: u8 [a0 + 7] = 0\n 11812: u8 [a0 + 6] = 0\n 11815: u8 [a0 + 5] = 0\n 11818: u8 [a0 + 3] = 0xdd\n 11823: u8 [a0 + 2] = 0x72\n 11827: u8 [a0 + 1] = 0xb8\n 11832: u8 [a0 + 0] = 0x23\n 11835: u64 [sp + 0x100] = s1\n 11839: a3 = u64 [sp + 0x180]\n 11843: a3 = a3 | s1\n 11846: a1 = 0x100000000\n 11856: u64 [sp + 0x118] = a1\n 11860: a1 = 0xfffffffc\n 11870: a2 = u64 [sp + 0x190]\n 11874: a1 = a2 <u a1\n 11877: a2 = u64 [sp + 0x198]\n 11881: a1 = 0 if a2 != 0\n 11883: u64 [sp + 0x178] = a3\n 11887: a1 = 0 if a3 != 0\n 11889: u8 [a0 + 4] = 0\n 11892: jump @181 if a1 != 0\n      : @180 (gas: 1)\n 11895: jump @219\n      : @181 (gas: 19)\n 11898: a0 = u64 [sp + 0x138]\n 11902: a0 = reverse a0\n 11904: a1 = a0 >> 0x20\n 11907: a2 = u64 [sp + 0x140]\n 11911: a2 = reverse a2\n 11913: a3 = a2 << 0x20\n 11916: a1 = a1 | a3\n 11919: u64 [sp + 0x140] = a1\n 11923: a0 = a0 << 0x20\n 11926: a1 = u64 [sp + 0x148]\n 11930: a1 = reverse a1\n 11932: a1 = a1 >> 0x20\n 11935: a0 = a0 | a1\n 11938: u64 [sp + 0x148] = a0\n 11942: s1 = a2 >> 0x20\n 11945: a0 = u64 [sp + 0x188]\n 11949: i32 a0 = a0 + 0x4\n 11952: a1 = 0x20\n 11955: ra = 168, jump @0\n      : @182 [@dyn 84] (gas: 64)\n 11961: a1 = reverse s1\n 11963: a2 = u64 [sp + 0x140]\n 11967: a2 = reverse a2\n 11969: a3 = u64 [sp + 0x148]\n 11973: a3 = reverse a3\n 11975: a4 = a3 >> 0x38\n 11978: u8 [a0 + 0x1f] = a4\n 11981: a4 = a3 >> 0x30\n 11984: u8 [a0 + 0x1e] = a4\n 11987: a4 = a3 >> 0x28\n 11990: u8 [a0 + 0x1d] = a4\n 11993: a4 = a3 >> 0x20\n 11996: u8 [a0 + 0x1c] = a4\n 11999: a4 = a3 >> 0x18\n 12002: u8 [a0 + 0x1b] = a4\n 12005: a4 = a3 >> 0x10\n 12008: u8 [a0 + 0x1a] = a4\n 12011: a4 = a3 >> 0x8\n 12014: u8 [a0 + 0x19] = a4\n 12017: u8 [a0 + 0x18] = a3\n 12020: u8 [a0 + 0x10] = a2\n 12023: u8 [a0 + 11] = 0\n 12026: u8 [a0 + 10] = 0\n 12029: u8 [a0 + 9] = 0\n 12032: u8 [a0 + 7] = 0\n 12035: u8 [a0 + 6] = 0\n 12038: u8 [a0 + 5] = 0\n 12041: u8 [a0 + 4] = 0\n 12044: u8 [a0 + 3] = 0\n 12047: u8 [a0 + 2] = 0\n 12050: u8 [a0 + 1] = 0\n 12053: u8 [a0 + 0] = 0\n 12055: a3 = a2 >> 0x38\n 12058: u8 [a0 + 0x17] = a3\n 12061: a3 = a2 >> 0x30\n 12064: u8 [a0 + 0x16] = a3\n 12067: a3 = a2 >> 0x28\n 12070: u8 [a0 + 0x15] = a3\n 12073: a3 = a2 >> 0x20\n 12076: u8 [a0 + 0x14] = a3\n 12079: a3 = a2 >> 0x18\n 12082: u8 [a0 + 0x13] = a3\n 12085: a3 = a2 >> 0x10\n 12088: u8 [a0 + 0x12] = a3\n 12091: a2 = a2 >> 0x8\n 12094: u8 [a0 + 0x11] = a2\n 12097: u8 [a0 + 0x8] = a1\n 12100: a2 = a1 >> 0x38\n 12103: u8 [a0 + 0xf] = a2\n 12106: a2 = a1 >> 0x30\n 12109: u8 [a0 + 0xe] = a2\n 12112: a2 = a1 >> 0x28\n 12115: u8 [a0 + 0xd] = a2\n 12118: a1 = a1 >> 0x20\n 12121: a2 = u64 [sp + 0x118]\n 12125: a2 = a2 + 0xffffffffffffffdc\n 12128: a3 = u64 [sp + 0x190]\n 12132: a2 = a3 <u a2\n 12135: a3 = u64 [sp + 0x198]\n 12139: a2 = 0 if a3 != 0\n 12141: a3 = u64 [sp + 0x178]\n 12145: a2 = 0 if a3 != 0\n 12147: u8 [a0 + 0xc] = a1\n 12150: jump @184 if a2 != 0\n      : @183 (gas: 1)\n 12153: jump @219\n      : @184 (gas: 19)\n 12156: a0 = u64 [sp + 0x120]\n 12160: a0 = reverse a0\n 12162: a1 = a0 >> 0x20\n 12165: a2 = u64 [sp + 0x128]\n 12169: a2 = reverse a2\n 12171: a3 = a2 << 0x20\n 12174: a1 = a1 | a3\n 12177: u64 [sp + 0x148] = a1\n 12181: a0 = a0 << 0x20\n 12184: a1 = u64 [sp + 0x130]\n 12188: a1 = reverse a1\n 12190: a1 = a1 >> 0x20\n 12193: a0 = a0 | a1\n 12196: u64 [sp + 0x140] = a0\n 12200: s1 = a2 >> 0x20\n 12203: a0 = u64 [sp + 0x188]\n 12207: i32 a0 = a0 + 0x24\n 12210: a1 = 0x20\n 12213: ra = 170, jump @0\n      : @185 [@dyn 85] (gas: 63)\n 12219: a1 = reverse s1\n 12221: a2 = u64 [sp + 0x148]\n 12225: a2 = reverse a2\n 12227: a3 = u64 [sp + 0x140]\n 12231: a3 = reverse a3\n 12233: a4 = a3 >> 0x38\n 12236: u8 [a0 + 0x1f] = a4\n 12239: a4 = a3 >> 0x30\n 12242: u8 [a0 + 0x1e] = a4\n 12245: a4 = a3 >> 0x28\n 12248: u8 [a0 + 0x1d] = a4\n 12251: a4 = a3 >> 0x20\n 12254: u8 [a0 + 0x1c] = a4\n 12257: a4 = a3 >> 0x18\n 12260: u8 [a0 + 0x1b] = a4\n 12263: a4 = a3 >> 0x10\n 12266: u8 [a0 + 0x1a] = a4\n 12269: a4 = a3 >> 0x8\n 12272: u8 [a0 + 0x19] = a4\n 12275: u8 [a0 + 0x18] = a3\n 12278: u8 [a0 + 0x10] = a2\n 12281: u8 [a0 + 11] = 0\n 12284: u8 [a0 + 10] = 0\n 12287: u8 [a0 + 9] = 0\n 12290: u8 [a0 + 7] = 0\n 12293: u8 [a0 + 6] = 0\n 12296: u8 [a0 + 5] = 0\n 12299: u8 [a0 + 4] = 0\n 12302: u8 [a0 + 3] = 0\n 12305: u8 [a0 + 2] = 0\n 12308: u8 [a0 + 1] = 0\n 12311: u8 [a0 + 0] = 0\n 12313: a3 = a2 >> 0x38\n 12316: u8 [a0 + 0x17] = a3\n 12319: a3 = a2 >> 0x30\n 12322: u8 [a0 + 0x16] = a3\n 12325: a3 = a2 >> 0x28\n 12328: u8 [a0 + 0x15] = a3\n 12331: a3 = a2 >> 0x20\n 12334: u8 [a0 + 0x14] = a3\n 12337: a3 = a2 >> 0x18\n 12340: u8 [a0 + 0x13] = a3\n 12343: a3 = a2 >> 0x10\n 12346: u8 [a0 + 0x12] = a3\n 12349: a2 = a2 >> 0x8\n 12352: u8 [a0 + 0x11] = a2\n 12355: u8 [a0 + 0x8] = a1\n 12358: a2 = a1 >> 0x38\n 12361: u8 [a0 + 0xf] = a2\n 12364: a2 = a1 >> 0x30\n 12367: u8 [a0 + 0xe] = a2\n 12370: a2 = a1 >> 0x28\n 12373: u8 [a0 + 0xd] = a2\n 12376: a1 = a1 >> 0x20\n 12379: a2 = 0xffffffbc\n 12389: a3 = u64 [sp + 0x190]\n 12393: a2 = a3 <u a2\n 12396: a3 = u64 [sp + 0x198]\n 12400: a2 = 0 if a3 != 0\n 12402: a3 = u64 [sp + 0x178]\n 12406: a2 = 0 if a3 != 0\n 12408: u8 [a0 + 0xc] = a1\n 12411: jump @219 if a2 == 0\n      : @186 (gas: 4)\n 12415: s1 = u64 [sp + 0x188]\n 12419: i32 a0 = s1 + 0x44\n 12422: a1 = 0x20\n 12425: ra = 172, jump @0\n      : @187 [@dyn 86] (gas: 128)\n 12431: a1 = u64 [sp + 0x158]\n 12435: a3 = reverse a1\n 12437: a1 = u64 [sp + 0x160]\n 12441: a2 = reverse a1\n 12443: a1 = a2 >> 0x38\n 12446: u64 [sp + 0x120] = a1\n 12450: u8 [a0 + 0x1f] = a1\n 12453: a1 = a2 >> 0x30\n 12456: u64 [sp + 0x118] = a1\n 12460: u8 [a0 + 0x1e] = a1\n 12463: a1 = a2 >> 0x28\n 12466: u64 [sp + 0xf8] = a1\n 12470: u8 [a0 + 0x1d] = a1\n 12473: a1 = a2 >> 0x20\n 12476: u64 [sp + 0xf0] = a1\n 12480: u8 [a0 + 0x1c] = a1\n 12483: a1 = a2 >> 0x18\n 12486: u64 [sp + 0xe8] = a1\n 12490: u8 [a0 + 0x1b] = a1\n 12493: a1 = a2 >> 0x10\n 12496: u64 [sp + 0xe0] = a1\n 12500: u8 [a0 + 0x1a] = a1\n 12503: a1 = a2 >> 0x8\n 12506: u64 [sp + 0xd8] = a1\n 12510: u8 [a0 + 0x19] = a1\n 12513: u64 [sp + 0xd0] = a2\n 12517: u8 [a0 + 0x18] = a2\n 12520: u8 [a0 + 0x10] = a3\n 12523: a1 = a3 >> 0x38\n 12526: u64 [sp + 0xc0] = a1\n 12530: u8 [a0 + 0x17] = a1\n 12533: a1 = a3 >> 0x30\n 12536: u64 [sp + 0xb8] = a1\n 12540: u8 [a0 + 0x16] = a1\n 12543: a1 = a3 >> 0x28\n 12546: u64 [sp + 0xb0] = a1\n 12550: u8 [a0 + 0x15] = a1\n 12553: a1 = a3 >> 0x20\n 12556: u64 [sp + 0xa8] = a1\n 12560: u8 [a0 + 0x14] = a1\n 12563: a1 = a3 >> 0x18\n 12566: u64 [sp + 0xa0] = a1\n 12570: u8 [a0 + 0x13] = a1\n 12573: a1 = a3 >> 0x10\n 12576: u64 [sp + 0x98] = a1\n 12580: u8 [a0 + 0x12] = a1\n 12583: u64 [sp + 0xc8] = a3\n 12587: a3 = a3 >> 0x8\n 12590: u64 [sp + 0x90] = a3\n 12594: u8 [a0 + 0x11] = a3\n 12597: a1 = u64 [sp + 0x168]\n 12601: a1 = reverse a1\n 12603: u8 [a0 + 0x8] = a1\n 12606: a2 = a1 >> 0x38\n 12609: u64 [sp + 0x78] = a2\n 12612: u8 [a0 + 0xf] = a2\n 12615: a2 = a1 >> 0x30\n 12618: u64 [sp + 0x70] = a2\n 12621: u8 [a0 + 0xe] = a2\n 12624: a2 = a1 >> 0x28\n 12627: u64 [sp + 0x68] = a2\n 12630: u8 [a0 + 0xd] = a2\n 12633: a2 = a1 >> 0x20\n 12636: u64 [sp + 0x60] = a2\n 12639: u8 [a0 + 0xc] = a2\n 12642: a2 = a1 >> 0x18\n 12645: u64 [sp + 0x58] = a2\n 12648: u8 [a0 + 0xb] = a2\n 12651: a2 = a1 >> 0x10\n 12654: u64 [sp + 0x50] = a2\n 12657: u8 [a0 + 0xa] = a2\n 12660: u64 [sp + 0x88] = a1\n 12664: a1 = a1 >> 0x8\n 12667: u64 [sp + 0x48] = a1\n 12670: u8 [a0 + 0x9] = a1\n 12673: a1 = u64 [sp + 0x170]\n 12677: a1 = reverse a1\n 12679: u8 [a0] = a1\n 12681: a2 = a1 >> 0x38\n 12684: u64 [sp + 0x40] = a2\n 12687: u8 [a0 + 0x7] = a2\n 12690: a2 = a1 >> 0x30\n 12693: u64 [sp + 0x38] = a2\n 12696: u8 [a0 + 0x6] = a2\n 12699: a2 = a1 >> 0x28\n 12702: u64 [sp + 0x30] = a2\n 12705: u8 [a0 + 0x5] = a2\n 12708: a2 = a1 >> 0x20\n 12711: u64 [sp + 0x28] = a2\n 12714: u8 [a0 + 0x4] = a2\n 12717: a2 = a1 >> 0x18\n 12720: u64 [sp + 0x20] = a2\n 12723: u8 [a0 + 0x3] = a2\n 12726: a2 = a1 >> 0x10\n 12729: u64 [sp + 0x18] = a2\n 12732: u8 [a0 + 0x2] = a2\n 12735: u64 [sp + 0x80] = a1\n 12739: a1 = a1 >> 0x8\n 12742: u64 [sp + 0x10] = a1\n 12745: u8 [a0 + 0x1] = a1\n 12748: ecalli 9 // 'ref_time_left'\n 12750: a0 = u64 [sp + 0x108]\n 12754: a2 = reverse a0\n 12756: a0 = a2 << 0x20\n 12759: a1 = u64 [sp + 0x150]\n 12763: a1 = reverse a1\n 12765: a1 = a1 >> 0x20\n 12768: a0 = a0 | a1\n 12771: a1 = u64 [sp + 0x110]\n 12775: a3 = reverse a1\n 12777: a1 = a3 << 0x20\n 12780: u64 [sp + 0x178] = a2\n 12784: a2 = a2 >> 0x20\n 12787: u64 [sp + 0x138] = a2\n 12791: a1 = a1 | a2\n 12794: u64 [sp + 0x148] = a3\n 12798: a3 = a3 >> 0x20\n 12801: u64 [sp + 0x2a8] = a1\n 12805: u64 [sp + 0x2a0] = a0\n 12809: u64 [sp + 0x130] = a3\n 12813: u32 [sp + 0x2b0] = a3\n 12817: u64 [sp + 728] = 0\n 12821: u64 [sp + 720] = 0\n 12825: u64 [sp + 712] = 0\n 12829: u64 [sp + 704] = 0\n 12833: a1 = 0x64\n 12836: a0 = s1\n 12838: ra = 174, jump @0\n      : @188 [@dyn 87] (gas: 4)\n 12844: u64 [sp + 0x140] = a0\n 12848: a1 = 0x20\n 12851: a0 = s1\n 12853: ra = 176, jump @0\n      : @189 [@dyn 88] (gas: 31)\n 12859: u32 [sp + 736] = 0x20\n 12864: u64 [sp + 792] = 0xffffffffffffffff\n 12869: u64 [sp + 784] = 0xffffffffffffffff\n 12874: u64 [sp + 776] = 0xffffffffffffffff\n 12879: u64 [sp + 768] = 0xffffffffffffffff\n 12884: a1 = sp + 0x2a0\n 12888: a1 = a1 << 0x20\n 12891: a1 = a1 >> 0x20\n 12894: s1 = 0x800000000\n 12904: s1 = s1 | a1\n 12907: a1 = sp + 0x2c0\n 12911: a1 = a1 << 0x20\n 12914: a1 = a1 >> 0x20\n 12917: a2 = sp + 0x300\n 12921: a2 = a2 << 0x20\n 12924: a3 = a2 | a1\n 12927: a1 = u64 [sp + 0x140]\n 12931: a1 = a1 << 0x20\n 12934: a1 = a1 >> 0x20\n 12937: a2 = 0x6400000000\n 12947: a4 = a1 | a2\n 12950: a0 = a0 << 0x20\n 12953: a0 = a0 >> 0x20\n 12956: a1 = sp + 0x2e0\n 12960: a1 = a1 << 0x20\n 12963: a5 = a1 | a0\n 12966: a1 = 0xffffffffffffffff\n 12969: a2 = 0xffffffffffffffff\n 12972: a0 = s1\n 12974: ecalli 1 // 'call'\n 12976: fallthrough\n      : @190 (gas: 1)\n 12977: jump @213 if a0 != 0\n      : @191 (gas: 2)\n 12981: ecalli 11 // 'return_data_size'\n 12983: fallthrough\n      : @192 (gas: 2)\n 12984: a1 = 0x20\n 12987: jump @194 if a0 >=u a1\n      : @193 (gas: 3)\n 12990: ecalli 11 // 'return_data_size'\n 12992: a1 = a0\n 12994: fallthrough\n      : @194 (gas: 28)\n 12995: a4 = 0\n 12997: a3 = u64 [sp + 0x180]\n 13001: a2 = u64 [sp + 0x190]\n 13005: s1 = u64 [sp + 0x198]\n 13009: a0 = a1 + 0x1f\n 13012: u64 [sp + 0x190] = a1\n 13016: a1 = a0 <u a1\n 13019: u64 [sp + 408] = 0\n 13023: a1 = a1 & 0x1\n 13026: a0 = a0 & 0xffffffffffffffe0\n 13029: a2 = a2 + a0\n 13032: u64 [sp + 0x180] = a2\n 13036: a0 = a2 <u a0\n 13039: s1 = s1 + a1\n 13042: s1 = s1 + a0\n 13045: a2 = s1 ^ a1\n 13048: a1 = s1 <u a1\n 13051: a1 = a0 if a2 == 0\n 13054: a0 = u64 [sp + 0x100]\n 13058: a1 = a1 + a0\n 13061: a0 = a1 <u a0\n 13064: a0 = a0 + a3\n 13067: u64 [sp + 0x140] = a1\n 13071: u64 [sp + 0x128] = a0\n 13075: a0 = a0 | a1\n 13078: a1 = s1 <u 0x1\n 13081: a1 = 0 if a0 != 0\n 13083: jump @222 if a1 == 0\n      : @195 (gas: 3)\n 13087: a0 = 0x40\n 13090: a1 = 0x20\n 13093: ra = 178, jump @0\n      : @196 [@dyn 89] (gas: 79)\n 13099: a1 = u64 [sp + 0x128]\n 13103: a1 = reverse a1\n 13105: a2 = u64 [sp + 0x140]\n 13109: a2 = reverse a2\n 13111: a3 = reverse s1\n 13113: a4 = u64 [sp + 0x180]\n 13117: a4 = reverse a4\n 13119: u8 [a0 + 0x18] = a4\n 13122: a5 = a4 >> 0x38\n 13125: u8 [a0 + 0x1f] = a5\n 13128: a5 = a4 >> 0x30\n 13131: u8 [a0 + 0x1e] = a5\n 13134: a5 = a4 >> 0x28\n 13137: u8 [a0 + 0x1d] = a5\n 13140: a5 = a4 >> 0x20\n 13143: u8 [a0 + 0x1c] = a5\n 13146: a5 = a4 >> 0x18\n 13149: u8 [a0 + 0x1b] = a5\n 13152: a5 = a4 >> 0x10\n 13155: u8 [a0 + 0x1a] = a5\n 13158: a4 = a4 >> 0x8\n 13161: u8 [a0 + 0x19] = a4\n 13164: u8 [a0 + 0x10] = a3\n 13167: a4 = a3 >> 0x38\n 13170: u8 [a0 + 0x17] = a4\n 13173: a4 = a3 >> 0x30\n 13176: u8 [a0 + 0x16] = a4\n 13179: a4 = a3 >> 0x28\n 13182: u8 [a0 + 0x15] = a4\n 13185: a4 = a3 >> 0x20\n 13188: u8 [a0 + 0x14] = a4\n 13191: a4 = a3 >> 0x18\n 13194: u8 [a0 + 0x13] = a4\n 13197: a4 = a3 >> 0x10\n 13200: u8 [a0 + 0x12] = a4\n 13203: a3 = a3 >> 0x8\n 13206: u8 [a0 + 0x11] = a3\n 13209: u8 [a0 + 0x8] = a2\n 13212: a3 = a2 >> 0x38\n 13215: u8 [a0 + 0xf] = a3\n 13218: a3 = a2 >> 0x30\n 13221: u8 [a0 + 0xe] = a3\n 13224: a3 = a2 >> 0x28\n 13227: u8 [a0 + 0xd] = a3\n 13230: a3 = a2 >> 0x20\n 13233: u8 [a0 + 0xc] = a3\n 13236: a3 = a2 >> 0x18\n 13239: u8 [a0 + 0xb] = a3\n 13242: a3 = a2 >> 0x10\n 13245: u8 [a0 + 0xa] = a3\n 13248: a2 = a2 >> 0x8\n 13251: u8 [a0 + 0x9] = a2\n 13254: u8 [a0] = a1\n 13256: a2 = a1 >> 0x38\n 13259: u8 [a0 + 0x7] = a2\n 13262: a2 = a1 >> 0x30\n 13265: u8 [a0 + 0x6] = a2\n 13268: a2 = a1 >> 0x28\n 13271: u8 [a0 + 0x5] = a2\n 13274: a2 = a1 >> 0x20\n 13277: u8 [a0 + 0x4] = a2\n 13280: a2 = a1 >> 0x18\n 13283: u8 [a0 + 0x3] = a2\n 13286: a2 = a1 >> 0x10\n 13289: u8 [a0 + 0x2] = a2\n 13292: a1 = a1 >> 0x8\n 13295: a5 = u64 [sp + 0x198]\n 13299: a2 = a5 >u 0\n 13301: a3 = u64 [sp + 0x190]\n 13305: a3 = a3 <u 0x20\n 13308: a3 = a3 ^ 0x1\n 13311: a3 = a2 if a5 != 0\n 13314: a2 = a5 >u 0\n 13316: a4 = a5 >u 0\n 13318: a4 = a2 if a5 == 0\n 13321: a2 = a5 | a5\n 13324: a4 = a3 if a2 == 0\n 13327: u8 [a0 + 0x1] = a1\n 13330: jump @220 if a4 == 0\n      : @197 (gas: 3)\n 13334: a1 = 0x20\n 13337: a0 = u64 [sp + 0x188]\n 13341: ra = 180, jump @0\n      : @198 [@dyn 90] (gas: 96)\n 13347: a1 = u8 [a0 + 0x9]\n 13350: a2 = u8 [a0 + 0x8]\n 13353: a3 = u8 [a0 + 0xa]\n 13356: a4 = u8 [a0 + 0xb]\n 13359: a1 = a1 << 0x8\n 13362: a1 = a1 | a2\n 13365: a3 = a3 << 0x10\n 13368: a4 = a4 << 0x18\n 13371: a3 = a3 | a4\n 13374: a1 = a1 | a3\n 13377: a2 = u8 [a0 + 0xd]\n 13380: a3 = u8 [a0 + 0xc]\n 13383: a4 = u8 [a0 + 0xe]\n 13386: a5 = u8 [a0 + 0xf]\n 13389: a2 = a2 << 0x8\n 13392: a2 = a2 | a3\n 13395: a4 = a4 << 0x10\n 13398: a5 = a5 << 0x18\n 13401: a4 = a4 | a5\n 13404: a2 = a2 | a4\n 13407: a2 = a2 << 0x20\n 13410: t0 = a2 | a1\n 13413: a2 = u8 [a0 + 0x1]\n 13416: a3 = u8 [a0]\n 13418: a4 = u8 [a0 + 0x2]\n 13421: a5 = u8 [a0 + 0x3]\n 13424: a2 = a2 << 0x8\n 13427: a2 = a2 | a3\n 13430: a4 = a4 << 0x10\n 13433: a5 = a5 << 0x18\n 13436: a4 = a4 | a5\n 13439: a2 = a2 | a4\n 13442: a3 = u8 [a0 + 0x5]\n 13445: a4 = u8 [a0 + 0x4]\n 13448: a5 = u8 [a0 + 0x6]\n 13451: s1 = u8 [a0 + 0x7]\n 13454: a3 = a3 << 0x8\n 13457: a3 = a3 | a4\n 13460: a5 = a5 << 0x10\n 13463: s1 = s1 << 0x18\n 13466: a5 = a5 | s1\n 13469: a3 = a3 | a5\n 13472: a3 = a3 << 0x20\n 13475: a2 = a2 | a3\n 13478: a3 = u8 [a0 + 0x19]\n 13481: a4 = u8 [a0 + 0x18]\n 13484: a5 = u8 [a0 + 0x1a]\n 13487: s1 = u8 [a0 + 0x1b]\n 13490: a3 = a3 << 0x8\n 13493: a3 = a3 | a4\n 13496: a5 = a5 << 0x10\n 13499: s1 = s1 << 0x18\n 13502: a5 = a5 | s1\n 13505: a3 = a3 | a5\n 13508: a4 = u8 [a0 + 0x1d]\n 13511: a5 = u8 [a0 + 0x1c]\n 13514: s1 = u8 [a0 + 0x1e]\n 13517: a1 = u8 [a0 + 0x1f]\n 13520: a4 = a4 << 0x8\n 13523: a4 = a4 | a5\n 13526: s1 = s1 << 0x10\n 13529: a1 = a1 << 0x18\n 13532: a1 = a1 | s1\n 13535: a1 = a1 | a4\n 13538: a1 = a1 << 0x20\n 13541: a3 = a3 | a1\n 13544: a1 = u8 [a0 + 0x11]\n 13547: a4 = u8 [a0 + 0x10]\n 13550: a5 = u8 [a0 + 0x12]\n 13553: s1 = u8 [a0 + 0x13]\n 13556: a1 = a1 << 0x8\n 13559: a1 = a1 | a4\n 13562: a5 = a5 << 0x10\n 13565: s1 = s1 << 0x18\n 13568: a5 = a5 | s1\n 13571: a1 = a1 | a5\n 13574: a4 = u8 [a0 + 0x15]\n 13577: a5 = u8 [a0 + 0x14]\n 13580: s1 = u8 [a0 + 0x16]\n 13583: a0 = u8 [a0 + 0x17]\n 13586: a4 = a4 << 0x8\n 13589: a4 = a4 | a5\n 13592: s1 = s1 << 0x10\n 13595: a0 = a0 << 0x18\n 13598: a0 = a0 | s1\n 13601: a0 = a0 | a4\n 13604: a0 = a0 << 0x20\n 13607: a0 = a0 | a1\n 13610: a1 = reverse a0\n 13612: a4 = reverse a3\n 13614: a4 = a4 <u 0x2\n 13617: a4 = 0 if a1 != 0\n 13619: a1 = t0 | a2\n 13622: a1 = reverse a1\n 13624: a4 = 0 if a1 != 0\n 13626: jump @220 if a4 == 0\n      : @199 (gas: 4)\n 13630: a0 = a0 | a2\n 13633: a1 = t0 | a3\n 13636: a0 = a0 | a1\n 13639: jump @214 if a0 == 0\n      : @200 (gas: 23)\n 13643: a0 = u64 [sp + 0x150]\n 13647: a0 = a0 << 0x20\n 13650: a0 = a0 >> 0x20\n 13653: u64 [sp + 0x198] = a0\n 13657: i32 a0 = sp + 0x320\n 13661: ecalli 5 // 'caller'\n 13663: a0 = u64 [sp + 0x328]\n 13667: a1 = i32 [sp + 0x330]\n 13671: s1 = u64 [sp + 0x320]\n 13675: a0 = reverse a0\n 13677: a2 = a0 << 0x20\n 13680: a1 = reverse a1\n 13682: a1 = a1 >> 0x20\n 13685: a1 = a1 | a2\n 13688: u64 [sp + 0x190] = a1\n 13692: a0 = a0 >> 0x20\n 13695: a1 = reverse s1\n 13697: a1 = a1 << 0x20\n 13700: a0 = a0 | a1\n 13703: u64 [sp + 0x188] = a0\n 13707: a1 = 0x20\n 13710: a0 = 0\n 13712: ra = 182, jump @0\n      : @201 [@dyn 91] (gas: 56)\n 13718: a1 = u64 [sp + 0x188]\n 13722: a1 = reverse a1\n 13724: a2 = u64 [sp + 0x190]\n 13728: a2 = reverse a2\n 13730: a3 = s1 >> 0x18\n 13733: u8 [a0 + 0xf] = a3\n 13736: a3 = s1 >> 0x10\n 13739: u8 [a0 + 0xe] = a3\n 13742: a3 = s1 >> 0x8\n 13745: u8 [a0 + 0xd] = a3\n 13748: u8 [a0 + 0xc] = s1\n 13751: u8 [a0 + 11] = 0\n 13754: u8 [a0 + 10] = 0\n 13757: u8 [a0 + 9] = 0\n 13760: u8 [a0 + 8] = 0\n 13763: u8 [a0 + 7] = 0\n 13766: u8 [a0 + 6] = 0\n 13769: u8 [a0 + 5] = 0\n 13772: u8 [a0 + 4] = 0\n 13775: u8 [a0 + 3] = 0\n 13778: u8 [a0 + 2] = 0\n 13781: u8 [a0 + 1] = 0\n 13784: u8 [a0 + 0] = 0\n 13786: u8 [a0 + 0x18] = a2\n 13789: u8 [a0 + 0x10] = a1\n 13792: a3 = a2 >> 0x38\n 13795: u8 [a0 + 0x1f] = a3\n 13798: a3 = a2 >> 0x30\n 13801: u8 [a0 + 0x1e] = a3\n 13804: a3 = a2 >> 0x28\n 13807: u8 [a0 + 0x1d] = a3\n 13810: a3 = a2 >> 0x20\n 13813: u8 [a0 + 0x1c] = a3\n 13816: a3 = a2 >> 0x18\n 13819: u8 [a0 + 0x1b] = a3\n 13822: a3 = a2 >> 0x10\n 13825: u8 [a0 + 0x1a] = a3\n 13828: a2 = a2 >> 0x8\n 13831: u8 [a0 + 0x19] = a2\n 13834: a2 = a1 >> 0x38\n 13837: u8 [a0 + 0x17] = a2\n 13840: a2 = a1 >> 0x30\n 13843: u8 [a0 + 0x16] = a2\n 13846: a2 = a1 >> 0x28\n 13849: u8 [a0 + 0x15] = a2\n 13852: a2 = a1 >> 0x20\n 13855: u8 [a0 + 0x14] = a2\n 13858: a2 = a1 >> 0x18\n 13861: u8 [a0 + 0x13] = a2\n 13864: a2 = a1 >> 0x10\n 13867: u8 [a0 + 0x12] = a2\n 13870: a1 = a1 >> 0x8\n 13873: u8 [a0 + 0x11] = a1\n 13876: a0 = 0x20\n 13879: a1 = 0x20\n 13882: ra = 184, jump @0\n      : @202 [@dyn 92] (gas: 35)\n 13888: u8 [a0 + 31] = 0\n 13891: u8 [a0 + 30] = 0\n 13894: u8 [a0 + 29] = 0\n 13897: u8 [a0 + 28] = 0\n 13900: u8 [a0 + 27] = 0\n 13903: u8 [a0 + 26] = 0\n 13906: u8 [a0 + 25] = 0\n 13909: u8 [a0 + 24] = 0\n 13912: u8 [a0 + 23] = 0\n 13915: u8 [a0 + 22] = 0\n 13918: u8 [a0 + 21] = 0\n 13921: u8 [a0 + 20] = 0\n 13924: u8 [a0 + 19] = 0\n 13927: u8 [a0 + 18] = 0\n 13930: u8 [a0 + 17] = 0\n 13933: u8 [a0 + 16] = 0\n 13936: u8 [a0 + 15] = 0\n 13939: u8 [a0 + 14] = 0\n 13942: u8 [a0 + 13] = 0\n 13945: u8 [a0 + 12] = 0\n 13948: u8 [a0 + 11] = 0\n 13951: u8 [a0 + 10] = 0\n 13954: u8 [a0 + 9] = 0\n 13957: u8 [a0 + 8] = 0\n 13960: u8 [a0 + 7] = 0\n 13963: u8 [a0 + 6] = 0\n 13966: u8 [a0 + 5] = 0\n 13969: u8 [a0 + 4] = 0\n 13972: u8 [a0 + 3] = 0\n 13975: u8 [a0 + 2] = 0\n 13978: u8 [a0 + 1] = 0\n 13981: u8 [a0 + 0] = 0\n 13983: a1 = 0x40\n 13986: a0 = 0\n 13988: ra = 186, jump @0\n      : @203 [@dyn 93] (gas: 14)\n 13994: i32 a0 = a0 + 0\n 13996: i32 a2 = sp + 0x3a0\n 14000: a1 = 0x40\n 14003: ecalli 8 // 'hash_keccak_256'\n 14005: a0 = u64 [sp + 0x3a0]\n 14009: u64 [sp + 0x190] = a0\n 14013: a0 = u64 [sp + 0x3a8]\n 14017: u64 [sp + 0x188] = a0\n 14021: a0 = u64 [sp + 0x3b0]\n 14025: u64 [sp + 0x180] = a0\n 14029: s1 = u64 [sp + 0x3b8]\n 14033: a1 = 0x20\n 14036: a0 = 0\n 14038: ra = 188, jump @0\n      : @204 [@dyn 94] (gas: 58)\n 14044: a1 = u64 [sp + 0x198]\n 14048: a3 = reverse a1\n 14050: a2 = u64 [sp + 0x148]\n 14054: a1 = a2 >> 0x38\n 14057: u8 [a0 + 0x1f] = a1\n 14060: a1 = a2 >> 0x30\n 14063: u8 [a0 + 0x1e] = a1\n 14066: a1 = a2 >> 0x28\n 14069: u8 [a0 + 0x1d] = a1\n 14072: a1 = u64 [sp + 0x130]\n 14076: u8 [a0 + 0x1c] = a1\n 14079: a1 = a2 >> 0x18\n 14082: u8 [a0 + 0x1b] = a1\n 14085: a1 = a2 >> 0x10\n 14088: u8 [a0 + 0x1a] = a1\n 14091: a1 = a2 >> 0x8\n 14094: u8 [a0 + 0x19] = a1\n 14097: u8 [a0 + 0x18] = a2\n 14100: a2 = u64 [sp + 0x178]\n 14104: a1 = a2 >> 0x38\n 14107: u8 [a0 + 0x17] = a1\n 14110: a1 = a2 >> 0x30\n 14113: u8 [a0 + 0x16] = a1\n 14116: a1 = a2 >> 0x28\n 14119: u8 [a0 + 0x15] = a1\n 14122: a1 = u64 [sp + 0x138]\n 14126: u8 [a0 + 0x14] = a1\n 14129: a1 = a2 >> 0x18\n 14132: u8 [a0 + 0x13] = a1\n 14135: a1 = a2 >> 0x10\n 14138: u8 [a0 + 0x12] = a1\n 14141: a1 = a2 >> 0x8\n 14144: u8 [a0 + 0x11] = a1\n 14147: u8 [a0 + 0x10] = a2\n 14150: a1 = a3 >> 0x38\n 14153: u8 [a0 + 0xf] = a1\n 14156: a1 = a3 >> 0x30\n 14159: u8 [a0 + 0xe] = a1\n 14162: a1 = a3 >> 0x28\n 14165: u8 [a0 + 0xd] = a1\n 14168: a1 = a3 >> 0x20\n 14171: u8 [a0 + 0xc] = a1\n 14174: u8 [a0 + 11] = 0\n 14177: u8 [a0 + 10] = 0\n 14180: u8 [a0 + 9] = 0\n 14183: u64 [sp + 0x150] = a3\n 14187: u8 [a0 + 0x8] = a3\n 14190: u8 [a0 + 7] = 0\n 14193: u8 [a0 + 6] = 0\n 14196: u8 [a0 + 5] = 0\n 14199: u8 [a0 + 4] = 0\n 14202: u8 [a0 + 3] = 0\n 14205: u8 [a0 + 2] = 0\n 14208: u8 [a0 + 1] = 0\n 14211: u8 [a0 + 0] = 0\n 14213: a0 = 0x20\n 14216: a1 = 0x20\n 14219: ra = 190, jump @0\n      : @205 [@dyn 95] (gas: 66)\n 14225: a1 = s1 >> 0x38\n 14228: u8 [a0 + 0x1f] = a1\n 14231: a1 = s1 >> 0x30\n 14234: u8 [a0 + 0x1e] = a1\n 14237: a1 = s1 >> 0x28\n 14240: u8 [a0 + 0x1d] = a1\n 14243: a1 = s1 >> 0x20\n 14246: u8 [a0 + 0x1c] = a1\n 14249: a1 = s1 >> 0x18\n 14252: u8 [a0 + 0x1b] = a1\n 14255: a1 = s1 >> 0x10\n 14258: u8 [a0 + 0x1a] = a1\n 14261: a1 = s1 >> 0x8\n 14264: u8 [a0 + 0x19] = a1\n 14267: u8 [a0 + 0x18] = s1\n 14270: a2 = u64 [sp + 0x180]\n 14274: a1 = a2 >> 0x38\n 14277: u8 [a0 + 0x17] = a1\n 14280: a1 = a2 >> 0x30\n 14283: u8 [a0 + 0x16] = a1\n 14286: a1 = a2 >> 0x28\n 14289: u8 [a0 + 0x15] = a1\n 14292: a1 = a2 >> 0x20\n 14295: u8 [a0 + 0x14] = a1\n 14298: a1 = a2 >> 0x18\n 14301: u8 [a0 + 0x13] = a1\n 14304: a1 = a2 >> 0x10\n 14307: u8 [a0 + 0x12] = a1\n 14310: a1 = a2 >> 0x8\n 14313: u8 [a0 + 0x11] = a1\n 14316: u8 [a0 + 0x10] = a2\n 14319: a2 = u64 [sp + 0x188]\n 14323: a1 = a2 >> 0x38\n 14326: u8 [a0 + 0xf] = a1\n 14329: a1 = a2 >> 0x30\n 14332: u8 [a0 + 0xe] = a1\n 14335: a1 = a2 >> 0x28\n 14338: u8 [a0 + 0xd] = a1\n 14341: a1 = a2 >> 0x20\n 14344: u8 [a0 + 0xc] = a1\n 14347: a1 = a2 >> 0x18\n 14350: u8 [a0 + 0xb] = a1\n 14353: a1 = a2 >> 0x10\n 14356: u8 [a0 + 0xa] = a1\n 14359: a1 = a2 >> 0x8\n 14362: u8 [a0 + 0x9] = a1\n 14365: u8 [a0 + 0x8] = a2\n 14368: a2 = u64 [sp + 0x190]\n 14372: a1 = a2 >> 0x38\n 14375: u8 [a0 + 0x7] = a1\n 14378: a1 = a2 >> 0x30\n 14381: u8 [a0 + 0x6] = a1\n 14384: a1 = a2 >> 0x28\n 14387: u8 [a0 + 0x5] = a1\n 14390: a1 = a2 >> 0x20\n 14393: u8 [a0 + 0x4] = a1\n 14396: a1 = a2 >> 0x18\n 14399: u8 [a0 + 0x3] = a1\n 14402: a1 = a2 >> 0x10\n 14405: u8 [a0 + 0x2] = a1\n 14408: a1 = a2 >> 0x8\n 14411: u8 [a0 + 0x1] = a1\n 14414: u8 [a0] = a2\n 14416: a1 = 0x40\n 14419: a0 = 0\n 14421: ra = 192, jump @0\n      : @206 [@dyn 96] (gas: 32)\n 14427: i32 a0 = a0 + 0\n 14429: i32 a2 = sp + 0x3a0\n 14433: a1 = 0x40\n 14436: ecalli 8 // 'hash_keccak_256'\n 14438: a0 = u64 [sp + 0x3b8]\n 14442: a1 = u64 [sp + 0x3b0]\n 14446: a2 = u64 [sp + 0x3a8]\n 14450: a3 = u64 [sp + 0x3a0]\n 14454: a0 = reverse a0\n 14456: a1 = reverse a1\n 14458: a2 = reverse a2\n 14460: a3 = reverse a3\n 14462: u64 [sp + 0x180] = a3\n 14466: u64 [sp + 0x398] = a3\n 14470: u64 [sp + 0x188] = a2\n 14474: u64 [sp + 0x390] = a2\n 14478: u64 [sp + 0x190] = a1\n 14482: u64 [sp + 0x388] = a1\n 14486: u64 [sp + 0x198] = a0\n 14490: u64 [sp + 0x380] = a0\n 14494: u64 [sp + 952] = 0\n 14498: u64 [sp + 944] = 0\n 14502: u64 [sp + 936] = 0\n 14506: u64 [sp + 928] = 0\n 14510: u32 [sp + 864] = 0x20\n 14515: i32 a1 = sp + 0x380\n 14519: i32 a3 = sp + 0x3a0\n 14523: i32 a4 = sp + 0x360\n 14527: a2 = 0xffffffffffffffff\n 14530: a0 = 0\n 14532: ecalli 7 // 'get_storage'\n 14534: fallthrough\n      : @207 (gas: 37)\n 14535: a3 = u64 [sp + 0x3a8]\n 14539: a1 = u64 [sp + 0x3a0]\n 14543: t0 = u64 [sp + 0x3b8]\n 14547: a2 = u64 [sp + 0x3b0]\n 14551: a5 = u64 [sp + 0x158]\n 14555: a5 = a5 + a3\n 14558: a0 = u64 [sp + 0x160]\n 14562: a0 = a0 + a1\n 14565: u64 [sp + 0x160] = a0\n 14569: a4 = a0 <u a1\n 14572: a5 = a5 + a4\n 14575: t1 = a5 ^ a3\n 14578: u64 [sp + 0x158] = a5\n 14582: a3 = a5 <u a3\n 14585: a5 = a4 ^ 0x1\n 14588: a4 = a3 if t1 != 0\n 14591: a0 = u64 [sp + 0x168]\n 14595: a0 = a0 + a2\n 14598: s1 = a0 + a4\n 14601: a4 = s1 <u a0\n 14604: a1 = u64 [sp + 0x170]\n 14608: a1 = a1 + t0\n 14611: a0 = a0 <u a2\n 14614: a0 = a0 + a1\n 14617: a4 = a4 + a0\n 14620: a0 = s1 <u a2\n 14623: a1 = a4 ^ t0\n 14626: u64 [sp + 0x170] = a4\n 14630: a4 = a4 <u t0\n 14633: a4 = a0 if a1 == 0\n 14636: a0 = a4 ^ 0x1\n 14639: a2 = a2 ^ s1\n 14642: a1 = a1 | a2\n 14645: a2 = a3 ^ 0x1\n 14648: a5 = a2 if t1 != 0\n 14651: a5 = a0 if a1 != 0\n 14654: jump @224 if a5 == 0\n      : @208 (gas: 51)\n 14658: a0 = u64 [sp + 0x188]\n 14662: u64 [sp + 0x390] = a0\n 14666: a0 = u64 [sp + 0x190]\n 14670: u64 [sp + 0x388] = a0\n 14674: a0 = u64 [sp + 0x198]\n 14678: u64 [sp + 0x380] = a0\n 14682: a0 = u64 [sp + 0x180]\n 14686: u64 [sp + 0x398] = a0\n 14690: u64 [sp + 952] = 0\n 14694: u64 [sp + 944] = 0\n 14698: u64 [sp + 936] = 0\n 14702: u64 [sp + 928] = 0\n 14706: u32 [sp + 864] = 0x20\n 14711: i32 a1 = sp + 0x380\n 14715: i32 a3 = sp + 0x3a0\n 14719: i32 a4 = sp + 0x360\n 14723: a2 = 0xffffffffffffffff\n 14726: a0 = 0\n 14728: ecalli 7 // 'get_storage'\n 14730: a0 = u64 [sp + 0x180]\n 14734: u64 [sp + 0x398] = a0\n 14738: a0 = u64 [sp + 0x188]\n 14742: u64 [sp + 0x390] = a0\n 14746: a0 = u64 [sp + 0x190]\n 14750: u64 [sp + 0x388] = a0\n 14754: a0 = u64 [sp + 0x198]\n 14758: u64 [sp + 0x380] = a0\n 14762: a0 = u64 [sp + 0x170]\n 14766: u64 [sp + 0x3b8] = a0\n 14770: u64 [sp + 0x3b0] = s1\n 14774: a0 = u64 [sp + 0x158]\n 14778: u64 [sp + 0x3a8] = a0\n 14782: a0 = u64 [sp + 0x160]\n 14786: u64 [sp + 0x3a0] = a0\n 14790: i32 a1 = sp + 0x380\n 14794: i32 a3 = sp + 0x3a0\n 14798: a2 = 0xffffffffffffffff\n 14801: a4 = 0x20\n 14804: a0 = 0\n 14806: ecalli 14 // 'set_storage'\n 14808: i32 a0 = sp + 0x340\n 14812: ecalli 5 // 'caller'\n 14814: a0 = u32 [sp + 0x350]\n 14818: u64 [sp + 0x190] = a0\n 14822: a0 = u64 [sp + 0x348]\n 14826: u64 [sp + 0x188] = a0\n 14830: a0 = u64 [sp + 0x340]\n 14834: u64 [sp + 0x198] = a0\n 14838: a0 = 0x40\n 14841: a1 = 0x20\n 14844: ra = 194, jump @0\n      : @209 [@dyn 97] (gas: 100)\n 14850: a1 = u8 [a0 + 0x11]\n 14853: a2 = u8 [a0 + 0x10]\n 14856: a3 = u8 [a0 + 0x12]\n 14859: a4 = u8 [a0 + 0x13]\n 14862: a1 = a1 << 0x8\n 14865: a1 = a1 | a2\n 14868: a3 = a3 << 0x10\n 14871: a4 = a4 << 0x18\n 14874: a3 = a3 | a4\n 14877: a1 = a1 | a3\n 14880: a2 = u8 [a0 + 0x15]\n 14883: a3 = u8 [a0 + 0x14]\n 14886: a4 = u8 [a0 + 0x16]\n 14889: a5 = u8 [a0 + 0x17]\n 14892: a2 = a2 << 0x8\n 14895: a2 = a2 | a3\n 14898: a4 = a4 << 0x10\n 14901: a5 = a5 << 0x18\n 14904: a4 = a4 | a5\n 14907: a2 = a2 | a4\n 14910: a2 = a2 << 0x20\n 14913: t0 = a2 | a1\n 14916: a2 = u8 [a0 + 0x1]\n 14919: a3 = u8 [a0]\n 14921: a4 = u8 [a0 + 0x2]\n 14924: a5 = u8 [a0 + 0x3]\n 14927: a2 = a2 << 0x8\n 14930: a2 = a2 | a3\n 14933: a4 = a4 << 0x10\n 14936: a5 = a5 << 0x18\n 14939: a4 = a4 | a5\n 14942: a2 = a2 | a4\n 14945: a3 = u8 [a0 + 0x5]\n 14948: a4 = u8 [a0 + 0x4]\n 14951: a5 = u8 [a0 + 0x6]\n 14954: s1 = u8 [a0 + 0x7]\n 14957: a3 = a3 << 0x8\n 14960: a3 = a3 | a4\n 14963: a5 = a5 << 0x10\n 14966: s1 = s1 << 0x18\n 14969: a5 = a5 | s1\n 14972: a3 = a3 | a5\n 14975: a3 = a3 << 0x20\n 14978: a2 = a2 | a3\n 14981: a3 = u8 [a0 + 0x19]\n 14984: a4 = u8 [a0 + 0x18]\n 14987: a5 = u8 [a0 + 0x1a]\n 14990: s1 = u8 [a0 + 0x1b]\n 14993: a3 = a3 << 0x8\n 14996: a3 = a3 | a4\n 14999: a5 = a5 << 0x10\n 15002: s1 = s1 << 0x18\n 15005: a5 = a5 | s1\n 15008: a3 = a3 | a5\n 15011: a4 = u8 [a0 + 0x1d]\n 15014: a5 = u8 [a0 + 0x1c]\n 15017: s1 = u8 [a0 + 0x1e]\n 15020: a1 = u8 [a0 + 0x1f]\n 15023: a4 = a4 << 0x8\n 15026: a4 = a4 | a5\n 15029: s1 = s1 << 0x10\n 15032: a1 = a1 << 0x18\n 15035: a1 = a1 | s1\n 15038: a1 = a1 | a4\n 15041: a1 = a1 << 0x20\n 15044: a3 = a3 | a1\n 15047: a1 = u8 [a0 + 0x9]\n 15050: a4 = u8 [a0 + 0x8]\n 15053: a5 = u8 [a0 + 0xa]\n 15056: s1 = u8 [a0 + 0xb]\n 15059: a1 = a1 << 0x8\n 15062: a1 = a1 | a4\n 15065: a5 = a5 << 0x10\n 15068: s1 = s1 << 0x18\n 15071: a5 = a5 | s1\n 15074: a1 = a1 | a5\n 15077: a4 = u8 [a0 + 0xd]\n 15080: a5 = u8 [a0 + 0xc]\n 15083: s1 = u8 [a0 + 0xe]\n 15086: a0 = u8 [a0 + 0xf]\n 15089: a4 = a4 << 0x8\n 15092: a4 = a4 | a5\n 15095: s1 = s1 << 0x10\n 15098: a0 = a0 << 0x18\n 15101: a0 = a0 | s1\n 15104: a0 = a0 | a4\n 15107: a0 = a0 << 0x20\n 15110: a0 = a0 | a1\n 15113: a1 = reverse a0\n 15115: a0 = reverse a3\n 15117: a2 = reverse a2\n 15119: a3 = reverse t0\n 15121: a2 = a2 | a3\n 15124: a3 = a0 | a1\n 15127: a3 = a3 | a2\n 15130: a3 = a3 >> 0x20\n 15133: a1 = a1 | a2\n 15136: a1 = a1 << 0x20\n 15139: a1 = a1 | a3\n 15142: jump @219 if a1 != 0\n      : @210 (gas: 18)\n 15146: a1 = u64 [sp + 0x188]\n 15150: a1 = reverse a1\n 15152: a2 = a1 << 0x20\n 15155: a3 = u64 [sp + 0x190]\n 15159: a3 = reverse a3\n 15161: a3 = a3 >> 0x20\n 15164: a2 = a2 | a3\n 15167: u64 [sp + 0x190] = a2\n 15171: a2 = u64 [sp + 0x198]\n 15175: a2 = reverse a2\n 15177: a2 = a2 << 0x20\n 15180: a1 = a1 >> 0x20\n 15183: a1 = a1 | a2\n 15186: u64 [sp + 0x188] = a1\n 15190: i32 s1 = a0 + 0\n 15192: a1 = 0x20\n 15195: a0 = s1\n 15197: ra = 196, jump @0\n      : @211 [@dyn 98] (gas: 67)\n 15203: a1 = u64 [sp + 0xc8]\n 15207: u8 [a0 + 0x10] = a1\n 15210: a1 = u64 [sp + 0x78]\n 15213: u8 [a0 + 0xf] = a1\n 15216: a1 = u64 [sp + 0x70]\n 15219: u8 [a0 + 0xe] = a1\n 15222: a1 = u64 [sp + 0x68]\n 15225: u8 [a0 + 0xd] = a1\n 15228: a1 = u64 [sp + 0x60]\n 15231: u8 [a0 + 0xc] = a1\n 15234: a1 = u64 [sp + 0x58]\n 15237: u8 [a0 + 0xb] = a1\n 15240: a1 = u64 [sp + 0x50]\n 15243: u8 [a0 + 0xa] = a1\n 15246: a1 = u64 [sp + 0x48]\n 15249: u8 [a0 + 0x9] = a1\n 15252: a1 = u64 [sp + 0x88]\n 15256: u8 [a0 + 0x8] = a1\n 15259: a1 = u64 [sp + 0x40]\n 15262: u8 [a0 + 0x7] = a1\n 15265: a1 = u64 [sp + 0x38]\n 15268: u8 [a0 + 0x6] = a1\n 15271: a1 = u64 [sp + 0x30]\n 15274: u8 [a0 + 0x5] = a1\n 15277: a1 = u64 [sp + 0x28]\n 15280: u8 [a0 + 0x4] = a1\n 15283: a1 = u64 [sp + 0x20]\n 15286: u8 [a0 + 0x3] = a1\n 15289: a1 = u64 [sp + 0x18]\n 15292: u8 [a0 + 0x2] = a1\n 15295: a1 = u64 [sp + 0x10]\n 15298: u8 [a0 + 0x1] = a1\n 15301: a1 = u64 [sp + 0x80]\n 15305: u8 [a0] = a1\n 15307: a1 = u64 [sp + 0xd0]\n 15311: u8 [a0 + 0x18] = a1\n 15314: a1 = u64 [sp + 0xc0]\n 15318: u8 [a0 + 0x17] = a1\n 15321: a1 = u64 [sp + 0xb8]\n 15325: u8 [a0 + 0x16] = a1\n 15328: a1 = u64 [sp + 0xb0]\n 15332: u8 [a0 + 0x15] = a1\n 15335: a1 = u64 [sp + 0xa8]\n 15339: u8 [a0 + 0x14] = a1\n 15342: a1 = u64 [sp + 0xa0]\n 15346: u8 [a0 + 0x13] = a1\n 15349: a1 = u64 [sp + 0x98]\n 15353: u8 [a0 + 0x12] = a1\n 15356: a1 = u64 [sp + 0x90]\n 15360: u8 [a0 + 0x11] = a1\n 15363: a1 = u64 [sp + 0x120]\n 15367: u8 [a0 + 0x1f] = a1\n 15370: a1 = u64 [sp + 0x118]\n 15374: u8 [a0 + 0x1e] = a1\n 15377: a1 = u64 [sp + 0xf8]\n 15381: u8 [a0 + 0x1d] = a1\n 15384: a1 = u64 [sp + 0xf0]\n 15388: u8 [a0 + 0x1c] = a1\n 15391: a1 = u64 [sp + 0xe8]\n 15395: u8 [a0 + 0x1b] = a1\n 15398: a1 = u64 [sp + 0xe0]\n 15402: u8 [a0 + 0x1a] = a1\n 15405: a1 = u64 [sp + 0xd8]\n 15409: u8 [a0 + 0x19] = a1\n 15412: a1 = 0x20\n 15415: a0 = s1\n 15417: ra = 198, jump @0\n      : @212 [@dyn 99] (gas: 36)\n 15423: a1 = u64 [0x20020]\n 15428: a2 = u64 [0x20028]\n 15433: a3 = u64 [0x20030]\n 15438: a4 = u64 [0x20038]\n 15443: u64 [sp + 0x3b8] = a1\n 15447: u64 [sp + 0x3b0] = a2\n 15451: u64 [sp + 0x3a8] = a3\n 15455: u64 [sp + 0x3a0] = a4\n 15459: a1 = u64 [sp + 0x188]\n 15463: a1 = reverse a1\n 15465: a2 = u64 [sp + 0x190]\n 15469: a2 = reverse a2\n 15471: a3 = u64 [sp + 0x198]\n 15475: a3 = a3 << 0x20\n 15478: u64 [sp + 0x3d8] = a2\n 15482: u64 [sp + 0x3d0] = a1\n 15486: u64 [sp + 0x3c8] = a3\n 15490: u64 [sp + 960] = 0\n 15494: a1 = u64 [sp + 0x148]\n 15498: u64 [sp + 0x3f8] = a1\n 15502: a1 = u64 [sp + 0x178]\n 15506: u64 [sp + 0x3f0] = a1\n 15510: a1 = u64 [sp + 0x150]\n 15514: u64 [sp + 0x3e8] = a1\n 15518: u64 [sp + 992] = 0\n 15522: i32 a2 = a0 + 0\n 15524: i32 a0 = sp + 0x3a0\n 15528: a1 = 0x3\n 15531: a3 = 0x20\n 15534: ecalli 6 // 'deposit_event'\n 15536: sp = s0 + 0xfffffffffffffbe0\n 15540: ra = u64 [sp + 0x418]\n 15544: s0 = u64 [sp + 0x410]\n 15548: s1 = u64 [sp + 0x408]\n 15552: sp = sp + 0x420\n 15556: ret\n      : @213 (gas: 11)\n 15558: ra = 0xc8\n 15562: sp = sp + 0xffffffffffffffc0\n 15565: u64 [sp + 0x38] = ra\n 15568: u64 [sp + 0x30] = s0\n 15571: u64 [sp + 0x28] = s1\n 15574: s0 = sp + 0x40\n 15577: sp = sp & 0xffffffffffffffe0\n 15580: a0 = 0x40\n 15583: a1 = 0x20\n 15586: ra = 0x94\n 15590: jump @0\n      : @214 [@dyn 100] (gas: 3)\n 15593: a0 = 0x40\n 15596: a1 = 0x20\n 15599: ra = 202, jump @0\n      : @215 [@dyn 101] (gas: 103)\n 15605: a1 = u8 [a0 + 0x11]\n 15608: a2 = u8 [a0 + 0x10]\n 15611: a3 = u8 [a0 + 0x12]\n 15614: a4 = u8 [a0 + 0x13]\n 15617: a1 = a1 << 0x8\n 15620: a1 = a1 | a2\n 15623: a3 = a3 << 0x10\n 15626: a4 = a4 << 0x18\n 15629: a3 = a3 | a4\n 15632: a1 = a1 | a3\n 15635: a2 = u8 [a0 + 0x15]\n 15638: a3 = u8 [a0 + 0x14]\n 15641: a4 = u8 [a0 + 0x16]\n 15644: a5 = u8 [a0 + 0x17]\n 15647: a2 = a2 << 0x8\n 15650: a2 = a2 | a3\n 15653: a4 = a4 << 0x10\n 15656: a5 = a5 << 0x18\n 15659: a4 = a4 | a5\n 15662: a2 = a2 | a4\n 15665: a2 = a2 << 0x20\n 15668: t0 = a2 | a1\n 15671: a2 = u8 [a0 + 0x1]\n 15674: a3 = u8 [a0]\n 15676: a4 = u8 [a0 + 0x2]\n 15679: a5 = u8 [a0 + 0x3]\n 15682: a2 = a2 << 0x8\n 15685: a2 = a2 | a3\n 15688: a4 = a4 << 0x10\n 15691: a5 = a5 << 0x18\n 15694: a4 = a4 | a5\n 15697: a2 = a2 | a4\n 15700: a3 = u8 [a0 + 0x5]\n 15703: a4 = u8 [a0 + 0x4]\n 15706: a5 = u8 [a0 + 0x6]\n 15709: s1 = u8 [a0 + 0x7]\n 15712: a3 = a3 << 0x8\n 15715: a3 = a3 | a4\n 15718: a5 = a5 << 0x10\n 15721: s1 = s1 << 0x18\n 15724: a5 = a5 | s1\n 15727: a3 = a3 | a5\n 15730: a3 = a3 << 0x20\n 15733: a2 = a2 | a3\n 15736: a3 = u8 [a0 + 0x19]\n 15739: a4 = u8 [a0 + 0x18]\n 15742: a5 = u8 [a0 + 0x1a]\n 15745: s1 = u8 [a0 + 0x1b]\n 15748: a3 = a3 << 0x8\n 15751: a3 = a3 | a4\n 15754: a5 = a5 << 0x10\n 15757: s1 = s1 << 0x18\n 15760: a5 = a5 | s1\n 15763: a3 = a3 | a5\n 15766: a4 = u8 [a0 + 0x1d]\n 15769: a5 = u8 [a0 + 0x1c]\n 15772: s1 = u8 [a0 + 0x1e]\n 15775: a1 = u8 [a0 + 0x1f]\n 15778: a4 = a4 << 0x8\n 15781: a4 = a4 | a5\n 15784: s1 = s1 << 0x10\n 15787: a1 = a1 << 0x18\n 15790: a1 = a1 | s1\n 15793: a1 = a1 | a4\n 15796: a1 = a1 << 0x20\n 15799: a3 = a3 | a1\n 15802: a1 = u8 [a0 + 0x9]\n 15805: a4 = u8 [a0 + 0x8]\n 15808: a5 = u8 [a0 + 0xa]\n 15811: s1 = u8 [a0 + 0xb]\n 15814: a1 = a1 << 0x8\n 15817: a1 = a1 | a4\n 15820: a5 = a5 << 0x10\n 15823: s1 = s1 << 0x18\n 15826: a5 = a5 | s1\n 15829: a1 = a1 | a5\n 15832: a4 = u8 [a0 + 0xd]\n 15835: a5 = u8 [a0 + 0xc]\n 15838: s1 = u8 [a0 + 0xe]\n 15841: a0 = u8 [a0 + 0xf]\n 15844: a4 = a4 << 0x8\n 15847: a4 = a4 | a5\n 15850: s1 = s1 << 0x10\n 15853: a0 = a0 << 0x18\n 15856: a0 = a0 | s1\n 15859: a0 = a0 | a4\n 15862: a0 = a0 << 0x20\n 15865: a0 = a0 | a1\n 15868: s1 = reverse a0\n 15870: a1 = reverse a3\n 15872: a2 = reverse a2\n 15874: a0 = reverse t0\n 15876: u64 [sp + 0x198] = a0\n 15880: u64 [sp + 0x190] = a2\n 15884: a0 = a0 | a2\n 15887: a2 = a1\n 15889: a1 = a1 | s1\n 15892: a1 = a1 | a0\n 15895: a1 = a1 >> 0x20\n 15898: a0 = a0 | s1\n 15901: a0 = a0 << 0x20\n 15904: a0 = a0 | a1\n 15907: jump @219 if a0 != 0\n      : @216 (gas: 5)\n 15911: u64 [sp + 0x188] = a2\n 15915: i32 a0 = a2 + 0\n 15917: a1 = 0x20\n 15920: u64 [sp + 0x180] = a0\n 15924: ra = 204, jump @0\n      : @217 [@dyn 102] (gas: 50)\n 15930: u8 [a0 + 31] = 0\n 15933: u8 [a0 + 30] = 0\n 15936: u8 [a0 + 29] = 0\n 15939: u8 [a0 + 28] = 0\n 15942: u8 [a0 + 27] = 0\n 15945: u8 [a0 + 26] = 0\n 15948: u8 [a0 + 25] = 0\n 15951: u8 [a0 + 24] = 0\n 15954: u8 [a0 + 23] = 0\n 15957: u8 [a0 + 22] = 0\n 15960: u8 [a0 + 21] = 0\n 15963: u8 [a0 + 20] = 0\n 15966: u8 [a0 + 19] = 0\n 15969: u8 [a0 + 18] = 0\n 15972: u8 [a0 + 17] = 0\n 15975: u8 [a0 + 16] = 0\n 15978: u8 [a0 + 15] = 0\n 15981: u8 [a0 + 14] = 0\n 15984: u8 [a0 + 13] = 0\n 15987: u8 [a0 + 12] = 0\n 15990: u8 [a0 + 11] = 0\n 15993: u8 [a0 + 10] = 0\n 15996: u8 [a0 + 9] = 0\n 15999: u8 [a0 + 8] = 0\n 16002: u8 [a0 + 7] = 0\n 16005: u8 [a0 + 6] = 0\n 16008: u8 [a0 + 5] = 0\n 16011: u8 [a0 + 4] = 0\n 16014: u8 [a0 + 3] = 0xa0\n 16019: u8 [a0 + 2] = 0x79\n 16023: u8 [a0 + 1] = 0xc3\n 16028: u8 [a0 + 0] = 0x8\n 16031: a1 = u64 [sp + 0x188]\n 16035: a0 = a1 + 0x4\n 16038: a1 = a0 <u a1\n 16041: a3 = u64 [sp + 0x198]\n 16045: a2 = a3 + a1\n 16048: a3 = a2 <u a3\n 16051: a3 = a1 if a1 == 0\n 16054: a3 = a3 + s1\n 16057: a1 = a3 <u s1\n 16060: a4 = u64 [sp + 0x190]\n 16064: a4 = a4 + a1\n 16067: u64 [sp + 0x1e8] = a2\n 16071: u64 [sp + 0x1e0] = a0\n 16075: u64 [sp + 0x1f0] = a3\n 16079: a0 = sp + 0x200\n 16083: a1 = sp + 0x1e0\n 16087: u64 [sp + 0x1f8] = a4\n 16091: ra = 206, jump @168\n      : @218 [@dyn 103] (gas: 30)\n 16097: a0 = u64 [sp + 0x208]\n 16101: t0 = u64 [sp + 0x218]\n 16105: t1 = u64 [sp + 0x200]\n 16109: a3 = u64 [sp + 0x210]\n 16113: a1 = u64 [sp + 0x198]\n 16117: a4 = a0 ^ a1\n 16120: a5 = a0 <u a1\n 16123: t2 = a1\n 16125: a2 = u64 [sp + 0x188]\n 16129: a1 = t1 <u a2\n 16132: a5 = a1 if a4 == 0\n 16135: a4 = a3 - s1\n 16138: a3 = a3 <u s1\n 16141: s1 = u64 [sp + 0x190]\n 16145: s1 = t0 - s1\n 16148: s1 = s1 - a3\n 16151: a3 = a4 <u a5\n 16154: s1 = s1 - a3\n 16157: a4 = a4 - a5\n 16160: a0 = a0 - t2\n 16163: a1 = a0 - a1\n 16166: a0 = t1 - a2\n 16169: a1 = a1 | s1\n 16172: a2 = a0 | a4\n 16175: a2 = a2 | a1\n 16178: a1 = a1 | a4\n 16181: a2 = a2 >> 0x20\n 16184: a1 = a1 << 0x20\n 16187: a1 = a1 | a2\n 16190: jump @228 if a1 == 0\n      : @219 (gas: 1)\n 16194: trap\n      : @220 (gas: 3)\n 16195: a0 = 0\n 16197: a1 = 0\n 16199: ra = 208, jump @0\n      : @221 [@dyn 104] (gas: 5)\n 16205: i32 a1 = a0 + 0\n 16207: a0 = 0x1\n 16210: a2 = 0\n 16212: ecalli 12 // 'seal_return'\n 16214: fallthrough\n      : @222 (gas: 8)\n 16215: u64 [sp + 464] = 0\n 16219: u64 [sp + 456] = 0\n 16223: u64 [sp + 448] = 0\n 16227: a0 = 0x4e487b7100000000\n 16237: a1 = sp + 0x1c0\n 16241: u64 [sp + 0x1d8] = a0\n 16245: a0 = 0\n 16247: ra = 210, jump @8\n      : @223 [@dyn 105] (gas: 8)\n 16253: u64 [sp + 440] = 0\n 16257: u64 [sp + 432] = 0\n 16261: u64 [sp + 416] = 0x41\n 16266: a0 = 0x4\n 16269: a1 = sp + 0x1a0\n 16273: u64 [sp + 424] = 0\n 16277: ra = 0xd6\n 16281: jump @8\n      : @224 (gas: 8)\n 16284: u64 [sp + 592] = 0\n 16288: u64 [sp + 584] = 0\n 16292: u64 [sp + 576] = 0\n 16296: a0 = 0x4e487b7100000000\n 16306: a1 = sp + 0x240\n 16310: u64 [sp + 0x258] = a0\n 16314: a0 = 0\n 16316: ra = 212, jump @8\n      : @225 [@dyn 106] (gas: 7)\n 16322: u64 [sp + 568] = 0\n 16326: u64 [sp + 560] = 0\n 16330: u64 [sp + 544] = 0x11\n 16335: a0 = 0x4\n 16338: a1 = sp + 0x220\n 16342: u64 [sp + 552] = 0\n 16346: ra = 214, jump @8\n      : @226 [@dyn 107] (gas: 3)\n 16352: a1 = 0x24\n 16355: a0 = 0\n 16357: ra = 216, jump @0\n      : @227 [@dyn 108] (gas: 5)\n 16363: i32 a1 = a0 + 0\n 16365: a0 = 0x1\n 16368: a2 = 0x24\n 16371: ecalli 12 // 'seal_return'\n 16373: fallthrough\n      : @228 (gas: 4)\n 16374: i32 s1 = a0 + 0\n 16376: a0 = u64 [sp + 0x180]\n 16380: a1 = s1\n 16382: ra = 218, jump @0\n      : @229 [@dyn 109] (gas: 7)\n 16388: i32 a1 = a0 + 0\n 16390: a0 = 0x1\n 16393: a2 = s1\n 16395: ecalli 12 // 'seal_return'\n 16397: a0 = 0\n 16399: ra = 0xdc\n 16403: jump @10\n      : @230 [export #0: 'call'] (gas: 2)\n 16406: a0 = 0\n 16408: ra = 220, jump @10\n      : @231 [@dyn 110] [export #1: 'deploy'] (gas: 2)\n 16414: a0 = 0x1\n 16417: ra = 222, jump @10\n      : @232 [@dyn 111] (gas: 9)\n 16423: sp = sp + 0xffffffffffffffc0\n 16426: u64 [sp + 0x38] = ra\n 16429: u64 [sp + 0x30] = s0\n 16432: u64 [sp + 0x28] = s1\n 16435: s0 = sp + 0x40\n 16438: sp = sp & 0xfffffffffffffff0\n 16441: s1 = a0\n 16443: a0 = sp\n 16445: ra = 224, jump @38\n      : @233 [@dyn 112] (gas: 14)\n 16451: a0 = u64 [sp + 0x10]\n 16454: a1 = u64 [sp + 0x18]\n 16457: a2 = u64 [sp]\n 16459: a3 = u64 [sp + 0x8]\n 16462: u64 [s1 + 0x10] = a0\n 16465: u64 [s1 + 0x18] = a1\n 16468: u64 [s1] = a2\n 16470: u64 [s1 + 0x8] = a3\n 16473: sp = s0 + 0xffffffffffffffc0\n 16476: ra = u64 [sp + 0x38]\n 16479: s0 = u64 [sp + 0x30]\n 16482: s1 = u64 [sp + 0x28]\n 16485: sp = sp + 0x40\n 16488: ret\n",
						"bytecode": {
							"object": ""
						},
						"deployedBytecode": {
							"object": ""
						},
						"methodIdentifiers": {
							"depositERC20(address,uint256)": "97feb926",
							"erc20Deposits(address,address)": "a0b3f3e1",
							"requestXcmLock(address,uint256,bytes32)": "483903d5"
						}
					},
					"irOptimized": "/// @use-src 1:\"contracts/v2/CollateralVault.sol\"\nobject \"CollateralVault_193\" {\n    code {\n        {\n            /// @src 1:169:1450  \"contract CollateralVault {...\"\n            mstore(64, memoryguard(0x80))\n            if callvalue()\n            {\n                revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb()\n            }\n            let _1 := allocate_unbounded()\n            codecopy(_1, dataoffset(\"CollateralVault_193_deployed\"), datasize(\"CollateralVault_193_deployed\"))\n            return(_1, datasize(\"CollateralVault_193_deployed\"))\n        }\n        function allocate_unbounded() -> memPtr\n        { memPtr := mload(64) }\n        function revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb()\n        { revert(0, 0) }\n    }\n    /// @use-src 1:\"contracts/v2/CollateralVault.sol\"\n    object \"CollateralVault_193_deployed\" {\n        code {\n            {\n                /// @src 1:169:1450  \"contract CollateralVault {...\"\n                mstore(64, memoryguard(0x80))\n                if iszero(lt(calldatasize(), 4))\n                {\n                    let selector := shift_right_unsigned(calldataload(0))\n                    switch selector\n                    case 0x483903d5 { external_fun_requestXcmLock() }\n                    case 0x97feb926 { external_fun_depositERC20() }\n                    case 0xa0b3f3e1 { external_fun_erc20Deposits() }\n                    default { }\n                }\n                revert_error_42b3090547df1d2001c96683413b8cf91c1b902ef5e3cb8d9f6f304cf7446f74()\n            }\n            function shift_right_unsigned(value) -> newValue\n            { newValue := shr(224, value) }\n            function allocate_unbounded() -> memPtr\n            { memPtr := mload(64) }\n            function revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb()\n            { revert(0, 0) }\n            function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b()\n            { revert(0, 0) }\n            function cleanup_uint160(value) -> cleaned\n            {\n                cleaned := and(value, sub(shl(160, 1), 1))\n            }\n            function cleanup_address(value) -> cleaned\n            {\n                cleaned := cleanup_uint160(value)\n            }\n            function validator_revert_address(value)\n            {\n                if iszero(eq(value, cleanup_address(value))) { revert(0, 0) }\n            }\n            function abi_decode_address(offset, end) -> value\n            {\n                value := calldataload(offset)\n                validator_revert_address(value)\n            }\n            function cleanup_uint256(value) -> cleaned\n            { cleaned := value }\n            function validator_revert_uint256(value)\n            {\n                if iszero(eq(value, cleanup_uint256(value))) { revert(0, 0) }\n            }\n            function abi_decode_uint256(offset, end) -> value\n            {\n                value := calldataload(offset)\n                validator_revert_uint256(value)\n            }\n            function cleanup_bytes32(value) -> cleaned\n            { cleaned := value }\n            function validator_revert_bytes32(value)\n            {\n                if iszero(eq(value, cleanup_bytes32(value))) { revert(0, 0) }\n            }\n            function abi_decode_bytes32(offset, end) -> value\n            {\n                value := calldataload(offset)\n                validator_revert_bytes32(value)\n            }\n            function abi_decode_addresst_uint256t_bytes32(headStart, dataEnd) -> value0, value1, value2\n            {\n                if slt(sub(dataEnd, headStart), 96)\n                {\n                    revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b()\n                }\n                let offset := 0\n                value0 := abi_decode_address(add(headStart, offset), dataEnd)\n                let offset_1 := 32\n                value1 := abi_decode_uint256(add(headStart, offset_1), dataEnd)\n                let offset_2 := 64\n                value2 := abi_decode_bytes32(add(headStart, offset_2), dataEnd)\n            }\n            function abi_encode_tuple(headStart) -> tail\n            { tail := add(headStart, 0) }\n            function external_fun_requestXcmLock()\n            {\n                if callvalue()\n                {\n                    revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb()\n                }\n                let param, param_1, param_2 := abi_decode_addresst_uint256t_bytes32(4, calldatasize())\n                fun_requestXcmLock(param, param_1, param_2)\n                let memPos := allocate_unbounded()\n                let memEnd := abi_encode_tuple(memPos)\n                return(memPos, sub(memEnd, memPos))\n            }\n            function abi_decode_addresst_uint256(headStart, dataEnd) -> value0, value1\n            {\n                if slt(sub(dataEnd, headStart), 64)\n                {\n                    revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b()\n                }\n                let offset := 0\n                value0 := abi_decode_address(add(headStart, offset), dataEnd)\n                let offset_1 := 32\n                value1 := abi_decode_uint256(add(headStart, offset_1), dataEnd)\n            }\n            function external_fun_depositERC20()\n            {\n                if callvalue()\n                {\n                    revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb()\n                }\n                let param, param_1 := abi_decode_addresst_uint256(4, calldatasize())\n                fun_depositERC20(param, param_1)\n                let memPos := allocate_unbounded()\n                let memEnd := abi_encode_tuple(memPos)\n                return(memPos, sub(memEnd, memPos))\n            }\n            function abi_decode_addresst_address(headStart, dataEnd) -> value0, value1\n            {\n                if slt(sub(dataEnd, headStart), 64)\n                {\n                    revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b()\n                }\n                let offset := 0\n                value0 := abi_decode_address(add(headStart, offset), dataEnd)\n                let offset_1 := 32\n                value1 := abi_decode_address(add(headStart, offset_1), dataEnd)\n            }\n            function identity(value) -> ret\n            { ret := value }\n            function convert_uint160_to_uint160(value) -> converted\n            {\n                converted := cleanup_uint160(identity(cleanup_uint160(value)))\n            }\n            function convert_uint160_to_address(value) -> converted\n            {\n                converted := convert_uint160_to_uint160(value)\n            }\n            function convert_address_to_address(value) -> converted\n            {\n                converted := convert_uint160_to_address(value)\n            }\n            function mapping_index_access_mapping_address_mapping_address_uint256_of_address(slot, key) -> dataSlot\n            {\n                mstore(0, convert_address_to_address(key))\n                mstore(0x20, slot)\n                dataSlot := keccak256(0, 0x40)\n            }\n            function mapping_index_access_mapping_address_uint256_of_address(slot, key) -> dataSlot\n            {\n                mstore(0, convert_address_to_address(key))\n                mstore(0x20, slot)\n                dataSlot := keccak256(0, 0x40)\n            }\n            function shift_right_unsigned_dynamic(bits, value) -> newValue\n            { newValue := shr(bits, value) }\n            function cleanup_from_storage_uint256(value) -> cleaned\n            { cleaned := value }\n            function extract_from_storage_value_dynamict_uint256(slot_value, offset) -> value\n            {\n                value := cleanup_from_storage_uint256(shift_right_unsigned_dynamic(mul(offset, 8), slot_value))\n            }\n            function read_from_storage_split_dynamic_uint256(slot, offset) -> value\n            {\n                value := extract_from_storage_value_dynamict_uint256(sload(slot), offset)\n            }\n            /// @ast-id 87 @src 1:243:311  \"mapping(address => mapping(address => uint256)) public erc20Deposits\"\n            function getter_fun_erc20Deposits(key, key_1) -> ret\n            {\n                let slot := 0\n                let offset := 0\n                slot := mapping_index_access_mapping_address_mapping_address_uint256_of_address(slot, key)\n                slot := mapping_index_access_mapping_address_uint256_of_address(slot, key_1)\n                ret := read_from_storage_split_dynamic_uint256(slot, offset)\n            }\n            /// @src 1:169:1450  \"contract CollateralVault {...\"\n            function abi_encode_uint256_to_uint256(value, pos)\n            {\n                mstore(pos, cleanup_uint256(value))\n            }\n            function abi_encode_uint256(headStart, value0) -> tail\n            {\n                tail := add(headStart, 32)\n                abi_encode_uint256_to_uint256(value0, add(headStart, 0))\n            }\n            function external_fun_erc20Deposits()\n            {\n                if callvalue()\n                {\n                    revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb()\n                }\n                let param, param_1 := abi_decode_addresst_address(4, calldatasize())\n                let ret := getter_fun_erc20Deposits(param, param_1)\n                let memPos := allocate_unbounded()\n                let memEnd := abi_encode_uint256(memPos, ret)\n                return(memPos, sub(memEnd, memPos))\n            }\n            function revert_error_42b3090547df1d2001c96683413b8cf91c1b902ef5e3cb8d9f6f304cf7446f74()\n            { revert(0, 0) }\n            function shift_right_0_unsigned(value) -> newValue\n            { newValue := shr(0, value) }\n            function extract_from_storage_value_offset_uint256(slot_value) -> value\n            {\n                value := cleanup_from_storage_uint256(shift_right_0_unsigned(slot_value))\n            }\n            function read_from_storage_split_offset_uint256(slot) -> value\n            {\n                value := extract_from_storage_value_offset_uint256(sload(slot))\n            }\n            function array_storeLengthForEncoding_string(pos, length) -> updated_pos\n            {\n                mstore(pos, length)\n                updated_pos := add(pos, 0x20)\n            }\n            function store_literal_in_memory_c9a6548b8b08f3e884692ff4b4c5cb58e1633771e97667c355d207e48aa0a8aa(memPtr)\n            {\n                mstore(add(memPtr, 0), \"Insufficient collateral\")\n            }\n            function abi_encode_stringliteral_c9a6548b8b08f3e884692ff4b4c5cb58e1633771e97667c355d207e48aa0a8aa(pos) -> end\n            {\n                pos := array_storeLengthForEncoding_string(pos, 23)\n                store_literal_in_memory_c9a6548b8b08f3e884692ff4b4c5cb58e1633771e97667c355d207e48aa0a8aa(pos)\n                end := add(pos, 32)\n            }\n            function abi_encode_stringliteral_c9a6(headStart) -> tail\n            {\n                tail := add(headStart, 32)\n                mstore(add(headStart, 0), sub(tail, headStart))\n                tail := abi_encode_stringliteral_c9a6548b8b08f3e884692ff4b4c5cb58e1633771e97667c355d207e48aa0a8aa(tail)\n            }\n            function require_helper_stringliteral_c9a6(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := allocate_unbounded()\n                    mstore(memPtr, shl(229, 4594637))\n                    let end := abi_encode_stringliteral_c9a6(add(memPtr, 4))\n                    revert(memPtr, sub(end, memPtr))\n                }\n            }\n            function panic_error_0x11()\n            {\n                mstore(0, shl(224, 0x4e487b71))\n                mstore(4, 0x11)\n                revert(0, 0x24)\n            }\n            function checked_sub_uint256(x, y) -> diff\n            {\n                x := cleanup_uint256(x)\n                y := cleanup_uint256(y)\n                diff := sub(x, y)\n                if gt(diff, x) { panic_error_0x11() }\n            }\n            function shift_left(value) -> newValue\n            { newValue := shl(0, value) }\n            function update_byte_slice_shift(value, toInsert) -> result\n            {\n                let mask := not(0)\n                toInsert := shift_left(toInsert)\n                value := and(value, not(mask))\n                result := or(value, and(toInsert, mask))\n            }\n            function convert_uint256_to_uint256(value) -> converted\n            {\n                converted := cleanup_uint256(identity(cleanup_uint256(value)))\n            }\n            function prepare_store_uint256(value) -> ret\n            { ret := value }\n            function update_storage_value_offset_uint256_to_uint256(slot, value)\n            {\n                let convertedValue := convert_uint256_to_uint256(value)\n                sstore(slot, update_byte_slice_shift(sload(slot), prepare_store_uint256(convertedValue)))\n            }\n            function abi_encode_address(value, pos)\n            {\n                mstore(pos, cleanup_address(value))\n            }\n            function abi_encode_bytes32(value, pos)\n            {\n                mstore(pos, cleanup_bytes32(value))\n            }\n            function abi_encode_address_uint256_bytes32(headStart, value0, value1, value2) -> tail\n            {\n                tail := add(headStart, 96)\n                abi_encode_address(value0, add(headStart, 0))\n                abi_encode_uint256_to_uint256(value1, add(headStart, 32))\n                abi_encode_bytes32(value2, add(headStart, 64))\n            }\n            /// @ast-id 192 @src 1:1050:1448  \"function requestXcmLock(...\"\n            function fun_requestXcmLock(var_token, var_amount, var_destChain)\n            {\n                /// @src 1:1187:1200  \"erc20Deposits\"\n                let _1_slot := 0x00\n                let expr_158_slot := _1_slot\n                /// @src 1:1201:1211  \"msg.sender\"\n                let expr := caller()\n                /// @src 1:1187:1212  \"erc20Deposits[msg.sender]\"\n                let _1 := mapping_index_access_mapping_address_mapping_address_uint256_of_address(expr_158_slot, expr)\n                let _slot := _1\n                let expr_slot := _slot\n                /// @src 1:1213:1218  \"token\"\n                let _2 := var_token\n                let expr_1 := _2\n                /// @src 1:1187:1219  \"erc20Deposits[msg.sender][token]\"\n                let _3 := mapping_index_access_mapping_address_uint256_of_address(expr_slot, expr_1)\n                let _4 := read_from_storage_split_offset_uint256(_3)\n                let expr_2 := _4\n                /// @src 1:1173:1219  \"uint256 bal = erc20Deposits[msg.sender][token]\"\n                let var_bal := expr_2\n                /// @src 1:1237:1240  \"bal\"\n                let _5 := var_bal\n                let expr_3 := _5\n                /// @src 1:1244:1250  \"amount\"\n                let _6 := var_amount\n                let expr_4 := _6\n                /// @src 1:1237:1250  \"bal >= amount\"\n                let expr_5 := iszero(lt(cleanup_uint256(expr_3), cleanup_uint256(expr_4)))\n                /// @src 1:1229:1278  \"require(bal >= amount, \\\"Insufficient collateral\\\")\"\n                require_helper_stringliteral_c9a6(expr_5)\n                /// @src 1:1323:1326  \"bal\"\n                let _7 := var_bal\n                let expr_6 := _7\n                /// @src 1:1329:1335  \"amount\"\n                let _8 := var_amount\n                let expr_7 := _8\n                /// @src 1:1323:1335  \"bal - amount\"\n                let expr_8 := checked_sub_uint256(expr_6, expr_7)\n                /// @src 1:1288:1301  \"erc20Deposits\"\n                let _11_slot := 0x00\n                let expr_172_slot := _11_slot\n                /// @src 1:1302:1312  \"msg.sender\"\n                let expr_9 := caller()\n                /// @src 1:1288:1313  \"erc20Deposits[msg.sender]\"\n                let _9 := mapping_index_access_mapping_address_mapping_address_uint256_of_address(expr_172_slot, expr_9)\n                let _13_slot := _9\n                let expr_176_slot := _13_slot\n                /// @src 1:1314:1319  \"token\"\n                let _10 := var_token\n                let expr_10 := _10\n                /// @src 1:1288:1320  \"erc20Deposits[msg.sender][token]\"\n                let _11 := mapping_index_access_mapping_address_uint256_of_address(expr_176_slot, expr_10)\n                /// @src 1:1288:1335  \"erc20Deposits[msg.sender][token] = bal - amount\"\n                update_storage_value_offset_uint256_to_uint256(_11, expr_8)\n                /// @src 1:1395:1405  \"msg.sender\"\n                let expr_11 := caller()\n                /// @src 1:1407:1412  \"token\"\n                let _12 := var_token\n                let expr_12 := _12\n                /// @src 1:1414:1420  \"amount\"\n                let _13 := var_amount\n                let expr_13 := _13\n                /// @src 1:1422:1431  \"destChain\"\n                let _14 := var_destChain\n                let expr_14 := _14\n                /// @src 1:1350:1441  \"CrossChainCollateralLockRequested(...\"\n                let _15 := 0xf746b4e867caa1c779b2957f2350da4ac7910dc9e7f2da7cafa9d9d5763a55b1\n                let _16 := convert_address_to_address(expr_11)\n                let _17 := allocate_unbounded()\n                let _18 := abi_encode_address_uint256_bytes32(_17, expr_12, expr_13, expr_14)\n                log2(_17, sub(_18, _17), _15, _16)\n            }\n            /// @src 1:169:1450  \"contract CollateralVault {...\"\n            function convert_uint160_to_contract_IERC20(value) -> converted\n            {\n                converted := convert_uint160_to_uint160(value)\n            }\n            function convert_address_to_contract_IERC20(value) -> converted\n            {\n                converted := convert_uint160_to_contract_IERC20(value)\n            }\n            function convert_contract_IERC20_to_address(value) -> converted\n            {\n                converted := convert_uint160_to_address(value)\n            }\n            function convert_contract_CollateralVault_to_address(value) -> converted\n            {\n                converted := convert_uint160_to_address(value)\n            }\n            function round_up_to_mul_of(value) -> result\n            {\n                result := and(add(value, 31), not(31))\n            }\n            function panic_error_0x41()\n            {\n                mstore(0, shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(0, 0x24)\n            }\n            function finalize_allocation(memPtr, size)\n            {\n                let newFreePtr := add(memPtr, round_up_to_mul_of(size))\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n                mstore(64, newFreePtr)\n            }\n            function shift_left_224(value) -> newValue\n            { newValue := shl(224, value) }\n            function cleanup_bool(value) -> cleaned\n            {\n                cleaned := iszero(iszero(value))\n            }\n            function validator_revert_bool(value)\n            {\n                if iszero(eq(value, cleanup_bool(value))) { revert(0, 0) }\n            }\n            function abi_decode_t_bool_fromMemory(offset, end) -> value\n            {\n                value := mload(offset)\n                validator_revert_bool(value)\n            }\n            function abi_decode_bool_fromMemory(headStart, dataEnd) -> value0\n            {\n                if slt(sub(dataEnd, headStart), 32)\n                {\n                    revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b()\n                }\n                let offset := 0\n                value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n            }\n            function abi_encode_address_address_uint256(headStart, value0, value1, value2) -> tail\n            {\n                tail := add(headStart, 96)\n                abi_encode_address(value0, add(headStart, 0))\n                abi_encode_address(value1, add(headStart, 32))\n                abi_encode_uint256_to_uint256(value2, add(headStart, 64))\n            }\n            function revert_forward()\n            {\n                let pos := allocate_unbounded()\n                returndatacopy(pos, 0, returndatasize())\n                revert(pos, returndatasize())\n            }\n            function store_literal_in_memory_149f6edbc245165298a5933e2b8185447f0287d5f0366944583def754930bcff(memPtr)\n            {\n                mstore(add(memPtr, 0), \"ERC20 transfer failed\")\n            }\n            function abi_encode_stringliteral_149f6edbc245165298a5933e2b8185447f0287d5f0366944583def754930bcff(pos) -> end\n            {\n                pos := array_storeLengthForEncoding_string(pos, 21)\n                store_literal_in_memory_149f6edbc245165298a5933e2b8185447f0287d5f0366944583def754930bcff(pos)\n                end := add(pos, 32)\n            }\n            function abi_encode_stringliteral_149f(headStart) -> tail\n            {\n                tail := add(headStart, 32)\n                mstore(add(headStart, 0), sub(tail, headStart))\n                tail := abi_encode_stringliteral_149f6edbc245165298a5933e2b8185447f0287d5f0366944583def754930bcff(tail)\n            }\n            function require_helper_stringliteral_149f(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := allocate_unbounded()\n                    mstore(memPtr, shl(229, 4594637))\n                    let end := abi_encode_stringliteral_149f(add(memPtr, 4))\n                    revert(memPtr, sub(end, memPtr))\n                }\n            }\n            function checked_add_uint256(x, y) -> sum\n            {\n                x := cleanup_uint256(x)\n                y := cleanup_uint256(y)\n                sum := add(x, y)\n                if gt(x, sum) { panic_error_0x11() }\n            }\n            /// @ast-id 146 @src 1:665:981  \"function depositERC20(address token, uint256 amount) external {...\"\n            function fun_depositERC20(var_token, var_amount)\n            {\n                /// @src 1:765:770  \"token\"\n                let _1 := var_token\n                let expr := _1\n                /// @src 1:758:771  \"IERC20(token)\"\n                let expr_116_address := convert_address_to_contract_IERC20(expr)\n                /// @src 1:758:784  \"IERC20(token).transferFrom\"\n                let expr_address := convert_contract_IERC20_to_address(expr_116_address)\n                let expr_functionSelector := 0x23b872dd\n                /// @src 1:785:795  \"msg.sender\"\n                let expr_1 := caller()\n                /// @src 1:805:809  \"this\"\n                let expr_122_address := address()\n                /// @src 1:797:810  \"address(this)\"\n                let expr_2 := convert_contract_CollateralVault_to_address(expr_122_address)\n                /// @src 1:812:818  \"amount\"\n                let _2 := var_amount\n                let expr_3 := _2\n                /// @src 1:758:819  \"IERC20(token).transferFrom(msg.sender, address(this), amount)\"\n                let _3 := allocate_unbounded()\n                mstore(_3, shift_left_224(expr_functionSelector))\n                let _4 := abi_encode_address_address_uint256(add(_3, 4), expr_1, expr_2, expr_3)\n                let _5 := call(gas(), expr_address, 0, _3, sub(_4, _3), _3, 32)\n                if iszero(_5) { revert_forward() }\n                let expr_4\n                if _5\n                {\n                    let _6 := 32\n                    if gt(_6, returndatasize()) { _6 := returndatasize() }\n                    finalize_allocation(_3, _6)\n                    expr_4 := abi_decode_bool_fromMemory(_3, add(_3, _6))\n                }\n                /// @src 1:737:866  \"require(...\"\n                require_helper_stringliteral_149f(expr_4)\n                /// @src 1:912:918  \"amount\"\n                let _7 := var_amount\n                let expr_5 := _7\n                /// @src 1:876:889  \"erc20Deposits\"\n                let _30_slot := 0x00\n                let expr_129_slot := _30_slot\n                /// @src 1:890:900  \"msg.sender\"\n                let expr_6 := caller()\n                /// @src 1:876:901  \"erc20Deposits[msg.sender]\"\n                let _8 := mapping_index_access_mapping_address_mapping_address_uint256_of_address(expr_129_slot, expr_6)\n                let _32_slot := _8\n                let expr_133_slot := _32_slot\n                /// @src 1:902:907  \"token\"\n                let _9 := var_token\n                let expr_7 := _9\n                /// @src 1:876:908  \"erc20Deposits[msg.sender][token]\"\n                let _10 := mapping_index_access_mapping_address_uint256_of_address(expr_133_slot, expr_7)\n                /// @src 1:876:918  \"erc20Deposits[msg.sender][token] += amount\"\n                let _11 := read_from_storage_split_offset_uint256(_10)\n                let expr_8 := checked_add_uint256(_11, expr_5)\n                update_storage_value_offset_uint256_to_uint256(_10, expr_8)\n                /// @src 1:948:958  \"msg.sender\"\n                let expr_9 := caller()\n                /// @src 1:960:965  \"token\"\n                let _12 := var_token\n                let expr_10 := _12\n                /// @src 1:967:973  \"amount\"\n                let _13 := var_amount\n                let expr_11 := _13\n                /// @src 1:933:974  \"ERC20Deposited(msg.sender, token, amount)\"\n                let _14 := 0xe33e9822e3317b004d587136bab2627ea1ecfbba4eb79abddd0a56cfdd09c0e1\n                let _15 := convert_address_to_address(expr_9)\n                let _16 := convert_address_to_address(expr_10)\n                let _17 := allocate_unbounded()\n                let _18 := abi_encode_uint256(_17, expr_11)\n                log3(_17, sub(_18, _17), _14, _15, _16)\n            }\n        }\n        data \".metadata\" hex\"a2646970667358221220099b86a1aabb1e7d259d2c7c19fe9a22c257ede8589b56d1cf465e1bd201c73464736f6c634300081c0033\"\n    }\n}\n",
					"hash": "de775d2ff7fa5486a8e52446bac0d223906d02d984ea134e5290245217666113",
					"factoryDependencies": {}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"id": 0,
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						]
					},
					"id": 78,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:0",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 77,
							"linearizedBaseContracts": [
								77
							],
							"name": "IERC20",
							"nameLocation": "214:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 11,
									"name": "Transfer",
									"nameLocation": "396:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "405:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "427:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "447:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:0"
									},
									"src": "390:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 20,
									"name": "Approval",
									"nameLocation": "627:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "636:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "659:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 18,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "684:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 17,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:0"
									},
									"src": "621:78:0"
								},
								{
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:0",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "821:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 23,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:0"
									},
									"scope": 77,
									"src": "775:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:0",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 34,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "931:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "971:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:0"
									},
									"scope": 77,
									"src": "912:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:0",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1222:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1234:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1267:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:0"
									},
									"scope": 77,
									"src": "1204:69:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 54,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1567:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1582:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:0"
									},
									"returnParameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1622:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:0"
									},
									"scope": 77,
									"src": "1548:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:0",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 64,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2326:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2343:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2376:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 61,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:0"
									},
									"scope": 77,
									"src": "2309:73:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:0",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 76,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2712:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2726:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2738:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 70,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2771:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 73,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:0"
									},
									"scope": 77,
									"src": "2690:87:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 78,
							"src": "204:2575:0",
							"usedErrors": [],
							"usedEvents": [
								11,
								20
							]
						}
					],
					"src": "106:2674:0"
				}
			},
			"contracts/v2/CollateralVault.sol": {
				"id": 1,
				"ast": {
					"absolutePath": "contracts/v2/CollateralVault.sol",
					"exportedSymbols": {
						"CollateralVault": [
							193
						],
						"IERC20": [
							77
						]
					},
					"id": 194,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 79,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".18"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 80,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 194,
							"sourceUnit": 78,
							"src": "58:56:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "CollateralVault",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 81,
								"nodeType": "StructuredDocumentation",
								"src": "116:53:1",
								"text": "@notice Minimal ERC20-only vault + XCM-lock stub"
							},
							"fullyImplemented": true,
							"id": 193,
							"linearizedBaseContracts": [
								193
							],
							"name": "CollateralVault",
							"nameLocation": "178:15:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "a0b3f3e1",
									"id": 87,
									"mutability": "mutable",
									"name": "erc20Deposits",
									"nameLocation": "298:13:1",
									"nodeType": "VariableDeclaration",
									"scope": 193,
									"src": "243:68:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 86,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 82,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "251:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "243:47:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 85,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 83,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "270:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "262:27:1",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 84,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "281:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "e33e9822e3317b004d587136bab2627ea1ecfbba4eb79abddd0a56cfdd09c0e1",
									"id": 95,
									"name": "ERC20Deposited",
									"nameLocation": "324:14:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 94,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 89,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "364:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 95,
												"src": "348:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 88,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "348:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 91,
												"indexed": true,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "394:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 95,
												"src": "378:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 90,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "378:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 93,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "425:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 95,
												"src": "409:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 92,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "409:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "338:99:1"
									},
									"src": "318:120:1"
								},
								{
									"anonymous": false,
									"eventSelector": "f746b4e867caa1c779b2957f2350da4ac7910dc9e7f2da7cafa9d9d5763a55b1",
									"id": 105,
									"name": "CrossChainCollateralLockRequested",
									"nameLocation": "450:33:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 104,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 97,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "509:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 105,
												"src": "493:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 96,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "493:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 99,
												"indexed": false,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "539:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 105,
												"src": "523:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 98,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "523:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 101,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "570:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 105,
												"src": "554:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 100,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "554:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 103,
												"indexed": false,
												"mutability": "mutable",
												"name": "destChain",
												"nameLocation": "602:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 105,
												"src": "586:25:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 102,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "586:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "483:134:1"
									},
									"src": "444:174:1"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "727:254:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 118,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "785:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 119,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "789:6:1",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "785:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 122,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "805:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_CollateralVault_$193",
																				"typeString": "contract CollateralVault"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_CollateralVault_$193",
																				"typeString": "contract CollateralVault"
																			}
																		],
																		"id": 121,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "797:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 120,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "797:7:1",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 123,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "797:13:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 124,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 110,
																	"src": "812:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"id": 115,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 108,
																			"src": "765:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 114,
																		"name": "IERC20",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 77,
																		"src": "758:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
																			"typeString": "type(contract IERC20)"
																		}
																	},
																	"id": 116,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "758:13:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "772:12:1",
																"memberName": "transferFrom",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 76,
																"src": "758:26:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256) external returns (bool)"
																}
															},
															"id": 125,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "758:61:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433230207472616e73666572206661696c6564",
															"id": 126,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "833:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_149f6edbc245165298a5933e2b8185447f0287d5f0366944583def754930bcff",
																"typeString": "literal_string \"ERC20 transfer failed\""
															},
															"value": "ERC20 transfer failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_149f6edbc245165298a5933e2b8185447f0287d5f0366944583def754930bcff",
																"typeString": "literal_string \"ERC20 transfer failed\""
															}
														],
														"id": 113,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "737:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 127,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "737:129:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 128,
												"nodeType": "ExpressionStatement",
												"src": "737:129:1"
											},
											{
												"expression": {
													"id": 136,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 129,
																"name": "erc20Deposits",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 87,
																"src": "876:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 133,
															"indexExpression": {
																"expression": {
																	"id": 130,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "890:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 131,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "894:6:1",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "890:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "876:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 134,
														"indexExpression": {
															"id": 132,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 108,
															"src": "902:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "876:32:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 135,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 110,
														"src": "912:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "876:42:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 137,
												"nodeType": "ExpressionStatement",
												"src": "876:42:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 139,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "948:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 140,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "952:6:1",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "948:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 141,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 108,
															"src": "960:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 110,
															"src": "967:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 138,
														"name": "ERC20Deposited",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 95,
														"src": "933:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "933:41:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "928:46:1"
											}
										]
									},
									"documentation": {
										"id": 106,
										"nodeType": "StructuredDocumentation",
										"src": "624:36:1",
										"text": "@notice Deposit ERC20 collateral"
									},
									"functionSelector": "97feb926",
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "depositERC20",
									"nameLocation": "674:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 108,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "695:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "687:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 107,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 110,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "710:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "702:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 109,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "702:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "686:31:1"
									},
									"returnParameters": {
										"id": 112,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "727:0:1"
									},
									"scope": 193,
									"src": "665:316:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 191,
										"nodeType": "Block",
										"src": "1163:285:1",
										"statements": [
											{
												"assignments": [
													157
												],
												"declarations": [
													{
														"constant": false,
														"id": 157,
														"mutability": "mutable",
														"name": "bal",
														"nameLocation": "1181:3:1",
														"nodeType": "VariableDeclaration",
														"scope": 191,
														"src": "1173:11:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 156,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1173:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 164,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 158,
															"name": "erc20Deposits",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 87,
															"src": "1187:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 161,
														"indexExpression": {
															"expression": {
																"id": 159,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1201:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 160,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1205:6:1",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1201:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "1187:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 163,
													"indexExpression": {
														"id": 162,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 149,
														"src": "1213:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1187:32:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1173:46:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 168,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 166,
																"name": "bal",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 157,
																"src": "1237:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 167,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 151,
																"src": "1244:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1237:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e7420636f6c6c61746572616c",
															"id": 169,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1252:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c9a6548b8b08f3e884692ff4b4c5cb58e1633771e97667c355d207e48aa0a8aa",
																"typeString": "literal_string \"Insufficient collateral\""
															},
															"value": "Insufficient collateral"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c9a6548b8b08f3e884692ff4b4c5cb58e1633771e97667c355d207e48aa0a8aa",
																"typeString": "literal_string \"Insufficient collateral\""
															}
														],
														"id": 165,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1229:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 170,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1229:49:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 171,
												"nodeType": "ExpressionStatement",
												"src": "1229:49:1"
											},
											{
												"expression": {
													"id": 181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 172,
																"name": "erc20Deposits",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 87,
																"src": "1288:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 176,
															"indexExpression": {
																"expression": {
																	"id": 173,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1302:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 174,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1306:6:1",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1302:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1288:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 177,
														"indexExpression": {
															"id": 175,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 149,
															"src": "1314:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1288:32:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 180,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 178,
															"name": "bal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 157,
															"src": "1323:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 179,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 151,
															"src": "1329:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1323:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1288:47:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 182,
												"nodeType": "ExpressionStatement",
												"src": "1288:47:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 184,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1395:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 185,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1399:6:1",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1395:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 186,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 149,
															"src": "1407:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 187,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 151,
															"src": "1414:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 188,
															"name": "destChain",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 153,
															"src": "1422:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 183,
														"name": "CrossChainCollateralLockRequested",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 105,
														"src": "1350:33:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes32_$returns$__$",
															"typeString": "function (address,address,uint256,bytes32)"
														}
													},
													"id": 189,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1350:91:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 190,
												"nodeType": "EmitStatement",
												"src": "1345:96:1"
											}
										]
									},
									"documentation": {
										"id": 147,
										"nodeType": "StructuredDocumentation",
										"src": "987:58:1",
										"text": "@notice Stub: lock collateral on another chain via XCM"
									},
									"functionSelector": "483903d5",
									"id": 192,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "requestXcmLock",
									"nameLocation": "1059:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 149,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1091:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "1083:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 148,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1083:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 151,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1114:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "1106:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 150,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1106:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "destChain",
												"nameLocation": "1138:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "1130:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 152,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1130:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1073:80:1"
									},
									"returnParameters": {
										"id": 155,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1163:0:1"
									},
									"scope": 193,
									"src": "1050:398:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 194,
							"src": "169:1281:1",
							"usedErrors": [],
							"usedEvents": [
								95,
								105
							]
						}
					],
					"src": "32:1419:1"
				}
			}
		},
		"errors": [],
		"version": "0.8.28",
		"long_version": "0.8.28+commit.7893614a.Emscripten.clang",
		"revive_version": "0.1.0-dev.12+commit.66f9a4d.llvm-18.1.8"
	}
}
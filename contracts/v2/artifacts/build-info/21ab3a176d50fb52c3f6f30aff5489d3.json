{
	"id": "21ab3a176d50fb52c3f6f30aff5489d3",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.28",
	"solcLongVersion": "0.8.28+commit.7893614a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/v2/LendingEngine.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.18;\n\n/// Minimal ERC-20 interface\ninterface IERC20 {\n    function transferFrom(address from, address to, uint256 amt) external returns (bool);\n    function transfer(address to, uint256 amt) external returns (bool);\n    function approve(address spender, uint256 amt) external returns (bool);\n}\n\n/// Vault interface for checking collateral\ninterface IVault {\n    function erc20Deposits(address user, address token) external view returns (uint256);\n}\n\n/// Mock swap interface\ninterface IAssetConversion {\n    function swapExactInput(\n        address tokenIn,\n        address tokenOut,\n        uint256 amountIn,\n        uint256 /*minOut*/\n    ) external returns (uint256);\n}\n\n/// @notice Borrow up to 50% LTV, pay 0.5% fee in any asset via on-chain swap\ncontract LendingEngine {\n    address public vault;\n    IAssetConversion public conv;\n    IERC20 public collateralToken;\n    IERC20 public borrowAsset;\n\n    uint256 constant LTV_BPS   = 5_000; // 50%\n    uint256 constant FEE_BPS   =    50; // 0.5%\n    uint256 constant BPS_DENOM = 10_000;\n\n    mapping(address => uint256) public borrows;\n\n    constructor(\n        address _vault,\n        address _conv,\n        address _collateral,\n        address _borrow\n    ) {\n        vault          = _vault;\n        conv           = IAssetConversion(_conv);\n        collateralToken= IERC20(_collateral);\n        borrowAsset    = IERC20(_borrow);\n    }\n\n    /// @notice Pulls feeAsset, swaps feeâ†’borrowAsset, then sends `amount`\n    function borrow(\n        uint256 amount,\n        address feeAsset,\n        uint256 /*minOut*/\n    ) external {\n        // 1) LTV check\n        uint256 col = IVault(vault).erc20Deposits(msg.sender, address(collateralToken));\n        require(borrows[msg.sender] + amount <= (col * LTV_BPS) / BPS_DENOM);\n\n        // 2) fee pull & swap\n        uint256 feeAmt = (amount * FEE_BPS) / BPS_DENOM;\n        IERC20(feeAsset).transferFrom(msg.sender, address(this), feeAmt);\n        IERC20(feeAsset).approve(address(conv), feeAmt);\n        conv.swapExactInput(feeAsset, address(borrowAsset), feeAmt, 0);\n\n        // 3) record & send borrow\n        borrows[msg.sender] += amount;\n        borrowAsset.transfer(msg.sender, amount);\n    }\n\n    /// @notice Simple repay\n    function repay(uint256 amount) external {\n        borrows[msg.sender] -= amount;\n        borrowAsset.transferFrom(msg.sender, address(this), amount);\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.deployedBytecode",
						"evm.methodIdentifiers"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"contracts/v2/LendingEngine.sol": {
				"IAssetConversion": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenIn",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenOut",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "swapExactInput",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"swapExactInput\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Mock swap interface\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/v2/LendingEngine.sol\":\"IAssetConversion\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":false},\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/v2/LendingEngine.sol\":{\"keccak256\":\"0xc7422a1d4893d73f0c62adaef83f5014c5b7f4b20d935f4d05fe9c2505674a98\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dec37481267d69f0eae91353cff006fadace4391d825ff4f675a6729ed13c0ef\",\"dweb:/ipfs/QmUx6NSDGwMQHavcWrmSpNFAcWwZpTjnGzCrh6bSPCQQzP\"]}},\"version\":1}",
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Mock swap interface",
						"version": 1
					},
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"evm": {
						"bytecode": {
							"object": ""
						},
						"deployedBytecode": {
							"object": ""
						},
						"methodIdentifiers": {
							"swapExactInput(address,address,uint256,uint256)": "bd028142"
						}
					},
					"irOptimized": ""
				},
				"IERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amt",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amt",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amt",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amt\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amt\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amt\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Minimal ERC-20 interface\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/v2/LendingEngine.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":false},\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/v2/LendingEngine.sol\":{\"keccak256\":\"0xc7422a1d4893d73f0c62adaef83f5014c5b7f4b20d935f4d05fe9c2505674a98\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dec37481267d69f0eae91353cff006fadace4391d825ff4f675a6729ed13c0ef\",\"dweb:/ipfs/QmUx6NSDGwMQHavcWrmSpNFAcWwZpTjnGzCrh6bSPCQQzP\"]}},\"version\":1}",
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Minimal ERC-20 interface",
						"version": 1
					},
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"evm": {
						"bytecode": {
							"object": ""
						},
						"deployedBytecode": {
							"object": ""
						},
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"irOptimized": ""
				},
				"IVault": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "erc20Deposits",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"erc20Deposits\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Vault interface for checking collateral\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/v2/LendingEngine.sol\":\"IVault\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":false},\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/v2/LendingEngine.sol\":{\"keccak256\":\"0xc7422a1d4893d73f0c62adaef83f5014c5b7f4b20d935f4d05fe9c2505674a98\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dec37481267d69f0eae91353cff006fadace4391d825ff4f675a6729ed13c0ef\",\"dweb:/ipfs/QmUx6NSDGwMQHavcWrmSpNFAcWwZpTjnGzCrh6bSPCQQzP\"]}},\"version\":1}",
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Vault interface for checking collateral",
						"version": 1
					},
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"evm": {
						"bytecode": {
							"object": ""
						},
						"deployedBytecode": {
							"object": ""
						},
						"methodIdentifiers": {
							"erc20Deposits(address,address)": "a0b3f3e1"
						}
					},
					"irOptimized": ""
				},
				"LendingEngine": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_vault",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_conv",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_collateral",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_borrow",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "feeAsset",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "borrow",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "borrowAsset",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "borrows",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "collateralToken",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "conv",
							"outputs": [
								{
									"internalType": "contract IAssetConversion",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "repay",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "vault",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"metadata": {
						"optimizer_settings": {
							"is_debug_logging_enabled": false,
							"is_fallback_to_size_enabled": false,
							"is_verify_each_enabled": false,
							"level_back_end": "Aggressive",
							"level_middle_end": "Aggressive",
							"level_middle_end_size": "Zero"
						},
						"revive_pallet_version": null,
						"revive_version": "0.1.0-dev.12+commit.66f9a4d.llvm-18.1.8",
						"solc_metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_vault\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_conv\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_collateral\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_borrow\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"feeAsset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"borrow\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"borrowAsset\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"borrows\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"collateralToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"conv\",\"outputs\":[{\"internalType\":\"contract IAssetConversion\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"repay\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vault\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"borrow(uint256,address,uint256)\":{\"notice\":\"Pulls feeAsset, swaps fee\\u2192borrowAsset, then sends `amount`\"},\"repay(uint256)\":{\"notice\":\"Simple repay\"}},\"notice\":\"Borrow up to 50% LTV, pay 0.5% fee in any asset via on-chain swap\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/v2/LendingEngine.sol\":\"LendingEngine\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":false},\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/v2/LendingEngine.sol\":{\"keccak256\":\"0xc7422a1d4893d73f0c62adaef83f5014c5b7f4b20d935f4d05fe9c2505674a98\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dec37481267d69f0eae91353cff006fadace4391d825ff4f675a6729ed13c0ef\",\"dweb:/ipfs/QmUx6NSDGwMQHavcWrmSpNFAcWwZpTjnGzCrh6bSPCQQzP\"]}},\"version\":1}",
						"solc_version": "0.8.28+commit.7893614a.Emscripten.clang"
					},
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"borrow(uint256,address,uint256)": {
								"notice": "Pulls feeAsset, swaps feeâ†’borrowAsset, then sends `amount`"
							},
							"repay(uint256)": {
								"notice": "Simple repay"
							}
						},
						"notice": "Borrow up to 50% LTV, pay 0.5% fee in any asset via on-chain swap",
						"version": 1
					},
					"storageLayout": {
						"storage": [
							{
								"astId": 61,
								"contract": "contracts/v2/LendingEngine.sol:LendingEngine",
								"label": "vault",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 64,
								"contract": "contracts/v2/LendingEngine.sol:LendingEngine",
								"label": "conv",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(IAssetConversion)58"
							},
							{
								"astId": 67,
								"contract": "contracts/v2/LendingEngine.sol:LendingEngine",
								"label": "collateralToken",
								"offset": 0,
								"slot": "2",
								"type": "t_contract(IERC20)32"
							},
							{
								"astId": 70,
								"contract": "contracts/v2/LendingEngine.sol:LendingEngine",
								"label": "borrowAsset",
								"offset": 0,
								"slot": "3",
								"type": "t_contract(IERC20)32"
							},
							{
								"astId": 83,
								"contract": "contracts/v2/LendingEngine.sol:LendingEngine",
								"label": "borrows",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(IAssetConversion)58": {
								"encoding": "inplace",
								"label": "contract IAssetConversion",
								"numberOfBytes": "20"
							},
							"t_contract(IERC20)32": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"evm": {
						"assembly": "// RO data = 0/0 bytes\n// RW data = 0/65552 bytes\n// Stack size = 16384 bytes\n\n// Instructions = 11127\n// Code size = 35296 bytes\n\n      : @0 (gas: 2)\n     0: i32 a2 = a0 >> 0x10\n     3: jump @6 if a2 != 0\n      : @1 (gas: 2)\n     6: a2 = 0x10001\n    11: jump @6 if a1 >=u a2\n      : @2 (gas: 4)\n    14: a1 = a1 + a0\n    17: i32 a1 = a1 + 0x1f\n    20: a1 = a1 & 0xffffffffffffffe0\n    23: jump @7 if a1 >=u 65537\n      : @3 (gas: 2)\n    29: a3 = i32 [0x20000]\n    34: jump @5 if a3 >=u a1\n      : @4 (gas: 4)\n    37: u32 [0x20000] = a1\n    42: a1 = 0x20010\n    47: a0 = a0 + a1\n    50: ret\n      : @5 (gas: 3)\n    52: a1 = 0x20010\n    57: a0 = a0 + a1\n    60: ret\n      : @6 (gas: 1)\n    62: trap\n      : @7 (gas: 1)\n    63: trap\n      : @8 (gas: 13)\n    64: sp = sp + 0xffffffffffffffd8\n    67: u64 [sp + 0x20] = ra\n    70: u64 [sp + 0x18] = s0\n    73: u64 [sp + 0x10] = s1\n    76: a2 = u64 [a1]\n    78: u64 [sp + 0x8] = a2\n    81: a2 = u64 [a1 + 0x8]\n    84: u64 [sp] = a2\n    86: s0 = u64 [a1 + 0x10]\n    89: s1 = u64 [a1 + 0x18]\n    92: i32 a0 = a0 + 0\n    94: a1 = 0x20\n    97: ra = 2, jump @0\n      : @9 [@dyn 1] (gas: 71)\n   101: a1 = reverse s1\n   103: a2 = reverse s0\n   105: a3 = u64 [sp]\n   107: a3 = reverse a3\n   109: a4 = u64 [sp + 0x8]\n   112: a4 = reverse a4\n   114: u8 [a0 + 0x18] = a4\n   117: u8 [a0 + 0x10] = a3\n   120: u8 [a0 + 0x8] = a2\n   123: u8 [a0] = a1\n   125: a5 = a4 >> 0x38\n   128: u8 [a0 + 0x1f] = a5\n   131: a5 = a4 >> 0x30\n   134: u8 [a0 + 0x1e] = a5\n   137: a5 = a4 >> 0x28\n   140: u8 [a0 + 0x1d] = a5\n   143: a5 = a4 >> 0x20\n   146: u8 [a0 + 0x1c] = a5\n   149: a5 = a4 >> 0x18\n   152: u8 [a0 + 0x1b] = a5\n   155: a5 = a4 >> 0x10\n   158: u8 [a0 + 0x1a] = a5\n   161: a4 = a4 >> 0x8\n   164: u8 [a0 + 0x19] = a4\n   167: a4 = a3 >> 0x38\n   170: u8 [a0 + 0x17] = a4\n   173: a4 = a3 >> 0x30\n   176: u8 [a0 + 0x16] = a4\n   179: a4 = a3 >> 0x28\n   182: u8 [a0 + 0x15] = a4\n   185: a4 = a3 >> 0x20\n   188: u8 [a0 + 0x14] = a4\n   191: a4 = a3 >> 0x18\n   194: u8 [a0 + 0x13] = a4\n   197: a4 = a3 >> 0x10\n   200: u8 [a0 + 0x12] = a4\n   203: a3 = a3 >> 0x8\n   206: u8 [a0 + 0x11] = a3\n   209: a3 = a2 >> 0x38\n   212: u8 [a0 + 0xf] = a3\n   215: a3 = a2 >> 0x30\n   218: u8 [a0 + 0xe] = a3\n   221: a3 = a2 >> 0x28\n   224: u8 [a0 + 0xd] = a3\n   227: a3 = a2 >> 0x20\n   230: u8 [a0 + 0xc] = a3\n   233: a3 = a2 >> 0x18\n   236: u8 [a0 + 0xb] = a3\n   239: a3 = a2 >> 0x10\n   242: u8 [a0 + 0xa] = a3\n   245: a2 = a2 >> 0x8\n   248: u8 [a0 + 0x9] = a2\n   251: a2 = a1 >> 0x38\n   254: u8 [a0 + 0x7] = a2\n   257: a2 = a1 >> 0x30\n   260: u8 [a0 + 0x6] = a2\n   263: a2 = a1 >> 0x28\n   266: u8 [a0 + 0x5] = a2\n   269: a2 = a1 >> 0x20\n   272: u8 [a0 + 0x4] = a2\n   275: a2 = a1 >> 0x18\n   278: u8 [a0 + 0x3] = a2\n   281: a2 = a1 >> 0x10\n   284: u8 [a0 + 0x2] = a2\n   287: a1 = a1 >> 0x8\n   290: u8 [a0 + 0x1] = a1\n   293: ra = u64 [sp + 0x20]\n   296: s0 = u64 [sp + 0x18]\n   299: s1 = u64 [sp + 0x10]\n   302: sp = sp + 0x28\n   305: ret\n      : @10 (gas: 6)\n   307: sp = sp + 0xfffffffffffffff0\n   310: u64 [sp + 0x8] = ra\n   313: u64 [sp] = s0\n   315: s0 = a0 & 0x1\n   318: ecalli 4 // 'call_data_size'\n   320: fallthrough\n      : @11 (gas: 2)\n   321: u32 [0x20004] = a0\n   326: jump @13 if s0 == 0\n      : @12 (gas: 1)\n   329: ra = 4, jump @14\n      : @13 [@dyn 2] (gas: 1)\n   333: ra = 6, jump @33\n      : @14 [@dyn 3] (gas: 9)\n   338: sp = sp + 0xfffffffffffffe00\n   342: u64 [sp + 0x1f8] = ra\n   346: u64 [sp + 0x1f0] = s0\n   350: u64 [sp + 0x1e8] = s1\n   354: s0 = sp + 0x200\n   358: sp = sp & 0xffffffffffffffe0\n   361: a0 = 0x40\n   364: a1 = 0x20\n   367: ra = 8, jump @0\n      : @15 [@dyn 4] (gas: 39)\n   372: u8 [a0 + 31] = 0x80\n   377: u8 [a0 + 30] = 0\n   380: u8 [a0 + 29] = 0\n   383: u8 [a0 + 28] = 0\n   386: u8 [a0 + 27] = 0\n   389: u8 [a0 + 26] = 0\n   392: u8 [a0 + 25] = 0\n   395: u8 [a0 + 24] = 0\n   398: u8 [a0 + 23] = 0\n   401: u8 [a0 + 22] = 0\n   404: u8 [a0 + 21] = 0\n   407: u8 [a0 + 20] = 0\n   410: u8 [a0 + 19] = 0\n   413: u8 [a0 + 18] = 0\n   416: u8 [a0 + 17] = 0\n   419: u8 [a0 + 16] = 0\n   422: u8 [a0 + 15] = 0\n   425: u8 [a0 + 14] = 0\n   428: u8 [a0 + 13] = 0\n   431: u8 [a0 + 12] = 0\n   434: u8 [a0 + 11] = 0\n   437: u8 [a0 + 10] = 0\n   440: u8 [a0 + 9] = 0\n   443: u8 [a0 + 8] = 0\n   446: u8 [a0 + 7] = 0\n   449: u8 [a0 + 6] = 0\n   452: u8 [a0 + 5] = 0\n   455: u8 [a0 + 4] = 0\n   458: u8 [a0 + 3] = 0\n   461: u8 [a0 + 2] = 0\n   464: u8 [a0 + 1] = 0\n   467: u8 [a0 + 0] = 0\n   469: u64 [sp + 472] = 0\n   473: u64 [sp + 448] = 0\n   477: u64 [sp + 456] = 0\n   481: u64 [sp + 464] = 0\n   485: i32 a0 = sp + 0x1c0\n   489: ecalli 14 // 'value_transferred'\n   491: fallthrough\n      : @16 (gas: 8)\n   492: a0 = u64 [sp + 0x1d0]\n   496: a1 = u64 [sp + 0x1d8]\n   500: a2 = u64 [sp + 0x1c8]\n   504: a3 = u64 [sp + 0x1c0]\n   508: a1 = a1 | a2\n   511: a0 = a0 | a3\n   514: a0 = a0 | a1\n   517: jump @25 if a0 != 0\n      : @17 (gas: 12)\n   521: a0 = i32 [0x20004]\n   526: u64 [sp + 0x38] = a0\n   529: a0 = a0 << 0x20\n   532: a2 = a0 >> 0x20\n   535: u64 [sp + 408] = 0\n   539: u64 [sp + 400] = 0\n   543: u64 [sp + 392] = 0\n   547: a0 = sp + 0x1a0\n   551: a1 = sp + 0x180\n   555: u64 [sp + 0x30] = a2\n   558: u64 [sp + 0x180] = a2\n   562: ra = 10, jump @55\n      : @18 [@dyn 5] (gas: 12)\n   567: a4 = u64 [sp + 0x1b8]\n   571: s1 = u64 [sp + 0x1b0]\n   575: a3 = u64 [sp + 0x1a8]\n   579: a2 = u64 [sp + 0x1a0]\n   583: a0 = a3 | a4\n   586: a1 = a2 | s1\n   589: a1 = a1 | a0\n   592: a1 = a1 >> 0x20\n   595: a0 = a0 | s1\n   598: a0 = a0 << 0x20\n   601: a0 = a0 | a1\n   604: jump @24 if a0 != 0\n      : @19 (gas: 6)\n   608: i32 a0 = a2 + 0\n   610: a1 = u64 [sp + 0x38]\n   613: u64 [sp + 0x18] = a2\n   616: u64 [sp + 0x20] = a3\n   619: u64 [sp + 0x28] = a4\n   622: ra = 12, jump @0\n      : @20 [@dyn 6] (gas: 29)\n   627: i32 a0 = a0 + 0\n   629: a1 = u64 [sp + 0x38]\n   632: a2 = 0\n   634: ecalli 2 // 'call_data_copy'\n   636: a0 = u64 [sp + 0x30]\n   639: a2 = u64 [sp + 0x18]\n   642: a0 = a0 + a2\n   645: a1 = a0 <u a2\n   648: t1 = a2\n   650: a4 = u64 [sp + 0x20]\n   653: a2 = a4 + a1\n   656: a3 = a2 <u a4\n   659: a3 = a1 if a1 == 0\n   662: a3 = a3 + s1\n   665: a1 = a3 <u s1\n   668: a5 = u64 [sp + 0x28]\n   671: t0 = a5 + a1\n   674: u64 [sp + 0xc8] = a2\n   678: u64 [sp + 0xc0] = a0\n   682: u64 [sp + 0xf8] = a5\n   686: u64 [sp + 0xf0] = s1\n   690: u64 [sp + 0xe8] = a4\n   694: u64 [sp + 0xe0] = t1\n   698: u64 [sp + 0xd0] = a3\n   702: a0 = sp + 0x100\n   706: a1 = sp + 0xe0\n   710: a2 = sp + 0xc0\n   714: u64 [sp + 0xd8] = t0\n   718: ra = 14, jump @65\n      : @21 [@dyn 7] (gas: 225)\n   723: a0 = u64 [sp + 0x100]\n   727: u64 [sp + 0x38] = a0\n   730: a0 = u64 [sp + 0x108]\n   734: u64 [sp + 0x30] = a0\n   737: a0 = u64 [sp + 0x110]\n   741: u64 [sp + 0x28] = a0\n   744: a0 = u64 [sp + 0x118]\n   748: u64 [sp + 0x20] = a0\n   751: a0 = u64 [sp + 0x120]\n   755: u64 [sp + 0x18] = a0\n   758: ra = u64 [sp + 0x128]\n   762: s1 = u64 [sp + 0x130]\n   766: t2 = u64 [sp + 0x138]\n   770: t1 = u64 [sp + 0x140]\n   774: t0 = u64 [sp + 0x148]\n   778: a5 = u64 [sp + 0x150]\n   782: a4 = u64 [sp + 0x158]\n   786: a3 = u64 [sp + 0x160]\n   790: a2 = u64 [sp + 0x168]\n   794: a1 = u64 [sp + 0x170]\n   798: a0 = u64 [sp + 0x178]\n   802: u64 [sp + 0x58] = a0\n   805: u64 [sp + 0x50] = a1\n   808: u64 [sp + 0x48] = a2\n   811: u64 [sp + 0x40] = a3\n   814: u64 [sp + 0x78] = a4\n   817: u64 [sp + 0x70] = a5\n   820: u64 [sp + 0x68] = t0\n   823: u64 [sp + 0x60] = t1\n   826: u64 [sp + 0x98] = t2\n   830: u64 [sp + 0x90] = s1\n   834: u64 [sp + 0x88] = ra\n   838: a0 = u64 [sp + 0x18]\n   841: u64 [sp + 0x80] = a0\n   845: a0 = u64 [sp + 0x20]\n   848: u64 [sp + 0xb8] = a0\n   852: a0 = u64 [sp + 0x28]\n   855: u64 [sp + 0xb0] = a0\n   859: a0 = u64 [sp + 0x30]\n   862: u64 [sp + 0xa8] = a0\n   866: a0 = sp + 0xa0\n   870: a1 = sp + 0x80\n   874: a2 = sp + 0x60\n   877: a3 = sp + 0x40\n   880: a4 = u64 [sp + 0x38]\n   883: u64 [sp + 0xa0] = a4\n   887: ra = 0x10\n   890: sp = sp + 0xffffffffffffff20\n   894: u64 [sp + 0xd8] = ra\n   898: u64 [sp + 0xd0] = s0\n   902: u64 [sp + 0xc8] = s1\n   906: s0 = sp + 0xe0\n   910: sp = sp & 0xffffffffffffffe0\n   913: a4 = u64 [a3]\n   915: u64 [sp + 0x58] = a4\n   918: a4 = u64 [a3 + 0x8]\n   921: u64 [sp + 0x50] = a4\n   924: a3 = u32 [a3 + 0x10]\n   927: u64 [sp + 0x48] = a3\n   930: a3 = u64 [a2]\n   932: u64 [sp + 0x40] = a3\n   935: a3 = u64 [a2 + 0x8]\n   938: u64 [sp + 0x38] = a3\n   941: a2 = u32 [a2 + 0x10]\n   944: u64 [sp + 0x30] = a2\n   947: a2 = u64 [a1]\n   949: u64 [sp + 0x28] = a2\n   952: a2 = u64 [a1 + 0x8]\n   955: u64 [sp + 0x20] = a2\n   958: a1 = u32 [a1 + 0x10]\n   961: u64 [sp + 0x18] = a1\n   964: a1 = u64 [a0]\n   966: u64 [sp + 0x10] = a1\n   969: a1 = u64 [a0 + 0x8]\n   972: u64 [sp + 0x8] = a1\n   975: s1 = u32 [a0 + 0x10]\n   978: u64 [sp + 152] = 0\n   982: u64 [sp + 144] = 0\n   986: u64 [sp + 136] = 0\n   990: u64 [sp + 128] = 0\n   994: u64 [sp + 184] = 0\n   998: u64 [sp + 176] = 0\n  1002: u64 [sp + 168] = 0\n  1006: u64 [sp + 160] = 0\n  1010: u32 [sp + 96] = 0x20\n  1014: i32 a1 = sp + 0x80\n  1018: i32 a3 = sp + 0xa0\n  1022: i32 a4 = sp + 0x60\n  1025: a2 = 0xffffffffffffffff\n  1028: a0 = 0\n  1030: ecalli 6 // 'get_storage'\n  1032: a0 = u32 [sp + 0xb4]\n  1036: a0 = a0 << 0x20\n  1039: a1 = u64 [sp + 0xb8]\n  1043: a0 = a0 | s1\n  1046: u64 [sp + 152] = 0\n  1050: u64 [sp + 144] = 0\n  1054: u64 [sp + 136] = 0\n  1058: u64 [sp + 128] = 0\n  1062: u64 [sp + 0xb8] = a1\n  1066: u64 [sp + 0xb0] = a0\n  1070: a0 = u64 [sp + 0x8]\n  1073: u64 [sp + 0xa8] = a0\n  1077: a0 = u64 [sp + 0x10]\n  1080: u64 [sp + 0xa0] = a0\n  1084: i32 a1 = sp + 0x80\n  1088: i32 a3 = sp + 0xa0\n  1092: a2 = 0xffffffffffffffff\n  1095: a4 = 0x20\n  1098: a0 = 0\n  1100: ecalli 13 // 'set_storage'\n  1102: u64 [sp + 152] = 0\n  1106: u64 [sp + 144] = 0\n  1110: u64 [sp + 136] = 0\n  1114: u64 [sp + 128] = 0x1\n  1119: u64 [sp + 184] = 0\n  1123: u64 [sp + 176] = 0\n  1127: u64 [sp + 168] = 0\n  1131: u64 [sp + 160] = 0\n  1135: u32 [sp + 96] = 0x20\n  1139: i32 a1 = sp + 0x80\n  1143: i32 a3 = sp + 0xa0\n  1147: i32 a4 = sp + 0x60\n  1150: a2 = 0xffffffffffffffff\n  1153: a0 = 0\n  1155: ecalli 6 // 'get_storage'\n  1157: a0 = u32 [sp + 0xb4]\n  1161: a0 = a0 << 0x20\n  1164: a1 = u64 [sp + 0xb8]\n  1168: a2 = u64 [sp + 0x18]\n  1171: a0 = a0 | a2\n  1174: u64 [sp + 152] = 0\n  1178: u64 [sp + 144] = 0\n  1182: u64 [sp + 136] = 0\n  1186: u64 [sp + 128] = 0x1\n  1191: u64 [sp + 0xb8] = a1\n  1195: u64 [sp + 0xb0] = a0\n  1199: a0 = u64 [sp + 0x20]\n  1202: u64 [sp + 0xa8] = a0\n  1206: a0 = u64 [sp + 0x28]\n  1209: u64 [sp + 0xa0] = a0\n  1213: i32 a1 = sp + 0x80\n  1217: i32 a3 = sp + 0xa0\n  1221: a2 = 0xffffffffffffffff\n  1224: a4 = 0x20\n  1227: a0 = 0\n  1229: ecalli 13 // 'set_storage'\n  1231: u64 [sp + 152] = 0\n  1235: u64 [sp + 144] = 0\n  1239: u64 [sp + 136] = 0\n  1243: u64 [sp + 128] = 0x2\n  1248: u64 [sp + 184] = 0\n  1252: u64 [sp + 176] = 0\n  1256: u64 [sp + 168] = 0\n  1260: u64 [sp + 160] = 0\n  1264: u32 [sp + 96] = 0x20\n  1268: i32 a1 = sp + 0x80\n  1272: i32 a3 = sp + 0xa0\n  1276: i32 a4 = sp + 0x60\n  1279: a2 = 0xffffffffffffffff\n  1282: a0 = 0\n  1284: ecalli 6 // 'get_storage'\n  1286: a0 = u32 [sp + 0xb4]\n  1290: a0 = a0 << 0x20\n  1293: a1 = u64 [sp + 0xb8]\n  1297: a2 = u64 [sp + 0x30]\n  1300: a0 = a0 | a2\n  1303: u64 [sp + 152] = 0\n  1307: u64 [sp + 144] = 0\n  1311: u64 [sp + 136] = 0\n  1315: u64 [sp + 128] = 0x2\n  1320: u64 [sp + 0xb8] = a1\n  1324: u64 [sp + 0xb0] = a0\n  1328: a0 = u64 [sp + 0x38]\n  1331: u64 [sp + 0xa8] = a0\n  1335: a0 = u64 [sp + 0x40]\n  1338: u64 [sp + 0xa0] = a0\n  1342: i32 a1 = sp + 0x80\n  1346: i32 a3 = sp + 0xa0\n  1350: a2 = 0xffffffffffffffff\n  1353: a4 = 0x20\n  1356: a0 = 0\n  1358: ecalli 13 // 'set_storage'\n  1360: u64 [sp + 152] = 0\n  1364: u64 [sp + 144] = 0\n  1368: u64 [sp + 136] = 0\n  1372: u64 [sp + 128] = 0x3\n  1377: u64 [sp + 184] = 0\n  1381: u64 [sp + 176] = 0\n  1385: u64 [sp + 168] = 0\n  1389: u64 [sp + 160] = 0\n  1393: u32 [sp + 96] = 0x20\n  1397: i32 a1 = sp + 0x80\n  1401: i32 a3 = sp + 0xa0\n  1405: i32 a4 = sp + 0x60\n  1408: a2 = 0xffffffffffffffff\n  1411: a0 = 0\n  1413: ecalli 6 // 'get_storage'\n  1415: a0 = u32 [sp + 0xb4]\n  1419: a0 = a0 << 0x20\n  1422: a1 = u64 [sp + 0xb8]\n  1426: a2 = u64 [sp + 0x48]\n  1429: a0 = a0 | a2\n  1432: u64 [sp + 152] = 0\n  1436: u64 [sp + 144] = 0\n  1440: u64 [sp + 136] = 0\n  1444: u64 [sp + 128] = 0x3\n  1449: u64 [sp + 0xb8] = a1\n  1453: u64 [sp + 0xb0] = a0\n  1457: a0 = u64 [sp + 0x50]\n  1460: u64 [sp + 0xa8] = a0\n  1464: a0 = u64 [sp + 0x58]\n  1467: u64 [sp + 0xa0] = a0\n  1471: i32 a1 = sp + 0x80\n  1475: i32 a3 = sp + 0xa0\n  1479: a2 = 0xffffffffffffffff\n  1482: a4 = 0x20\n  1485: a0 = 0\n  1487: ecalli 13 // 'set_storage'\n  1489: sp = s0 + 0xffffffffffffff20\n  1493: ra = u64 [sp + 0xd8]\n  1497: s0 = u64 [sp + 0xd0]\n  1501: s1 = u64 [sp + 0xc8]\n  1505: sp = sp + 0xe0\n  1509: ret\n      : @22 [@dyn 8] (gas: 3)\n  1511: a0 = 0x40\n  1514: a1 = 0x20\n  1517: ra = 18, jump @0\n      : @23 [@dyn 9] (gas: 100)\n  1522: a1 = u8 [a0 + 0x11]\n  1525: a2 = u8 [a0 + 0x10]\n  1528: a3 = u8 [a0 + 0x12]\n  1531: a4 = u8 [a0 + 0x13]\n  1534: a1 = a1 << 0x8\n  1537: a1 = a1 | a2\n  1540: a3 = a3 << 0x10\n  1543: a4 = a4 << 0x18\n  1546: a3 = a3 | a4\n  1549: a1 = a1 | a3\n  1552: a2 = u8 [a0 + 0x15]\n  1555: a3 = u8 [a0 + 0x14]\n  1558: a4 = u8 [a0 + 0x16]\n  1561: a5 = u8 [a0 + 0x17]\n  1564: a2 = a2 << 0x8\n  1567: a2 = a2 | a3\n  1570: a4 = a4 << 0x10\n  1573: a5 = a5 << 0x18\n  1576: a4 = a4 | a5\n  1579: a2 = a2 | a4\n  1582: a2 = a2 << 0x20\n  1585: t0 = a2 | a1\n  1588: a2 = u8 [a0 + 0x1]\n  1591: a3 = u8 [a0]\n  1593: a4 = u8 [a0 + 0x2]\n  1596: a5 = u8 [a0 + 0x3]\n  1599: a2 = a2 << 0x8\n  1602: a2 = a2 | a3\n  1605: a4 = a4 << 0x10\n  1608: a5 = a5 << 0x18\n  1611: a4 = a4 | a5\n  1614: a2 = a2 | a4\n  1617: a3 = u8 [a0 + 0x5]\n  1620: a4 = u8 [a0 + 0x4]\n  1623: a5 = u8 [a0 + 0x6]\n  1626: s1 = u8 [a0 + 0x7]\n  1629: a3 = a3 << 0x8\n  1632: a3 = a3 | a4\n  1635: a5 = a5 << 0x10\n  1638: s1 = s1 << 0x18\n  1641: a5 = a5 | s1\n  1644: a3 = a3 | a5\n  1647: a3 = a3 << 0x20\n  1650: a2 = a2 | a3\n  1653: a3 = u8 [a0 + 0x19]\n  1656: a4 = u8 [a0 + 0x18]\n  1659: a5 = u8 [a0 + 0x1a]\n  1662: s1 = u8 [a0 + 0x1b]\n  1665: a3 = a3 << 0x8\n  1668: a3 = a3 | a4\n  1671: a5 = a5 << 0x10\n  1674: s1 = s1 << 0x18\n  1677: a5 = a5 | s1\n  1680: a3 = a3 | a5\n  1683: a4 = u8 [a0 + 0x1d]\n  1686: a5 = u8 [a0 + 0x1c]\n  1689: s1 = u8 [a0 + 0x1e]\n  1692: a1 = u8 [a0 + 0x1f]\n  1695: a4 = a4 << 0x8\n  1698: a4 = a4 | a5\n  1701: s1 = s1 << 0x10\n  1704: a1 = a1 << 0x18\n  1707: a1 = a1 | s1\n  1710: a1 = a1 | a4\n  1713: a1 = a1 << 0x20\n  1716: a3 = a3 | a1\n  1719: a1 = u8 [a0 + 0x9]\n  1722: a4 = u8 [a0 + 0x8]\n  1725: a5 = u8 [a0 + 0xa]\n  1728: s1 = u8 [a0 + 0xb]\n  1731: a1 = a1 << 0x8\n  1734: a1 = a1 | a4\n  1737: a5 = a5 << 0x10\n  1740: s1 = s1 << 0x18\n  1743: a5 = a5 | s1\n  1746: a1 = a1 | a5\n  1749: a4 = u8 [a0 + 0xd]\n  1752: a5 = u8 [a0 + 0xc]\n  1755: s1 = u8 [a0 + 0xe]\n  1758: a0 = u8 [a0 + 0xf]\n  1761: a4 = a4 << 0x8\n  1764: a4 = a4 | a5\n  1767: s1 = s1 << 0x10\n  1770: a0 = a0 << 0x18\n  1773: a0 = a0 | s1\n  1776: a0 = a0 | a4\n  1779: a0 = a0 << 0x20\n  1782: a0 = a0 | a1\n  1785: a0 = reverse a0\n  1787: s1 = reverse a3\n  1789: a1 = reverse a2\n  1791: a2 = reverse t0\n  1793: a1 = a1 | a2\n  1796: a2 = s1 | a0\n  1799: a2 = a2 | a1\n  1802: a2 = a2 >> 0x20\n  1805: a0 = a0 | a1\n  1808: a0 = a0 << 0x20\n  1811: a0 = a0 | a2\n  1814: jump @27 if a0 == 0\n      : @24 (gas: 1)\n  1817: trap\n      : @25 (gas: 3)\n  1818: a0 = 0\n  1820: a1 = 0\n  1822: ra = 20, jump @0\n      : @26 [@dyn 10] (gas: 5)\n  1827: i32 a1 = a0 + 0\n  1829: a0 = 0x1\n  1832: a2 = 0\n  1834: ecalli 11 // 'seal_return'\n  1836: fallthrough\n      : @27 (gas: 4)\n  1837: i32 s1 = s1 + 0\n  1839: a0 = s1\n  1841: a1 = 0\n  1843: ra = 22, jump @0\n      : @28 [@dyn 11] (gas: 5)\n  1848: i32 a0 = a0 + 0\n  1850: a1 = 0\n  1852: a2 = 0\n  1854: ecalli 2 // 'call_data_copy'\n  1856: fallthrough\n      : @29 (gas: 2)\n  1857: a1 = i32 [0x20008]\n  1862: jump @31 if a1 == 0\n      : @30 (gas: 4)\n  1865: a0 = 0x30010\n  1870: i32 a0 = a0 + 0\n  1872: ecalli 12 // 'set_immutable_data'\n  1874: fallthrough\n      : @31 (gas: 3)\n  1875: a0 = s1\n  1877: a1 = 0\n  1879: ra = 24, jump @0\n      : @32 [@dyn 12] (gas: 6)\n  1884: i32 a1 = a0 + 0\n  1886: a0 = 0\n  1888: a2 = 0\n  1890: ra = 0x1a\n  1893: ecalli 11 // 'seal_return'\n  1895: fallthrough\n      : @33 [@dyn 13] (gas: 8)\n  1896: sp = sp + 0xffffffffffffffc0\n  1899: u64 [sp + 0x38] = ra\n  1902: u64 [sp + 0x30] = s0\n  1905: s0 = sp + 0x40\n  1908: sp = sp & 0xffffffffffffffe0\n  1911: a0 = 0x40\n  1914: a1 = 0x20\n  1917: ra = 28, jump @0\n      : @34 [@dyn 14] (gas: 34)\n  1922: u8 [a0 + 31] = 0x80\n  1927: u8 [a0 + 30] = 0\n  1930: u8 [a0 + 29] = 0\n  1933: u8 [a0 + 28] = 0\n  1936: u8 [a0 + 27] = 0\n  1939: u8 [a0 + 26] = 0\n  1942: u8 [a0 + 25] = 0\n  1945: u8 [a0 + 24] = 0\n  1948: u8 [a0 + 23] = 0\n  1951: u8 [a0 + 22] = 0\n  1954: u8 [a0 + 21] = 0\n  1957: u8 [a0 + 20] = 0\n  1960: u8 [a0 + 19] = 0\n  1963: u8 [a0 + 18] = 0\n  1966: u8 [a0 + 17] = 0\n  1969: u8 [a0 + 16] = 0\n  1972: u8 [a0 + 15] = 0\n  1975: u8 [a0 + 14] = 0\n  1978: u8 [a0 + 13] = 0\n  1981: u8 [a0 + 12] = 0\n  1984: u8 [a0 + 11] = 0\n  1987: u8 [a0 + 10] = 0\n  1990: u8 [a0 + 9] = 0\n  1993: u8 [a0 + 8] = 0\n  1996: u8 [a0 + 7] = 0\n  1999: u8 [a0 + 3] = 0\n  2002: u8 [a0 + 2] = 0\n  2005: u8 [a0 + 1] = 0\n  2008: u8 [a0 + 0] = 0\n  2010: a1 = i32 [0x20004]\n  2015: u8 [a0 + 6] = 0\n  2018: u8 [a0 + 5] = 0\n  2021: u8 [a0 + 4] = 0\n  2024: jump @48 if a1 <u 4\n      : @35 (gas: 4)\n  2029: i32 a0 = sp + 0\n  2031: a1 = 0\n  2033: ecalli 3 // 'call_data_load'\n  2035: fallthrough\n      : @36 (gas: 2)\n  2036: a0 = i32 [sp + 0x1c]\n  2039: jump @41 if a0 <=s 204001597\n      : @37 (gas: 2)\n  2046: a1 = 0x44645000\n  2052: jump @45 if a0 >s 1147426532\n      : @38 (gas: 1)\n  2059: jump @50 if a0 == 204001598\n      : @39 (gas: 1)\n  2067: jump @48 if a0 != 924834022\n      : @40 (gas: 1)\n  2075: ra = 30, jump @129\n      : @41 [@dyn 15] (gas: 1)\n  2080: jump @49 if a0 == 2986437588\n      : @42 (gas: 1)\n  2088: jump @52 if a0 == 4227495887\n      : @43 (gas: 1)\n  2096: jump @48 if a0 != 145975408\n      : @44 (gas: 14)\n  2103: ra = 0x20\n  2106: sp = sp + 0xffffffffffffff60\n  2110: u64 [sp + 0x98] = ra\n  2114: u64 [sp + 0x90] = s0\n  2118: u64 [sp + 0x88] = s1\n  2122: s0 = sp + 0xa0\n  2126: sp = sp & 0xffffffffffffffe0\n  2129: u64 [sp + 56] = 0\n  2132: u64 [sp + 48] = 0\n  2135: u64 [sp + 40] = 0\n  2138: u64 [sp + 32] = 0\n  2141: i32 a0 = sp + 0x20\n  2144: ecalli 14 // 'value_transferred'\n  2146: jump @89\n      : @45 [@dyn 16] (gas: 2)\n  2149: i32 a1 = a1 + 0x6e5\n  2153: jump @51 if a0 == a1\n      : @46 (gas: 1)\n  2157: jump @48 if a0 != 1420128367\n      : @47 (gas: 14)\n  2164: ra = 0x22\n  2167: sp = sp + 0xffffffffffffff60\n  2171: u64 [sp + 0x98] = ra\n  2175: u64 [sp + 0x90] = s0\n  2179: u64 [sp + 0x88] = s1\n  2183: s0 = sp + 0xa0\n  2187: sp = sp & 0xffffffffffffffe0\n  2190: u64 [sp + 56] = 0\n  2193: u64 [sp + 48] = 0\n  2196: u64 [sp + 40] = 0\n  2199: u64 [sp + 32] = 0\n  2202: i32 a0 = sp + 0x20\n  2205: ecalli 14 // 'value_transferred'\n  2207: jump @163\n      : @48 [@dyn 17] (gas: 1)\n  2210: ra = 36, jump @201\n      : @49 [@dyn 18] (gas: 14)\n  2215: ra = 0x26\n  2218: sp = sp + 0xffffffffffffff60\n  2222: u64 [sp + 0x98] = ra\n  2226: u64 [sp + 0x90] = s0\n  2230: u64 [sp + 0x88] = s1\n  2234: s0 = sp + 0xa0\n  2238: sp = sp & 0xffffffffffffffe0\n  2241: u64 [sp + 56] = 0\n  2244: u64 [sp + 48] = 0\n  2247: u64 [sp + 40] = 0\n  2250: u64 [sp + 32] = 0\n  2253: i32 a0 = sp + 0x20\n  2256: ecalli 14 // 'value_transferred'\n  2258: jump @180\n      : @50 [@dyn 19] (gas: 13)\n  2261: ra = 0x28\n  2264: sp = sp + 0xfffffffffffffec0\n  2268: u64 [sp + 0x138] = ra\n  2272: u64 [sp + 0x130] = s0\n  2276: s0 = sp + 0x140\n  2280: sp = sp & 0xffffffffffffffe0\n  2283: u64 [sp + 280] = 0\n  2287: u64 [sp + 272] = 0\n  2291: u64 [sp + 264] = 0\n  2295: u64 [sp + 256] = 0\n  2299: i32 a0 = sp + 0x100\n  2303: ecalli 14 // 'value_transferred'\n  2305: jump @113\n      : @51 [@dyn 20] (gas: 14)\n  2308: ra = 0x2a\n  2311: sp = sp + 0xffffffffffffff60\n  2315: u64 [sp + 0x98] = ra\n  2319: u64 [sp + 0x90] = s0\n  2323: u64 [sp + 0x88] = s1\n  2327: s0 = sp + 0xa0\n  2331: sp = sp & 0xffffffffffffffe0\n  2334: u64 [sp + 56] = 0\n  2337: u64 [sp + 48] = 0\n  2340: u64 [sp + 40] = 0\n  2343: u64 [sp + 32] = 0\n  2346: i32 a0 = sp + 0x20\n  2349: ecalli 14 // 'value_transferred'\n  2351: jump @141\n      : @52 [@dyn 21] (gas: 14)\n  2354: ra = 0x2c\n  2357: sp = sp + 0xffffffffffffff60\n  2361: u64 [sp + 0x98] = ra\n  2365: u64 [sp + 0x90] = s0\n  2369: u64 [sp + 0x88] = s1\n  2373: s0 = sp + 0xa0\n  2377: sp = sp & 0xffffffffffffffe0\n  2380: u64 [sp + 56] = 0\n  2383: u64 [sp + 48] = 0\n  2386: u64 [sp + 40] = 0\n  2389: u64 [sp + 32] = 0\n  2392: i32 a0 = sp + 0x20\n  2395: ecalli 14 // 'value_transferred'\n  2397: jump @191\n      : @53 [@dyn 22] (gas: 7)\n  2400: sp = sp + 0xfffffffffffffff0\n  2403: u64 [sp + 0x8] = ra\n  2406: u64 [sp] = s0\n  2408: s0 = a0\n  2410: a0 = 0x40\n  2413: a1 = 0x20\n  2416: ra = 46, jump @0\n      : @54 [@dyn 23] (gas: 100)\n  2421: a1 = u8 [a0 + 0x1]\n  2424: a2 = u8 [a0]\n  2426: a3 = u8 [a0 + 0x2]\n  2429: a4 = u8 [a0 + 0x3]\n  2432: a1 = a1 << 0x8\n  2435: a1 = a1 | a2\n  2438: a3 = a3 << 0x10\n  2441: a4 = a4 << 0x18\n  2444: a3 = a3 | a4\n  2447: a1 = a1 | a3\n  2450: a2 = u8 [a0 + 0x5]\n  2453: a3 = u8 [a0 + 0x4]\n  2456: a4 = u8 [a0 + 0x6]\n  2459: a5 = u8 [a0 + 0x7]\n  2462: a2 = a2 << 0x8\n  2465: a2 = a2 | a3\n  2468: a4 = a4 << 0x10\n  2471: a5 = a5 << 0x18\n  2474: a4 = a4 | a5\n  2477: a2 = a2 | a4\n  2480: a2 = a2 << 0x20\n  2483: t0 = a2 | a1\n  2486: a2 = u8 [a0 + 0x9]\n  2489: a3 = u8 [a0 + 0x8]\n  2492: a4 = u8 [a0 + 0xa]\n  2495: a5 = u8 [a0 + 0xb]\n  2498: a2 = a2 << 0x8\n  2501: a2 = a2 | a3\n  2504: a4 = a4 << 0x10\n  2507: a5 = a5 << 0x18\n  2510: a4 = a4 | a5\n  2513: a2 = a2 | a4\n  2516: a3 = u8 [a0 + 0xd]\n  2519: a4 = u8 [a0 + 0xc]\n  2522: a5 = u8 [a0 + 0xe]\n  2525: a1 = u8 [a0 + 0xf]\n  2528: a3 = a3 << 0x8\n  2531: a3 = a3 | a4\n  2534: a5 = a5 << 0x10\n  2537: a1 = a1 << 0x18\n  2540: a1 = a1 | a5\n  2543: a1 = a1 | a3\n  2546: a1 = a1 << 0x20\n  2549: t1 = a1 | a2\n  2552: a1 = u8 [a0 + 0x11]\n  2555: a3 = u8 [a0 + 0x10]\n  2558: a4 = u8 [a0 + 0x12]\n  2561: a5 = u8 [a0 + 0x13]\n  2564: a1 = a1 << 0x8\n  2567: a1 = a1 | a3\n  2570: a4 = a4 << 0x10\n  2573: a5 = a5 << 0x18\n  2576: a4 = a4 | a5\n  2579: a1 = a1 | a4\n  2582: a3 = u8 [a0 + 0x15]\n  2585: a4 = u8 [a0 + 0x14]\n  2588: a5 = u8 [a0 + 0x16]\n  2591: a2 = u8 [a0 + 0x17]\n  2594: a3 = a3 << 0x8\n  2597: a3 = a3 | a4\n  2600: a5 = a5 << 0x10\n  2603: a2 = a2 << 0x18\n  2606: a2 = a2 | a5\n  2609: a2 = a2 | a3\n  2612: a2 = a2 << 0x20\n  2615: a3 = a2 | a1\n  2618: a1 = u8 [a0 + 0x19]\n  2621: a2 = u8 [a0 + 0x18]\n  2624: a4 = u8 [a0 + 0x1a]\n  2627: a5 = u8 [a0 + 0x1b]\n  2630: a1 = a1 << 0x8\n  2633: a1 = a1 | a2\n  2636: a4 = a4 << 0x10\n  2639: a5 = a5 << 0x18\n  2642: a4 = a4 | a5\n  2645: a1 = a1 | a4\n  2648: a2 = u8 [a0 + 0x1d]\n  2651: a4 = u8 [a0 + 0x1c]\n  2654: a5 = u8 [a0 + 0x1e]\n  2657: a0 = u8 [a0 + 0x1f]\n  2660: a2 = a2 << 0x8\n  2663: a2 = a2 | a4\n  2666: a5 = a5 << 0x10\n  2669: a0 = a0 << 0x18\n  2672: a0 = a0 | a5\n  2675: a0 = a0 | a2\n  2678: a0 = a0 << 0x20\n  2681: a0 = a0 | a1\n  2684: a0 = reverse a0\n  2686: a1 = reverse a3\n  2688: a2 = reverse t1\n  2690: a3 = reverse t0\n  2692: u64 [s0 + 0x18] = a3\n  2695: u64 [s0 + 0x10] = a2\n  2698: u64 [s0 + 0x8] = a1\n  2701: u64 [s0] = a0\n  2703: ra = u64 [sp + 0x8]\n  2706: s0 = u64 [sp]\n  2708: sp = sp + 0x10\n  2711: ret\n      : @55 (gas: 18)\n  2713: sp = sp + 0xffffffffffffff60\n  2717: u64 [sp + 0x98] = ra\n  2721: u64 [sp + 0x90] = s0\n  2725: u64 [sp + 0x88] = s1\n  2729: s0 = sp + 0xa0\n  2733: sp = sp & 0xfffffffffffffff0\n  2736: a2 = u64 [a1 + 0x18]\n  2739: u64 [sp + 0x30] = a2\n  2742: a2 = u64 [a1 + 0x10]\n  2745: u64 [sp + 0x28] = a2\n  2748: a2 = u64 [a1 + 0x8]\n  2751: u64 [sp + 0x20] = a2\n  2754: a1 = u64 [a1]\n  2756: u64 [sp + 0x18] = a1\n  2759: u64 [sp + 0x38] = a0\n  2762: a0 = 0x40\n  2765: a1 = 0x20\n  2768: ra = 48, jump @0\n      : @56 [@dyn 24] (gas: 130)\n  2773: a1 = u8 [a0 + 0x19]\n  2776: a2 = u8 [a0 + 0x18]\n  2779: a3 = u8 [a0 + 0x1a]\n  2782: a4 = u8 [a0 + 0x1b]\n  2785: a1 = a1 << 0x8\n  2788: a1 = a1 | a2\n  2791: a3 = a3 << 0x10\n  2794: a4 = a4 << 0x18\n  2797: a3 = a3 | a4\n  2800: a1 = a1 | a3\n  2803: a2 = u8 [a0 + 0x1d]\n  2806: a3 = u8 [a0 + 0x1c]\n  2809: a4 = u8 [a0 + 0x1e]\n  2812: a5 = u8 [a0 + 0x1f]\n  2815: a2 = a2 << 0x8\n  2818: a2 = a2 | a3\n  2821: a4 = a4 << 0x10\n  2824: a5 = a5 << 0x18\n  2827: a4 = a4 | a5\n  2830: a2 = a2 | a4\n  2833: a2 = a2 << 0x20\n  2836: t0 = a2 | a1\n  2839: a2 = u8 [a0 + 0x11]\n  2842: a3 = u8 [a0 + 0x10]\n  2845: a4 = u8 [a0 + 0x12]\n  2848: a5 = u8 [a0 + 0x13]\n  2851: a2 = a2 << 0x8\n  2854: a2 = a2 | a3\n  2857: a4 = a4 << 0x10\n  2860: a5 = a5 << 0x18\n  2863: a4 = a4 | a5\n  2866: a2 = a2 | a4\n  2869: a3 = u8 [a0 + 0x15]\n  2872: a4 = u8 [a0 + 0x14]\n  2875: a5 = u8 [a0 + 0x16]\n  2878: s1 = u8 [a0 + 0x17]\n  2881: a3 = a3 << 0x8\n  2884: a3 = a3 | a4\n  2887: a5 = a5 << 0x10\n  2890: s1 = s1 << 0x18\n  2893: a5 = a5 | s1\n  2896: a3 = a3 | a5\n  2899: a3 = a3 << 0x20\n  2902: a2 = a2 | a3\n  2905: a3 = u8 [a0 + 0x9]\n  2908: a4 = u8 [a0 + 0x8]\n  2911: a5 = u8 [a0 + 0xa]\n  2914: s1 = u8 [a0 + 0xb]\n  2917: a3 = a3 << 0x8\n  2920: a3 = a3 | a4\n  2923: a5 = a5 << 0x10\n  2926: s1 = s1 << 0x18\n  2929: a5 = a5 | s1\n  2932: a3 = a3 | a5\n  2935: a4 = u8 [a0 + 0xd]\n  2938: a5 = u8 [a0 + 0xc]\n  2941: s1 = u8 [a0 + 0xe]\n  2944: a1 = u8 [a0 + 0xf]\n  2947: a4 = a4 << 0x8\n  2950: a4 = a4 | a5\n  2953: s1 = s1 << 0x10\n  2956: a1 = a1 << 0x18\n  2959: a1 = a1 | s1\n  2962: a1 = a1 | a4\n  2965: a1 = a1 << 0x20\n  2968: a3 = a3 | a1\n  2971: a1 = u8 [a0 + 0x1]\n  2974: a4 = u8 [a0]\n  2976: a5 = u8 [a0 + 0x2]\n  2979: s1 = u8 [a0 + 0x3]\n  2982: a1 = a1 << 0x8\n  2985: a1 = a1 | a4\n  2988: a5 = a5 << 0x10\n  2991: s1 = s1 << 0x18\n  2994: a5 = a5 | s1\n  2997: a1 = a1 | a5\n  3000: a4 = u8 [a0 + 0x5]\n  3003: a5 = u8 [a0 + 0x4]\n  3006: s1 = u8 [a0 + 0x6]\n  3009: a0 = u8 [a0 + 0x7]\n  3012: a4 = a4 << 0x8\n  3015: a4 = a4 | a5\n  3018: s1 = s1 << 0x10\n  3021: a0 = a0 << 0x18\n  3024: a0 = a0 | s1\n  3027: a0 = a0 | a4\n  3030: a0 = a0 << 0x20\n  3033: a0 = a0 | a1\n  3036: t1 = reverse a0\n  3038: t2 = reverse a3\n  3040: s1 = reverse a2\n  3042: a5 = reverse t0\n  3044: a1 = u64 [sp + 0x18]\n  3047: a0 = a1 + 0x1f\n  3050: a1 = a0 <u a1\n  3053: a3 = u64 [sp + 0x20]\n  3056: a2 = a3 + a1\n  3059: a3 = a2 <u a3\n  3062: a3 = a1 if a1 == 0\n  3065: a1 = u64 [sp + 0x28]\n  3068: a3 = a3 + a1\n  3071: a1 = a3 <u a1\n  3074: a4 = u64 [sp + 0x30]\n  3077: a1 = a1 + a4\n  3080: a0 = a0 & 0xffffffffffffffe0\n  3083: a0 = a0 + a5\n  3086: u64 [sp + 0x28] = a5\n  3089: u64 [sp + 0x10] = a0\n  3092: a4 = a0 <u a5\n  3095: a2 = a2 + s1\n  3098: a5 = a2 + a4\n  3101: a2 = a5 ^ s1\n  3104: u64 [sp + 0x30] = s1\n  3107: a0 = a5 <u s1\n  3110: a0 = a4 if a2 == 0\n  3113: a3 = a3 + t2\n  3116: a4 = a3 + a0\n  3119: s1 = a4 <u a3\n  3122: a2 = a3 <u t2\n  3125: a1 = a1 + t1\n  3128: a1 = a1 + a2\n  3131: s1 = s1 + a1\n  3134: a1 = a4 >u 0\n  3136: a2 = s1 >u 0\n  3138: a2 = a1 if s1 == 0\n  3141: a1 = a4 | s1\n  3144: u64 [sp + 0x8] = a5\n  3147: a3 = a5 >u 0\n  3149: a3 = a2 if a1 != 0\n  3152: jump @60 if a3 != 0\n      : @57 (gas: 8)\n  3156: a1 = a4 <u t2\n  3159: a2 = s1 ^ t1\n  3162: a3 = s1 <u t1\n  3165: a3 = a1 if a2 == 0\n  3168: a1 = a4 ^ t2\n  3171: a1 = a1 | a2\n  3174: a0 = a3 if a1 != 0\n  3177: jump @60 if a0 != 0\n      : @58 (gas: 6)\n  3181: a0 = 0x40\n  3184: a1 = 0x20\n  3187: u64 [sp + 0x20] = t2\n  3190: u64 [sp + 0x18] = t1\n  3193: u64 [sp] = a4\n  3195: ra = 50, jump @0\n      : @59 [@dyn 25] (gas: 82)\n  3200: a1 = reverse s1\n  3202: a2 = u64 [sp]\n  3204: a2 = reverse a2\n  3206: a3 = u64 [sp + 0x8]\n  3209: a3 = reverse a3\n  3211: a4 = u64 [sp + 0x10]\n  3214: a4 = reverse a4\n  3216: u8 [a0 + 0x18] = a4\n  3219: a5 = a4 >> 0x38\n  3222: u8 [a0 + 0x1f] = a5\n  3225: a5 = a4 >> 0x30\n  3228: u8 [a0 + 0x1e] = a5\n  3231: a5 = a4 >> 0x28\n  3234: u8 [a0 + 0x1d] = a5\n  3237: a5 = a4 >> 0x20\n  3240: u8 [a0 + 0x1c] = a5\n  3243: a5 = a4 >> 0x18\n  3246: u8 [a0 + 0x1b] = a5\n  3249: a5 = a4 >> 0x10\n  3252: u8 [a0 + 0x1a] = a5\n  3255: a4 = a4 >> 0x8\n  3258: u8 [a0 + 0x19] = a4\n  3261: u8 [a0 + 0x10] = a3\n  3264: a4 = a3 >> 0x38\n  3267: u8 [a0 + 0x17] = a4\n  3270: a4 = a3 >> 0x30\n  3273: u8 [a0 + 0x16] = a4\n  3276: a4 = a3 >> 0x28\n  3279: u8 [a0 + 0x15] = a4\n  3282: a4 = a3 >> 0x20\n  3285: u8 [a0 + 0x14] = a4\n  3288: a4 = a3 >> 0x18\n  3291: u8 [a0 + 0x13] = a4\n  3294: a4 = a3 >> 0x10\n  3297: u8 [a0 + 0x12] = a4\n  3300: a3 = a3 >> 0x8\n  3303: u8 [a0 + 0x11] = a3\n  3306: u8 [a0 + 0x8] = a2\n  3309: a3 = a2 >> 0x38\n  3312: u8 [a0 + 0xf] = a3\n  3315: a3 = a2 >> 0x30\n  3318: u8 [a0 + 0xe] = a3\n  3321: a3 = a2 >> 0x28\n  3324: u8 [a0 + 0xd] = a3\n  3327: a3 = a2 >> 0x20\n  3330: u8 [a0 + 0xc] = a3\n  3333: a3 = a2 >> 0x18\n  3336: u8 [a0 + 0xb] = a3\n  3339: a3 = a2 >> 0x10\n  3342: u8 [a0 + 0xa] = a3\n  3345: a2 = a2 >> 0x8\n  3348: u8 [a0 + 0x9] = a2\n  3351: u8 [a0] = a1\n  3353: a2 = a1 >> 0x38\n  3356: u8 [a0 + 0x7] = a2\n  3359: a2 = a1 >> 0x30\n  3362: u8 [a0 + 0x6] = a2\n  3365: a2 = a1 >> 0x28\n  3368: u8 [a0 + 0x5] = a2\n  3371: a2 = a1 >> 0x20\n  3374: u8 [a0 + 0x4] = a2\n  3377: a2 = a1 >> 0x18\n  3380: u8 [a0 + 0x3] = a2\n  3383: a2 = a1 >> 0x10\n  3386: u8 [a0 + 0x2] = a2\n  3389: a1 = a1 >> 0x8\n  3392: u8 [a0 + 0x1] = a1\n  3395: a0 = u64 [sp + 0x38]\n  3398: a1 = u64 [sp + 0x28]\n  3401: u64 [a0] = a1\n  3403: a1 = u64 [sp + 0x18]\n  3406: u64 [a0 + 0x18] = a1\n  3409: a1 = u64 [sp + 0x30]\n  3412: u64 [a0 + 0x8] = a1\n  3415: a1 = u64 [sp + 0x20]\n  3418: u64 [a0 + 0x10] = a1\n  3421: sp = s0 + 0xffffffffffffff60\n  3425: ra = u64 [sp + 0x98]\n  3429: s0 = u64 [sp + 0x90]\n  3433: s1 = u64 [sp + 0x88]\n  3437: sp = sp + 0xa0\n  3441: ret\n      : @60 (gas: 8)\n  3443: u64 [sp + 112] = 0\n  3446: u64 [sp + 104] = 0\n  3449: u64 [sp + 96] = 0\n  3452: a0 = 0x4e487b7100000000\n  3462: a1 = sp + 0x60\n  3465: u64 [sp + 0x78] = a0\n  3468: a0 = 0\n  3470: ra = 52, jump @8\n      : @61 [@dyn 26] (gas: 7)\n  3475: u64 [sp + 88] = 0\n  3478: u64 [sp + 80] = 0\n  3481: u64 [sp + 64] = 0x41\n  3485: a0 = 0x4\n  3488: a1 = sp + 0x40\n  3491: u64 [sp + 72] = 0\n  3494: ra = 54, jump @8\n      : @62 [@dyn 27] (gas: 3)\n  3499: a1 = 0x24\n  3502: a0 = 0\n  3504: ra = 56, jump @0\n      : @63 [@dyn 28] (gas: 6)\n  3509: i32 a1 = a0 + 0\n  3511: a0 = 0x1\n  3514: a2 = 0x24\n  3517: ra = 0x3a\n  3520: ecalli 11 // 'seal_return'\n  3522: fallthrough\n      : @64 [@dyn 29] (gas: 8)\n  3523: a2 = u32 [a1 + 0x10]\n  3526: a3 = u64 [a1 + 0x8]\n  3529: a1 = u64 [a1]\n  3531: u64 [a0 + 24] = 0\n  3534: u64 [a0 + 0x10] = a2\n  3537: u64 [a0 + 0x8] = a3\n  3540: u64 [a0] = a1\n  3542: ret\n      : @65 (gas: 38)\n  3544: sp = sp + 0xfffffffffffffe28\n  3548: u64 [sp + 0x1d0] = ra\n  3552: u64 [sp + 0x1c8] = s0\n  3556: u64 [sp + 0x1c0] = s1\n  3560: ra = u64 [a1 + 0x18]\n  3563: a3 = u64 [a2 + 0x18]\n  3566: u64 [sp + 0x1b8] = a3\n  3570: t0 = u64 [a1 + 0x10]\n  3573: s1 = u64 [a1 + 0x8]\n  3576: a4 = u64 [a2 + 0x8]\n  3579: t2 = u64 [a1]\n  3581: a1 = u64 [a2]\n  3583: a2 = u64 [a2 + 0x10]\n  3586: a5 = a4 ^ s1\n  3589: s0 = a4 <u s1\n  3592: a3 = a1 <u t2\n  3595: s0 = a3 if a5 == 0\n  3598: a5 = a2 - t0\n  3601: t1 = a5 - s0\n  3604: a5 = a5 <u s0\n  3607: a2 = a2 <u t0\n  3610: s0 = u64 [sp + 0x1b8]\n  3614: s0 = s0 - ra\n  3617: s0 = s0 - a2\n  3620: s0 = s0 - a5\n  3623: a2 = a4 - s1\n  3626: a2 = a2 - a3\n  3629: a1 = a1 - t2\n  3632: a4 = a2 >u 0\n  3634: a1 = a1 <u 0x80\n  3638: a1 = a1 ^ 0x1\n  3641: a1 = a4 if a2 != 0\n  3644: a2 = s0 >s 0\n  3646: a4 = t1 >u 0\n  3648: a4 = a2 if s0 != 0\n  3651: a3 = t1 | s0\n  3654: a1 = a4 if a3 != 0\n  3657: jump @81 if a1 == 0\n      : @66 (gas: 12)\n  3661: u64 [sp + 0x198] = a0\n  3665: a0 = t2 | t0\n  3668: u64 [sp + 0x1b8] = s1\n  3672: u64 [sp + 0x1b0] = ra\n  3676: a1 = s1 | ra\n  3679: a0 = a0 | a1\n  3682: a0 = a0 >> 0x20\n  3685: u64 [sp + 0x1a8] = t0\n  3689: a1 = a1 | t0\n  3692: a1 = a1 << 0x20\n  3695: a0 = a0 | a1\n  3698: jump @79 if a0 != 0\n      : @67 (gas: 5)\n  3702: i32 a0 = t2 + 0\n  3704: a1 = 0x20\n  3707: u64 [sp + 0x1a0] = a0\n  3711: s0 = t2\n  3713: ra = 60, jump @0\n      : @68 [@dyn 30] (gas: 54)\n  3718: a1 = u8 [a0 + 0x9]\n  3721: a2 = u8 [a0 + 0x8]\n  3724: a3 = u8 [a0 + 0xa]\n  3727: a4 = u8 [a0 + 0xb]\n  3730: a1 = a1 << 0x8\n  3733: a1 = a1 | a2\n  3736: a3 = a3 << 0x10\n  3739: a4 = a4 << 0x18\n  3742: a3 = a3 | a4\n  3745: a1 = a1 | a3\n  3748: a2 = u8 [a0 + 0xd]\n  3751: a3 = u8 [a0 + 0xc]\n  3754: a4 = u8 [a0 + 0xe]\n  3757: a5 = u8 [a0 + 0xf]\n  3760: a2 = a2 << 0x8\n  3763: a2 = a2 | a3\n  3766: a4 = a4 << 0x10\n  3769: a5 = a5 << 0x18\n  3772: a4 = a4 | a5\n  3775: a2 = a2 | a4\n  3778: a2 = a2 << 0x20\n  3781: a1 = a1 | a2\n  3784: a2 = u8 [a0 + 0x1]\n  3787: a3 = u8 [a0]\n  3789: a4 = u8 [a0 + 0x2]\n  3792: a5 = u8 [a0 + 0x3]\n  3795: a2 = a2 << 0x8\n  3798: a2 = a2 | a3\n  3801: a4 = a4 << 0x10\n  3804: a5 = a5 << 0x18\n  3807: a4 = a4 | a5\n  3810: a2 = a2 | a4\n  3813: a3 = u8 [a0 + 0x5]\n  3816: a4 = u8 [a0 + 0x4]\n  3819: a5 = u8 [a0 + 0x6]\n  3822: s1 = u8 [a0 + 0x7]\n  3825: a3 = a3 << 0x8\n  3828: a3 = a3 | a4\n  3831: a5 = a5 << 0x10\n  3834: s1 = s1 << 0x18\n  3837: a5 = a5 | s1\n  3840: a3 = a3 | a5\n  3843: a3 = a3 << 0x20\n  3846: a2 = a2 | a3\n  3849: a4 = reverse a2\n  3851: a5 = reverse a1\n  3853: a1 = 0x100000000\n  3863: a2 = a5 ^ a1\n  3866: a2 = a2 | a4\n  3869: a3 = a5 >> 0x20\n  3872: a3 = a3 <u 0x1\n  3875: a3 = 0 if a4 != 0\n  3877: a3 = 0 if a2 == 0\n  3879: jump @80 if a3 == 0\n      : @69 (gas: 13)\n  3883: u64 [sp + 0x188] = a5\n  3887: u64 [sp + 0x190] = a4\n  3891: a2 = u64 [sp + 0x1b0]\n  3895: a3 = u64 [sp + 0x1a8]\n  3899: a3 = a3 | a2\n  3902: a1 = 0xffffffe0\n  3912: u64 [sp + 0x1b0] = s0\n  3916: a1 = s0 <u a1\n  3919: a2 = u64 [sp + 0x1b8]\n  3923: a1 = 0 if a2 != 0\n  3925: u64 [sp + 0x1a8] = a3\n  3929: a1 = 0 if a3 != 0\n  3931: jump @79 if a1 == 0\n      : @70 (gas: 36)\n  3935: a1 = u8 [a0 + 0x18]\n  3938: u64 [sp + 0x118] = a1\n  3942: a1 = u8 [a0 + 0x19]\n  3945: u64 [sp + 0xf8] = a1\n  3949: a1 = u8 [a0 + 0x1a]\n  3952: u64 [sp + 0x108] = a1\n  3956: a1 = u8 [a0 + 0x1b]\n  3959: u64 [sp + 0x100] = a1\n  3963: a1 = u8 [a0 + 0x1c]\n  3966: u64 [sp + 0x130] = a1\n  3970: a1 = u8 [a0 + 0x1d]\n  3973: u64 [sp + 0x110] = a1\n  3977: a1 = u8 [a0 + 0x1e]\n  3980: u64 [sp + 0x128] = a1\n  3984: a1 = u8 [a0 + 0x1f]\n  3987: u64 [sp + 0x120] = a1\n  3991: a1 = u8 [a0 + 0x10]\n  3994: u64 [sp + 0x158] = a1\n  3998: a1 = u8 [a0 + 0x11]\n  4001: u64 [sp + 0x138] = a1\n  4005: a1 = u8 [a0 + 0x12]\n  4008: u64 [sp + 0x148] = a1\n  4012: a1 = u8 [a0 + 0x13]\n  4015: u64 [sp + 0x140] = a1\n  4019: a1 = u8 [a0 + 0x14]\n  4022: u64 [sp + 0x170] = a1\n  4026: a1 = u8 [a0 + 0x15]\n  4029: u64 [sp + 0x150] = a1\n  4033: a1 = u8 [a0 + 0x16]\n  4036: u64 [sp + 0x168] = a1\n  4040: a0 = u8 [a0 + 0x17]\n  4043: u64 [sp + 0x160] = a0\n  4047: s0 = u64 [sp + 0x1a0]\n  4051: i32 a0 = s0 + 0x20\n  4054: a1 = 0x20\n  4057: ra = 62, jump @0\n      : @71 [@dyn 31] (gas: 54)\n  4062: a1 = u8 [a0 + 0x9]\n  4065: a2 = u8 [a0 + 0x8]\n  4068: a3 = u8 [a0 + 0xa]\n  4071: a4 = u8 [a0 + 0xb]\n  4074: a1 = a1 << 0x8\n  4077: a1 = a1 | a2\n  4080: a3 = a3 << 0x10\n  4083: a4 = a4 << 0x18\n  4086: a3 = a3 | a4\n  4089: a1 = a1 | a3\n  4092: a2 = u8 [a0 + 0xd]\n  4095: a3 = u8 [a0 + 0xc]\n  4098: a4 = u8 [a0 + 0xe]\n  4101: a5 = u8 [a0 + 0xf]\n  4104: a2 = a2 << 0x8\n  4107: a2 = a2 | a3\n  4110: a4 = a4 << 0x10\n  4113: a5 = a5 << 0x18\n  4116: a4 = a4 | a5\n  4119: a2 = a2 | a4\n  4122: a2 = a2 << 0x20\n  4125: a1 = a1 | a2\n  4128: a2 = u8 [a0 + 0x1]\n  4131: a3 = u8 [a0]\n  4133: a4 = u8 [a0 + 0x2]\n  4136: a5 = u8 [a0 + 0x3]\n  4139: a2 = a2 << 0x8\n  4142: a2 = a2 | a3\n  4145: a4 = a4 << 0x10\n  4148: a5 = a5 << 0x18\n  4151: a4 = a4 | a5\n  4154: a2 = a2 | a4\n  4157: a3 = u8 [a0 + 0x5]\n  4160: a4 = u8 [a0 + 0x4]\n  4163: a5 = u8 [a0 + 0x6]\n  4166: s1 = u8 [a0 + 0x7]\n  4169: a3 = a3 << 0x8\n  4172: a3 = a3 | a4\n  4175: a5 = a5 << 0x10\n  4178: s1 = s1 << 0x18\n  4181: a5 = a5 | s1\n  4184: a3 = a3 | a5\n  4187: a3 = a3 << 0x20\n  4190: a2 = a2 | a3\n  4193: a4 = reverse a2\n  4195: a5 = reverse a1\n  4197: a1 = 0x100000000\n  4207: a2 = a5 ^ a1\n  4210: a2 = a2 | a4\n  4213: a3 = a5 >> 0x20\n  4216: a3 = a3 <u 0x1\n  4219: a3 = 0 if a4 != 0\n  4221: a3 = 0 if a2 == 0\n  4223: jump @80 if a3 == 0\n      : @72 (gas: 10)\n  4227: u64 [sp + 0x178] = a5\n  4231: u64 [sp + 0x180] = a4\n  4235: a1 = 0xffffffc0\n  4245: a2 = u64 [sp + 0x1b0]\n  4249: a1 = a2 <u a1\n  4252: a2 = u64 [sp + 0x1b8]\n  4256: a1 = 0 if a2 != 0\n  4258: a2 = u64 [sp + 0x1a8]\n  4262: a1 = 0 if a2 != 0\n  4264: jump @79 if a1 == 0\n      : @73 (gas: 35)\n  4268: a1 = u8 [a0 + 0x18]\n  4271: u64 [sp + 0x88] = a1\n  4275: a1 = u8 [a0 + 0x19]\n  4278: u64 [sp + 0x68] = a1\n  4281: a1 = u8 [a0 + 0x1a]\n  4284: u64 [sp + 0x78] = a1\n  4287: a1 = u8 [a0 + 0x1b]\n  4290: u64 [sp + 0x70] = a1\n  4293: a1 = u8 [a0 + 0x1c]\n  4296: u64 [sp + 0xa0] = a1\n  4300: a1 = u8 [a0 + 0x1d]\n  4303: u64 [sp + 0x80] = a1\n  4307: a1 = u8 [a0 + 0x1e]\n  4310: u64 [sp + 0x98] = a1\n  4314: a1 = u8 [a0 + 0x1f]\n  4317: u64 [sp + 0x90] = a1\n  4321: a1 = u8 [a0 + 0x10]\n  4324: u64 [sp + 0xc8] = a1\n  4328: a1 = u8 [a0 + 0x11]\n  4331: u64 [sp + 0xa8] = a1\n  4335: a1 = u8 [a0 + 0x12]\n  4338: u64 [sp + 0xb8] = a1\n  4342: a1 = u8 [a0 + 0x13]\n  4345: u64 [sp + 0xb0] = a1\n  4349: a1 = u8 [a0 + 0x14]\n  4352: u64 [sp + 0xe0] = a1\n  4356: a1 = u8 [a0 + 0x15]\n  4359: u64 [sp + 0xc0] = a1\n  4363: a1 = u8 [a0 + 0x16]\n  4366: u64 [sp + 0xd8] = a1\n  4370: a0 = u8 [a0 + 0x17]\n  4373: u64 [sp + 0xd0] = a0\n  4377: i32 a0 = s0 + 0x40\n  4380: a1 = 0x20\n  4383: ra = 64, jump @0\n      : @74 [@dyn 32] (gas: 54)\n  4388: a1 = u8 [a0 + 0x9]\n  4391: a2 = u8 [a0 + 0x8]\n  4394: a3 = u8 [a0 + 0xa]\n  4397: a4 = u8 [a0 + 0xb]\n  4400: a1 = a1 << 0x8\n  4403: a1 = a1 | a2\n  4406: a3 = a3 << 0x10\n  4409: a4 = a4 << 0x18\n  4412: a3 = a3 | a4\n  4415: a1 = a1 | a3\n  4418: a2 = u8 [a0 + 0xd]\n  4421: a3 = u8 [a0 + 0xc]\n  4424: a4 = u8 [a0 + 0xe]\n  4427: a5 = u8 [a0 + 0xf]\n  4430: a2 = a2 << 0x8\n  4433: a2 = a2 | a3\n  4436: a4 = a4 << 0x10\n  4439: a5 = a5 << 0x18\n  4442: a4 = a4 | a5\n  4445: a2 = a2 | a4\n  4448: a2 = a2 << 0x20\n  4451: a1 = a1 | a2\n  4454: a2 = u8 [a0 + 0x1]\n  4457: a3 = u8 [a0]\n  4459: a4 = u8 [a0 + 0x2]\n  4462: a5 = u8 [a0 + 0x3]\n  4465: a2 = a2 << 0x8\n  4468: a2 = a2 | a3\n  4471: a4 = a4 << 0x10\n  4474: a5 = a5 << 0x18\n  4477: a4 = a4 | a5\n  4480: a2 = a2 | a4\n  4483: a3 = u8 [a0 + 0x5]\n  4486: a4 = u8 [a0 + 0x4]\n  4489: a5 = u8 [a0 + 0x6]\n  4492: s1 = u8 [a0 + 0x7]\n  4495: a3 = a3 << 0x8\n  4498: a3 = a3 | a4\n  4501: a5 = a5 << 0x10\n  4504: s1 = s1 << 0x18\n  4507: a5 = a5 | s1\n  4510: a3 = a3 | a5\n  4513: a3 = a3 << 0x20\n  4516: a2 = a2 | a3\n  4519: a4 = reverse a2\n  4521: a5 = reverse a1\n  4523: a1 = 0x100000000\n  4533: a2 = a5 ^ a1\n  4536: a2 = a2 | a4\n  4539: a3 = a5 >> 0x20\n  4542: a3 = a3 <u 0x1\n  4545: a3 = 0 if a4 != 0\n  4547: a3 = 0 if a2 == 0\n  4549: jump @80 if a3 == 0\n      : @75 (gas: 10)\n  4553: u64 [sp + 0xe8] = a5\n  4557: u64 [sp + 0xf0] = a4\n  4561: a1 = 0xffffffa0\n  4571: a2 = u64 [sp + 0x1b0]\n  4575: a1 = a2 <u a1\n  4578: a2 = u64 [sp + 0x1b8]\n  4582: a1 = 0 if a2 != 0\n  4584: a2 = u64 [sp + 0x1a8]\n  4588: a1 = 0 if a2 != 0\n  4590: jump @79 if a1 == 0\n      : @76 (gas: 35)\n  4594: a1 = u8 [a0 + 0x18]\n  4597: u64 [sp + 0x20] = a1\n  4600: a1 = u8 [a0 + 0x19]\n  4603: u64 [sp] = a1\n  4605: a1 = u8 [a0 + 0x1a]\n  4608: u64 [sp + 0x10] = a1\n  4611: a1 = u8 [a0 + 0x1b]\n  4614: u64 [sp + 0x8] = a1\n  4617: a1 = u8 [a0 + 0x1c]\n  4620: u64 [sp + 0x38] = a1\n  4623: a1 = u8 [a0 + 0x1d]\n  4626: u64 [sp + 0x18] = a1\n  4629: a1 = u8 [a0 + 0x1e]\n  4632: u64 [sp + 0x30] = a1\n  4635: a1 = u8 [a0 + 0x1f]\n  4638: u64 [sp + 0x28] = a1\n  4641: a1 = u8 [a0 + 0x10]\n  4644: u64 [sp + 0x60] = a1\n  4647: a1 = u8 [a0 + 0x11]\n  4650: u64 [sp + 0x40] = a1\n  4653: a1 = u8 [a0 + 0x12]\n  4656: u64 [sp + 0x50] = a1\n  4659: a1 = u8 [a0 + 0x13]\n  4662: u64 [sp + 0x48] = a1\n  4665: a1 = u8 [a0 + 0x14]\n  4668: u64 [sp + 0x1b8] = a1\n  4672: a1 = u8 [a0 + 0x15]\n  4675: u64 [sp + 0x58] = a1\n  4678: a1 = u8 [a0 + 0x16]\n  4681: u64 [sp + 0x1b0] = a1\n  4685: a0 = u8 [a0 + 0x17]\n  4688: u64 [sp + 0x1a8] = a0\n  4692: i32 a0 = s0 + 0x60\n  4695: a1 = 0x20\n  4698: ra = 66, jump @0\n      : @77 [@dyn 33] (gas: 54)\n  4703: a1 = u8 [a0 + 0x9]\n  4706: a2 = u8 [a0 + 0x8]\n  4709: a3 = u8 [a0 + 0xa]\n  4712: a4 = u8 [a0 + 0xb]\n  4715: a1 = a1 << 0x8\n  4718: a1 = a1 | a2\n  4721: a3 = a3 << 0x10\n  4724: a4 = a4 << 0x18\n  4727: a3 = a3 | a4\n  4730: a1 = a1 | a3\n  4733: a2 = u8 [a0 + 0xd]\n  4736: a3 = u8 [a0 + 0xc]\n  4739: a4 = u8 [a0 + 0xe]\n  4742: a5 = u8 [a0 + 0xf]\n  4745: a2 = a2 << 0x8\n  4748: a2 = a2 | a3\n  4751: a4 = a4 << 0x10\n  4754: a5 = a5 << 0x18\n  4757: a4 = a4 | a5\n  4760: a2 = a2 | a4\n  4763: a2 = a2 << 0x20\n  4766: a2 = a2 | a1\n  4769: a1 = u8 [a0 + 0x1]\n  4772: a3 = u8 [a0]\n  4774: a4 = u8 [a0 + 0x2]\n  4777: a5 = u8 [a0 + 0x3]\n  4780: a1 = a1 << 0x8\n  4783: a1 = a1 | a3\n  4786: a4 = a4 << 0x10\n  4789: a5 = a5 << 0x18\n  4792: a4 = a4 | a5\n  4795: a1 = a1 | a4\n  4798: a3 = u8 [a0 + 0x5]\n  4801: a4 = u8 [a0 + 0x4]\n  4804: a5 = u8 [a0 + 0x6]\n  4807: s1 = u8 [a0 + 0x7]\n  4810: a3 = a3 << 0x8\n  4813: a3 = a3 | a4\n  4816: a5 = a5 << 0x10\n  4819: s1 = s1 << 0x18\n  4822: a5 = a5 | s1\n  4825: a3 = a3 | a5\n  4828: a3 = a3 << 0x20\n  4831: a1 = a1 | a3\n  4834: t1 = reverse a1\n  4836: t2 = reverse a2\n  4838: a3 = 0x100000000\n  4848: a3 = t2 ^ a3\n  4851: a3 = a3 | t1\n  4854: a4 = t2 >> 0x20\n  4857: a4 = a4 <u 0x1\n  4860: a4 = 0 if t1 != 0\n  4862: a4 = 0 if a3 == 0\n  4864: jump @80 if a4 == 0\n      : @78 (gas: 216)\n  4868: a3 = u64 [sp + 0xf8]\n  4872: a3 = a3 << 0x8\n  4875: a1 = u64 [sp + 0x118]\n  4879: a3 = a3 | a1\n  4882: a4 = u64 [sp + 0x108]\n  4886: a4 = a4 << 0x10\n  4889: a5 = u64 [sp + 0x100]\n  4893: a5 = a5 << 0x18\n  4896: a4 = a4 | a5\n  4899: a3 = a3 | a4\n  4902: a4 = u64 [sp + 0x110]\n  4906: a4 = a4 << 0x8\n  4909: a1 = u64 [sp + 0x130]\n  4913: a4 = a4 | a1\n  4916: a5 = u64 [sp + 0x128]\n  4920: a5 = a5 << 0x10\n  4923: s1 = u64 [sp + 0x120]\n  4927: s1 = s1 << 0x18\n  4930: a5 = a5 | s1\n  4933: a4 = a4 | a5\n  4936: a4 = a4 << 0x20\n  4939: s0 = a4 | a3\n  4942: a3 = u64 [sp + 0x138]\n  4946: a3 = a3 << 0x8\n  4949: a1 = u64 [sp + 0x158]\n  4953: a3 = a3 | a1\n  4956: a4 = u64 [sp + 0x148]\n  4960: a4 = a4 << 0x10\n  4963: a5 = u64 [sp + 0x140]\n  4967: a5 = a5 << 0x18\n  4970: a4 = a4 | a5\n  4973: a3 = a3 | a4\n  4976: a4 = u64 [sp + 0x150]\n  4980: a4 = a4 << 0x8\n  4983: a1 = u64 [sp + 0x170]\n  4987: a4 = a4 | a1\n  4990: a5 = u64 [sp + 0x168]\n  4994: a5 = a5 << 0x10\n  4997: s1 = u64 [sp + 0x160]\n  5001: s1 = s1 << 0x18\n  5004: a5 = a5 | s1\n  5007: a4 = a4 | a5\n  5010: a4 = a4 << 0x20\n  5013: a3 = a3 | a4\n  5016: u64 [sp + 0x1a0] = a3\n  5020: a3 = u64 [sp + 0x68]\n  5023: a3 = a3 << 0x8\n  5026: a1 = u64 [sp + 0x88]\n  5030: a3 = a3 | a1\n  5033: a4 = u64 [sp + 0x78]\n  5036: a4 = a4 << 0x10\n  5039: a5 = u64 [sp + 0x70]\n  5042: a5 = a5 << 0x18\n  5045: a4 = a4 | a5\n  5048: a3 = a3 | a4\n  5051: a4 = u64 [sp + 0x80]\n  5055: a4 = a4 << 0x8\n  5058: a1 = u64 [sp + 0xa0]\n  5062: a4 = a4 | a1\n  5065: a5 = u64 [sp + 0x98]\n  5069: a5 = a5 << 0x10\n  5072: s1 = u64 [sp + 0x90]\n  5076: s1 = s1 << 0x18\n  5079: a5 = a5 | s1\n  5082: a4 = a4 | a5\n  5085: a4 = a4 << 0x20\n  5088: a3 = a3 | a4\n  5091: u64 [sp + 0x170] = a3\n  5095: a3 = u64 [sp + 0xa8]\n  5099: a3 = a3 << 0x8\n  5102: a1 = u64 [sp + 0xc8]\n  5106: a3 = a3 | a1\n  5109: a4 = u64 [sp + 0xb8]\n  5113: a4 = a4 << 0x10\n  5116: a5 = u64 [sp + 0xb0]\n  5120: a5 = a5 << 0x18\n  5123: a4 = a4 | a5\n  5126: a3 = a3 | a4\n  5129: a4 = u64 [sp + 0xc0]\n  5133: a4 = a4 << 0x8\n  5136: a1 = u64 [sp + 0xe0]\n  5140: a4 = a4 | a1\n  5143: a5 = u64 [sp + 0xd8]\n  5147: a5 = a5 << 0x10\n  5150: s1 = u64 [sp + 0xd0]\n  5154: s1 = s1 << 0x18\n  5157: a5 = a5 | s1\n  5160: a4 = a4 | a5\n  5163: a4 = a4 << 0x20\n  5166: ra = a4 | a3\n  5169: a3 = u64 [sp]\n  5171: a3 = a3 << 0x8\n  5174: a1 = u64 [sp + 0x20]\n  5177: a3 = a3 | a1\n  5180: a4 = u64 [sp + 0x10]\n  5183: a4 = a4 << 0x10\n  5186: a5 = u64 [sp + 0x8]\n  5189: a5 = a5 << 0x18\n  5192: a4 = a4 | a5\n  5195: a3 = a3 | a4\n  5198: a4 = u64 [sp + 0x18]\n  5201: a4 = a4 << 0x8\n  5204: a1 = u64 [sp + 0x38]\n  5207: a4 = a4 | a1\n  5210: a5 = u64 [sp + 0x30]\n  5213: a5 = a5 << 0x10\n  5216: s1 = u64 [sp + 0x28]\n  5219: s1 = s1 << 0x18\n  5222: a5 = a5 | s1\n  5225: a4 = a4 | a5\n  5228: a4 = a4 << 0x20\n  5231: a3 = a3 | a4\n  5234: a4 = u64 [sp + 0x40]\n  5237: a4 = a4 << 0x8\n  5240: a1 = u64 [sp + 0x60]\n  5243: a4 = a4 | a1\n  5246: a5 = u64 [sp + 0x50]\n  5249: a5 = a5 << 0x10\n  5252: s1 = u64 [sp + 0x48]\n  5255: s1 = s1 << 0x18\n  5258: a5 = a5 | s1\n  5261: a4 = a4 | a5\n  5264: a5 = u64 [sp + 0x58]\n  5267: a5 = a5 << 0x8\n  5270: a1 = u64 [sp + 0x1b8]\n  5274: a5 = a5 | a1\n  5277: s1 = u64 [sp + 0x1b0]\n  5281: s1 = s1 << 0x10\n  5284: t0 = u64 [sp + 0x1a8]\n  5288: t0 = t0 << 0x18\n  5291: s1 = t0 | s1\n  5294: a5 = a5 | s1\n  5297: a5 = a5 << 0x20\n  5300: t0 = a5 | a4\n  5303: a5 = u8 [a0 + 0x19]\n  5306: s1 = u8 [a0 + 0x18]\n  5309: a1 = u8 [a0 + 0x1a]\n  5312: a2 = u8 [a0 + 0x1b]\n  5315: a5 = a5 << 0x8\n  5318: a5 = a5 | s1\n  5321: a1 = a1 << 0x10\n  5324: a2 = a2 << 0x18\n  5327: a1 = a1 | a2\n  5330: a1 = a1 | a5\n  5333: a2 = u8 [a0 + 0x1d]\n  5336: a5 = u8 [a0 + 0x1c]\n  5339: s1 = u8 [a0 + 0x1e]\n  5342: a4 = u8 [a0 + 0x1f]\n  5345: a2 = a2 << 0x8\n  5348: a2 = a2 | a5\n  5351: s1 = s1 << 0x10\n  5354: a4 = a4 << 0x18\n  5357: a4 = a4 | s1\n  5360: a2 = a2 | a4\n  5363: a2 = a2 << 0x20\n  5366: a5 = a2 | a1\n  5369: a1 = u8 [a0 + 0x11]\n  5372: a2 = u8 [a0 + 0x10]\n  5375: a4 = u8 [a0 + 0x12]\n  5378: s1 = u8 [a0 + 0x13]\n  5381: a1 = a1 << 0x8\n  5384: a1 = a1 | a2\n  5387: a4 = a4 << 0x10\n  5390: s1 = s1 << 0x18\n  5393: a4 = a4 | s1\n  5396: a1 = a1 | a4\n  5399: a2 = u8 [a0 + 0x15]\n  5402: a4 = u8 [a0 + 0x14]\n  5405: s1 = u8 [a0 + 0x16]\n  5408: a0 = u8 [a0 + 0x17]\n  5411: a2 = a2 << 0x8\n  5414: a2 = a2 | a4\n  5417: s1 = s1 << 0x10\n  5420: a0 = a0 << 0x18\n  5423: a0 = a0 | s1\n  5426: a0 = a0 | a2\n  5429: a0 = a0 << 0x20\n  5432: a0 = a0 | a1\n  5435: a1 = reverse a5\n  5437: a2 = u64 [sp + 0x198]\n  5441: u64 [a2 + 0x60] = a1\n  5444: a1 = reverse a3\n  5446: u64 [a2 + 0x40] = a1\n  5449: a1 = u64 [sp + 0x170]\n  5453: a1 = reverse a1\n  5455: u64 [a2 + 0x20] = a1\n  5458: a1 = reverse s0\n  5460: u64 [a2] = a1\n  5462: a0 = reverse a0\n  5464: u64 [a2 + 0x68] = a0\n  5467: a0 = reverse t0\n  5469: u64 [a2 + 0x48] = a0\n  5472: a0 = reverse ra\n  5474: u64 [a2 + 0x28] = a0\n  5477: a0 = u64 [sp + 0x1a0]\n  5481: a0 = reverse a0\n  5483: u64 [a2 + 0x8] = a0\n  5486: u64 [a2 + 0x70] = t2\n  5489: a0 = u64 [sp + 0xe8]\n  5493: u64 [a2 + 0x50] = a0\n  5496: a0 = u64 [sp + 0x178]\n  5500: u64 [a2 + 0x30] = a0\n  5503: a0 = u64 [sp + 0x188]\n  5507: u64 [a2 + 0x10] = a0\n  5510: u64 [a2 + 0x78] = t1\n  5513: a0 = u64 [sp + 0xf0]\n  5517: u64 [a2 + 0x58] = a0\n  5520: a0 = u64 [sp + 0x180]\n  5524: u64 [a2 + 0x38] = a0\n  5527: a0 = u64 [sp + 0x190]\n  5531: u64 [a2 + 0x18] = a0\n  5534: ra = u64 [sp + 0x1d0]\n  5538: s0 = u64 [sp + 0x1c8]\n  5542: s1 = u64 [sp + 0x1c0]\n  5546: sp = sp + 0x1d8\n  5550: ret\n      : @79 (gas: 1)\n  5552: trap\n      : @80 (gas: 4)\n  5553: a0 = 0\n  5555: a1 = 0\n  5557: ra = 0x44\n  5560: jump @0\n      : @81 (gas: 2)\n  5563: a0 = 0\n  5565: ra = 68, jump @0\n      : @82 [@dyn 34] (gas: 6)\n  5570: i32 a1 = a0 + 0\n  5572: a0 = 0x1\n  5575: a2 = 0\n  5577: ra = 0x46\n  5580: ecalli 11 // 'seal_return'\n  5582: fallthrough\n      : @83 [@dyn 35] (gas: 19)\n  5583: sp = sp + 0xfffffffffffffeb0\n  5587: u64 [sp + 0x148] = ra\n  5591: u64 [sp + 0x140] = s0\n  5595: u64 [sp + 0x138] = s1\n  5599: s0 = sp + 0x150\n  5603: sp = sp & 0xfffffffffffffff0\n  5606: a1 = i32 [0x20004]\n  5611: s1 = a0\n  5613: u64 [sp + 0x28] = a1\n  5616: a0 = a1 << 0x20\n  5619: a2 = a0 >> 0x20\n  5622: u64 [sp + 264] = 0\n  5626: u64 [sp + 256] = 0\n  5630: u64 [sp + 248] = 0\n  5634: a0 = sp + 0x110\n  5638: a1 = sp + 0xf0\n  5642: u64 [sp + 0x20] = a2\n  5645: u64 [sp + 0xf0] = a2\n  5649: ra = 72, jump @55\n      : @84 [@dyn 36] (gas: 15)\n  5654: a1 = u64 [sp + 0x128]\n  5658: a3 = u64 [sp + 0x120]\n  5662: a0 = u64 [sp + 0x118]\n  5666: a2 = u64 [sp + 0x110]\n  5670: u64 [sp + 0x18] = a0\n  5673: u64 [sp + 0x8] = a1\n  5676: a0 = a0 | a1\n  5679: a1 = a2 | a3\n  5682: a1 = a1 | a0\n  5685: a1 = a1 >> 0x20\n  5688: u64 [sp + 0x10] = a3\n  5691: a0 = a0 | a3\n  5694: a0 = a0 << 0x20\n  5697: a0 = a0 | a1\n  5700: jump @88 if a0 != 0\n      : @85 (gas: 4)\n  5704: i32 a0 = a2 + 0\n  5706: a1 = u64 [sp + 0x28]\n  5709: u64 [sp] = a2\n  5711: ra = 74, jump @0\n      : @86 [@dyn 37] (gas: 30)\n  5716: i32 a0 = a0 + 0\n  5718: a1 = u64 [sp + 0x28]\n  5721: a2 = 0\n  5723: ecalli 2 // 'call_data_copy'\n  5725: a0 = u64 [sp + 0x20]\n  5728: a2 = u64 [sp]\n  5730: t1 = a2 + a0\n  5733: a1 = t1 <u a2\n  5736: t2 = a2\n  5738: a5 = u64 [sp + 0x18]\n  5741: a2 = a5 + a1\n  5744: a3 = a2 <u a5\n  5747: a3 = a1 if a1 == 0\n  5750: a4 = u64 [sp + 0x10]\n  5753: a3 = a3 + a4\n  5756: a1 = a3 <u a4\n  5759: a0 = u64 [sp + 0x8]\n  5762: t0 = a0 + a1\n  5765: u64 [sp + 0x38] = a2\n  5768: u64 [sp + 0x30] = t1\n  5771: u64 [sp + 0x68] = a0\n  5774: u64 [sp + 0x60] = a4\n  5777: u64 [sp + 0x58] = a5\n  5780: u64 [sp + 0x50] = t2\n  5783: u64 [sp + 0x40] = a3\n  5786: a0 = sp + 0x70\n  5789: a1 = sp + 0x50\n  5792: a2 = sp + 0x30\n  5795: u64 [sp + 0x48] = t0\n  5798: ra = 76, jump @65\n      : @87 [@dyn 38] (gas: 50)\n  5803: a0 = u64 [sp + 0x70]\n  5806: u64 [sp + 0x28] = a0\n  5809: a0 = u64 [sp + 0x78]\n  5812: u64 [sp + 0x20] = a0\n  5815: a0 = u64 [sp + 0x80]\n  5819: u64 [sp + 0x18] = a0\n  5822: a0 = u64 [sp + 0x88]\n  5826: u64 [sp + 0x10] = a0\n  5829: a0 = u64 [sp + 0x90]\n  5833: u64 [sp + 0x8] = a0\n  5836: a0 = u64 [sp + 0x98]\n  5840: u64 [sp] = a0\n  5842: ra = u64 [sp + 0xa0]\n  5846: t2 = u64 [sp + 0xa8]\n  5850: t1 = u64 [sp + 0xb0]\n  5854: t0 = u64 [sp + 0xb8]\n  5858: a5 = u64 [sp + 0xc0]\n  5862: a4 = u64 [sp + 0xc8]\n  5866: a0 = u64 [sp + 0xe8]\n  5870: a1 = u64 [sp + 0xe0]\n  5874: a2 = u64 [sp + 0xd8]\n  5878: a3 = u64 [sp + 0xd0]\n  5882: u64 [s1 + 0x78] = a0\n  5885: u64 [s1 + 0x70] = a1\n  5888: u64 [s1 + 0x68] = a2\n  5891: u64 [s1 + 0x60] = a3\n  5894: u64 [s1 + 0x58] = a4\n  5897: u64 [s1 + 0x50] = a5\n  5900: u64 [s1 + 0x48] = t0\n  5903: u64 [s1 + 0x40] = t1\n  5906: u64 [s1 + 0x38] = t2\n  5909: u64 [s1 + 0x30] = ra\n  5912: a0 = u64 [sp]\n  5914: u64 [s1 + 0x28] = a0\n  5917: a0 = u64 [sp + 0x8]\n  5920: u64 [s1 + 0x20] = a0\n  5923: a0 = u64 [sp + 0x10]\n  5926: u64 [s1 + 0x18] = a0\n  5929: a0 = u64 [sp + 0x18]\n  5932: u64 [s1 + 0x10] = a0\n  5935: a0 = u64 [sp + 0x20]\n  5938: u64 [s1 + 0x8] = a0\n  5941: a0 = u64 [sp + 0x28]\n  5944: u64 [s1] = a0\n  5946: sp = s0 + 0xfffffffffffffeb0\n  5950: ra = u64 [sp + 0x148]\n  5954: s0 = u64 [sp + 0x140]\n  5958: s1 = u64 [sp + 0x138]\n  5962: sp = sp + 0x150\n  5966: ret\n      : @88 (gas: 1)\n  5968: trap\n      : @89 (gas: 8)\n  5969: a0 = u64 [sp + 0x30]\n  5972: a1 = u64 [sp + 0x38]\n  5975: a2 = u64 [sp + 0x28]\n  5978: a3 = u64 [sp + 0x20]\n  5981: a1 = a1 | a2\n  5984: a0 = a0 | a3\n  5987: a0 = a0 | a1\n  5990: jump @94 if a0 != 0\n      : @90 (gas: 2)\n  5994: a0 = i32 [0x20004]\n  5999: jump @94 if a0 <=u 3\n      : @91 (gas: 24)\n  6004: u64 [sp + 88] = 0\n  6007: u64 [sp + 80] = 0\n  6010: u64 [sp + 72] = 0\n  6013: u64 [sp + 64] = 0x1\n  6017: u64 [sp + 120] = 0\n  6020: u64 [sp + 112] = 0\n  6023: u64 [sp + 104] = 0\n  6026: u64 [sp + 96] = 0\n  6029: u32 [sp + 128] = 0x20\n  6034: i32 a1 = sp + 0x40\n  6037: i32 a3 = sp + 0x60\n  6040: i32 a4 = sp + 0x80\n  6044: a2 = 0xffffffffffffffff\n  6047: a0 = 0\n  6049: ecalli 6 // 'get_storage'\n  6051: a0 = u64 [sp + 0x70]\n  6054: u64 [sp + 0x8] = a0\n  6057: a0 = u64 [sp + 0x68]\n  6060: u64 [sp + 0x10] = a0\n  6063: a0 = u64 [sp + 0x60]\n  6066: u64 [sp + 0x18] = a0\n  6069: a0 = 0x40\n  6072: a1 = 0x20\n  6075: ra = 78, jump @0\n      : @92 [@dyn 39] (gas: 100)\n  6080: a1 = u8 [a0 + 0x11]\n  6083: a2 = u8 [a0 + 0x10]\n  6086: a3 = u8 [a0 + 0x12]\n  6089: a4 = u8 [a0 + 0x13]\n  6092: a1 = a1 << 0x8\n  6095: a1 = a1 | a2\n  6098: a3 = a3 << 0x10\n  6101: a4 = a4 << 0x18\n  6104: a3 = a3 | a4\n  6107: a1 = a1 | a3\n  6110: a2 = u8 [a0 + 0x15]\n  6113: a3 = u8 [a0 + 0x14]\n  6116: a4 = u8 [a0 + 0x16]\n  6119: a5 = u8 [a0 + 0x17]\n  6122: a2 = a2 << 0x8\n  6125: a2 = a2 | a3\n  6128: a4 = a4 << 0x10\n  6131: a5 = a5 << 0x18\n  6134: a4 = a4 | a5\n  6137: a2 = a2 | a4\n  6140: a2 = a2 << 0x20\n  6143: t0 = a2 | a1\n  6146: a2 = u8 [a0 + 0x1]\n  6149: a3 = u8 [a0]\n  6151: a4 = u8 [a0 + 0x2]\n  6154: a5 = u8 [a0 + 0x3]\n  6157: a2 = a2 << 0x8\n  6160: a2 = a2 | a3\n  6163: a4 = a4 << 0x10\n  6166: a5 = a5 << 0x18\n  6169: a4 = a4 | a5\n  6172: a2 = a2 | a4\n  6175: a3 = u8 [a0 + 0x5]\n  6178: a4 = u8 [a0 + 0x4]\n  6181: a5 = u8 [a0 + 0x6]\n  6184: s1 = u8 [a0 + 0x7]\n  6187: a3 = a3 << 0x8\n  6190: a3 = a3 | a4\n  6193: a5 = a5 << 0x10\n  6196: s1 = s1 << 0x18\n  6199: a5 = a5 | s1\n  6202: a3 = a3 | a5\n  6205: a3 = a3 << 0x20\n  6208: a2 = a2 | a3\n  6211: a3 = u8 [a0 + 0x19]\n  6214: a4 = u8 [a0 + 0x18]\n  6217: a5 = u8 [a0 + 0x1a]\n  6220: s1 = u8 [a0 + 0x1b]\n  6223: a3 = a3 << 0x8\n  6226: a3 = a3 | a4\n  6229: a5 = a5 << 0x10\n  6232: s1 = s1 << 0x18\n  6235: a5 = a5 | s1\n  6238: a3 = a3 | a5\n  6241: a4 = u8 [a0 + 0x1d]\n  6244: a5 = u8 [a0 + 0x1c]\n  6247: s1 = u8 [a0 + 0x1e]\n  6250: a1 = u8 [a0 + 0x1f]\n  6253: a4 = a4 << 0x8\n  6256: a4 = a4 | a5\n  6259: s1 = s1 << 0x10\n  6262: a1 = a1 << 0x18\n  6265: a1 = a1 | s1\n  6268: a1 = a1 | a4\n  6271: a1 = a1 << 0x20\n  6274: a3 = a3 | a1\n  6277: a1 = u8 [a0 + 0x9]\n  6280: a4 = u8 [a0 + 0x8]\n  6283: a5 = u8 [a0 + 0xa]\n  6286: s1 = u8 [a0 + 0xb]\n  6289: a1 = a1 << 0x8\n  6292: a1 = a1 | a4\n  6295: a5 = a5 << 0x10\n  6298: s1 = s1 << 0x18\n  6301: a5 = a5 | s1\n  6304: a1 = a1 | a5\n  6307: a4 = u8 [a0 + 0xd]\n  6310: a5 = u8 [a0 + 0xc]\n  6313: s1 = u8 [a0 + 0xe]\n  6316: a0 = u8 [a0 + 0xf]\n  6319: a4 = a4 << 0x8\n  6322: a4 = a4 | a5\n  6325: s1 = s1 << 0x10\n  6328: a0 = a0 << 0x18\n  6331: a0 = a0 | s1\n  6334: a0 = a0 | a4\n  6337: a0 = a0 << 0x20\n  6340: a0 = a0 | a1\n  6343: a1 = reverse a0\n  6345: a0 = reverse a3\n  6347: a2 = reverse a2\n  6349: a3 = reverse t0\n  6351: a2 = a2 | a3\n  6354: a3 = a0 | a1\n  6357: a3 = a3 | a2\n  6360: a3 = a3 >> 0x20\n  6363: a1 = a1 | a2\n  6366: a1 = a1 << 0x20\n  6369: a1 = a1 | a3\n  6372: jump @96 if a1 == 0\n      : @93 (gas: 1)\n  6375: trap\n      : @94 (gas: 3)\n  6376: a0 = 0\n  6378: a1 = 0\n  6380: ra = 80, jump @0\n      : @95 [@dyn 40] (gas: 5)\n  6385: i32 a1 = a0 + 0\n  6387: a0 = 0x1\n  6390: a2 = 0\n  6392: ecalli 11 // 'seal_return'\n  6394: fallthrough\n      : @96 (gas: 7)\n  6395: a1 = u64 [sp + 0x8]\n  6398: a1 = a1 << 0x20\n  6401: s1 = a1 >> 0x20\n  6404: i32 a0 = a0 + 0\n  6406: u64 [sp + 0x8] = a0\n  6409: a1 = 0x20\n  6412: ra = 82, jump @0\n      : @97 [@dyn 41] (gas: 58)\n  6417: a1 = reverse s1\n  6419: a2 = u64 [sp + 0x10]\n  6422: a2 = reverse a2\n  6424: a3 = u64 [sp + 0x18]\n  6427: a3 = reverse a3\n  6429: a4 = a3 >> 0x38\n  6432: u8 [a0 + 0x1f] = a4\n  6435: a4 = a3 >> 0x30\n  6438: u8 [a0 + 0x1e] = a4\n  6441: a4 = a3 >> 0x28\n  6444: u8 [a0 + 0x1d] = a4\n  6447: a4 = a3 >> 0x20\n  6450: u8 [a0 + 0x1c] = a4\n  6453: a4 = a3 >> 0x18\n  6456: u8 [a0 + 0x1b] = a4\n  6459: a4 = a3 >> 0x10\n  6462: u8 [a0 + 0x1a] = a4\n  6465: a4 = a3 >> 0x8\n  6468: u8 [a0 + 0x19] = a4\n  6471: u8 [a0 + 0x18] = a3\n  6474: u8 [a0 + 0x10] = a2\n  6477: u8 [a0 + 11] = 0\n  6480: u8 [a0 + 10] = 0\n  6483: u8 [a0 + 9] = 0\n  6486: u8 [a0 + 7] = 0\n  6489: u8 [a0 + 6] = 0\n  6492: u8 [a0 + 5] = 0\n  6495: u8 [a0 + 4] = 0\n  6498: u8 [a0 + 3] = 0\n  6501: u8 [a0 + 2] = 0\n  6504: u8 [a0 + 1] = 0\n  6507: u8 [a0 + 0] = 0\n  6509: a3 = a2 >> 0x38\n  6512: u8 [a0 + 0x17] = a3\n  6515: a3 = a2 >> 0x30\n  6518: u8 [a0 + 0x16] = a3\n  6521: a3 = a2 >> 0x28\n  6524: u8 [a0 + 0x15] = a3\n  6527: a3 = a2 >> 0x20\n  6530: u8 [a0 + 0x14] = a3\n  6533: a3 = a2 >> 0x18\n  6536: u8 [a0 + 0x13] = a3\n  6539: a3 = a2 >> 0x10\n  6542: u8 [a0 + 0x12] = a3\n  6545: a2 = a2 >> 0x8\n  6548: u8 [a0 + 0x11] = a2\n  6551: u8 [a0 + 0x8] = a1\n  6554: a2 = a1 >> 0x38\n  6557: u8 [a0 + 0xf] = a2\n  6560: a2 = a1 >> 0x30\n  6563: u8 [a0 + 0xe] = a2\n  6566: a2 = a1 >> 0x28\n  6569: u8 [a0 + 0xd] = a2\n  6572: a1 = a1 >> 0x20\n  6575: u8 [a0 + 0xc] = a1\n  6578: a1 = 0x20\n  6581: a0 = u64 [sp + 0x8]\n  6584: ra = 84, jump @0\n      : @98 [@dyn 42] (gas: 6)\n  6589: i32 a1 = a0 + 0\n  6591: a2 = 0x20\n  6594: a0 = 0\n  6596: ra = 0x56\n  6599: ecalli 11 // 'seal_return'\n  6601: fallthrough\n      : @99 [@dyn 43] (gas: 9)\n  6602: a2 = u64 [a1 + 0x18]\n  6605: a3 = u64 [a1 + 0x10]\n  6608: a4 = u64 [a1 + 0x8]\n  6611: a1 = u64 [a1]\n  6613: u64 [a0 + 0x18] = a2\n  6616: u64 [a0 + 0x10] = a3\n  6619: u64 [a0 + 0x8] = a4\n  6622: u64 [a0] = a1\n  6624: ret\n      : @100 (gas: 52)\n  6626: sp = sp + 0xffffffffffffff60\n  6630: u64 [sp + 0x98] = ra\n  6634: u64 [sp + 0x90] = s0\n  6638: u64 [sp + 0x88] = s1\n  6642: s0 = sp + 0xa0\n  6646: sp = sp & 0xffffffffffffffe0\n  6649: t0 = u64 [a1 + 0x10]\n  6652: ra = u64 [a1 + 0x8]\n  6655: t2 = u64 [a2 + 0x8]\n  6658: a3 = u64 [a1]\n  6660: a4 = u64 [a2]\n  6662: u64 [sp + 0x40] = a4\n  6665: a5 = u64 [a2 + 0x10]\n  6668: u64 [sp + 0x50] = a5\n  6671: t1 = t2 ^ ra\n  6674: s1 = t2 <u ra\n  6677: a5 = a4 <u a3\n  6680: u64 [sp + 0x38] = a5\n  6683: a4 = a3\n  6685: s1 = a5 if t1 == 0\n  6688: t1 = u64 [a1 + 0x18]\n  6691: a1 = u64 [a2 + 0x18]\n  6694: u64 [sp + 0x30] = a1\n  6697: a3 = u64 [sp + 0x50]\n  6700: a2 = a3 - t0\n  6703: a1 = a2 - s1\n  6706: u64 [sp + 0x48] = a1\n  6709: a1 = a2 <u s1\n  6712: u64 [sp + 0x58] = t0\n  6715: a5 = a3 <u t0\n  6718: t0 = a4\n  6720: u64 [sp + 0x50] = t1\n  6723: a2 = u64 [sp + 0x30]\n  6726: a2 = a2 - t1\n  6729: a2 = a2 - a5\n  6732: a2 = a2 - a1\n  6735: a1 = t2 - ra\n  6738: a3 = u64 [sp + 0x38]\n  6741: a1 = a1 - a3\n  6744: a3 = u64 [sp + 0x40]\n  6747: a3 = a3 - a4\n  6750: a4 = a1 >u 0\n  6752: a3 = a3 <u 0x60\n  6755: a3 = a3 ^ 0x1\n  6758: a3 = a4 if a1 != 0\n  6761: a1 = a2 >s 0\n  6763: a5 = u64 [sp + 0x48]\n  6766: a4 = a5 >u 0\n  6768: a4 = a1 if a2 != 0\n  6771: a1 = a5 | a2\n  6774: a3 = a4 if a1 != 0\n  6777: jump @109 if a3 == 0\n      : @101 (gas: 12)\n  6781: s1 = a0\n  6783: a2 = u64 [sp + 0x58]\n  6786: a0 = t0 | a2\n  6789: a1 = u64 [sp + 0x50]\n  6792: a1 = ra | a1\n  6795: a0 = a0 | a1\n  6798: a0 = a0 >> 0x20\n  6801: a1 = a1 | a2\n  6804: a1 = a1 << 0x20\n  6807: a0 = a0 | a1\n  6810: u64 [sp + 0x48] = ra\n  6813: jump @108 if a0 != 0\n      : @102 (gas: 6)\n  6817: i32 a1 = t0 + 0\n  6819: i32 a0 = sp + 0x60\n  6822: u64 [sp + 0x38] = a1\n  6825: u64 [sp + 0x40] = t0\n  6828: ecalli 3 // 'call_data_load'\n  6830: fallthrough\n      : @103 (gas: 13)\n  6831: a0 = u64 [sp + 0x58]\n  6834: a1 = u64 [sp + 0x50]\n  6837: a1 = a1 | a0\n  6840: a0 = 0x100000000\n  6850: u64 [sp + 0x50] = a0\n  6853: a0 = 0xffffffe0\n  6863: a2 = u64 [sp + 0x40]\n  6866: a0 = a2 <u a0\n  6869: a2 = u64 [sp + 0x48]\n  6872: a0 = 0 if a2 != 0\n  6874: u64 [sp + 0x58] = a1\n  6877: a0 = 0 if a1 != 0\n  6879: jump @108 if a0 == 0\n      : @104 (gas: 13)\n  6883: a0 = u64 [sp + 0x78]\n  6886: u64 [sp + 0x18] = a0\n  6889: a0 = u64 [sp + 0x70]\n  6892: u64 [sp + 0x20] = a0\n  6895: a0 = u64 [sp + 0x68]\n  6898: u64 [sp + 0x28] = a0\n  6901: a0 = u64 [sp + 0x60]\n  6904: u64 [sp + 0x30] = a0\n  6907: a0 = u64 [sp + 0x38]\n  6910: i32 a1 = a0 + 0x20\n  6913: i32 a0 = sp + 0x60\n  6916: ecalli 3 // 'call_data_load'\n  6918: fallthrough\n      : @105 (gas: 10)\n  6919: a2 = u64 [sp + 0x70]\n  6922: a3 = u64 [sp + 0x78]\n  6925: a0 = u64 [sp + 0x50]\n  6928: a0 = a0 ^ a2\n  6931: a0 = a0 | a3\n  6934: a1 = a2 >> 0x20\n  6937: a1 = a1 <u 0x1\n  6940: a1 = 0 if a3 != 0\n  6942: a1 = 0 if a0 == 0\n  6944: jump @110 if a1 == 0\n      : @106 (gas: 10)\n  6948: u64 [sp + 0x10] = a3\n  6951: u64 [sp + 0x50] = a2\n  6954: a0 = 0xffffffc0\n  6964: a1 = u64 [sp + 0x40]\n  6967: a0 = a1 <u a0\n  6970: a1 = u64 [sp + 0x48]\n  6973: a0 = 0 if a1 != 0\n  6975: a1 = u64 [sp + 0x58]\n  6978: a0 = 0 if a1 != 0\n  6980: jump @108 if a0 == 0\n      : @107 (gas: 38)\n  6983: a0 = u64 [sp + 0x68]\n  6986: u64 [sp + 0x48] = a0\n  6989: a0 = u64 [sp + 0x60]\n  6992: u64 [sp + 0x58] = a0\n  6995: a0 = u64 [sp + 0x38]\n  6998: i32 a1 = a0 + 0x40\n  7001: i32 a0 = sp + 0x60\n  7004: ecalli 3 // 'call_data_load'\n  7006: a0 = u64 [sp + 0x78]\n  7009: a1 = u64 [sp + 0x70]\n  7012: a2 = u64 [sp + 0x68]\n  7015: a3 = u64 [sp + 0x60]\n  7018: u64 [s1 + 0x58] = a0\n  7021: u64 [s1 + 0x50] = a1\n  7024: u64 [s1 + 0x48] = a2\n  7027: u64 [s1 + 0x40] = a3\n  7030: a0 = u64 [sp + 0x10]\n  7033: u64 [s1 + 0x38] = a0\n  7036: a0 = u64 [sp + 0x50]\n  7039: u64 [s1 + 0x30] = a0\n  7042: a0 = u64 [sp + 0x48]\n  7045: u64 [s1 + 0x28] = a0\n  7048: a0 = u64 [sp + 0x58]\n  7051: u64 [s1 + 0x20] = a0\n  7054: a0 = u64 [sp + 0x18]\n  7057: u64 [s1 + 0x18] = a0\n  7060: a0 = u64 [sp + 0x20]\n  7063: u64 [s1 + 0x10] = a0\n  7066: a0 = u64 [sp + 0x28]\n  7069: u64 [s1 + 0x8] = a0\n  7072: a0 = u64 [sp + 0x30]\n  7075: u64 [s1] = a0\n  7077: sp = s0 + 0xffffffffffffff60\n  7081: ra = u64 [sp + 0x98]\n  7085: s0 = u64 [sp + 0x90]\n  7089: s1 = u64 [sp + 0x88]\n  7093: sp = sp + 0xa0\n  7097: ret\n      : @108 (gas: 1)\n  7099: trap\n      : @109 (gas: 4)\n  7100: a0 = 0\n  7102: a1 = 0\n  7104: ra = 0x58\n  7107: jump @0\n      : @110 (gas: 2)\n  7110: a0 = 0\n  7112: ra = 88, jump @0\n      : @111 [@dyn 44] (gas: 6)\n  7117: i32 a1 = a0 + 0\n  7119: a0 = 0x1\n  7122: a2 = 0\n  7124: ra = 0x5a\n  7127: ecalli 11 // 'seal_return'\n  7129: fallthrough\n      : @112 [@dyn 45] (gas: 9)\n  7130: a2 = u64 [a1 + 0x18]\n  7133: a3 = u64 [a1 + 0x10]\n  7136: a4 = u64 [a1 + 0x8]\n  7139: a1 = u64 [a1]\n  7141: u64 [a0 + 0x18] = a2\n  7144: u64 [a0 + 0x10] = a3\n  7147: u64 [a0 + 0x8] = a4\n  7150: u64 [a0] = a1\n  7152: ret\n      : @113 (gas: 8)\n  7154: a0 = u64 [sp + 0x110]\n  7158: a1 = u64 [sp + 0x118]\n  7162: a2 = u64 [sp + 0x108]\n  7166: a3 = u64 [sp + 0x100]\n  7170: a1 = a1 | a2\n  7173: a0 = a0 | a3\n  7176: a0 = a0 | a1\n  7179: jump @119 if a0 != 0\n      : @114 (gas: 13)\n  7183: a0 = u32 [0x20004]\n  7188: u64 [sp + 120] = 0\n  7191: u64 [sp + 112] = 0\n  7194: u64 [sp + 104] = 0\n  7197: u64 [sp + 0x60] = a0\n  7200: u64 [sp + 152] = 0\n  7204: u64 [sp + 144] = 0\n  7208: u64 [sp + 128] = 0x4\n  7213: a0 = sp + 0xa0\n  7217: a1 = sp + 0x80\n  7221: a2 = sp + 0x60\n  7224: u64 [sp + 136] = 0\n  7228: ra = 92, jump @100\n      : @115 [@dyn 46] (gas: 125)\n  7233: t0 = u64 [sp + 0xa0]\n  7237: t1 = u64 [sp + 0xa8]\n  7241: a1 = u64 [sp + 0xb0]\n  7245: a2 = u64 [sp + 0xb8]\n  7249: a4 = u64 [sp + 0xc0]\n  7253: a5 = u64 [sp + 0xc8]\n  7257: a3 = u64 [sp + 0xd0]\n  7261: a0 = u64 [sp + 0xd8]\n  7265: u64 [sp + 0x38] = a0\n  7268: u64 [sp + 0x30] = a3\n  7271: u64 [sp + 0x28] = a5\n  7274: u64 [sp + 0x20] = a4\n  7277: u64 [sp + 0x58] = a2\n  7280: u64 [sp + 0x50] = a1\n  7283: u64 [sp + 0x48] = t1\n  7286: a0 = sp + 0x40\n  7289: a1 = sp + 0x20\n  7292: u64 [sp + 0x40] = t0\n  7295: ra = 0x5e\n  7298: sp = sp + 0xfffffffffffffe10\n  7302: u64 [sp + 0x1e8] = ra\n  7306: u64 [sp + 0x1e0] = s0\n  7310: u64 [sp + 0x1d8] = s1\n  7314: s0 = sp + 0x1f0\n  7318: sp = sp + 0xfffffffffffff950\n  7322: sp = sp & 0xffffffffffffffe0\n  7325: a2 = u64 [a1 + 0x10]\n  7328: u64 [sp + 0x118] = a2\n  7332: a2 = u64 [a1 + 0x8]\n  7335: u64 [sp + 0x110] = a2\n  7339: a1 = u64 [a1]\n  7341: u64 [sp + 0x108] = a1\n  7345: a1 = u64 [a0 + 0x18]\n  7348: u64 [sp + 0x128] = a1\n  7352: a1 = u64 [a0 + 0x10]\n  7355: u64 [sp + 0x130] = a1\n  7359: a1 = u64 [a0 + 0x8]\n  7362: u64 [sp + 0x138] = a1\n  7366: a0 = u64 [a0]\n  7368: u64 [sp + 0x140] = a0\n  7372: a0 = sp + 0x1000\n  7376: u64 [a0 + 4294965336] = 0\n  7380: a0 = sp + 0x1000\n  7384: u64 [a0 + 4294965328] = 0\n  7388: a0 = sp + 0x1000\n  7392: u64 [a0 + 4294965320] = 0\n  7396: a0 = sp + 0x1000\n  7400: u64 [a0 + 4294965312] = 0\n  7404: a0 = sp + 0x1000\n  7408: u64 [a0 + 4294965368] = 0\n  7412: a0 = sp + 0x1000\n  7416: u64 [a0 + 4294965360] = 0\n  7420: a0 = sp + 0x1000\n  7424: u64 [a0 + 4294965352] = 0\n  7428: a0 = sp + 0x1000\n  7432: u64 [a0 + 4294965344] = 0\n  7436: s1 = 0x20\n  7439: a0 = sp + 0x1000\n  7443: u32 [a0 + 0xfffffffffffff880] = s1\n  7447: a0 = sp + 0x1000\n  7451: i32 a1 = a0 + 0xfffffffffffff840\n  7455: a0 = sp + 0x1000\n  7459: i32 a3 = a0 + 0xfffffffffffff860\n  7463: a0 = sp + 0x1000\n  7467: i32 a4 = a0 + 0xfffffffffffff880\n  7471: a2 = 0xffffffffffffffff\n  7474: a0 = 0\n  7476: ecalli 6 // 'get_storage'\n  7478: a0 = sp + 0x1000\n  7482: a0 = u64 [a0 + 0xfffffffffffff870]\n  7486: u64 [sp + 0x178] = a0\n  7490: a0 = sp + 0x1000\n  7494: a0 = u64 [a0 + 0xfffffffffffff868]\n  7498: u64 [sp + 0x170] = a0\n  7502: a0 = sp + 0x1000\n  7506: a0 = u64 [a0 + 0xfffffffffffff860]\n  7510: u64 [sp + 0x180] = a0\n  7514: i32 a0 = sp + 0x500\n  7518: ecalli 5 // 'caller'\n  7520: a0 = i32 [sp + 0x510]\n  7524: u64 [sp + 0x198] = a0\n  7528: a0 = u64 [sp + 0x500]\n  7532: u64 [sp + 0x190] = a0\n  7536: a0 = u64 [sp + 0x508]\n  7540: u64 [sp + 0x188] = a0\n  7544: a0 = sp + 0x1000\n  7548: u64 [a0 + 4294965336] = 0\n  7552: a0 = sp + 0x1000\n  7556: u64 [a0 + 4294965328] = 0\n  7560: a0 = sp + 0x1000\n  7564: u64 [a0 + 4294965320] = 0\n  7568: a1 = sp + 0x1000\n  7572: u64 [a1 + 4294965312] = 0x2\n  7577: a0 = sp + 0x1000\n  7581: u64 [a0 + 4294965368] = 0\n  7585: a0 = sp + 0x1000\n  7589: u64 [a0 + 4294965360] = 0\n  7593: a0 = sp + 0x1000\n  7597: u64 [a0 + 4294965352] = 0\n  7601: a0 = sp + 0x1000\n  7605: u64 [a0 + 4294965344] = 0\n  7609: a0 = sp + 0x1000\n  7613: u32 [a0 + 0xfffffffffffff880] = s1\n  7617: a0 = sp + 0x1000\n  7621: i32 a1 = a0 + 0xfffffffffffff840\n  7625: a0 = sp + 0x1000\n  7629: i32 a3 = a0 + 0xfffffffffffff860\n  7633: a0 = sp + 0x1000\n  7637: i32 a4 = a0 + 0xfffffffffffff880\n  7641: a2 = 0xffffffffffffffff\n  7644: a0 = 0\n  7646: ecalli 6 // 'get_storage'\n  7648: a0 = sp + 0x1000\n  7652: a0 = u64 [a0 + 0xfffffffffffff868]\n  7656: u64 [sp + 0x160] = a0\n  7660: a0 = sp + 0x1000\n  7664: a0 = u64 [a0 + 0xfffffffffffff860]\n  7668: u64 [sp + 0x168] = a0\n  7672: a0 = sp + 0x1000\n  7676: a0 = u32 [a0 + 0xfffffffffffff870]\n  7680: u64 [sp + 0x158] = a0\n  7684: a0 = 0x40\n  7687: a1 = 0x20\n  7690: ra = 0xba\n  7694: jump @0\n      : @116 [@dyn 47] (gas: 3)\n  7697: a0 = 0x40\n  7700: a1 = 0x20\n  7703: ra = 96, jump @0\n      : @117 [@dyn 48] (gas: 100)\n  7708: a1 = u8 [a0 + 0x11]\n  7711: a2 = u8 [a0 + 0x10]\n  7714: a3 = u8 [a0 + 0x12]\n  7717: a4 = u8 [a0 + 0x13]\n  7720: a1 = a1 << 0x8\n  7723: a1 = a1 | a2\n  7726: a3 = a3 << 0x10\n  7729: a4 = a4 << 0x18\n  7732: a3 = a3 | a4\n  7735: a1 = a1 | a3\n  7738: a2 = u8 [a0 + 0x15]\n  7741: a3 = u8 [a0 + 0x14]\n  7744: a4 = u8 [a0 + 0x16]\n  7747: a5 = u8 [a0 + 0x17]\n  7750: a2 = a2 << 0x8\n  7753: a2 = a2 | a3\n  7756: a4 = a4 << 0x10\n  7759: a5 = a5 << 0x18\n  7762: a4 = a4 | a5\n  7765: a2 = a2 | a4\n  7768: a2 = a2 << 0x20\n  7771: t0 = a2 | a1\n  7774: a2 = u8 [a0 + 0x1]\n  7777: a3 = u8 [a0]\n  7779: a4 = u8 [a0 + 0x2]\n  7782: a5 = u8 [a0 + 0x3]\n  7785: a2 = a2 << 0x8\n  7788: a2 = a2 | a3\n  7791: a4 = a4 << 0x10\n  7794: a5 = a5 << 0x18\n  7797: a4 = a4 | a5\n  7800: a2 = a2 | a4\n  7803: a3 = u8 [a0 + 0x5]\n  7806: a4 = u8 [a0 + 0x4]\n  7809: a5 = u8 [a0 + 0x6]\n  7812: a1 = u8 [a0 + 0x7]\n  7815: a3 = a3 << 0x8\n  7818: a3 = a3 | a4\n  7821: a5 = a5 << 0x10\n  7824: a1 = a1 << 0x18\n  7827: a1 = a1 | a5\n  7830: a1 = a1 | a3\n  7833: a1 = a1 << 0x20\n  7836: t1 = a1 | a2\n  7839: a1 = u8 [a0 + 0x19]\n  7842: a3 = u8 [a0 + 0x18]\n  7845: a4 = u8 [a0 + 0x1a]\n  7848: a5 = u8 [a0 + 0x1b]\n  7851: a1 = a1 << 0x8\n  7854: a1 = a1 | a3\n  7857: a4 = a4 << 0x10\n  7860: a5 = a5 << 0x18\n  7863: a4 = a4 | a5\n  7866: a1 = a1 | a4\n  7869: a3 = u8 [a0 + 0x1d]\n  7872: a4 = u8 [a0 + 0x1c]\n  7875: a5 = u8 [a0 + 0x1e]\n  7878: a2 = u8 [a0 + 0x1f]\n  7881: a3 = a3 << 0x8\n  7884: a3 = a3 | a4\n  7887: a5 = a5 << 0x10\n  7890: a2 = a2 << 0x18\n  7893: a2 = a2 | a5\n  7896: a2 = a2 | a3\n  7899: a2 = a2 << 0x20\n  7902: a3 = a2 | a1\n  7905: a1 = u8 [a0 + 0x9]\n  7908: a2 = u8 [a0 + 0x8]\n  7911: a4 = u8 [a0 + 0xa]\n  7914: a5 = u8 [a0 + 0xb]\n  7917: a1 = a1 << 0x8\n  7920: a1 = a1 | a2\n  7923: a4 = a4 << 0x10\n  7926: a5 = a5 << 0x18\n  7929: a4 = a4 | a5\n  7932: a1 = a1 | a4\n  7935: a2 = u8 [a0 + 0xd]\n  7938: a4 = u8 [a0 + 0xc]\n  7941: a5 = u8 [a0 + 0xe]\n  7944: a0 = u8 [a0 + 0xf]\n  7947: a2 = a2 << 0x8\n  7950: a2 = a2 | a4\n  7953: a5 = a5 << 0x10\n  7956: a0 = a0 << 0x18\n  7959: a0 = a0 | a5\n  7962: a0 = a0 | a2\n  7965: a0 = a0 << 0x20\n  7968: a0 = a0 | a1\n  7971: a1 = reverse a0\n  7973: a0 = reverse a3\n  7975: a2 = reverse t1\n  7977: a3 = reverse t0\n  7979: a2 = a2 | a3\n  7982: a3 = a0 | a1\n  7985: a3 = a3 | a2\n  7988: a3 = a3 >> 0x20\n  7991: a1 = a1 | a2\n  7994: a1 = a1 << 0x20\n  7997: a1 = a1 | a3\n  8000: jump @121 if a1 == 0\n      : @118 (gas: 1)\n  8003: trap\n      : @119 (gas: 3)\n  8004: a0 = 0\n  8006: a1 = 0\n  8008: ra = 98, jump @0\n      : @120 [@dyn 49] (gas: 7)\n  8013: i32 a1 = a0 + 0\n  8015: a0 = 0x1\n  8018: a2 = 0\n  8020: ecalli 11 // 'seal_return'\n  8022: i32 a0 = a0 + 0\n  8024: ra = 0x64\n  8027: jump @0\n      : @121 (gas: 2)\n  8030: i32 a0 = a0 + 0\n  8032: ra = 100, jump @0\n      : @122 [@dyn 50] (gas: 6)\n  8037: i32 a1 = a0 + 0\n  8039: a0 = 0\n  8041: a2 = 0\n  8043: ra = 0x66\n  8046: ecalli 11 // 'seal_return'\n  8048: fallthrough\n      : @123 [@dyn 51] (gas: 52)\n  8049: sp = sp + 0xffffffffffffff80\n  8052: u64 [sp + 0x78] = ra\n  8055: u64 [sp + 0x70] = s0\n  8058: u64 [sp + 0x68] = s1\n  8061: s0 = sp + 0x80\n  8065: sp = sp & 0xffffffffffffffe0\n  8068: t2 = u64 [a1 + 0x10]\n  8071: a5 = u64 [a1 + 0x8]\n  8074: t0 = u64 [a2 + 0x8]\n  8077: s1 = u64 [a1]\n  8079: u64 [sp + 0x10] = s1\n  8082: a4 = u64 [a2]\n  8084: u64 [sp + 0x18] = a4\n  8087: ra = u64 [a2 + 0x10]\n  8090: a3 = t0 ^ a5\n  8093: u64 [sp + 0x38] = a3\n  8096: a3 = t0 <u a5\n  8099: a4 = a4 <u s1\n  8102: t1 = u64 [sp + 0x38]\n  8105: a3 = a4 if t1 == 0\n  8108: t1 = a4\n  8110: a1 = u64 [a1 + 0x18]\n  8113: u64 [sp + 0x38] = a1\n  8116: a1 = u64 [a2 + 0x18]\n  8119: u64 [sp + 0x20] = a1\n  8122: a1 = ra - t2\n  8125: a2 = a1 - a3\n  8128: u64 [sp + 0x28] = a2\n  8131: a2 = a1 <u a3\n  8134: u64 [sp + 0x30] = t2\n  8137: a3 = ra <u t2\n  8140: a1 = u64 [sp + 0x38]\n  8143: a4 = u64 [sp + 0x20]\n  8146: a1 = a4 - a1\n  8149: a1 = a1 - a3\n  8152: t2 = a1 - a2\n  8155: s1 = t0 - a5\n  8158: a2 = s1 - t1\n  8161: t0 = u64 [sp + 0x10]\n  8164: a1 = u64 [sp + 0x18]\n  8167: a3 = a1 - t0\n  8170: a4 = a2 >u 0\n  8172: a3 = a3 <u 0x20\n  8175: a3 = a3 ^ 0x1\n  8178: a3 = a4 if a2 != 0\n  8181: a2 = t2 >s 0\n  8183: a1 = u64 [sp + 0x28]\n  8186: a4 = a1 >u 0\n  8188: a4 = a2 if t2 != 0\n  8191: a1 = a1 | t2\n  8194: a3 = a4 if a1 != 0\n  8197: jump @127 if a3 == 0\n      : @124 (gas: 11)\n  8200: s1 = a0\n  8202: a2 = u64 [sp + 0x30]\n  8205: a0 = t0 | a2\n  8208: a1 = u64 [sp + 0x38]\n  8211: a1 = a1 | a5\n  8214: a0 = a0 | a1\n  8217: a0 = a0 >> 0x20\n  8220: a1 = a1 | a2\n  8223: a1 = a1 << 0x20\n  8226: a0 = a0 | a1\n  8229: jump @126 if a0 != 0\n      : @125 (gas: 17)\n  8232: i32 a1 = t0 + 0\n  8234: i32 a0 = sp + 0x40\n  8237: ecalli 3 // 'call_data_load'\n  8239: a0 = u64 [sp + 0x58]\n  8242: a1 = u64 [sp + 0x50]\n  8245: a2 = u64 [sp + 0x48]\n  8248: a3 = u64 [sp + 0x40]\n  8251: u64 [s1 + 0x18] = a0\n  8254: u64 [s1 + 0x10] = a1\n  8257: u64 [s1 + 0x8] = a2\n  8260: u64 [s1] = a3\n  8262: sp = s0 + 0xffffffffffffff80\n  8265: ra = u64 [sp + 0x78]\n  8268: s0 = u64 [sp + 0x70]\n  8271: s1 = u64 [sp + 0x68]\n  8274: sp = sp + 0x80\n  8278: ret\n      : @126 (gas: 1)\n  8280: trap\n      : @127 (gas: 3)\n  8281: a0 = 0\n  8283: a1 = 0\n  8285: ra = 104, jump @0\n      : @128 [@dyn 52] (gas: 6)\n  8290: i32 a1 = a0 + 0\n  8292: a0 = 0x1\n  8295: a2 = 0\n  8297: ra = 0x6a\n  8300: ecalli 11 // 'seal_return'\n  8302: fallthrough\n      : @129 [@dyn 53] (gas: 12)\n  8303: sp = sp + 0xffffffffffffff80\n  8306: u64 [sp + 0x78] = ra\n  8309: u64 [sp + 0x70] = s0\n  8312: s0 = sp + 0x80\n  8316: sp = sp & 0xffffffffffffffe0\n  8319: u64 [sp + 56] = 0\n  8322: u64 [sp + 48] = 0\n  8325: u64 [sp + 40] = 0\n  8328: u64 [sp + 32] = 0\n  8331: i32 a0 = sp + 0x20\n  8334: ecalli 14 // 'value_transferred'\n  8336: fallthrough\n      : @130 (gas: 8)\n  8337: a0 = u64 [sp + 0x30]\n  8340: a1 = u64 [sp + 0x38]\n  8343: a2 = u64 [sp + 0x28]\n  8346: a3 = u64 [sp + 0x20]\n  8349: a1 = a1 | a2\n  8352: a0 = a0 | a3\n  8355: a0 = a0 | a1\n  8358: jump @136 if a0 != 0\n      : @131 (gas: 2)\n  8362: a0 = i32 [0x20004]\n  8367: jump @136 if a0 <=u 35\n      : @132 (gas: 13)\n  8372: i32 a0 = sp + 0x40\n  8375: a1 = 0x4\n  8378: ecalli 3 // 'call_data_load'\n  8380: a1 = u64 [sp + 0x40]\n  8383: a0 = u64 [sp + 0x48]\n  8386: a2 = u64 [sp + 0x50]\n  8389: a3 = u64 [sp + 0x58]\n  8392: u64 [sp + 0x18] = a3\n  8395: u64 [sp + 0x10] = a2\n  8398: u64 [sp + 0x8] = a0\n  8401: a0 = sp\n  8403: u64 [sp] = a1\n  8405: ra = 108, jump @406\n      : @133 [@dyn 54] (gas: 3)\n  8410: a0 = 0x40\n  8413: a1 = 0x20\n  8416: ra = 110, jump @0\n      : @134 [@dyn 55] (gas: 100)\n  8421: a1 = u8 [a0 + 0x11]\n  8424: a2 = u8 [a0 + 0x10]\n  8427: a3 = u8 [a0 + 0x12]\n  8430: a4 = u8 [a0 + 0x13]\n  8433: a1 = a1 << 0x8\n  8436: a1 = a1 | a2\n  8439: a3 = a3 << 0x10\n  8442: a4 = a4 << 0x18\n  8445: a3 = a3 | a4\n  8448: a1 = a1 | a3\n  8451: a2 = u8 [a0 + 0x15]\n  8454: a3 = u8 [a0 + 0x14]\n  8457: a4 = u8 [a0 + 0x16]\n  8460: a5 = u8 [a0 + 0x17]\n  8463: a2 = a2 << 0x8\n  8466: a2 = a2 | a3\n  8469: a4 = a4 << 0x10\n  8472: a5 = a5 << 0x18\n  8475: a4 = a4 | a5\n  8478: a2 = a2 | a4\n  8481: a2 = a2 << 0x20\n  8484: t0 = a2 | a1\n  8487: a2 = u8 [a0 + 0x1]\n  8490: a3 = u8 [a0]\n  8492: a4 = u8 [a0 + 0x2]\n  8495: a5 = u8 [a0 + 0x3]\n  8498: a2 = a2 << 0x8\n  8501: a2 = a2 | a3\n  8504: a4 = a4 << 0x10\n  8507: a5 = a5 << 0x18\n  8510: a4 = a4 | a5\n  8513: a2 = a2 | a4\n  8516: a3 = u8 [a0 + 0x5]\n  8519: a4 = u8 [a0 + 0x4]\n  8522: a5 = u8 [a0 + 0x6]\n  8525: a1 = u8 [a0 + 0x7]\n  8528: a3 = a3 << 0x8\n  8531: a3 = a3 | a4\n  8534: a5 = a5 << 0x10\n  8537: a1 = a1 << 0x18\n  8540: a1 = a1 | a5\n  8543: a1 = a1 | a3\n  8546: a1 = a1 << 0x20\n  8549: t1 = a1 | a2\n  8552: a1 = u8 [a0 + 0x19]\n  8555: a3 = u8 [a0 + 0x18]\n  8558: a4 = u8 [a0 + 0x1a]\n  8561: a5 = u8 [a0 + 0x1b]\n  8564: a1 = a1 << 0x8\n  8567: a1 = a1 | a3\n  8570: a4 = a4 << 0x10\n  8573: a5 = a5 << 0x18\n  8576: a4 = a4 | a5\n  8579: a1 = a1 | a4\n  8582: a3 = u8 [a0 + 0x1d]\n  8585: a4 = u8 [a0 + 0x1c]\n  8588: a5 = u8 [a0 + 0x1e]\n  8591: a2 = u8 [a0 + 0x1f]\n  8594: a3 = a3 << 0x8\n  8597: a3 = a3 | a4\n  8600: a5 = a5 << 0x10\n  8603: a2 = a2 << 0x18\n  8606: a2 = a2 | a5\n  8609: a2 = a2 | a3\n  8612: a2 = a2 << 0x20\n  8615: a3 = a2 | a1\n  8618: a1 = u8 [a0 + 0x9]\n  8621: a2 = u8 [a0 + 0x8]\n  8624: a4 = u8 [a0 + 0xa]\n  8627: a5 = u8 [a0 + 0xb]\n  8630: a1 = a1 << 0x8\n  8633: a1 = a1 | a2\n  8636: a4 = a4 << 0x10\n  8639: a5 = a5 << 0x18\n  8642: a4 = a4 | a5\n  8645: a1 = a1 | a4\n  8648: a2 = u8 [a0 + 0xd]\n  8651: a4 = u8 [a0 + 0xc]\n  8654: a5 = u8 [a0 + 0xe]\n  8657: a0 = u8 [a0 + 0xf]\n  8660: a2 = a2 << 0x8\n  8663: a2 = a2 | a4\n  8666: a5 = a5 << 0x10\n  8669: a0 = a0 << 0x18\n  8672: a0 = a0 | a5\n  8675: a0 = a0 | a2\n  8678: a0 = a0 << 0x20\n  8681: a0 = a0 | a1\n  8684: a1 = reverse a0\n  8686: a0 = reverse a3\n  8688: a2 = reverse t1\n  8690: a3 = reverse t0\n  8692: a2 = a2 | a3\n  8695: a3 = a0 | a1\n  8698: a3 = a3 | a2\n  8701: a3 = a3 >> 0x20\n  8704: a1 = a1 | a2\n  8707: a1 = a1 << 0x20\n  8710: a1 = a1 | a3\n  8713: jump @138 if a1 == 0\n      : @135 (gas: 1)\n  8716: trap\n      : @136 (gas: 3)\n  8717: a0 = 0\n  8719: a1 = 0\n  8721: ra = 112, jump @0\n      : @137 [@dyn 56] (gas: 7)\n  8726: i32 a1 = a0 + 0\n  8728: a0 = 0x1\n  8731: a2 = 0\n  8733: ecalli 11 // 'seal_return'\n  8735: i32 a0 = a0 + 0\n  8737: ra = 0x72\n  8740: jump @0\n      : @138 (gas: 2)\n  8743: i32 a0 = a0 + 0\n  8745: ra = 114, jump @0\n      : @139 [@dyn 57] (gas: 6)\n  8750: i32 a1 = a0 + 0\n  8752: a0 = 0\n  8754: a2 = 0\n  8756: ra = 0x74\n  8759: ecalli 11 // 'seal_return'\n  8761: fallthrough\n      : @140 [@dyn 58] (gas: 35)\n  8762: sp = sp + 0xffffffffffffffa0\n  8765: u64 [sp + 0x58] = ra\n  8768: u64 [sp + 0x50] = s0\n  8771: u64 [sp + 0x48] = s1\n  8774: s0 = sp + 0x60\n  8777: sp = sp & 0xffffffffffffffe0\n  8780: s1 = a0\n  8782: u64 [sp + 24] = 0\n  8785: u64 [sp + 16] = 0\n  8788: u64 [sp + 8] = 0\n  8791: u64 [sp + 0] = 0x3\n  8794: u64 [sp + 56] = 0\n  8797: u64 [sp + 48] = 0\n  8800: u64 [sp + 40] = 0\n  8803: u64 [sp + 32] = 0\n  8806: u32 [sp + 64] = 0x20\n  8810: i32 a1 = sp + 0\n  8812: i32 a3 = sp + 0x20\n  8815: i32 a4 = sp + 0x40\n  8818: a2 = 0xffffffffffffffff\n  8821: a0 = 0\n  8823: ecalli 6 // 'get_storage'\n  8825: a0 = u32 [sp + 0x30]\n  8828: a1 = u64 [sp + 0x28]\n  8831: a2 = u64 [sp + 0x20]\n  8834: u64 [s1 + 24] = 0\n  8837: u64 [s1 + 0x10] = a0\n  8840: u64 [s1 + 0x8] = a1\n  8843: u64 [s1] = a2\n  8845: sp = s0 + 0xffffffffffffffa0\n  8848: ra = u64 [sp + 0x58]\n  8851: s0 = u64 [sp + 0x50]\n  8854: s1 = u64 [sp + 0x48]\n  8857: sp = sp + 0x60\n  8860: ret\n      : @141 (gas: 8)\n  8862: a0 = u64 [sp + 0x30]\n  8865: a1 = u64 [sp + 0x38]\n  8868: a2 = u64 [sp + 0x28]\n  8871: a3 = u64 [sp + 0x20]\n  8874: a1 = a1 | a2\n  8877: a0 = a0 | a3\n  8880: a0 = a0 | a1\n  8883: jump @146 if a0 != 0\n      : @142 (gas: 2)\n  8887: a1 = i32 [0x20004]\n  8892: jump @146 if a1 <=u 3\n      : @143 (gas: 24)\n  8897: u64 [sp + 88] = 0\n  8900: u64 [sp + 80] = 0\n  8903: u64 [sp + 72] = 0\n  8906: u64 [sp + 64] = 0x3\n  8910: u64 [sp + 120] = 0\n  8913: u64 [sp + 112] = 0\n  8916: u64 [sp + 104] = 0\n  8919: u64 [sp + 96] = 0\n  8922: u32 [sp + 128] = 0x20\n  8927: i32 a1 = sp + 0x40\n  8930: i32 a3 = sp + 0x60\n  8933: i32 a4 = sp + 0x80\n  8937: a2 = 0xffffffffffffffff\n  8940: a0 = 0\n  8942: ecalli 6 // 'get_storage'\n  8944: a0 = u64 [sp + 0x70]\n  8947: u64 [sp + 0x8] = a0\n  8950: a0 = u64 [sp + 0x68]\n  8953: u64 [sp + 0x10] = a0\n  8956: a0 = u64 [sp + 0x60]\n  8959: u64 [sp + 0x18] = a0\n  8962: a0 = 0x40\n  8965: a1 = 0x20\n  8968: ra = 118, jump @0\n      : @144 [@dyn 59] (gas: 100)\n  8973: a1 = u8 [a0 + 0x11]\n  8976: a2 = u8 [a0 + 0x10]\n  8979: a3 = u8 [a0 + 0x12]\n  8982: a4 = u8 [a0 + 0x13]\n  8985: a1 = a1 << 0x8\n  8988: a1 = a1 | a2\n  8991: a3 = a3 << 0x10\n  8994: a4 = a4 << 0x18\n  8997: a3 = a3 | a4\n  9000: a1 = a1 | a3\n  9003: a2 = u8 [a0 + 0x15]\n  9006: a3 = u8 [a0 + 0x14]\n  9009: a4 = u8 [a0 + 0x16]\n  9012: a5 = u8 [a0 + 0x17]\n  9015: a2 = a2 << 0x8\n  9018: a2 = a2 | a3\n  9021: a4 = a4 << 0x10\n  9024: a5 = a5 << 0x18\n  9027: a4 = a4 | a5\n  9030: a2 = a2 | a4\n  9033: a2 = a2 << 0x20\n  9036: t0 = a2 | a1\n  9039: a2 = u8 [a0 + 0x1]\n  9042: a3 = u8 [a0]\n  9044: a4 = u8 [a0 + 0x2]\n  9047: a5 = u8 [a0 + 0x3]\n  9050: a2 = a2 << 0x8\n  9053: a2 = a2 | a3\n  9056: a4 = a4 << 0x10\n  9059: a5 = a5 << 0x18\n  9062: a4 = a4 | a5\n  9065: a2 = a2 | a4\n  9068: a3 = u8 [a0 + 0x5]\n  9071: a4 = u8 [a0 + 0x4]\n  9074: a5 = u8 [a0 + 0x6]\n  9077: s1 = u8 [a0 + 0x7]\n  9080: a3 = a3 << 0x8\n  9083: a3 = a3 | a4\n  9086: a5 = a5 << 0x10\n  9089: s1 = s1 << 0x18\n  9092: a5 = a5 | s1\n  9095: a3 = a3 | a5\n  9098: a3 = a3 << 0x20\n  9101: a2 = a2 | a3\n  9104: a3 = u8 [a0 + 0x19]\n  9107: a4 = u8 [a0 + 0x18]\n  9110: a5 = u8 [a0 + 0x1a]\n  9113: s1 = u8 [a0 + 0x1b]\n  9116: a3 = a3 << 0x8\n  9119: a3 = a3 | a4\n  9122: a5 = a5 << 0x10\n  9125: s1 = s1 << 0x18\n  9128: a5 = a5 | s1\n  9131: a3 = a3 | a5\n  9134: a4 = u8 [a0 + 0x1d]\n  9137: a5 = u8 [a0 + 0x1c]\n  9140: s1 = u8 [a0 + 0x1e]\n  9143: a1 = u8 [a0 + 0x1f]\n  9146: a4 = a4 << 0x8\n  9149: a4 = a4 | a5\n  9152: s1 = s1 << 0x10\n  9155: a1 = a1 << 0x18\n  9158: a1 = a1 | s1\n  9161: a1 = a1 | a4\n  9164: a1 = a1 << 0x20\n  9167: a3 = a3 | a1\n  9170: a1 = u8 [a0 + 0x9]\n  9173: a4 = u8 [a0 + 0x8]\n  9176: a5 = u8 [a0 + 0xa]\n  9179: s1 = u8 [a0 + 0xb]\n  9182: a1 = a1 << 0x8\n  9185: a1 = a1 | a4\n  9188: a5 = a5 << 0x10\n  9191: s1 = s1 << 0x18\n  9194: a5 = a5 | s1\n  9197: a1 = a1 | a5\n  9200: a4 = u8 [a0 + 0xd]\n  9203: a5 = u8 [a0 + 0xc]\n  9206: s1 = u8 [a0 + 0xe]\n  9209: a0 = u8 [a0 + 0xf]\n  9212: a4 = a4 << 0x8\n  9215: a4 = a4 | a5\n  9218: s1 = s1 << 0x10\n  9221: a0 = a0 << 0x18\n  9224: a0 = a0 | s1\n  9227: a0 = a0 | a4\n  9230: a0 = a0 << 0x20\n  9233: a0 = a0 | a1\n  9236: a1 = reverse a0\n  9238: a0 = reverse a3\n  9240: a2 = reverse a2\n  9242: a3 = reverse t0\n  9244: a2 = a2 | a3\n  9247: a3 = a0 | a1\n  9250: a3 = a3 | a2\n  9253: a3 = a3 >> 0x20\n  9256: a1 = a1 | a2\n  9259: a1 = a1 << 0x20\n  9262: a1 = a1 | a3\n  9265: jump @148 if a1 == 0\n      : @145 (gas: 1)\n  9268: trap\n      : @146 (gas: 3)\n  9269: a0 = 0\n  9271: a1 = 0\n  9273: ra = 120, jump @0\n      : @147 [@dyn 60] (gas: 5)\n  9278: i32 a1 = a0 + 0\n  9280: a0 = 0x1\n  9283: a2 = 0\n  9285: ecalli 11 // 'seal_return'\n  9287: fallthrough\n      : @148 (gas: 7)\n  9288: a1 = u64 [sp + 0x8]\n  9291: a1 = a1 << 0x20\n  9294: s1 = a1 >> 0x20\n  9297: i32 a0 = a0 + 0\n  9299: u64 [sp + 0x8] = a0\n  9302: a1 = 0x20\n  9305: ra = 122, jump @0\n      : @149 [@dyn 61] (gas: 58)\n  9310: a1 = reverse s1\n  9312: a2 = u64 [sp + 0x10]\n  9315: a2 = reverse a2\n  9317: a3 = u64 [sp + 0x18]\n  9320: a3 = reverse a3\n  9322: a4 = a3 >> 0x38\n  9325: u8 [a0 + 0x1f] = a4\n  9328: a4 = a3 >> 0x30\n  9331: u8 [a0 + 0x1e] = a4\n  9334: a4 = a3 >> 0x28\n  9337: u8 [a0 + 0x1d] = a4\n  9340: a4 = a3 >> 0x20\n  9343: u8 [a0 + 0x1c] = a4\n  9346: a4 = a3 >> 0x18\n  9349: u8 [a0 + 0x1b] = a4\n  9352: a4 = a3 >> 0x10\n  9355: u8 [a0 + 0x1a] = a4\n  9358: a4 = a3 >> 0x8\n  9361: u8 [a0 + 0x19] = a4\n  9364: u8 [a0 + 0x18] = a3\n  9367: u8 [a0 + 0x10] = a2\n  9370: u8 [a0 + 11] = 0\n  9373: u8 [a0 + 10] = 0\n  9376: u8 [a0 + 9] = 0\n  9379: u8 [a0 + 7] = 0\n  9382: u8 [a0 + 6] = 0\n  9385: u8 [a0 + 5] = 0\n  9388: u8 [a0 + 4] = 0\n  9391: u8 [a0 + 3] = 0\n  9394: u8 [a0 + 2] = 0\n  9397: u8 [a0 + 1] = 0\n  9400: u8 [a0 + 0] = 0\n  9402: a3 = a2 >> 0x38\n  9405: u8 [a0 + 0x17] = a3\n  9408: a3 = a2 >> 0x30\n  9411: u8 [a0 + 0x16] = a3\n  9414: a3 = a2 >> 0x28\n  9417: u8 [a0 + 0x15] = a3\n  9420: a3 = a2 >> 0x20\n  9423: u8 [a0 + 0x14] = a3\n  9426: a3 = a2 >> 0x18\n  9429: u8 [a0 + 0x13] = a3\n  9432: a3 = a2 >> 0x10\n  9435: u8 [a0 + 0x12] = a3\n  9438: a2 = a2 >> 0x8\n  9441: u8 [a0 + 0x11] = a2\n  9444: u8 [a0 + 0x8] = a1\n  9447: a2 = a1 >> 0x38\n  9450: u8 [a0 + 0xf] = a2\n  9453: a2 = a1 >> 0x30\n  9456: u8 [a0 + 0xe] = a2\n  9459: a2 = a1 >> 0x28\n  9462: u8 [a0 + 0xd] = a2\n  9465: a1 = a1 >> 0x20\n  9468: u8 [a0 + 0xc] = a1\n  9471: a1 = 0x20\n  9474: a0 = u64 [sp + 0x8]\n  9477: ra = 124, jump @0\n      : @150 [@dyn 62] (gas: 6)\n  9482: i32 a1 = a0 + 0\n  9484: a2 = 0x20\n  9487: a0 = 0\n  9489: ra = 0x7e\n  9492: ecalli 11 // 'seal_return'\n  9494: fallthrough\n      : @151 [@dyn 63] (gas: 52)\n  9495: sp = sp + 0xffffffffffffff80\n  9498: u64 [sp + 0x78] = ra\n  9501: u64 [sp + 0x70] = s0\n  9504: u64 [sp + 0x68] = s1\n  9507: s0 = sp + 0x80\n  9511: sp = sp & 0xffffffffffffffe0\n  9514: t2 = u64 [a1 + 0x10]\n  9517: a5 = u64 [a1 + 0x8]\n  9520: t0 = u64 [a2 + 0x8]\n  9523: s1 = u64 [a1]\n  9525: u64 [sp + 0x10] = s1\n  9528: a4 = u64 [a2]\n  9530: u64 [sp + 0x18] = a4\n  9533: ra = u64 [a2 + 0x10]\n  9536: a3 = t0 ^ a5\n  9539: u64 [sp + 0x38] = a3\n  9542: a3 = t0 <u a5\n  9545: a4 = a4 <u s1\n  9548: t1 = u64 [sp + 0x38]\n  9551: a3 = a4 if t1 == 0\n  9554: t1 = a4\n  9556: a1 = u64 [a1 + 0x18]\n  9559: u64 [sp + 0x38] = a1\n  9562: a1 = u64 [a2 + 0x18]\n  9565: u64 [sp + 0x20] = a1\n  9568: a1 = ra - t2\n  9571: a2 = a1 - a3\n  9574: u64 [sp + 0x28] = a2\n  9577: a2 = a1 <u a3\n  9580: u64 [sp + 0x30] = t2\n  9583: a3 = ra <u t2\n  9586: a1 = u64 [sp + 0x38]\n  9589: a4 = u64 [sp + 0x20]\n  9592: a1 = a4 - a1\n  9595: a1 = a1 - a3\n  9598: t2 = a1 - a2\n  9601: s1 = t0 - a5\n  9604: a2 = s1 - t1\n  9607: t0 = u64 [sp + 0x10]\n  9610: a1 = u64 [sp + 0x18]\n  9613: a3 = a1 - t0\n  9616: a4 = a2 >u 0\n  9618: a3 = a3 <u 0x20\n  9621: a3 = a3 ^ 0x1\n  9624: a3 = a4 if a2 != 0\n  9627: a2 = t2 >s 0\n  9629: a1 = u64 [sp + 0x28]\n  9632: a4 = a1 >u 0\n  9634: a4 = a2 if t2 != 0\n  9637: a1 = a1 | t2\n  9640: a3 = a4 if a1 != 0\n  9643: jump @157 if a3 == 0\n      : @152 (gas: 11)\n  9646: s1 = a0\n  9648: a2 = u64 [sp + 0x30]\n  9651: a0 = t0 | a2\n  9654: a1 = u64 [sp + 0x38]\n  9657: a1 = a1 | a5\n  9660: a0 = a0 | a1\n  9663: a0 = a0 >> 0x20\n  9666: a1 = a1 | a2\n  9669: a1 = a1 << 0x20\n  9672: a0 = a0 | a1\n  9675: jump @156 if a0 != 0\n      : @153 (gas: 4)\n  9678: i32 a1 = t0 + 0\n  9680: i32 a0 = sp + 0x40\n  9683: ecalli 3 // 'call_data_load'\n  9685: fallthrough\n      : @154 (gas: 10)\n  9686: a0 = u64 [sp + 0x50]\n  9689: a1 = u64 [sp + 0x58]\n  9692: a2 = 0x100000000\n  9702: a2 = a2 ^ a0\n  9705: a2 = a2 | a1\n  9708: a3 = a0 >> 0x20\n  9711: a3 = a3 <u 0x1\n  9714: a3 = 0 if a1 != 0\n  9716: a3 = 0 if a2 == 0\n  9718: jump @157 if a3 == 0\n      : @155 (gas: 12)\n  9721: a2 = u64 [sp + 0x48]\n  9724: a3 = u64 [sp + 0x40]\n  9727: u64 [s1 + 0x8] = a2\n  9730: u64 [s1] = a3\n  9732: u64 [s1 + 0x10] = a0\n  9735: u64 [s1 + 0x18] = a1\n  9738: sp = s0 + 0xffffffffffffff80\n  9741: ra = u64 [sp + 0x78]\n  9744: s0 = u64 [sp + 0x70]\n  9747: s1 = u64 [sp + 0x68]\n  9750: sp = sp + 0x80\n  9754: ret\n      : @156 (gas: 1)\n  9756: trap\n      : @157 (gas: 3)\n  9757: a0 = 0\n  9759: a1 = 0\n  9761: ra = 128, jump @0\n      : @158 [@dyn 64] (gas: 6)\n  9767: i32 a1 = a0 + 0\n  9769: a0 = 0x1\n  9772: a2 = 0\n  9774: ra = 0x82\n  9778: ecalli 11 // 'seal_return'\n  9780: fallthrough\n      : @159 [@dyn 65] (gas: 23)\n  9781: sp = sp + 0xffffffffffffff80\n  9784: u64 [sp + 0x78] = ra\n  9787: u64 [sp + 0x70] = s0\n  9790: u64 [sp + 0x68] = s1\n  9793: s0 = sp + 0x80\n  9797: sp = sp & 0xffffffffffffffe0\n  9800: a3 = u64 [a1]\n  9802: u64 [sp + 0x30] = a3\n  9805: a3 = u64 [a1 + 0x8]\n  9808: u64 [sp + 0x28] = a3\n  9811: a3 = u64 [a1 + 0x10]\n  9814: u64 [sp + 0x20] = a3\n  9817: a1 = u64 [a1 + 0x18]\n  9820: u64 [sp + 0x18] = a1\n  9823: a1 = u64 [a2]\n  9825: u64 [sp + 0x10] = a1\n  9828: a1 = u64 [a2 + 0x8]\n  9831: u64 [sp + 0x8] = a1\n  9834: s1 = u32 [a2 + 0x10]\n  9837: u64 [sp + 0x38] = a0\n  9840: a1 = 0x20\n  9843: a0 = 0\n  9845: ra = 132, jump @0\n      : @160 [@dyn 66] (gas: 58)\n  9851: a1 = reverse s1\n  9853: a2 = u64 [sp + 0x8]\n  9856: a2 = reverse a2\n  9858: a3 = u64 [sp + 0x10]\n  9861: a3 = reverse a3\n  9863: a4 = a3 >> 0x38\n  9866: u8 [a0 + 0x1f] = a4\n  9869: a4 = a3 >> 0x30\n  9872: u8 [a0 + 0x1e] = a4\n  9875: a4 = a3 >> 0x28\n  9878: u8 [a0 + 0x1d] = a4\n  9881: a4 = a3 >> 0x20\n  9884: u8 [a0 + 0x1c] = a4\n  9887: a4 = a3 >> 0x18\n  9890: u8 [a0 + 0x1b] = a4\n  9893: a4 = a3 >> 0x10\n  9896: u8 [a0 + 0x1a] = a4\n  9899: a4 = a3 >> 0x8\n  9902: u8 [a0 + 0x19] = a4\n  9905: u8 [a0 + 0x18] = a3\n  9908: a3 = a2 >> 0x38\n  9911: u8 [a0 + 0x17] = a3\n  9914: a3 = a2 >> 0x30\n  9917: u8 [a0 + 0x16] = a3\n  9920: a3 = a2 >> 0x28\n  9923: u8 [a0 + 0x15] = a3\n  9926: a3 = a2 >> 0x20\n  9929: u8 [a0 + 0x14] = a3\n  9932: a3 = a2 >> 0x18\n  9935: u8 [a0 + 0x13] = a3\n  9938: a3 = a2 >> 0x10\n  9941: u8 [a0 + 0x12] = a3\n  9944: a3 = a2 >> 0x8\n  9947: u8 [a0 + 0x11] = a3\n  9950: u8 [a0 + 0x10] = a2\n  9953: a2 = a1 >> 0x38\n  9956: u8 [a0 + 0xf] = a2\n  9959: a2 = a1 >> 0x30\n  9962: u8 [a0 + 0xe] = a2\n  9965: a2 = a1 >> 0x28\n  9968: u8 [a0 + 0xd] = a2\n  9971: a2 = a1 >> 0x20\n  9974: u8 [a0 + 0xc] = a2\n  9977: u8 [a0 + 11] = 0\n  9980: u8 [a0 + 10] = 0\n  9983: u8 [a0 + 9] = 0\n  9986: u8 [a0 + 0x8] = a1\n  9989: u8 [a0 + 7] = 0\n  9992: u8 [a0 + 6] = 0\n  9995: u8 [a0 + 5] = 0\n  9998: u8 [a0 + 4] = 0\n 10001: u8 [a0 + 3] = 0\n 10004: u8 [a0 + 2] = 0\n 10007: u8 [a0 + 1] = 0\n 10010: u8 [a0 + 0] = 0\n 10012: a0 = 0x20\n 10015: a1 = 0x20\n 10018: ra = 134, jump @0\n      : @161 [@dyn 67] (gas: 71)\n 10024: a1 = u64 [sp + 0x18]\n 10027: a1 = reverse a1\n 10029: a2 = u64 [sp + 0x20]\n 10032: a2 = reverse a2\n 10034: a3 = u64 [sp + 0x28]\n 10037: a3 = reverse a3\n 10039: a4 = u64 [sp + 0x30]\n 10042: a4 = reverse a4\n 10044: a5 = a4 >> 0x38\n 10047: u8 [a0 + 0x1f] = a5\n 10050: a5 = a4 >> 0x30\n 10053: u8 [a0 + 0x1e] = a5\n 10056: a5 = a4 >> 0x28\n 10059: u8 [a0 + 0x1d] = a5\n 10062: a5 = a4 >> 0x20\n 10065: u8 [a0 + 0x1c] = a5\n 10068: a5 = a4 >> 0x18\n 10071: u8 [a0 + 0x1b] = a5\n 10074: a5 = a4 >> 0x10\n 10077: u8 [a0 + 0x1a] = a5\n 10080: a5 = a4 >> 0x8\n 10083: u8 [a0 + 0x19] = a5\n 10086: u8 [a0 + 0x18] = a4\n 10089: a4 = a3 >> 0x38\n 10092: u8 [a0 + 0x17] = a4\n 10095: a4 = a3 >> 0x30\n 10098: u8 [a0 + 0x16] = a4\n 10101: a4 = a3 >> 0x28\n 10104: u8 [a0 + 0x15] = a4\n 10107: a4 = a3 >> 0x20\n 10110: u8 [a0 + 0x14] = a4\n 10113: a4 = a3 >> 0x18\n 10116: u8 [a0 + 0x13] = a4\n 10119: a4 = a3 >> 0x10\n 10122: u8 [a0 + 0x12] = a4\n 10125: a4 = a3 >> 0x8\n 10128: u8 [a0 + 0x11] = a4\n 10131: u8 [a0 + 0x10] = a3\n 10134: a3 = a2 >> 0x38\n 10137: u8 [a0 + 0xf] = a3\n 10140: a3 = a2 >> 0x30\n 10143: u8 [a0 + 0xe] = a3\n 10146: a3 = a2 >> 0x28\n 10149: u8 [a0 + 0xd] = a3\n 10152: a3 = a2 >> 0x20\n 10155: u8 [a0 + 0xc] = a3\n 10158: a3 = a2 >> 0x18\n 10161: u8 [a0 + 0xb] = a3\n 10164: a3 = a2 >> 0x10\n 10167: u8 [a0 + 0xa] = a3\n 10170: a3 = a2 >> 0x8\n 10173: u8 [a0 + 0x9] = a3\n 10176: u8 [a0 + 0x8] = a2\n 10179: a2 = a1 >> 0x38\n 10182: u8 [a0 + 0x7] = a2\n 10185: a2 = a1 >> 0x30\n 10188: u8 [a0 + 0x6] = a2\n 10191: a2 = a1 >> 0x28\n 10194: u8 [a0 + 0x5] = a2\n 10197: a2 = a1 >> 0x20\n 10200: u8 [a0 + 0x4] = a2\n 10203: a2 = a1 >> 0x18\n 10206: u8 [a0 + 0x3] = a2\n 10209: a2 = a1 >> 0x10\n 10212: u8 [a0 + 0x2] = a2\n 10215: a2 = a1 >> 0x8\n 10218: u8 [a0 + 0x1] = a2\n 10221: u8 [a0] = a1\n 10223: a1 = 0x40\n 10226: a0 = 0\n 10228: ra = 136, jump @0\n      : @162 [@dyn 68] (gas: 23)\n 10234: i32 a0 = a0 + 0\n 10236: i32 a2 = sp + 0x40\n 10239: a1 = 0x40\n 10242: ecalli 7 // 'hash_keccak_256'\n 10244: a0 = u64 [sp + 0x58]\n 10247: a1 = u64 [sp + 0x50]\n 10250: a2 = u64 [sp + 0x48]\n 10253: a3 = u64 [sp + 0x40]\n 10256: a0 = reverse a0\n 10258: a1 = reverse a1\n 10260: a2 = reverse a2\n 10262: a3 = reverse a3\n 10264: a4 = u64 [sp + 0x38]\n 10267: u64 [a4 + 0x18] = a3\n 10270: u64 [a4 + 0x10] = a2\n 10273: u64 [a4 + 0x8] = a1\n 10276: u64 [a4] = a0\n 10278: sp = s0 + 0xffffffffffffff80\n 10281: ra = u64 [sp + 0x78]\n 10284: s0 = u64 [sp + 0x70]\n 10287: s1 = u64 [sp + 0x68]\n 10290: sp = sp + 0x80\n 10294: ret\n      : @163 (gas: 8)\n 10296: a0 = u64 [sp + 0x30]\n 10299: a1 = u64 [sp + 0x38]\n 10302: a2 = u64 [sp + 0x28]\n 10305: a3 = u64 [sp + 0x20]\n 10308: a1 = a1 | a2\n 10311: a0 = a0 | a3\n 10314: a0 = a0 | a1\n 10317: jump @173 if a0 != 0\n      : @164 (gas: 2)\n 10321: a0 = i32 [0x20004]\n 10326: jump @173 if a0 <=u 35\n      : @165 (gas: 4)\n 10331: i32 a0 = sp + 0x60\n 10334: a1 = 0x4\n 10337: ecalli 3 // 'call_data_load'\n 10339: fallthrough\n      : @166 (gas: 11)\n 10340: a1 = u64 [sp + 0x70]\n 10343: s1 = u64 [sp + 0x78]\n 10346: a0 = 0x100000000\n 10356: a0 = a0 ^ a1\n 10359: a0 = a0 | s1\n 10362: u64 [sp + 0x18] = a1\n 10365: a1 = a1 >> 0x20\n 10368: a1 = a1 <u 0x1\n 10371: a1 = 0 if s1 != 0\n 10373: a1 = 0 if a0 == 0\n 10375: jump @174 if a1 == 0\n      : @167 (gas: 7)\n 10379: a0 = u64 [sp + 0x68]\n 10382: u64 [sp + 0x8] = a0\n 10385: a0 = u64 [sp + 0x60]\n 10388: u64 [sp + 0x10] = a0\n 10391: a1 = 0x20\n 10394: a0 = 0\n 10396: ra = 138, jump @0\n      : @168 [@dyn 69] (gas: 70)\n 10402: a1 = reverse s1\n 10404: a2 = u64 [sp + 0x18]\n 10407: a2 = reverse a2\n 10409: a3 = u64 [sp + 0x8]\n 10412: a3 = reverse a3\n 10414: a4 = u64 [sp + 0x10]\n 10417: a4 = reverse a4\n 10419: a5 = a4 >> 0x38\n 10422: u8 [a0 + 0x1f] = a5\n 10425: a5 = a4 >> 0x30\n 10428: u8 [a0 + 0x1e] = a5\n 10431: a5 = a4 >> 0x28\n 10434: u8 [a0 + 0x1d] = a5\n 10437: a5 = a4 >> 0x20\n 10440: u8 [a0 + 0x1c] = a5\n 10443: a5 = a4 >> 0x18\n 10446: u8 [a0 + 0x1b] = a5\n 10449: a5 = a4 >> 0x10\n 10452: u8 [a0 + 0x1a] = a5\n 10455: a5 = a4 >> 0x8\n 10458: u8 [a0 + 0x19] = a5\n 10461: u8 [a0 + 0x18] = a4\n 10464: a4 = a3 >> 0x38\n 10467: u8 [a0 + 0x17] = a4\n 10470: a4 = a3 >> 0x30\n 10473: u8 [a0 + 0x16] = a4\n 10476: a4 = a3 >> 0x28\n 10479: u8 [a0 + 0x15] = a4\n 10482: a4 = a3 >> 0x20\n 10485: u8 [a0 + 0x14] = a4\n 10488: a4 = a3 >> 0x18\n 10491: u8 [a0 + 0x13] = a4\n 10494: a4 = a3 >> 0x10\n 10497: u8 [a0 + 0x12] = a4\n 10500: a4 = a3 >> 0x8\n 10503: u8 [a0 + 0x11] = a4\n 10506: u8 [a0 + 0x10] = a3\n 10509: u8 [a0 + 0x8] = a2\n 10512: a3 = a2 >> 0x38\n 10515: u8 [a0 + 0xf] = a3\n 10518: a3 = a2 >> 0x30\n 10521: u8 [a0 + 0xe] = a3\n 10524: a3 = a2 >> 0x28\n 10527: u8 [a0 + 0xd] = a3\n 10530: a3 = a2 >> 0x20\n 10533: u8 [a0 + 0xc] = a3\n 10536: a3 = a2 >> 0x18\n 10539: u8 [a0 + 0xb] = a3\n 10542: a3 = a2 >> 0x10\n 10545: u8 [a0 + 0xa] = a3\n 10548: a2 = a2 >> 0x8\n 10551: u8 [a0 + 0x9] = a2\n 10554: u8 [a0] = a1\n 10556: a2 = a1 >> 0x38\n 10559: u8 [a0 + 0x7] = a2\n 10562: a2 = a1 >> 0x30\n 10565: u8 [a0 + 0x6] = a2\n 10568: a2 = a1 >> 0x28\n 10571: u8 [a0 + 0x5] = a2\n 10574: a2 = a1 >> 0x20\n 10577: u8 [a0 + 0x4] = a2\n 10580: a2 = a1 >> 0x18\n 10583: u8 [a0 + 0x3] = a2\n 10586: a2 = a1 >> 0x10\n 10589: u8 [a0 + 0x2] = a2\n 10592: a1 = a1 >> 0x8\n 10595: u8 [a0 + 0x1] = a1\n 10598: a0 = 0x20\n 10601: a1 = 0x20\n 10604: ra = 140, jump @0\n      : @169 [@dyn 70] (gas: 35)\n 10610: u8 [a0 + 31] = 0x4\n 10614: u8 [a0 + 30] = 0\n 10617: u8 [a0 + 29] = 0\n 10620: u8 [a0 + 28] = 0\n 10623: u8 [a0 + 27] = 0\n 10626: u8 [a0 + 26] = 0\n 10629: u8 [a0 + 25] = 0\n 10632: u8 [a0 + 24] = 0\n 10635: u8 [a0 + 23] = 0\n 10638: u8 [a0 + 22] = 0\n 10641: u8 [a0 + 21] = 0\n 10644: u8 [a0 + 20] = 0\n 10647: u8 [a0 + 19] = 0\n 10650: u8 [a0 + 18] = 0\n 10653: u8 [a0 + 17] = 0\n 10656: u8 [a0 + 16] = 0\n 10659: u8 [a0 + 15] = 0\n 10662: u8 [a0 + 14] = 0\n 10665: u8 [a0 + 13] = 0\n 10668: u8 [a0 + 12] = 0\n 10671: u8 [a0 + 11] = 0\n 10674: u8 [a0 + 10] = 0\n 10677: u8 [a0 + 9] = 0\n 10680: u8 [a0 + 8] = 0\n 10683: u8 [a0 + 7] = 0\n 10686: u8 [a0 + 6] = 0\n 10689: u8 [a0 + 5] = 0\n 10692: u8 [a0 + 4] = 0\n 10695: u8 [a0 + 3] = 0\n 10698: u8 [a0 + 2] = 0\n 10701: u8 [a0 + 1] = 0\n 10704: u8 [a0 + 0] = 0\n 10706: a1 = 0x40\n 10709: a0 = 0\n 10711: ra = 142, jump @0\n      : @170 [@dyn 71] (gas: 38)\n 10717: i32 a0 = a0 + 0\n 10719: i32 a2 = sp + 0x60\n 10722: a1 = 0x40\n 10725: ecalli 7 // 'hash_keccak_256'\n 10727: a0 = u64 [sp + 0x78]\n 10730: a1 = u64 [sp + 0x70]\n 10733: a2 = u64 [sp + 0x68]\n 10736: a3 = u64 [sp + 0x60]\n 10739: a0 = reverse a0\n 10741: a1 = reverse a1\n 10743: a2 = reverse a2\n 10745: a3 = reverse a3\n 10747: u64 [sp + 0x58] = a3\n 10750: u64 [sp + 0x50] = a2\n 10753: u64 [sp + 0x48] = a1\n 10756: u64 [sp + 0x40] = a0\n 10759: u64 [sp + 120] = 0\n 10762: u64 [sp + 112] = 0\n 10765: u64 [sp + 104] = 0\n 10768: u64 [sp + 96] = 0\n 10771: u32 [sp + 128] = 0x20\n 10776: i32 a1 = sp + 0x40\n 10779: i32 a3 = sp + 0x60\n 10782: i32 a4 = sp + 0x80\n 10786: a2 = 0xffffffffffffffff\n 10789: a0 = 0\n 10791: ecalli 6 // 'get_storage'\n 10793: a0 = u64 [sp + 0x78]\n 10796: u64 [sp] = a0\n 10798: a0 = u64 [sp + 0x70]\n 10801: u64 [sp + 0x8] = a0\n 10804: a0 = u64 [sp + 0x68]\n 10807: u64 [sp + 0x10] = a0\n 10810: a0 = u64 [sp + 0x60]\n 10813: u64 [sp + 0x18] = a0\n 10816: a0 = 0x40\n 10819: a1 = 0x20\n 10822: ra = 144, jump @0\n      : @171 [@dyn 72] (gas: 100)\n 10828: a1 = u8 [a0 + 0x11]\n 10831: a2 = u8 [a0 + 0x10]\n 10834: a3 = u8 [a0 + 0x12]\n 10837: a4 = u8 [a0 + 0x13]\n 10840: a1 = a1 << 0x8\n 10843: a1 = a1 | a2\n 10846: a3 = a3 << 0x10\n 10849: a4 = a4 << 0x18\n 10852: a3 = a3 | a4\n 10855: a1 = a1 | a3\n 10858: a2 = u8 [a0 + 0x15]\n 10861: a3 = u8 [a0 + 0x14]\n 10864: a4 = u8 [a0 + 0x16]\n 10867: a5 = u8 [a0 + 0x17]\n 10870: a2 = a2 << 0x8\n 10873: a2 = a2 | a3\n 10876: a4 = a4 << 0x10\n 10879: a5 = a5 << 0x18\n 10882: a4 = a4 | a5\n 10885: a2 = a2 | a4\n 10888: a2 = a2 << 0x20\n 10891: t0 = a2 | a1\n 10894: a2 = u8 [a0 + 0x1]\n 10897: a3 = u8 [a0]\n 10899: a4 = u8 [a0 + 0x2]\n 10902: a5 = u8 [a0 + 0x3]\n 10905: a2 = a2 << 0x8\n 10908: a2 = a2 | a3\n 10911: a4 = a4 << 0x10\n 10914: a5 = a5 << 0x18\n 10917: a4 = a4 | a5\n 10920: a2 = a2 | a4\n 10923: a3 = u8 [a0 + 0x5]\n 10926: a4 = u8 [a0 + 0x4]\n 10929: a5 = u8 [a0 + 0x6]\n 10932: s1 = u8 [a0 + 0x7]\n 10935: a3 = a3 << 0x8\n 10938: a3 = a3 | a4\n 10941: a5 = a5 << 0x10\n 10944: s1 = s1 << 0x18\n 10947: a5 = a5 | s1\n 10950: a3 = a3 | a5\n 10953: a3 = a3 << 0x20\n 10956: a2 = a2 | a3\n 10959: a3 = u8 [a0 + 0x19]\n 10962: a4 = u8 [a0 + 0x18]\n 10965: a5 = u8 [a0 + 0x1a]\n 10968: s1 = u8 [a0 + 0x1b]\n 10971: a3 = a3 << 0x8\n 10974: a3 = a3 | a4\n 10977: a5 = a5 << 0x10\n 10980: s1 = s1 << 0x18\n 10983: a5 = a5 | s1\n 10986: a3 = a3 | a5\n 10989: a4 = u8 [a0 + 0x1d]\n 10992: a5 = u8 [a0 + 0x1c]\n 10995: s1 = u8 [a0 + 0x1e]\n 10998: a1 = u8 [a0 + 0x1f]\n 11001: a4 = a4 << 0x8\n 11004: a4 = a4 | a5\n 11007: s1 = s1 << 0x10\n 11010: a1 = a1 << 0x18\n 11013: a1 = a1 | s1\n 11016: a1 = a1 | a4\n 11019: a1 = a1 << 0x20\n 11022: a3 = a3 | a1\n 11025: a1 = u8 [a0 + 0x9]\n 11028: a4 = u8 [a0 + 0x8]\n 11031: a5 = u8 [a0 + 0xa]\n 11034: s1 = u8 [a0 + 0xb]\n 11037: a1 = a1 << 0x8\n 11040: a1 = a1 | a4\n 11043: a5 = a5 << 0x10\n 11046: s1 = s1 << 0x18\n 11049: a5 = a5 | s1\n 11052: a1 = a1 | a5\n 11055: a4 = u8 [a0 + 0xd]\n 11058: a5 = u8 [a0 + 0xc]\n 11061: s1 = u8 [a0 + 0xe]\n 11064: a0 = u8 [a0 + 0xf]\n 11067: a4 = a4 << 0x8\n 11070: a4 = a4 | a5\n 11073: s1 = s1 << 0x10\n 11076: a0 = a0 << 0x18\n 11079: a0 = a0 | s1\n 11082: a0 = a0 | a4\n 11085: a0 = a0 << 0x20\n 11088: a0 = a0 | a1\n 11091: a1 = reverse a0\n 11093: a0 = reverse a3\n 11095: a2 = reverse a2\n 11097: a3 = reverse t0\n 11099: a2 = a2 | a3\n 11102: a3 = a0 | a1\n 11105: a3 = a3 | a2\n 11108: a3 = a3 >> 0x20\n 11111: a1 = a1 | a2\n 11114: a1 = a1 << 0x20\n 11117: a1 = a1 | a3\n 11120: jump @176 if a1 == 0\n      : @172 (gas: 1)\n 11123: trap\n      : @173 (gas: 4)\n 11124: a0 = 0\n 11126: a1 = 0\n 11128: ra = 0x92\n 11132: jump @0\n      : @174 (gas: 2)\n 11135: a0 = 0\n 11137: ra = 146, jump @0\n      : @175 [@dyn 73] (gas: 5)\n 11143: i32 a1 = a0 + 0\n 11145: a0 = 0x1\n 11148: a2 = 0\n 11150: ecalli 11 // 'seal_return'\n 11152: fallthrough\n      : @176 (gas: 4)\n 11153: i32 s1 = a0 + 0\n 11155: a1 = 0x20\n 11158: a0 = s1\n 11160: ra = 148, jump @0\n      : @177 [@dyn 74] (gas: 71)\n 11166: a1 = u64 [sp]\n 11168: a1 = reverse a1\n 11170: a2 = u64 [sp + 0x8]\n 11173: a2 = reverse a2\n 11175: a3 = u64 [sp + 0x10]\n 11178: a3 = reverse a3\n 11180: a4 = u64 [sp + 0x18]\n 11183: a4 = reverse a4\n 11185: a5 = a4 >> 0x38\n 11188: u8 [a0 + 0x1f] = a5\n 11191: a5 = a4 >> 0x30\n 11194: u8 [a0 + 0x1e] = a5\n 11197: a5 = a4 >> 0x28\n 11200: u8 [a0 + 0x1d] = a5\n 11203: a5 = a4 >> 0x20\n 11206: u8 [a0 + 0x1c] = a5\n 11209: a5 = a4 >> 0x18\n 11212: u8 [a0 + 0x1b] = a5\n 11215: a5 = a4 >> 0x10\n 11218: u8 [a0 + 0x1a] = a5\n 11221: a5 = a4 >> 0x8\n 11224: u8 [a0 + 0x19] = a5\n 11227: u8 [a0 + 0x18] = a4\n 11230: u8 [a0 + 0x10] = a3\n 11233: a4 = a3 >> 0x38\n 11236: u8 [a0 + 0x17] = a4\n 11239: a4 = a3 >> 0x30\n 11242: u8 [a0 + 0x16] = a4\n 11245: a4 = a3 >> 0x28\n 11248: u8 [a0 + 0x15] = a4\n 11251: a4 = a3 >> 0x20\n 11254: u8 [a0 + 0x14] = a4\n 11257: a4 = a3 >> 0x18\n 11260: u8 [a0 + 0x13] = a4\n 11263: a4 = a3 >> 0x10\n 11266: u8 [a0 + 0x12] = a4\n 11269: a3 = a3 >> 0x8\n 11272: u8 [a0 + 0x11] = a3\n 11275: u8 [a0 + 0x8] = a2\n 11278: a3 = a2 >> 0x38\n 11281: u8 [a0 + 0xf] = a3\n 11284: a3 = a2 >> 0x30\n 11287: u8 [a0 + 0xe] = a3\n 11290: a3 = a2 >> 0x28\n 11293: u8 [a0 + 0xd] = a3\n 11296: a3 = a2 >> 0x20\n 11299: u8 [a0 + 0xc] = a3\n 11302: a3 = a2 >> 0x18\n 11305: u8 [a0 + 0xb] = a3\n 11308: a3 = a2 >> 0x10\n 11311: u8 [a0 + 0xa] = a3\n 11314: a2 = a2 >> 0x8\n 11317: u8 [a0 + 0x9] = a2\n 11320: u8 [a0] = a1\n 11322: a2 = a1 >> 0x38\n 11325: u8 [a0 + 0x7] = a2\n 11328: a2 = a1 >> 0x30\n 11331: u8 [a0 + 0x6] = a2\n 11334: a2 = a1 >> 0x28\n 11337: u8 [a0 + 0x5] = a2\n 11340: a2 = a1 >> 0x20\n 11343: u8 [a0 + 0x4] = a2\n 11346: a2 = a1 >> 0x18\n 11349: u8 [a0 + 0x3] = a2\n 11352: a2 = a1 >> 0x10\n 11355: u8 [a0 + 0x2] = a2\n 11358: a1 = a1 >> 0x8\n 11361: u8 [a0 + 0x1] = a1\n 11364: a1 = 0x20\n 11367: a0 = s1\n 11369: ra = 150, jump @0\n      : @178 [@dyn 75] (gas: 6)\n 11375: i32 a1 = a0 + 0\n 11377: a2 = 0x20\n 11380: a0 = 0\n 11382: ra = 0x98\n 11386: ecalli 11 // 'seal_return'\n 11388: fallthrough\n      : @179 [@dyn 76] (gas: 35)\n 11389: sp = sp + 0xffffffffffffffa0\n 11392: u64 [sp + 0x58] = ra\n 11395: u64 [sp + 0x50] = s0\n 11398: u64 [sp + 0x48] = s1\n 11401: s0 = sp + 0x60\n 11404: sp = sp & 0xffffffffffffffe0\n 11407: s1 = a0\n 11409: u64 [sp + 24] = 0\n 11412: u64 [sp + 16] = 0\n 11415: u64 [sp + 8] = 0\n 11418: u64 [sp + 0] = 0x2\n 11421: u64 [sp + 56] = 0\n 11424: u64 [sp + 48] = 0\n 11427: u64 [sp + 40] = 0\n 11430: u64 [sp + 32] = 0\n 11433: u32 [sp + 64] = 0x20\n 11437: i32 a1 = sp + 0\n 11439: i32 a3 = sp + 0x20\n 11442: i32 a4 = sp + 0x40\n 11445: a2 = 0xffffffffffffffff\n 11448: a0 = 0\n 11450: ecalli 6 // 'get_storage'\n 11452: a0 = u32 [sp + 0x30]\n 11455: a1 = u64 [sp + 0x28]\n 11458: a2 = u64 [sp + 0x20]\n 11461: u64 [s1 + 24] = 0\n 11464: u64 [s1 + 0x10] = a0\n 11467: u64 [s1 + 0x8] = a1\n 11470: u64 [s1] = a2\n 11472: sp = s0 + 0xffffffffffffffa0\n 11475: ra = u64 [sp + 0x58]\n 11478: s0 = u64 [sp + 0x50]\n 11481: s1 = u64 [sp + 0x48]\n 11484: sp = sp + 0x60\n 11487: ret\n      : @180 (gas: 8)\n 11489: a0 = u64 [sp + 0x30]\n 11492: a1 = u64 [sp + 0x38]\n 11495: a2 = u64 [sp + 0x28]\n 11498: a3 = u64 [sp + 0x20]\n 11501: a1 = a1 | a2\n 11504: a0 = a0 | a3\n 11507: a0 = a0 | a1\n 11510: jump @185 if a0 != 0\n      : @181 (gas: 2)\n 11514: a0 = i32 [0x20004]\n 11519: jump @185 if a0 <=u 3\n      : @182 (gas: 24)\n 11524: u64 [sp + 88] = 0\n 11527: u64 [sp + 80] = 0\n 11530: u64 [sp + 72] = 0\n 11533: u64 [sp + 64] = 0x2\n 11537: u64 [sp + 120] = 0\n 11540: u64 [sp + 112] = 0\n 11543: u64 [sp + 104] = 0\n 11546: u64 [sp + 96] = 0\n 11549: u32 [sp + 128] = 0x20\n 11554: i32 a1 = sp + 0x40\n 11557: i32 a3 = sp + 0x60\n 11560: i32 a4 = sp + 0x80\n 11564: a2 = 0xffffffffffffffff\n 11567: a0 = 0\n 11569: ecalli 6 // 'get_storage'\n 11571: a0 = u64 [sp + 0x70]\n 11574: u64 [sp + 0x8] = a0\n 11577: a0 = u64 [sp + 0x68]\n 11580: u64 [sp + 0x10] = a0\n 11583: a0 = u64 [sp + 0x60]\n 11586: u64 [sp + 0x18] = a0\n 11589: a0 = 0x40\n 11592: a1 = 0x20\n 11595: ra = 154, jump @0\n      : @183 [@dyn 77] (gas: 100)\n 11601: a1 = u8 [a0 + 0x11]\n 11604: a2 = u8 [a0 + 0x10]\n 11607: a3 = u8 [a0 + 0x12]\n 11610: a4 = u8 [a0 + 0x13]\n 11613: a1 = a1 << 0x8\n 11616: a1 = a1 | a2\n 11619: a3 = a3 << 0x10\n 11622: a4 = a4 << 0x18\n 11625: a3 = a3 | a4\n 11628: a1 = a1 | a3\n 11631: a2 = u8 [a0 + 0x15]\n 11634: a3 = u8 [a0 + 0x14]\n 11637: a4 = u8 [a0 + 0x16]\n 11640: a5 = u8 [a0 + 0x17]\n 11643: a2 = a2 << 0x8\n 11646: a2 = a2 | a3\n 11649: a4 = a4 << 0x10\n 11652: a5 = a5 << 0x18\n 11655: a4 = a4 | a5\n 11658: a2 = a2 | a4\n 11661: a2 = a2 << 0x20\n 11664: t0 = a2 | a1\n 11667: a2 = u8 [a0 + 0x1]\n 11670: a3 = u8 [a0]\n 11672: a4 = u8 [a0 + 0x2]\n 11675: a5 = u8 [a0 + 0x3]\n 11678: a2 = a2 << 0x8\n 11681: a2 = a2 | a3\n 11684: a4 = a4 << 0x10\n 11687: a5 = a5 << 0x18\n 11690: a4 = a4 | a5\n 11693: a2 = a2 | a4\n 11696: a3 = u8 [a0 + 0x5]\n 11699: a4 = u8 [a0 + 0x4]\n 11702: a5 = u8 [a0 + 0x6]\n 11705: s1 = u8 [a0 + 0x7]\n 11708: a3 = a3 << 0x8\n 11711: a3 = a3 | a4\n 11714: a5 = a5 << 0x10\n 11717: s1 = s1 << 0x18\n 11720: a5 = a5 | s1\n 11723: a3 = a3 | a5\n 11726: a3 = a3 << 0x20\n 11729: a2 = a2 | a3\n 11732: a3 = u8 [a0 + 0x19]\n 11735: a4 = u8 [a0 + 0x18]\n 11738: a5 = u8 [a0 + 0x1a]\n 11741: s1 = u8 [a0 + 0x1b]\n 11744: a3 = a3 << 0x8\n 11747: a3 = a3 | a4\n 11750: a5 = a5 << 0x10\n 11753: s1 = s1 << 0x18\n 11756: a5 = a5 | s1\n 11759: a3 = a3 | a5\n 11762: a4 = u8 [a0 + 0x1d]\n 11765: a5 = u8 [a0 + 0x1c]\n 11768: s1 = u8 [a0 + 0x1e]\n 11771: a1 = u8 [a0 + 0x1f]\n 11774: a4 = a4 << 0x8\n 11777: a4 = a4 | a5\n 11780: s1 = s1 << 0x10\n 11783: a1 = a1 << 0x18\n 11786: a1 = a1 | s1\n 11789: a1 = a1 | a4\n 11792: a1 = a1 << 0x20\n 11795: a3 = a3 | a1\n 11798: a1 = u8 [a0 + 0x9]\n 11801: a4 = u8 [a0 + 0x8]\n 11804: a5 = u8 [a0 + 0xa]\n 11807: s1 = u8 [a0 + 0xb]\n 11810: a1 = a1 << 0x8\n 11813: a1 = a1 | a4\n 11816: a5 = a5 << 0x10\n 11819: s1 = s1 << 0x18\n 11822: a5 = a5 | s1\n 11825: a1 = a1 | a5\n 11828: a4 = u8 [a0 + 0xd]\n 11831: a5 = u8 [a0 + 0xc]\n 11834: s1 = u8 [a0 + 0xe]\n 11837: a0 = u8 [a0 + 0xf]\n 11840: a4 = a4 << 0x8\n 11843: a4 = a4 | a5\n 11846: s1 = s1 << 0x10\n 11849: a0 = a0 << 0x18\n 11852: a0 = a0 | s1\n 11855: a0 = a0 | a4\n 11858: a0 = a0 << 0x20\n 11861: a0 = a0 | a1\n 11864: a1 = reverse a0\n 11866: a0 = reverse a3\n 11868: a2 = reverse a2\n 11870: a3 = reverse t0\n 11872: a2 = a2 | a3\n 11875: a3 = a0 | a1\n 11878: a3 = a3 | a2\n 11881: a3 = a3 >> 0x20\n 11884: a1 = a1 | a2\n 11887: a1 = a1 << 0x20\n 11890: a1 = a1 | a3\n 11893: jump @187 if a1 == 0\n      : @184 (gas: 1)\n 11896: trap\n      : @185 (gas: 3)\n 11897: a0 = 0\n 11899: a1 = 0\n 11901: ra = 156, jump @0\n      : @186 [@dyn 78] (gas: 5)\n 11907: i32 a1 = a0 + 0\n 11909: a0 = 0x1\n 11912: a2 = 0\n 11914: ecalli 11 // 'seal_return'\n 11916: fallthrough\n      : @187 (gas: 7)\n 11917: a1 = u64 [sp + 0x8]\n 11920: a1 = a1 << 0x20\n 11923: s1 = a1 >> 0x20\n 11926: i32 a0 = a0 + 0\n 11928: u64 [sp + 0x8] = a0\n 11931: a1 = 0x20\n 11934: ra = 158, jump @0\n      : @188 [@dyn 79] (gas: 58)\n 11940: a1 = reverse s1\n 11942: a2 = u64 [sp + 0x10]\n 11945: a2 = reverse a2\n 11947: a3 = u64 [sp + 0x18]\n 11950: a3 = reverse a3\n 11952: a4 = a3 >> 0x38\n 11955: u8 [a0 + 0x1f] = a4\n 11958: a4 = a3 >> 0x30\n 11961: u8 [a0 + 0x1e] = a4\n 11964: a4 = a3 >> 0x28\n 11967: u8 [a0 + 0x1d] = a4\n 11970: a4 = a3 >> 0x20\n 11973: u8 [a0 + 0x1c] = a4\n 11976: a4 = a3 >> 0x18\n 11979: u8 [a0 + 0x1b] = a4\n 11982: a4 = a3 >> 0x10\n 11985: u8 [a0 + 0x1a] = a4\n 11988: a4 = a3 >> 0x8\n 11991: u8 [a0 + 0x19] = a4\n 11994: u8 [a0 + 0x18] = a3\n 11997: u8 [a0 + 0x10] = a2\n 12000: u8 [a0 + 11] = 0\n 12003: u8 [a0 + 10] = 0\n 12006: u8 [a0 + 9] = 0\n 12009: u8 [a0 + 7] = 0\n 12012: u8 [a0 + 6] = 0\n 12015: u8 [a0 + 5] = 0\n 12018: u8 [a0 + 4] = 0\n 12021: u8 [a0 + 3] = 0\n 12024: u8 [a0 + 2] = 0\n 12027: u8 [a0 + 1] = 0\n 12030: u8 [a0 + 0] = 0\n 12032: a3 = a2 >> 0x38\n 12035: u8 [a0 + 0x17] = a3\n 12038: a3 = a2 >> 0x30\n 12041: u8 [a0 + 0x16] = a3\n 12044: a3 = a2 >> 0x28\n 12047: u8 [a0 + 0x15] = a3\n 12050: a3 = a2 >> 0x20\n 12053: u8 [a0 + 0x14] = a3\n 12056: a3 = a2 >> 0x18\n 12059: u8 [a0 + 0x13] = a3\n 12062: a3 = a2 >> 0x10\n 12065: u8 [a0 + 0x12] = a3\n 12068: a2 = a2 >> 0x8\n 12071: u8 [a0 + 0x11] = a2\n 12074: u8 [a0 + 0x8] = a1\n 12077: a2 = a1 >> 0x38\n 12080: u8 [a0 + 0xf] = a2\n 12083: a2 = a1 >> 0x30\n 12086: u8 [a0 + 0xe] = a2\n 12089: a2 = a1 >> 0x28\n 12092: u8 [a0 + 0xd] = a2\n 12095: a1 = a1 >> 0x20\n 12098: u8 [a0 + 0xc] = a1\n 12101: a1 = 0x20\n 12104: a0 = u64 [sp + 0x8]\n 12107: ra = 160, jump @0\n      : @189 [@dyn 80] (gas: 6)\n 12113: i32 a1 = a0 + 0\n 12115: a2 = 0x20\n 12118: a0 = 0\n 12120: ra = 0xa2\n 12124: ecalli 11 // 'seal_return'\n 12126: fallthrough\n      : @190 [@dyn 81] (gas: 194)\n 12127: sp = sp + 0xffffffffffffffa0\n 12130: u64 [sp + 0x58] = ra\n 12133: u64 [sp + 0x50] = s0\n 12136: u64 [sp + 0x48] = s1\n 12139: u64 [sp] = a0\n 12141: t1 = u64 [a1]\n 12143: ra = u64 [a1 + 0x8]\n 12146: a4 = u64 [a1 + 0x10]\n 12149: a1 = u64 [a1 + 0x18]\n 12152: t0 = u64 [a2]\n 12154: a3 = u64 [a2 + 0x8]\n 12157: t2 = u64 [a2 + 0x18]\n 12160: a2 = u64 [a2 + 0x10]\n 12163: s0 = t0 >> 0x3d\n 12166: s1 = a3 << 0x3\n 12169: s0 = s0 | s1\n 12172: a3 = a3 >> 0x3d\n 12175: s1 = a2 << 0x3\n 12178: a3 = a3 | s1\n 12181: a2 = a2 >> 0x3d\n 12184: t2 = t2 << 0x3\n 12187: s1 = t2 | a2\n 12190: t2 = t0 << 0x3\n 12193: a2 = s1 >u 0\n 12195: a5 = a3 >u 0\n 12197: a5 = a2 if s1 != 0\n 12200: a0 = s0 >u 0\n 12202: a2 = t2 <u 0x100\n 12206: t2 = a2 ^ 0x1\n 12209: t2 = a0 if s0 != 0\n 12212: a3 = a3 | s1\n 12215: t2 = a5 if a3 != 0\n 12218: u8 [sp + 71] = 0\n 12221: u8 [sp + 70] = 0\n 12224: u8 [sp + 69] = 0\n 12227: u8 [sp + 68] = 0\n 12230: u8 [sp + 67] = 0\n 12233: u8 [sp + 66] = 0\n 12236: u8 [sp + 65] = 0\n 12239: u8 [sp + 64] = 0\n 12242: u8 [sp + 63] = 0\n 12245: u8 [sp + 62] = 0\n 12248: u8 [sp + 61] = 0\n 12251: u8 [sp + 60] = 0\n 12254: u8 [sp + 59] = 0\n 12257: u8 [sp + 58] = 0\n 12260: u8 [sp + 57] = 0\n 12263: u8 [sp + 56] = 0\n 12266: u8 [sp + 55] = 0\n 12269: u8 [sp + 54] = 0\n 12272: u8 [sp + 53] = 0\n 12275: u8 [sp + 52] = 0\n 12278: u8 [sp + 51] = 0\n 12281: u8 [sp + 50] = 0\n 12284: u8 [sp + 49] = 0\n 12287: u8 [sp + 48] = 0\n 12290: u8 [sp + 47] = 0\n 12293: u8 [sp + 46] = 0\n 12296: u8 [sp + 45] = 0\n 12299: u8 [sp + 44] = 0\n 12302: u8 [sp + 43] = 0\n 12305: u8 [sp + 42] = 0\n 12308: u8 [sp + 41] = 0\n 12311: u8 [sp + 40] = 0\n 12314: u8 [sp + 0x20] = a1\n 12317: u8 [sp + 0x18] = a4\n 12320: u8 [sp + 0x10] = ra\n 12323: u8 [sp + 0x8] = t1\n 12326: a0 = a1 >> 0x38\n 12329: u8 [sp + 0x27] = a0\n 12332: a0 = a1 >> 0x30\n 12335: u8 [sp + 0x26] = a0\n 12338: a0 = a1 >> 0x28\n 12341: u8 [sp + 0x25] = a0\n 12344: a0 = a1 >> 0x20\n 12347: u8 [sp + 0x24] = a0\n 12350: a0 = a1 >> 0x18\n 12353: u8 [sp + 0x23] = a0\n 12356: a0 = a1 >> 0x10\n 12359: u8 [sp + 0x22] = a0\n 12362: a1 = a1 >> 0x8\n 12365: u8 [sp + 0x21] = a1\n 12368: a0 = a4 >> 0x38\n 12371: u8 [sp + 0x1f] = a0\n 12374: a0 = a4 >> 0x30\n 12377: u8 [sp + 0x1e] = a0\n 12380: a0 = a4 >> 0x28\n 12383: u8 [sp + 0x1d] = a0\n 12386: a0 = a4 >> 0x20\n 12389: u8 [sp + 0x1c] = a0\n 12392: a0 = a4 >> 0x18\n 12395: u8 [sp + 0x1b] = a0\n 12398: a0 = a4 >> 0x10\n 12401: u8 [sp + 0x1a] = a0\n 12404: a4 = a4 >> 0x8\n 12407: u8 [sp + 0x19] = a4\n 12410: a0 = ra >> 0x38\n 12413: u8 [sp + 0x17] = a0\n 12416: a0 = ra >> 0x30\n 12419: u8 [sp + 0x16] = a0\n 12422: a0 = ra >> 0x28\n 12425: u8 [sp + 0x15] = a0\n 12428: a0 = ra >> 0x20\n 12431: u8 [sp + 0x14] = a0\n 12434: a0 = ra >> 0x18\n 12437: u8 [sp + 0x13] = a0\n 12440: a0 = ra >> 0x10\n 12443: u8 [sp + 0x12] = a0\n 12446: a0 = ra >> 0x8\n 12449: u8 [sp + 0x11] = a0\n 12452: a0 = t1 >> 0x38\n 12455: u8 [sp + 0xf] = a0\n 12458: a0 = t1 >> 0x30\n 12461: u8 [sp + 0xe] = a0\n 12464: a0 = t1 >> 0x28\n 12467: u8 [sp + 0xd] = a0\n 12470: a0 = t1 >> 0x20\n 12473: u8 [sp + 0xc] = a0\n 12476: a0 = t1 >> 0x18\n 12479: u8 [sp + 0xb] = a0\n 12482: a0 = t1 >> 0x10\n 12485: u8 [sp + 0xa] = a0\n 12488: a0 = t1 >> 0x8\n 12491: u8 [sp + 0x9] = a0\n 12494: a1 = t0 & 0x1f\n 12497: a0 = sp + 0x8\n 12500: a1 = a1 + a0\n 12503: a0 = u8 [a1 + 0x9]\n 12506: a2 = u8 [a1 + 0x8]\n 12509: a3 = u8 [a1 + 0xa]\n 12512: a4 = u8 [a1 + 0xb]\n 12515: a0 = a0 << 0x8\n 12518: a0 = a0 | a2\n 12521: a3 = a3 << 0x10\n 12524: a4 = a4 << 0x18\n 12527: a3 = a3 | a4\n 12530: a0 = a0 | a3\n 12533: a2 = u8 [a1 + 0xd]\n 12536: a3 = u8 [a1 + 0xc]\n 12539: a4 = u8 [a1 + 0xe]\n 12542: a5 = u8 [a1 + 0xf]\n 12545: a2 = a2 << 0x8\n 12548: a2 = a2 | a3\n 12551: a4 = a4 << 0x10\n 12554: a5 = a5 << 0x18\n 12557: a4 = a4 | a5\n 12560: a2 = a2 | a4\n 12563: a2 = a2 << 0x20\n 12566: a3 = a2 | a0\n 12569: a0 = u8 [a1 + 0x1]\n 12572: a2 = u8 [a1]\n 12574: a4 = u8 [a1 + 0x2]\n 12577: a5 = u8 [a1 + 0x3]\n 12580: a0 = a0 << 0x8\n 12583: a0 = a0 | a2\n 12586: a4 = a4 << 0x10\n 12589: a5 = a5 << 0x18\n 12592: a4 = a4 | a5\n 12595: a0 = a0 | a4\n 12598: a2 = u8 [a1 + 0x5]\n 12601: a4 = u8 [a1 + 0x4]\n 12604: a5 = u8 [a1 + 0x6]\n 12607: s1 = u8 [a1 + 0x7]\n 12610: a2 = a2 << 0x8\n 12613: a2 = a2 | a4\n 12616: a5 = a5 << 0x10\n 12619: s1 = s1 << 0x18\n 12622: a5 = a5 | s1\n 12625: a2 = a2 | a5\n 12628: a2 = a2 << 0x20\n 12631: a0 = a0 | a2\n 12634: a2 = u8 [a1 + 0x11]\n 12637: a4 = u8 [a1 + 0x10]\n 12640: a5 = u8 [a1 + 0x12]\n 12643: a1 = u8 [a1 + 0x13]\n 12646: a2 = a2 << 0x8\n 12649: a2 = a2 | a4\n 12652: a5 = a5 << 0x10\n 12655: a1 = a1 << 0x18\n 12658: a1 = a1 | a5\n 12661: a1 = a1 | a2\n 12664: a0 = 0 if t2 != 0\n 12666: a3 = 0 if t2 != 0\n 12668: a1 = 0 if t2 != 0\n 12670: a2 = u64 [sp]\n 12672: u64 [a2 + 24] = 0\n 12675: u64 [a2 + 0x10] = a1\n 12678: u64 [a2 + 0x8] = a3\n 12681: u64 [a2] = a0\n 12683: ra = u64 [sp + 0x58]\n 12686: s0 = u64 [sp + 0x50]\n 12689: s1 = u64 [sp + 0x48]\n 12692: sp = sp + 0x60\n 12695: ret\n      : @191 (gas: 8)\n 12697: a0 = u64 [sp + 0x30]\n 12700: a1 = u64 [sp + 0x38]\n 12703: a2 = u64 [sp + 0x28]\n 12706: a3 = u64 [sp + 0x20]\n 12709: a1 = a1 | a2\n 12712: a0 = a0 | a3\n 12715: a0 = a0 | a1\n 12718: jump @196 if a0 != 0\n      : @192 (gas: 2)\n 12722: a0 = i32 [0x20004]\n 12727: jump @196 if a0 <=u 3\n      : @193 (gas: 24)\n 12732: u64 [sp + 88] = 0\n 12735: u64 [sp + 80] = 0\n 12738: u64 [sp + 72] = 0\n 12741: u64 [sp + 64] = 0\n 12744: u64 [sp + 120] = 0\n 12747: u64 [sp + 112] = 0\n 12750: u64 [sp + 104] = 0\n 12753: u64 [sp + 96] = 0\n 12756: u32 [sp + 128] = 0x20\n 12761: i32 a1 = sp + 0x40\n 12764: i32 a3 = sp + 0x60\n 12767: i32 a4 = sp + 0x80\n 12771: a2 = 0xffffffffffffffff\n 12774: a0 = 0\n 12776: ecalli 6 // 'get_storage'\n 12778: a0 = u64 [sp + 0x70]\n 12781: u64 [sp + 0x8] = a0\n 12784: a0 = u64 [sp + 0x68]\n 12787: u64 [sp + 0x10] = a0\n 12790: a0 = u64 [sp + 0x60]\n 12793: u64 [sp + 0x18] = a0\n 12796: a0 = 0x40\n 12799: a1 = 0x20\n 12802: ra = 164, jump @0\n      : @194 [@dyn 82] (gas: 100)\n 12808: a1 = u8 [a0 + 0x11]\n 12811: a2 = u8 [a0 + 0x10]\n 12814: a3 = u8 [a0 + 0x12]\n 12817: a4 = u8 [a0 + 0x13]\n 12820: a1 = a1 << 0x8\n 12823: a1 = a1 | a2\n 12826: a3 = a3 << 0x10\n 12829: a4 = a4 << 0x18\n 12832: a3 = a3 | a4\n 12835: a1 = a1 | a3\n 12838: a2 = u8 [a0 + 0x15]\n 12841: a3 = u8 [a0 + 0x14]\n 12844: a4 = u8 [a0 + 0x16]\n 12847: a5 = u8 [a0 + 0x17]\n 12850: a2 = a2 << 0x8\n 12853: a2 = a2 | a3\n 12856: a4 = a4 << 0x10\n 12859: a5 = a5 << 0x18\n 12862: a4 = a4 | a5\n 12865: a2 = a2 | a4\n 12868: a2 = a2 << 0x20\n 12871: t0 = a2 | a1\n 12874: a2 = u8 [a0 + 0x1]\n 12877: a3 = u8 [a0]\n 12879: a4 = u8 [a0 + 0x2]\n 12882: a5 = u8 [a0 + 0x3]\n 12885: a2 = a2 << 0x8\n 12888: a2 = a2 | a3\n 12891: a4 = a4 << 0x10\n 12894: a5 = a5 << 0x18\n 12897: a4 = a4 | a5\n 12900: a2 = a2 | a4\n 12903: a3 = u8 [a0 + 0x5]\n 12906: a4 = u8 [a0 + 0x4]\n 12909: a5 = u8 [a0 + 0x6]\n 12912: s1 = u8 [a0 + 0x7]\n 12915: a3 = a3 << 0x8\n 12918: a3 = a3 | a4\n 12921: a5 = a5 << 0x10\n 12924: s1 = s1 << 0x18\n 12927: a5 = a5 | s1\n 12930: a3 = a3 | a5\n 12933: a3 = a3 << 0x20\n 12936: a2 = a2 | a3\n 12939: a3 = u8 [a0 + 0x19]\n 12942: a4 = u8 [a0 + 0x18]\n 12945: a5 = u8 [a0 + 0x1a]\n 12948: s1 = u8 [a0 + 0x1b]\n 12951: a3 = a3 << 0x8\n 12954: a3 = a3 | a4\n 12957: a5 = a5 << 0x10\n 12960: s1 = s1 << 0x18\n 12963: a5 = a5 | s1\n 12966: a3 = a3 | a5\n 12969: a4 = u8 [a0 + 0x1d]\n 12972: a5 = u8 [a0 + 0x1c]\n 12975: s1 = u8 [a0 + 0x1e]\n 12978: a1 = u8 [a0 + 0x1f]\n 12981: a4 = a4 << 0x8\n 12984: a4 = a4 | a5\n 12987: s1 = s1 << 0x10\n 12990: a1 = a1 << 0x18\n 12993: a1 = a1 | s1\n 12996: a1 = a1 | a4\n 12999: a1 = a1 << 0x20\n 13002: a3 = a3 | a1\n 13005: a1 = u8 [a0 + 0x9]\n 13008: a4 = u8 [a0 + 0x8]\n 13011: a5 = u8 [a0 + 0xa]\n 13014: s1 = u8 [a0 + 0xb]\n 13017: a1 = a1 << 0x8\n 13020: a1 = a1 | a4\n 13023: a5 = a5 << 0x10\n 13026: s1 = s1 << 0x18\n 13029: a5 = a5 | s1\n 13032: a1 = a1 | a5\n 13035: a4 = u8 [a0 + 0xd]\n 13038: a5 = u8 [a0 + 0xc]\n 13041: s1 = u8 [a0 + 0xe]\n 13044: a0 = u8 [a0 + 0xf]\n 13047: a4 = a4 << 0x8\n 13050: a4 = a4 | a5\n 13053: s1 = s1 << 0x10\n 13056: a0 = a0 << 0x18\n 13059: a0 = a0 | s1\n 13062: a0 = a0 | a4\n 13065: a0 = a0 << 0x20\n 13068: a0 = a0 | a1\n 13071: a1 = reverse a0\n 13073: a0 = reverse a3\n 13075: a2 = reverse a2\n 13077: a3 = reverse t0\n 13079: a2 = a2 | a3\n 13082: a3 = a0 | a1\n 13085: a3 = a3 | a2\n 13088: a3 = a3 >> 0x20\n 13091: a1 = a1 | a2\n 13094: a1 = a1 << 0x20\n 13097: a1 = a1 | a3\n 13100: jump @198 if a1 == 0\n      : @195 (gas: 1)\n 13103: trap\n      : @196 (gas: 3)\n 13104: a0 = 0\n 13106: a1 = 0\n 13108: ra = 166, jump @0\n      : @197 [@dyn 83] (gas: 5)\n 13114: i32 a1 = a0 + 0\n 13116: a0 = 0x1\n 13119: a2 = 0\n 13121: ecalli 11 // 'seal_return'\n 13123: fallthrough\n      : @198 (gas: 7)\n 13124: a1 = u64 [sp + 0x8]\n 13127: a1 = a1 << 0x20\n 13130: s1 = a1 >> 0x20\n 13133: i32 a0 = a0 + 0\n 13135: u64 [sp + 0x8] = a0\n 13138: a1 = 0x20\n 13141: ra = 168, jump @0\n      : @199 [@dyn 84] (gas: 58)\n 13147: a1 = reverse s1\n 13149: a2 = u64 [sp + 0x10]\n 13152: a2 = reverse a2\n 13154: a3 = u64 [sp + 0x18]\n 13157: a3 = reverse a3\n 13159: a4 = a3 >> 0x38\n 13162: u8 [a0 + 0x1f] = a4\n 13165: a4 = a3 >> 0x30\n 13168: u8 [a0 + 0x1e] = a4\n 13171: a4 = a3 >> 0x28\n 13174: u8 [a0 + 0x1d] = a4\n 13177: a4 = a3 >> 0x20\n 13180: u8 [a0 + 0x1c] = a4\n 13183: a4 = a3 >> 0x18\n 13186: u8 [a0 + 0x1b] = a4\n 13189: a4 = a3 >> 0x10\n 13192: u8 [a0 + 0x1a] = a4\n 13195: a4 = a3 >> 0x8\n 13198: u8 [a0 + 0x19] = a4\n 13201: u8 [a0 + 0x18] = a3\n 13204: u8 [a0 + 0x10] = a2\n 13207: u8 [a0 + 11] = 0\n 13210: u8 [a0 + 10] = 0\n 13213: u8 [a0 + 9] = 0\n 13216: u8 [a0 + 7] = 0\n 13219: u8 [a0 + 6] = 0\n 13222: u8 [a0 + 5] = 0\n 13225: u8 [a0 + 4] = 0\n 13228: u8 [a0 + 3] = 0\n 13231: u8 [a0 + 2] = 0\n 13234: u8 [a0 + 1] = 0\n 13237: u8 [a0 + 0] = 0\n 13239: a3 = a2 >> 0x38\n 13242: u8 [a0 + 0x17] = a3\n 13245: a3 = a2 >> 0x30\n 13248: u8 [a0 + 0x16] = a3\n 13251: a3 = a2 >> 0x28\n 13254: u8 [a0 + 0x15] = a3\n 13257: a3 = a2 >> 0x20\n 13260: u8 [a0 + 0x14] = a3\n 13263: a3 = a2 >> 0x18\n 13266: u8 [a0 + 0x13] = a3\n 13269: a3 = a2 >> 0x10\n 13272: u8 [a0 + 0x12] = a3\n 13275: a2 = a2 >> 0x8\n 13278: u8 [a0 + 0x11] = a2\n 13281: u8 [a0 + 0x8] = a1\n 13284: a2 = a1 >> 0x38\n 13287: u8 [a0 + 0xf] = a2\n 13290: a2 = a1 >> 0x30\n 13293: u8 [a0 + 0xe] = a2\n 13296: a2 = a1 >> 0x28\n 13299: u8 [a0 + 0xd] = a2\n 13302: a1 = a1 >> 0x20\n 13305: u8 [a0 + 0xc] = a1\n 13308: a1 = 0x20\n 13311: a0 = u64 [sp + 0x8]\n 13314: ra = 170, jump @0\n      : @200 [@dyn 85] (gas: 6)\n 13320: i32 a1 = a0 + 0\n 13322: a2 = 0x20\n 13325: a0 = 0\n 13327: ra = 0xac\n 13331: ecalli 11 // 'seal_return'\n 13333: fallthrough\n      : @201 [@dyn 86] (gas: 5)\n 13334: sp = sp + 0xfffffffffffffff8\n 13337: u64 [sp] = ra\n 13339: a0 = 0\n 13341: a1 = 0\n 13343: ra = 174, jump @0\n      : @202 [@dyn 87] (gas: 6)\n 13349: i32 a1 = a0 + 0\n 13351: a0 = 0x1\n 13354: a2 = 0\n 13356: ra = 0xb0\n 13360: ecalli 11 // 'seal_return'\n 13362: fallthrough\n      : @203 [@dyn 88] (gas: 9)\n 13363: a2 = u64 [a1 + 0x18]\n 13366: a3 = u64 [a1 + 0x10]\n 13369: a4 = u64 [a1 + 0x8]\n 13372: a1 = u64 [a1]\n 13374: u64 [a0 + 0x18] = a2\n 13377: u64 [a0 + 0x10] = a3\n 13380: u64 [a0 + 0x8] = a4\n 13383: u64 [a0] = a1\n 13385: ret\n      : @204 (gas: 9)\n 13387: sp = sp + 0xffffffffffffffc0\n 13390: u64 [sp + 0x38] = ra\n 13393: u64 [sp + 0x30] = s0\n 13396: u64 [sp + 0x28] = s1\n 13399: s0 = sp + 0x40\n 13402: sp = sp & 0xffffffffffffffe0\n 13405: a0 = 0x40\n 13408: a1 = 0x20\n 13411: ra = 178, jump @0\n      : @205 [@dyn 89] (gas: 97)\n 13417: a1 = u8 [a0 + 0x11]\n 13420: a2 = u8 [a0 + 0x10]\n 13423: a3 = u8 [a0 + 0x12]\n 13426: a4 = u8 [a0 + 0x13]\n 13429: a1 = a1 << 0x8\n 13432: a1 = a1 | a2\n 13435: a3 = a3 << 0x10\n 13438: a4 = a4 << 0x18\n 13441: a3 = a3 | a4\n 13444: a1 = a1 | a3\n 13447: a2 = u8 [a0 + 0x15]\n 13450: a3 = u8 [a0 + 0x14]\n 13453: a4 = u8 [a0 + 0x16]\n 13456: a5 = u8 [a0 + 0x17]\n 13459: a2 = a2 << 0x8\n 13462: a2 = a2 | a3\n 13465: a4 = a4 << 0x10\n 13468: a5 = a5 << 0x18\n 13471: a4 = a4 | a5\n 13474: a2 = a2 | a4\n 13477: a2 = a2 << 0x20\n 13480: t0 = a2 | a1\n 13483: a2 = u8 [a0 + 0x1]\n 13486: a3 = u8 [a0]\n 13488: a4 = u8 [a0 + 0x2]\n 13491: a5 = u8 [a0 + 0x3]\n 13494: a2 = a2 << 0x8\n 13497: a2 = a2 | a3\n 13500: a4 = a4 << 0x10\n 13503: a5 = a5 << 0x18\n 13506: a4 = a4 | a5\n 13509: a2 = a2 | a4\n 13512: a3 = u8 [a0 + 0x5]\n 13515: a4 = u8 [a0 + 0x4]\n 13518: a5 = u8 [a0 + 0x6]\n 13521: s1 = u8 [a0 + 0x7]\n 13524: a3 = a3 << 0x8\n 13527: a3 = a3 | a4\n 13530: a5 = a5 << 0x10\n 13533: s1 = s1 << 0x18\n 13536: a5 = a5 | s1\n 13539: a3 = a3 | a5\n 13542: a3 = a3 << 0x20\n 13545: a2 = a2 | a3\n 13548: a3 = u8 [a0 + 0x19]\n 13551: a4 = u8 [a0 + 0x18]\n 13554: a5 = u8 [a0 + 0x1a]\n 13557: s1 = u8 [a0 + 0x1b]\n 13560: a3 = a3 << 0x8\n 13563: a3 = a3 | a4\n 13566: a5 = a5 << 0x10\n 13569: s1 = s1 << 0x18\n 13572: a5 = a5 | s1\n 13575: a3 = a3 | a5\n 13578: a4 = u8 [a0 + 0x1d]\n 13581: a5 = u8 [a0 + 0x1c]\n 13584: s1 = u8 [a0 + 0x1e]\n 13587: a1 = u8 [a0 + 0x1f]\n 13590: a4 = a4 << 0x8\n 13593: a4 = a4 | a5\n 13596: s1 = s1 << 0x10\n 13599: a1 = a1 << 0x18\n 13602: a1 = a1 | s1\n 13605: a1 = a1 | a4\n 13608: a1 = a1 << 0x20\n 13611: a3 = a3 | a1\n 13614: a1 = u8 [a0 + 0x9]\n 13617: a4 = u8 [a0 + 0x8]\n 13620: a5 = u8 [a0 + 0xa]\n 13623: s1 = u8 [a0 + 0xb]\n 13626: a1 = a1 << 0x8\n 13629: a1 = a1 | a4\n 13632: a5 = a5 << 0x10\n 13635: s1 = s1 << 0x18\n 13638: a5 = a5 | s1\n 13641: a1 = a1 | a5\n 13644: a4 = u8 [a0 + 0xd]\n 13647: a5 = u8 [a0 + 0xc]\n 13650: s1 = u8 [a0 + 0xe]\n 13653: a0 = u8 [a0 + 0xf]\n 13656: a4 = a4 << 0x8\n 13659: a4 = a4 | a5\n 13662: s1 = s1 << 0x10\n 13665: a0 = a0 << 0x18\n 13668: a0 = a0 | s1\n 13671: a0 = a0 | a4\n 13674: a0 = a0 << 0x20\n 13677: a0 = a0 | a1\n 13680: s1 = reverse a0\n 13682: a0 = reverse a3\n 13684: u64 [sp + 0x8] = a0\n 13687: a0 = reverse a2\n 13689: u64 [sp + 0x18] = a0\n 13692: a0 = reverse t0\n 13694: u64 [sp + 0x10] = a0\n 13697: ecalli 10 // 'return_data_size'\n 13699: fallthrough\n      : @206 (gas: 11)\n 13700: a3 = u64 [sp + 0x8]\n 13703: a1 = u64 [sp + 0x18]\n 13706: a2 = u64 [sp + 0x10]\n 13709: a1 = a1 | a2\n 13712: a2 = a3 | s1\n 13715: a2 = a2 | a1\n 13718: a2 = a2 >> 0x20\n 13721: a1 = a1 | s1\n 13724: a1 = a1 << 0x20\n 13727: a1 = a1 | a2\n 13730: jump @213 if a1 != 0\n      : @207 (gas: 3)\n 13733: s1 = a0\n 13735: a0 = a0 >> 0x20\n 13738: jump @213 if a0 != 0\n      : @208 (gas: 5)\n 13741: i32 a0 = a3 + 0\n 13743: i32 a1 = s1 + 0\n 13745: u64 [sp + 0x18] = a1\n 13748: u64 [sp + 0x10] = a0\n 13751: ra = 180, jump @0\n      : @209 [@dyn 90] (gas: 6)\n 13757: u32 [sp + 0x20] = s1\n 13760: i32 a0 = a0 + 0\n 13762: i32 a1 = sp + 0x20\n 13765: a2 = 0\n 13767: ecalli 9 // 'return_data_copy'\n 13769: fallthrough\n      : @210 (gas: 3)\n 13770: a0 = i32 [sp + 0x20]\n 13773: a1 = u64 [sp + 0x18]\n 13776: jump @213 if a0 <u a1\n      : @211 (gas: 2)\n 13779: ecalli 10 // 'return_data_size'\n 13781: fallthrough\n      : @212 (gas: 2)\n 13782: a1 = a0 >> 0x20\n 13785: jump @214 if a1 == 0\n      : @213 (gas: 1)\n 13788: trap\n      : @214 (gas: 4)\n 13789: i32 s1 = a0 + 0\n 13791: a0 = u64 [sp + 0x10]\n 13794: a1 = s1\n 13796: ra = 182, jump @0\n      : @215 [@dyn 91] (gas: 6)\n 13802: i32 a1 = a0 + 0\n 13804: a0 = 0x1\n 13807: a2 = s1\n 13809: ra = 0xb8\n 13813: ecalli 11 // 'seal_return'\n 13815: fallthrough\n      : @216 [@dyn 92] (gas: 9)\n 13816: a2 = u64 [a1 + 0x18]\n 13819: a3 = u64 [a1 + 0x10]\n 13822: a4 = u64 [a1 + 0x8]\n 13825: a1 = u64 [a1]\n 13827: u64 [a0 + 0x18] = a2\n 13830: u64 [a0 + 0x10] = a3\n 13833: u64 [a0 + 0x8] = a4\n 13836: u64 [a0] = a1\n 13838: ret\n      : @217 [@dyn 93] (gas: 102)\n 13840: a1 = u8 [a0 + 0x11]\n 13843: a2 = u8 [a0 + 0x10]\n 13846: a3 = u8 [a0 + 0x12]\n 13849: a4 = u8 [a0 + 0x13]\n 13852: a1 = a1 << 0x8\n 13855: a1 = a1 | a2\n 13858: a3 = a3 << 0x10\n 13861: a4 = a4 << 0x18\n 13864: a3 = a3 | a4\n 13867: a1 = a1 | a3\n 13870: a2 = u8 [a0 + 0x15]\n 13873: a3 = u8 [a0 + 0x14]\n 13876: a4 = u8 [a0 + 0x16]\n 13879: a5 = u8 [a0 + 0x17]\n 13882: a2 = a2 << 0x8\n 13885: a2 = a2 | a3\n 13888: a4 = a4 << 0x10\n 13891: a5 = a5 << 0x18\n 13894: a4 = a4 | a5\n 13897: a2 = a2 | a4\n 13900: a2 = a2 << 0x20\n 13903: t0 = a2 | a1\n 13906: a2 = u8 [a0 + 0x1]\n 13909: a3 = u8 [a0]\n 13911: a4 = u8 [a0 + 0x2]\n 13914: a5 = u8 [a0 + 0x3]\n 13917: a2 = a2 << 0x8\n 13920: a2 = a2 | a3\n 13923: a4 = a4 << 0x10\n 13926: a5 = a5 << 0x18\n 13929: a4 = a4 | a5\n 13932: a2 = a2 | a4\n 13935: a3 = u8 [a0 + 0x5]\n 13938: a4 = u8 [a0 + 0x4]\n 13941: a5 = u8 [a0 + 0x6]\n 13944: s1 = u8 [a0 + 0x7]\n 13947: a3 = a3 << 0x8\n 13950: a3 = a3 | a4\n 13953: a5 = a5 << 0x10\n 13956: s1 = s1 << 0x18\n 13959: a5 = a5 | s1\n 13962: a3 = a3 | a5\n 13965: a3 = a3 << 0x20\n 13968: a2 = a2 | a3\n 13971: a3 = u8 [a0 + 0x19]\n 13974: a4 = u8 [a0 + 0x18]\n 13977: a5 = u8 [a0 + 0x1a]\n 13980: s1 = u8 [a0 + 0x1b]\n 13983: a3 = a3 << 0x8\n 13986: a3 = a3 | a4\n 13989: a5 = a5 << 0x10\n 13992: s1 = s1 << 0x18\n 13995: a5 = a5 | s1\n 13998: a3 = a3 | a5\n 14001: a4 = u8 [a0 + 0x1d]\n 14004: a5 = u8 [a0 + 0x1c]\n 14007: s1 = u8 [a0 + 0x1e]\n 14010: a1 = u8 [a0 + 0x1f]\n 14013: a4 = a4 << 0x8\n 14016: a4 = a4 | a5\n 14019: s1 = s1 << 0x10\n 14022: a1 = a1 << 0x18\n 14025: a1 = a1 | s1\n 14028: a1 = a1 | a4\n 14031: a1 = a1 << 0x20\n 14034: a3 = a3 | a1\n 14037: a1 = u8 [a0 + 0x9]\n 14040: a4 = u8 [a0 + 0x8]\n 14043: a5 = u8 [a0 + 0xa]\n 14046: s1 = u8 [a0 + 0xb]\n 14049: a1 = a1 << 0x8\n 14052: a1 = a1 | a4\n 14055: a5 = a5 << 0x10\n 14058: s1 = s1 << 0x18\n 14061: a5 = a5 | s1\n 14064: a1 = a1 | a5\n 14067: a4 = u8 [a0 + 0xd]\n 14070: a5 = u8 [a0 + 0xc]\n 14073: s1 = u8 [a0 + 0xe]\n 14076: a0 = u8 [a0 + 0xf]\n 14079: a4 = a4 << 0x8\n 14082: a4 = a4 | a5\n 14085: s1 = s1 << 0x10\n 14088: a0 = a0 << 0x18\n 14091: a0 = a0 | s1\n 14094: a0 = a0 | a4\n 14097: a0 = a0 << 0x20\n 14100: a0 = a0 | a1\n 14103: s1 = reverse a0\n 14105: a3 = reverse a3\n 14107: a1 = reverse a2\n 14109: a0 = reverse t0\n 14111: u64 [sp + 0x1b8] = a0\n 14115: u64 [sp + 0x1a0] = a1\n 14119: a0 = a0 | a1\n 14122: a1 = a3 | s1\n 14125: a1 = a1 | a0\n 14128: a1 = a1 >> 0x20\n 14131: a0 = a0 | s1\n 14134: a0 = a0 << 0x20\n 14137: a0 = a0 | a1\n 14140: jump @219 if a0 == 0\n      : @218 (gas: 1)\n 14143: jump @376\n      : @219 (gas: 5)\n 14146: i32 a0 = a3 + 0\n 14148: a1 = 0x20\n 14151: u64 [sp + 0x1a8] = a0\n 14155: u64 [sp + 0x1b0] = a3\n 14159: ra = 188, jump @0\n      : @220 [@dyn 94] (gas: 45)\n 14165: u8 [a0 + 31] = 0\n 14168: u8 [a0 + 30] = 0\n 14171: u8 [a0 + 29] = 0\n 14174: u8 [a0 + 28] = 0\n 14177: u8 [a0 + 27] = 0\n 14180: u8 [a0 + 26] = 0\n 14183: u8 [a0 + 25] = 0\n 14186: u8 [a0 + 24] = 0\n 14189: u8 [a0 + 23] = 0\n 14192: u8 [a0 + 22] = 0\n 14195: u8 [a0 + 21] = 0\n 14198: u8 [a0 + 20] = 0\n 14201: u8 [a0 + 19] = 0\n 14204: u8 [a0 + 18] = 0\n 14207: u8 [a0 + 17] = 0\n 14210: u8 [a0 + 16] = 0\n 14213: u8 [a0 + 15] = 0\n 14216: u8 [a0 + 14] = 0\n 14219: u8 [a0 + 13] = 0\n 14222: u8 [a0 + 12] = 0\n 14225: u8 [a0 + 11] = 0\n 14228: u8 [a0 + 10] = 0\n 14231: u8 [a0 + 9] = 0\n 14234: u8 [a0 + 8] = 0\n 14237: u8 [a0 + 7] = 0\n 14240: u8 [a0 + 6] = 0\n 14243: u8 [a0 + 5] = 0\n 14246: u8 [a0 + 3] = 0xe1\n 14251: u8 [a0 + 2] = 0xf3\n 14256: u8 [a0 + 1] = 0xb3\n 14261: u8 [a0 + 0] = 0xa0\n 14265: u64 [sp + 0x100] = s1\n 14269: a3 = u64 [sp + 0x1a0]\n 14273: a3 = a3 | s1\n 14276: a1 = 0x100000000\n 14286: u64 [sp + 0x148] = a1\n 14290: a1 = 0xfffffffc\n 14300: a2 = u64 [sp + 0x1b0]\n 14304: a1 = a2 <u a1\n 14307: a2 = u64 [sp + 0x1b8]\n 14311: a1 = 0 if a2 != 0\n 14313: u64 [sp + 0x150] = a3\n 14317: a1 = 0 if a3 != 0\n 14319: u8 [a0 + 4] = 0\n 14322: jump @222 if a1 != 0\n      : @221 (gas: 1)\n 14325: jump @376\n      : @222 (gas: 19)\n 14328: a0 = u64 [sp + 0x188]\n 14332: a0 = reverse a0\n 14334: a1 = a0 >> 0x20\n 14337: a2 = u64 [sp + 0x190]\n 14341: a2 = reverse a2\n 14343: a3 = a2 << 0x20\n 14346: a1 = a1 | a3\n 14349: u64 [sp + 0x190] = a1\n 14353: a0 = a0 << 0x20\n 14356: a1 = u64 [sp + 0x198]\n 14360: a1 = reverse a1\n 14362: a1 = a1 >> 0x20\n 14365: a0 = a0 | a1\n 14368: u64 [sp + 0x198] = a0\n 14372: s1 = a2 >> 0x20\n 14375: a0 = u64 [sp + 0x1a8]\n 14379: i32 a0 = a0 + 0x4\n 14382: a1 = 0x20\n 14385: ra = 190, jump @0\n      : @223 [@dyn 95] (gas: 64)\n 14391: a1 = reverse s1\n 14393: a2 = u64 [sp + 0x190]\n 14397: a2 = reverse a2\n 14399: a3 = u64 [sp + 0x198]\n 14403: a3 = reverse a3\n 14405: a4 = a3 >> 0x38\n 14408: u8 [a0 + 0x1f] = a4\n 14411: a4 = a3 >> 0x30\n 14414: u8 [a0 + 0x1e] = a4\n 14417: a4 = a3 >> 0x28\n 14420: u8 [a0 + 0x1d] = a4\n 14423: a4 = a3 >> 0x20\n 14426: u8 [a0 + 0x1c] = a4\n 14429: a4 = a3 >> 0x18\n 14432: u8 [a0 + 0x1b] = a4\n 14435: a4 = a3 >> 0x10\n 14438: u8 [a0 + 0x1a] = a4\n 14441: a4 = a3 >> 0x8\n 14444: u8 [a0 + 0x19] = a4\n 14447: u8 [a0 + 0x18] = a3\n 14450: u8 [a0 + 0x10] = a2\n 14453: u8 [a0 + 11] = 0\n 14456: u8 [a0 + 10] = 0\n 14459: u8 [a0 + 9] = 0\n 14462: u8 [a0 + 7] = 0\n 14465: u8 [a0 + 6] = 0\n 14468: u8 [a0 + 5] = 0\n 14471: u8 [a0 + 4] = 0\n 14474: u8 [a0 + 3] = 0\n 14477: u8 [a0 + 2] = 0\n 14480: u8 [a0 + 1] = 0\n 14483: u8 [a0 + 0] = 0\n 14485: a3 = a2 >> 0x38\n 14488: u8 [a0 + 0x17] = a3\n 14491: a3 = a2 >> 0x30\n 14494: u8 [a0 + 0x16] = a3\n 14497: a3 = a2 >> 0x28\n 14500: u8 [a0 + 0x15] = a3\n 14503: a3 = a2 >> 0x20\n 14506: u8 [a0 + 0x14] = a3\n 14509: a3 = a2 >> 0x18\n 14512: u8 [a0 + 0x13] = a3\n 14515: a3 = a2 >> 0x10\n 14518: u8 [a0 + 0x12] = a3\n 14521: a2 = a2 >> 0x8\n 14524: u8 [a0 + 0x11] = a2\n 14527: u8 [a0 + 0x8] = a1\n 14530: a2 = a1 >> 0x38\n 14533: u8 [a0 + 0xf] = a2\n 14536: a2 = a1 >> 0x30\n 14539: u8 [a0 + 0xe] = a2\n 14542: a2 = a1 >> 0x28\n 14545: u8 [a0 + 0xd] = a2\n 14548: a1 = a1 >> 0x20\n 14551: a2 = u64 [sp + 0x148]\n 14555: a2 = a2 + 0xffffffffffffffdc\n 14558: a3 = u64 [sp + 0x1b0]\n 14562: a2 = a3 <u a2\n 14565: a3 = u64 [sp + 0x1b8]\n 14569: a2 = 0 if a3 != 0\n 14571: a3 = u64 [sp + 0x150]\n 14575: a2 = 0 if a3 != 0\n 14577: u8 [a0 + 0xc] = a1\n 14580: jump @225 if a2 != 0\n      : @224 (gas: 1)\n 14583: jump @376\n      : @225 (gas: 6)\n 14586: a0 = 0x4400000000\n 14596: u64 [sp + 0x120] = a0\n 14600: s1 = u64 [sp + 0x1a8]\n 14604: i32 a0 = s1 + 0x24\n 14607: a1 = 0x20\n 14610: ra = 192, jump @0\n      : @226 [@dyn 96] (gas: 80)\n 14616: a1 = u64 [sp + 0x158]\n 14620: a1 = reverse a1\n 14622: a2 = u64 [sp + 0x160]\n 14626: a2 = reverse a2\n 14628: a3 = u64 [sp + 0x168]\n 14632: a3 = reverse a3\n 14634: a4 = a3 >> 0x38\n 14637: u8 [a0 + 0x1f] = a4\n 14640: a4 = a3 >> 0x30\n 14643: u8 [a0 + 0x1e] = a4\n 14646: a4 = a3 >> 0x28\n 14649: u8 [a0 + 0x1d] = a4\n 14652: a4 = a3 >> 0x20\n 14655: u8 [a0 + 0x1c] = a4\n 14658: a4 = a3 >> 0x18\n 14661: u8 [a0 + 0x1b] = a4\n 14664: a4 = a3 >> 0x10\n 14667: u8 [a0 + 0x1a] = a4\n 14670: a4 = a3 >> 0x8\n 14673: u8 [a0 + 0x19] = a4\n 14676: u8 [a0 + 0x18] = a3\n 14679: u8 [a0 + 0x10] = a2\n 14682: u8 [a0 + 11] = 0\n 14685: u8 [a0 + 10] = 0\n 14688: u8 [a0 + 9] = 0\n 14691: u8 [a0 + 7] = 0\n 14694: u8 [a0 + 6] = 0\n 14697: u8 [a0 + 5] = 0\n 14700: u8 [a0 + 4] = 0\n 14703: u8 [a0 + 3] = 0\n 14706: u8 [a0 + 2] = 0\n 14709: u8 [a0 + 1] = 0\n 14712: u8 [a0 + 0] = 0\n 14714: a3 = a2 >> 0x38\n 14717: u8 [a0 + 0x17] = a3\n 14720: a3 = a2 >> 0x30\n 14723: u8 [a0 + 0x16] = a3\n 14726: a3 = a2 >> 0x28\n 14729: u8 [a0 + 0x15] = a3\n 14732: a3 = a2 >> 0x20\n 14735: u8 [a0 + 0x14] = a3\n 14738: a3 = a2 >> 0x18\n 14741: u8 [a0 + 0x13] = a3\n 14744: a3 = a2 >> 0x10\n 14747: u8 [a0 + 0x12] = a3\n 14750: a2 = a2 >> 0x8\n 14753: u8 [a0 + 0x11] = a2\n 14756: u8 [a0 + 0x8] = a1\n 14759: a2 = a1 >> 0x38\n 14762: u8 [a0 + 0xf] = a2\n 14765: a2 = a1 >> 0x30\n 14768: u8 [a0 + 0xe] = a2\n 14771: a2 = a1 >> 0x28\n 14774: u8 [a0 + 0xd] = a2\n 14777: a1 = a1 >> 0x20\n 14780: u8 [a0 + 0xc] = a1\n 14783: ecalli 8 // 'ref_time_left'\n 14785: a0 = u64 [sp + 0x170]\n 14789: a0 = reverse a0\n 14791: a1 = a0 << 0x20\n 14794: a2 = u64 [sp + 0x178]\n 14798: a2 = reverse a2\n 14800: a2 = a2 >> 0x20\n 14803: a1 = a1 | a2\n 14806: a2 = u64 [sp + 0x180]\n 14810: a2 = reverse a2\n 14812: a3 = a2 << 0x20\n 14815: a0 = a0 >> 0x20\n 14818: a0 = a0 | a3\n 14821: a2 = a2 >> 0x20\n 14824: u64 [sp + 0x528] = a0\n 14828: u64 [sp + 0x520] = a1\n 14832: u32 [sp + 0x530] = a2\n 14836: u64 [sp + 1368] = 0\n 14840: u64 [sp + 1360] = 0\n 14844: u64 [sp + 1352] = 0\n 14848: u64 [sp + 1344] = 0\n 14852: a1 = 0x44\n 14855: a0 = s1\n 14857: ra = 194, jump @0\n      : @227 [@dyn 97] (gas: 4)\n 14863: u64 [sp + 0x198] = a0\n 14867: a1 = 0x20\n 14870: a0 = s1\n 14872: ra = 196, jump @0\n      : @228 [@dyn 98] (gas: 31)\n 14878: u32 [sp + 1376] = 0x20\n 14883: u64 [sp + 1432] = 0\n 14887: u64 [sp + 1424] = 0\n 14891: u64 [sp + 1416] = 0\n 14895: u64 [sp + 1408] = 0\n 14899: a1 = sp + 0x520\n 14903: a1 = a1 << 0x20\n 14906: a1 = a1 >> 0x20\n 14909: a2 = 0x1800000000\n 14919: s1 = a1 | a2\n 14922: a1 = sp + 0x540\n 14926: a1 = a1 << 0x20\n 14929: a1 = a1 >> 0x20\n 14932: a2 = sp + 0x580\n 14936: a2 = a2 << 0x20\n 14939: a3 = a2 | a1\n 14942: a1 = u64 [sp + 0x198]\n 14946: a1 = a1 << 0x20\n 14949: a1 = a1 >> 0x20\n 14952: a4 = u64 [sp + 0x120]\n 14956: a4 = a4 | a1\n 14959: a0 = a0 << 0x20\n 14962: a0 = a0 >> 0x20\n 14965: a1 = sp + 0x560\n 14969: a1 = a1 << 0x20\n 14972: a5 = a1 | a0\n 14975: a1 = 0xffffffffffffffff\n 14978: a2 = 0xffffffffffffffff\n 14981: a0 = s1\n 14983: ecalli 1 // 'call'\n 14985: fallthrough\n      : @229 (gas: 1)\n 14986: jump @231 if a0 == 0\n      : @230 (gas: 1)\n 14989: jump @377\n      : @231 (gas: 2)\n 14992: ecalli 10 // 'return_data_size'\n 14994: fallthrough\n      : @232 (gas: 2)\n 14995: a1 = 0x20\n 14998: jump @234 if a0 >=u a1\n      : @233 (gas: 3)\n 15001: ecalli 10 // 'return_data_size'\n 15003: a1 = a0\n 15005: fallthrough\n      : @234 (gas: 28)\n 15006: a4 = 0\n 15008: a3 = u64 [sp + 0x1a0]\n 15012: a2 = u64 [sp + 0x1b0]\n 15016: s1 = u64 [sp + 0x1b8]\n 15020: a0 = a1 + 0x1f\n 15023: u64 [sp + 0x1b0] = a1\n 15027: a1 = a0 <u a1\n 15030: u64 [sp + 440] = 0\n 15034: a1 = a1 & 0x1\n 15037: a0 = a0 & 0xffffffffffffffe0\n 15040: a2 = a2 + a0\n 15043: u64 [sp + 0x1a0] = a2\n 15047: a0 = a2 <u a0\n 15050: s1 = s1 + a1\n 15053: s1 = s1 + a0\n 15056: a2 = s1 ^ a1\n 15059: a1 = s1 <u a1\n 15062: a1 = a0 if a2 == 0\n 15065: a0 = u64 [sp + 0x100]\n 15069: a1 = a1 + a0\n 15072: a0 = a1 <u a0\n 15075: a0 = a0 + a3\n 15078: u64 [sp + 0x198] = a1\n 15082: u64 [sp + 0x190] = a0\n 15086: a0 = a0 | a1\n 15089: a1 = s1 <u 0x1\n 15092: a1 = 0 if a0 != 0\n 15094: jump @236 if a1 != 0\n      : @235 (gas: 1)\n 15097: jump @380\n      : @236 (gas: 3)\n 15100: a0 = 0x40\n 15103: a1 = 0x20\n 15106: ra = 198, jump @0\n      : @237 [@dyn 99] (gas: 79)\n 15112: a1 = u64 [sp + 0x190]\n 15116: a1 = reverse a1\n 15118: a2 = u64 [sp + 0x198]\n 15122: a2 = reverse a2\n 15124: a3 = reverse s1\n 15126: a4 = u64 [sp + 0x1a0]\n 15130: a4 = reverse a4\n 15132: u8 [a0 + 0x18] = a4\n 15135: a5 = a4 >> 0x38\n 15138: u8 [a0 + 0x1f] = a5\n 15141: a5 = a4 >> 0x30\n 15144: u8 [a0 + 0x1e] = a5\n 15147: a5 = a4 >> 0x28\n 15150: u8 [a0 + 0x1d] = a5\n 15153: a5 = a4 >> 0x20\n 15156: u8 [a0 + 0x1c] = a5\n 15159: a5 = a4 >> 0x18\n 15162: u8 [a0 + 0x1b] = a5\n 15165: a5 = a4 >> 0x10\n 15168: u8 [a0 + 0x1a] = a5\n 15171: a4 = a4 >> 0x8\n 15174: u8 [a0 + 0x19] = a4\n 15177: u8 [a0 + 0x10] = a3\n 15180: a4 = a3 >> 0x38\n 15183: u8 [a0 + 0x17] = a4\n 15186: a4 = a3 >> 0x30\n 15189: u8 [a0 + 0x16] = a4\n 15192: a4 = a3 >> 0x28\n 15195: u8 [a0 + 0x15] = a4\n 15198: a4 = a3 >> 0x20\n 15201: u8 [a0 + 0x14] = a4\n 15204: a4 = a3 >> 0x18\n 15207: u8 [a0 + 0x13] = a4\n 15210: a4 = a3 >> 0x10\n 15213: u8 [a0 + 0x12] = a4\n 15216: a3 = a3 >> 0x8\n 15219: u8 [a0 + 0x11] = a3\n 15222: u8 [a0 + 0x8] = a2\n 15225: a3 = a2 >> 0x38\n 15228: u8 [a0 + 0xf] = a3\n 15231: a3 = a2 >> 0x30\n 15234: u8 [a0 + 0xe] = a3\n 15237: a3 = a2 >> 0x28\n 15240: u8 [a0 + 0xd] = a3\n 15243: a3 = a2 >> 0x20\n 15246: u8 [a0 + 0xc] = a3\n 15249: a3 = a2 >> 0x18\n 15252: u8 [a0 + 0xb] = a3\n 15255: a3 = a2 >> 0x10\n 15258: u8 [a0 + 0xa] = a3\n 15261: a2 = a2 >> 0x8\n 15264: u8 [a0 + 0x9] = a2\n 15267: u8 [a0] = a1\n 15269: a2 = a1 >> 0x38\n 15272: u8 [a0 + 0x7] = a2\n 15275: a2 = a1 >> 0x30\n 15278: u8 [a0 + 0x6] = a2\n 15281: a2 = a1 >> 0x28\n 15284: u8 [a0 + 0x5] = a2\n 15287: a2 = a1 >> 0x20\n 15290: u8 [a0 + 0x4] = a2\n 15293: a2 = a1 >> 0x18\n 15296: u8 [a0 + 0x3] = a2\n 15299: a2 = a1 >> 0x10\n 15302: u8 [a0 + 0x2] = a2\n 15305: a1 = a1 >> 0x8\n 15308: a5 = u64 [sp + 0x1b8]\n 15312: a2 = a5 >u 0\n 15314: a3 = u64 [sp + 0x1b0]\n 15318: a3 = a3 <u 0x20\n 15321: a3 = a3 ^ 0x1\n 15324: a3 = a2 if a5 != 0\n 15327: a2 = a5 >u 0\n 15329: a4 = a5 >u 0\n 15331: a4 = a2 if a5 == 0\n 15334: a2 = a5 | a5\n 15337: a4 = a3 if a2 == 0\n 15340: u8 [a0 + 0x1] = a1\n 15343: jump @239 if a4 != 0\n      : @238 (gas: 1)\n 15346: jump @378\n      : @239 (gas: 3)\n 15349: a1 = 0x20\n 15352: a0 = u64 [sp + 0x1a8]\n 15356: ra = 200, jump @0\n      : @240 [@dyn 100] (gas: 83)\n 15362: a1 = u8 [a0 + 0x18]\n 15365: u64 [sp + 0x80] = a1\n 15369: a1 = u8 [a0 + 0x19]\n 15372: u64 [sp + 0x60] = a1\n 15375: a1 = u8 [a0 + 0x1a]\n 15378: u64 [sp + 0x70] = a1\n 15381: a1 = u8 [a0 + 0x1b]\n 15384: u64 [sp + 0x68] = a1\n 15387: a1 = u8 [a0 + 0x1c]\n 15390: u64 [sp + 0x98] = a1\n 15394: a1 = u8 [a0 + 0x1d]\n 15397: u64 [sp + 0x78] = a1\n 15400: a1 = u8 [a0 + 0x1e]\n 15403: u64 [sp + 0x90] = a1\n 15407: a1 = u8 [a0 + 0x1f]\n 15410: u64 [sp + 0x88] = a1\n 15414: a1 = u8 [a0 + 0x10]\n 15417: u64 [sp + 0xc0] = a1\n 15421: a1 = u8 [a0 + 0x11]\n 15424: u64 [sp + 0xa0] = a1\n 15428: a1 = u8 [a0 + 0x12]\n 15431: u64 [sp + 0xb0] = a1\n 15435: a1 = u8 [a0 + 0x13]\n 15438: u64 [sp + 0xa8] = a1\n 15442: a1 = u8 [a0 + 0x14]\n 15445: u64 [sp + 0xd8] = a1\n 15449: a1 = u8 [a0 + 0x15]\n 15452: u64 [sp + 0xb8] = a1\n 15456: a1 = u8 [a0 + 0x16]\n 15459: u64 [sp + 0xd0] = a1\n 15463: a1 = u8 [a0 + 0x17]\n 15466: u64 [sp + 0xc8] = a1\n 15470: a1 = u8 [a0 + 0x8]\n 15473: u64 [sp + 0x160] = a1\n 15477: a1 = u8 [a0 + 0x9]\n 15480: u64 [sp + 0xe0] = a1\n 15484: a1 = u8 [a0 + 0xa]\n 15487: u64 [sp + 0x150] = a1\n 15491: a1 = u8 [a0 + 0xb]\n 15494: u64 [sp + 0x148] = a1\n 15498: a1 = u8 [a0 + 0xc]\n 15501: u64 [sp + 0x178] = a1\n 15505: a1 = u8 [a0 + 0xd]\n 15508: u64 [sp + 0x158] = a1\n 15512: a1 = u8 [a0 + 0xe]\n 15515: u64 [sp + 0x170] = a1\n 15519: a1 = u8 [a0 + 0xf]\n 15522: u64 [sp + 0x168] = a1\n 15526: a1 = u8 [a0]\n 15528: u64 [sp + 0x1a0] = a1\n 15532: a1 = u8 [a0 + 0x1]\n 15535: u64 [sp + 0x180] = a1\n 15539: a1 = u8 [a0 + 0x2]\n 15542: u64 [sp + 0x190] = a1\n 15546: a1 = u8 [a0 + 0x3]\n 15549: u64 [sp + 0x188] = a1\n 15553: a1 = u8 [a0 + 0x4]\n 15556: u64 [sp + 0x1b8] = a1\n 15560: a1 = u8 [a0 + 0x5]\n 15563: u64 [sp + 0x198] = a1\n 15567: a1 = u8 [a0 + 0x6]\n 15570: u64 [sp + 0x1b0] = a1\n 15574: a0 = u8 [a0 + 0x7]\n 15577: u64 [sp + 0x1a8] = a0\n 15581: i32 a0 = sp + 0x5a0\n 15585: ecalli 5 // 'caller'\n 15587: a0 = u64 [sp + 0x5a8]\n 15591: a1 = i32 [sp + 0x5b0]\n 15595: s1 = u64 [sp + 0x5a0]\n 15599: a0 = reverse a0\n 15601: a2 = a0 << 0x20\n 15604: a1 = reverse a1\n 15606: a1 = a1 >> 0x20\n 15609: a1 = a1 | a2\n 15612: u64 [sp + 0x100] = a1\n 15616: a0 = a0 >> 0x20\n 15619: a1 = reverse s1\n 15621: a1 = a1 << 0x20\n 15624: a0 = a0 | a1\n 15627: u64 [sp + 0xf8] = a0\n 15631: a1 = 0x20\n 15634: a0 = 0\n 15636: ra = 202, jump @0\n      : @241 [@dyn 101] (gas: 56)\n 15642: a1 = u64 [sp + 0xf8]\n 15646: a1 = reverse a1\n 15648: a2 = u64 [sp + 0x100]\n 15652: a2 = reverse a2\n 15654: a3 = s1 >> 0x18\n 15657: u8 [a0 + 0xf] = a3\n 15660: a3 = s1 >> 0x10\n 15663: u8 [a0 + 0xe] = a3\n 15666: a3 = s1 >> 0x8\n 15669: u8 [a0 + 0xd] = a3\n 15672: u8 [a0 + 0xc] = s1\n 15675: u8 [a0 + 11] = 0\n 15678: u8 [a0 + 10] = 0\n 15681: u8 [a0 + 9] = 0\n 15684: u8 [a0 + 8] = 0\n 15687: u8 [a0 + 7] = 0\n 15690: u8 [a0 + 6] = 0\n 15693: u8 [a0 + 5] = 0\n 15696: u8 [a0 + 4] = 0\n 15699: u8 [a0 + 3] = 0\n 15702: u8 [a0 + 2] = 0\n 15705: u8 [a0 + 1] = 0\n 15708: u8 [a0 + 0] = 0\n 15710: u8 [a0 + 0x18] = a2\n 15713: u8 [a0 + 0x10] = a1\n 15716: a3 = a2 >> 0x38\n 15719: u8 [a0 + 0x1f] = a3\n 15722: a3 = a2 >> 0x30\n 15725: u8 [a0 + 0x1e] = a3\n 15728: a3 = a2 >> 0x28\n 15731: u8 [a0 + 0x1d] = a3\n 15734: a3 = a2 >> 0x20\n 15737: u8 [a0 + 0x1c] = a3\n 15740: a3 = a2 >> 0x18\n 15743: u8 [a0 + 0x1b] = a3\n 15746: a3 = a2 >> 0x10\n 15749: u8 [a0 + 0x1a] = a3\n 15752: a2 = a2 >> 0x8\n 15755: u8 [a0 + 0x19] = a2\n 15758: a2 = a1 >> 0x38\n 15761: u8 [a0 + 0x17] = a2\n 15764: a2 = a1 >> 0x30\n 15767: u8 [a0 + 0x16] = a2\n 15770: a2 = a1 >> 0x28\n 15773: u8 [a0 + 0x15] = a2\n 15776: a2 = a1 >> 0x20\n 15779: u8 [a0 + 0x14] = a2\n 15782: a2 = a1 >> 0x18\n 15785: u8 [a0 + 0x13] = a2\n 15788: a2 = a1 >> 0x10\n 15791: u8 [a0 + 0x12] = a2\n 15794: a1 = a1 >> 0x8\n 15797: u8 [a0 + 0x11] = a1\n 15800: a0 = 0x20\n 15803: a1 = 0x20\n 15806: ra = 204, jump @0\n      : @242 [@dyn 102] (gas: 35)\n 15812: u8 [a0 + 31] = 0x4\n 15816: u8 [a0 + 30] = 0\n 15819: u8 [a0 + 29] = 0\n 15822: u8 [a0 + 28] = 0\n 15825: u8 [a0 + 27] = 0\n 15828: u8 [a0 + 26] = 0\n 15831: u8 [a0 + 25] = 0\n 15834: u8 [a0 + 24] = 0\n 15837: u8 [a0 + 23] = 0\n 15840: u8 [a0 + 22] = 0\n 15843: u8 [a0 + 21] = 0\n 15846: u8 [a0 + 20] = 0\n 15849: u8 [a0 + 19] = 0\n 15852: u8 [a0 + 18] = 0\n 15855: u8 [a0 + 17] = 0\n 15858: u8 [a0 + 16] = 0\n 15861: u8 [a0 + 15] = 0\n 15864: u8 [a0 + 14] = 0\n 15867: u8 [a0 + 13] = 0\n 15870: u8 [a0 + 12] = 0\n 15873: u8 [a0 + 11] = 0\n 15876: u8 [a0 + 10] = 0\n 15879: u8 [a0 + 9] = 0\n 15882: u8 [a0 + 8] = 0\n 15885: u8 [a0 + 7] = 0\n 15888: u8 [a0 + 6] = 0\n 15891: u8 [a0 + 5] = 0\n 15894: u8 [a0 + 4] = 0\n 15897: u8 [a0 + 3] = 0\n 15900: u8 [a0 + 2] = 0\n 15903: u8 [a0 + 1] = 0\n 15906: u8 [a0 + 0] = 0\n 15908: a1 = 0x40\n 15911: a0 = 0\n 15913: ra = 206, jump @0\n      : @243 [@dyn 103] (gas: 45)\n 15919: i32 a0 = a0 + 0\n 15921: a1 = sp + 0x1000\n 15925: i32 a2 = a1 + 0xfffffffffffff860\n 15929: a1 = 0x40\n 15932: ecalli 7 // 'hash_keccak_256'\n 15934: a0 = sp + 0x1000\n 15938: a0 = u64 [a0 + 0xfffffffffffff878]\n 15942: a1 = sp + 0x1000\n 15946: a1 = u64 [a1 + 0xfffffffffffff870]\n 15950: a2 = sp + 0x1000\n 15954: a2 = u64 [a2 + 0xfffffffffffff868]\n 15958: a3 = sp + 0x1000\n 15962: a3 = u64 [a3 + 0xfffffffffffff860]\n 15966: a0 = reverse a0\n 15968: a1 = reverse a1\n 15970: a2 = reverse a2\n 15972: a3 = reverse a3\n 15974: a4 = sp + 0x1000\n 15978: u64 [a4 + 0xfffffffffffff858] = a3\n 15982: a3 = sp + 0x1000\n 15986: u64 [a3 + 0xfffffffffffff850] = a2\n 15990: a2 = sp + 0x1000\n 15994: u64 [a2 + 0xfffffffffffff848] = a1\n 15998: a1 = sp + 0x1000\n 16002: u64 [a1 + 0xfffffffffffff840] = a0\n 16006: a0 = sp + 0x1000\n 16010: u64 [a0 + 4294965368] = 0\n 16014: a0 = sp + 0x1000\n 16018: u64 [a0 + 4294965360] = 0\n 16022: a0 = sp + 0x1000\n 16026: u64 [a0 + 4294965352] = 0\n 16030: a0 = sp + 0x1000\n 16034: u64 [a0 + 4294965344] = 0\n 16038: a1 = sp + 0x1000\n 16042: u32 [a1 + 4294965376] = 0x20\n 16047: a0 = sp + 0x1000\n 16051: i32 a1 = a0 + 0xfffffffffffff840\n 16055: a0 = sp + 0x1000\n 16059: i32 a3 = a0 + 0xfffffffffffff860\n 16063: a0 = sp + 0x1000\n 16067: i32 a4 = a0 + 0xfffffffffffff880\n 16071: a2 = 0xffffffffffffffff\n 16074: a0 = 0\n 16076: ecalli 6 // 'get_storage'\n 16078: fallthrough\n      : @244 (gas: 38)\n 16079: a0 = sp + 0x1000\n 16083: a0 = u64 [a0 + 0xfffffffffffff868]\n 16087: a1 = sp + 0x1000\n 16091: a1 = u64 [a1 + 0xfffffffffffff860]\n 16095: a2 = sp + 0x1000\n 16099: a2 = u64 [a2 + 0xfffffffffffff878]\n 16103: a3 = sp + 0x1000\n 16107: a3 = u64 [a3 + 0xfffffffffffff870]\n 16111: a4 = u64 [sp + 0x138]\n 16115: a4 = a4 + a0\n 16118: a5 = u64 [sp + 0x140]\n 16122: a5 = a5 + a1\n 16125: u64 [sp + 0xf8] = a5\n 16129: a1 = a5 <u a1\n 16132: a5 = a4 + a1\n 16135: a4 = a5 ^ a0\n 16138: u64 [sp + 0xf0] = a5\n 16142: s1 = a5 <u a0\n 16145: s1 = a1 if a4 == 0\n 16148: a1 = u64 [sp + 0x130]\n 16152: a1 = a1 + a3\n 16155: a0 = a1 + s1\n 16158: a4 = a0 <u a1\n 16161: a5 = u64 [sp + 0x128]\n 16165: a5 = a5 + a2\n 16168: a1 = a1 <u a3\n 16171: a1 = a1 + a5\n 16174: a5 = a1 + a4\n 16177: a1 = a0 <u a3\n 16180: a4 = a5 ^ a2\n 16183: u64 [sp + 0xe8] = a5\n 16187: a2 = a5 <u a2\n 16190: a2 = a1 if a4 == 0\n 16193: u64 [sp + 0x100] = a0\n 16197: a1 = a0 ^ a3\n 16200: a1 = a1 | a4\n 16203: a2 = s1 if a1 == 0\n 16206: jump @246 if a2 == 0\n      : @245 (gas: 1)\n 16209: jump @382\n      : @246 (gas: 111)\n 16212: a0 = u64 [sp + 0x60]\n 16215: a0 = a0 << 0x8\n 16218: a1 = u64 [sp + 0x80]\n 16222: a0 = a0 | a1\n 16225: a1 = u64 [sp + 0x70]\n 16228: a1 = a1 << 0x10\n 16231: a2 = u64 [sp + 0x68]\n 16234: a2 = a2 << 0x18\n 16237: a1 = a1 | a2\n 16240: a0 = a0 | a1\n 16243: a1 = u64 [sp + 0x78]\n 16246: a1 = a1 << 0x8\n 16249: a2 = u64 [sp + 0x98]\n 16253: a1 = a1 | a2\n 16256: a2 = u64 [sp + 0x90]\n 16260: a2 = a2 << 0x10\n 16263: a3 = u64 [sp + 0x88]\n 16267: a3 = a3 << 0x18\n 16270: a2 = a2 | a3\n 16273: a1 = a1 | a2\n 16276: a1 = a1 << 0x20\n 16279: t0 = a1 | a0\n 16282: a1 = u64 [sp + 0xa0]\n 16286: a1 = a1 << 0x8\n 16289: a0 = u64 [sp + 0xc0]\n 16293: a1 = a1 | a0\n 16296: a2 = u64 [sp + 0xb0]\n 16300: a2 = a2 << 0x10\n 16303: a3 = u64 [sp + 0xa8]\n 16307: a3 = a3 << 0x18\n 16310: a2 = a2 | a3\n 16313: a1 = a1 | a2\n 16316: a2 = u64 [sp + 0xb8]\n 16320: a2 = a2 << 0x8\n 16323: a0 = u64 [sp + 0xd8]\n 16327: a2 = a2 | a0\n 16330: a3 = u64 [sp + 0xd0]\n 16334: a3 = a3 << 0x10\n 16337: a4 = u64 [sp + 0xc8]\n 16341: a4 = a4 << 0x18\n 16344: a3 = a3 | a4\n 16347: a2 = a2 | a3\n 16350: a2 = a2 << 0x20\n 16353: t1 = a2 | a1\n 16356: a2 = u64 [sp + 0xe0]\n 16360: a2 = a2 << 0x8\n 16363: a0 = u64 [sp + 0x160]\n 16367: a2 = a2 | a0\n 16370: a3 = u64 [sp + 0x150]\n 16374: a3 = a3 << 0x10\n 16377: a4 = u64 [sp + 0x148]\n 16381: a4 = a4 << 0x18\n 16384: a3 = a3 | a4\n 16387: a2 = a2 | a3\n 16390: a3 = u64 [sp + 0x158]\n 16394: a3 = a3 << 0x8\n 16397: a0 = u64 [sp + 0x178]\n 16401: a3 = a3 | a0\n 16404: a4 = u64 [sp + 0x170]\n 16408: a4 = a4 << 0x10\n 16411: a5 = u64 [sp + 0x168]\n 16415: a5 = a5 << 0x18\n 16418: a4 = a4 | a5\n 16421: a3 = a3 | a4\n 16424: a3 = a3 << 0x20\n 16427: a3 = a3 | a2\n 16430: a2 = u64 [sp + 0x180]\n 16434: a2 = a2 << 0x8\n 16437: a0 = u64 [sp + 0x1a0]\n 16441: a2 = a2 | a0\n 16444: a4 = u64 [sp + 0x190]\n 16448: a4 = a4 << 0x10\n 16451: a5 = u64 [sp + 0x188]\n 16455: a5 = a5 << 0x18\n 16458: a4 = a4 | a5\n 16461: a2 = a2 | a4\n 16464: a4 = u64 [sp + 0x198]\n 16468: a4 = a4 << 0x8\n 16471: a0 = u64 [sp + 0x1b8]\n 16475: a4 = a4 | a0\n 16478: a5 = u64 [sp + 0x1b0]\n 16482: a5 = a5 << 0x10\n 16485: s1 = u64 [sp + 0x1a8]\n 16489: s1 = s1 << 0x18\n 16492: a5 = a5 | s1\n 16495: a4 = a4 | a5\n 16498: a4 = a4 << 0x20\n 16501: a2 = a2 | a4\n 16504: t2 = reverse a2\n 16506: ra = reverse t0\n 16508: a0 = reverse t1\n 16510: a4 = 0x1388\n 16514: a1 = a0 * a4\n 16517: a5 = ra mulhu a4\n 16520: a5 = a5 + a1\n 16523: u64 [sp + 0x168] = a5\n 16527: a1 = a5 <u a1\n 16530: a0 = a0 mulhu a4\n 16533: a0 = a0 + a1\n 16536: a5 = reverse a3\n 16538: t1 = a2 | t1\n 16541: a1 = a5 * a4\n 16544: s1 = a0 + a1\n 16547: a1 = s1 <u a0\n 16550: a2 = a3 | t0\n 16553: a3 = t2 * a4\n 16556: a0 = a5 mulhu a4\n 16559: a3 = a3 + a0\n 16562: a2 = t1 | a2\n 16565: t0 = a3 + a1\n 16568: jump @249 if a2 == 0\n      : @247 (gas: 7)\n 16571: a1 = 0 if t0 != 0\n 16573: a0 = a3 <u a0\n 16576: a2 = t2 mulhu a4\n 16579: a2 = a2 >u 0\n 16581: a0 = a0 | a2\n 16584: a0 = a0 | a1\n 16587: jump @249 if a0 == 0\n      : @248 (gas: 1)\n 16590: jump @394\n      : @249 (gas: 56)\n 16593: a1 = ra * 0x1388\n 16597: a0 = a1 | s1\n 16600: a2 = a1\n 16602: u64 [sp + 0x160] = a1\n 16606: t2 = u64 [sp + 0x168]\n 16610: a1 = t2 | t0\n 16613: a0 = a0 | a1\n 16616: a0 = a0 <u 0x1\n 16619: u64 [sp + 0x1b8] = a0\n 16623: a0 = clz s1\n 16625: a1 = a0 + 0x40\n 16628: a0 = clz t0\n 16630: a0 = a1 if t0 == 0\n 16633: a1 = clz a2\n 16635: a1 = a1 + 0x40\n 16638: a2 = clz t2\n 16640: a2 = a1 if t2 == 0\n 16643: a1 = a2 + 0x80\n 16647: a3 = s1 | t0\n 16650: a0 = a1 if a3 == 0\n 16653: a2 = a1 <u a2\n 16656: a2 = 0 if a3 != 0\n 16658: a5 = a2 >u 0\n 16660: a1 = a0 <u 0xf3\n 16664: a3 = a1 ^ 0x1\n 16667: a5 = a3 if a2 == 0\n 16670: a1 = a5 <u 0x1\n 16673: ra = s1\n 16675: t1 = a1 + 0xffffffffffffffff\n 16678: a1 = -a5\n 16680: s1 = -a2\n 16682: s1 = s1 - a3\n 16685: a3 = 0xf2 - a0\n 16689: a0 = a1 >u 0\n 16691: a2 = t1 >u 0\n 16693: a2 = a0 if t1 == 0\n 16696: a0 = s1 >u 0\n 16698: u64 [sp + 0x1b0] = a3\n 16702: a4 = a3 <u 0x100\n 16706: a4 = a4 ^ 0x1\n 16709: a4 = a0 if s1 != 0\n 16712: a4 = a2 if a5 != 0\n 16715: a3 = u64 [sp + 0x1b8]\n 16719: a3 = a3 | a4\n 16722: u64 [sp + 0x158] = t0\n 16726: a5 = t0\n 16728: a5 = 0 if a3 != 0\n 16730: u64 [sp + 0x150] = ra\n 16734: a4 = ra\n 16736: ra = u64 [sp + 0x160]\n 16740: a4 = 0 if a3 != 0\n 16742: a0 = t2\n 16744: a0 = 0 if a3 != 0\n 16746: a2 = ra\n 16748: a2 = 0 if a3 != 0\n 16750: jump @257 if a3 != 0\n      : @250 (gas: 7)\n 16754: a3 = u64 [sp + 0x1b0]\n 16758: a3 = a3 ^ 0xff\n 16762: t0 = a1\n 16764: a3 = a3 | a1\n 16767: a1 = s1 | t1\n 16770: a1 = a1 | a3\n 16773: jump @257 if a1 == 0\n      : @251 (gas: 260)\n 16777: a1 = t2\n 16779: a3 = u64 [sp + 0x1b0]\n 16783: a2 = a3 + 0x1\n 16786: u64 [sp + 0x1b8] = a2\n 16790: a0 = a2 <u 0x1\n 16793: a0 = a0 + s1\n 16796: u64 [sp + 0x188] = a0\n 16800: a0 = a0 | a2\n 16803: a0 = a0 <u 0x1\n 16806: a0 = a0 + t0\n 16809: u64 [sp + 0x190] = a0\n 16813: a0 = a0 <u t0\n 16816: a0 = a0 + t1\n 16819: u64 [sp + 0x180] = a0\n 16823: i32 a2 = 0xff - a3\n 16827: u64 [sp + 0x1b0] = a2\n 16831: u8 [sp + 0x4a0] = ra\n 16835: u8 [sp + 1183] = 0\n 16839: u8 [sp + 1182] = 0\n 16843: u8 [sp + 1181] = 0\n 16847: u8 [sp + 1180] = 0\n 16851: u8 [sp + 1179] = 0\n 16855: u8 [sp + 1178] = 0\n 16859: u8 [sp + 1177] = 0\n 16863: u8 [sp + 1176] = 0\n 16867: u8 [sp + 1175] = 0\n 16871: u8 [sp + 1174] = 0\n 16875: u8 [sp + 1173] = 0\n 16879: u8 [sp + 1172] = 0\n 16883: u8 [sp + 1171] = 0\n 16887: u8 [sp + 1170] = 0\n 16891: u8 [sp + 1169] = 0\n 16895: u8 [sp + 1168] = 0\n 16899: u8 [sp + 1167] = 0\n 16903: u8 [sp + 1166] = 0\n 16907: u8 [sp + 1165] = 0\n 16911: u8 [sp + 1164] = 0\n 16915: u8 [sp + 1163] = 0\n 16919: u8 [sp + 1162] = 0\n 16923: u8 [sp + 1161] = 0\n 16927: u8 [sp + 1160] = 0\n 16931: u8 [sp + 1159] = 0\n 16935: u8 [sp + 1158] = 0\n 16939: u8 [sp + 1157] = 0\n 16943: u8 [sp + 1156] = 0\n 16947: u8 [sp + 1155] = 0\n 16951: u8 [sp + 1154] = 0\n 16955: u8 [sp + 1153] = 0\n 16959: u8 [sp + 1152] = 0\n 16963: u8 [sp + 0x4a8] = t2\n 16967: a0 = ra >> 0x38\n 16970: u64 [sp + 0x148] = a0\n 16974: u8 [sp + 0x4a7] = a0\n 16978: a0 = ra >> 0x30\n 16981: u64 [sp + 0xe0] = a0\n 16985: u8 [sp + 0x4a6] = a0\n 16989: a0 = ra >> 0x28\n 16992: u64 [sp + 0xd8] = a0\n 16996: u8 [sp + 0x4a5] = a0\n 17000: a0 = ra >> 0x20\n 17003: u64 [sp + 0xd0] = a0\n 17007: u8 [sp + 0x4a4] = a0\n 17011: a0 = a2 << 0x38\n 17014: a0 = a0 >> 0x3b\n 17017: a3 = sp + 0x4a0\n 17021: a3 = a3 - a0\n 17024: a0 = ra >> 0x18\n 17027: u64 [sp + 0x80] = a0\n 17031: u8 [sp + 0x4a3] = a0\n 17035: a0 = ra >> 0x10\n 17038: u64 [sp + 0x78] = a0\n 17041: u8 [sp + 0x4a2] = a0\n 17045: a0 = ra >> 0x8\n 17048: u64 [sp + 0x70] = a0\n 17051: u8 [sp + 0x4a1] = a0\n 17055: t2 = u64 [sp + 0x150]\n 17059: u8 [sp + 0x4b0] = t2\n 17063: a0 = a1 >> 0x38\n 17066: u64 [sp + 0x68] = a0\n 17069: u8 [sp + 0x4af] = a0\n 17073: a0 = a1 >> 0x30\n 17076: u64 [sp + 0x60] = a0\n 17079: u8 [sp + 0x4ae] = a0\n 17083: a0 = a1 >> 0x28\n 17086: u64 [sp + 0x58] = a0\n 17089: u8 [sp + 0x4ad] = a0\n 17093: a0 = a1 >> 0x20\n 17096: u64 [sp + 0x50] = a0\n 17099: u8 [sp + 0x4ac] = a0\n 17103: a0 = a1 >> 0x18\n 17106: u64 [sp + 0x48] = a0\n 17109: u8 [sp + 0x4ab] = a0\n 17113: a0 = a1 >> 0x10\n 17116: u64 [sp + 0x40] = a0\n 17119: u8 [sp + 0x4aa] = a0\n 17123: a1 = a1 >> 0x8\n 17126: u64 [sp + 0x38] = a1\n 17129: u8 [sp + 0x4a9] = a1\n 17133: ra = u64 [sp + 0x158]\n 17137: u8 [sp + 0x4b8] = ra\n 17141: a0 = t2 >> 0x38\n 17144: u64 [sp + 0x30] = a0\n 17147: u8 [sp + 0x4b7] = a0\n 17151: a0 = t2 >> 0x30\n 17154: u64 [sp + 0x28] = a0\n 17157: u8 [sp + 0x4b6] = a0\n 17161: a0 = t2 >> 0x28\n 17164: u64 [sp + 0x20] = a0\n 17167: u8 [sp + 0x4b5] = a0\n 17171: a0 = t2 >> 0x20\n 17174: u64 [sp + 0x18] = a0\n 17177: u8 [sp + 0x4b4] = a0\n 17181: a0 = t2 >> 0x18\n 17184: u64 [sp + 0x10] = a0\n 17187: u8 [sp + 0x4b3] = a0\n 17191: a0 = t2 >> 0x10\n 17194: u64 [sp + 0xc8] = a0\n 17198: u8 [sp + 0x4b2] = a0\n 17202: a0 = t2 >> 0x8\n 17205: u64 [sp + 0xc0] = a0\n 17209: u8 [sp + 0x4b1] = a0\n 17213: a0 = ra >> 0x38\n 17216: u64 [sp + 0xb8] = a0\n 17220: u8 [sp + 0x4bf] = a0\n 17224: a0 = ra >> 0x30\n 17227: u64 [sp + 0xb0] = a0\n 17231: u8 [sp + 0x4be] = a0\n 17235: a0 = ra >> 0x28\n 17238: u64 [sp + 0xa8] = a0\n 17242: u8 [sp + 0x4bd] = a0\n 17246: a0 = ra >> 0x20\n 17249: u64 [sp + 0xa0] = a0\n 17253: u8 [sp + 0x4bc] = a0\n 17257: a0 = ra >> 0x18\n 17260: u64 [sp + 0x98] = a0\n 17264: u8 [sp + 0x4bb] = a0\n 17268: a0 = ra >> 0x10\n 17271: u64 [sp + 0x90] = a0\n 17275: u8 [sp + 0x4ba] = a0\n 17279: a0 = ra >> 0x8\n 17282: u64 [sp + 0x88] = a0\n 17286: u8 [sp + 0x4b9] = a0\n 17290: a0 = u8 [a3 + 0x19]\n 17293: a1 = u8 [a3 + 0x18]\n 17296: a4 = u8 [a3 + 0x1a]\n 17299: a5 = u8 [a3 + 0x1b]\n 17302: a0 = a0 << 0x8\n 17305: a0 = a0 | a1\n 17308: a4 = a4 << 0x10\n 17311: a5 = a5 << 0x18\n 17314: a4 = a4 | a5\n 17317: a0 = a0 | a4\n 17320: a1 = u8 [a3 + 0x1d]\n 17323: a4 = u8 [a3 + 0x1c]\n 17326: a5 = u8 [a3 + 0x1e]\n 17329: s1 = u8 [a3 + 0x1f]\n 17332: a1 = a1 << 0x8\n 17335: a1 = a1 | a4\n 17338: a5 = a5 << 0x10\n 17341: s1 = s1 << 0x18\n 17344: a5 = a5 | s1\n 17347: a1 = a1 | a5\n 17350: a1 = a1 << 0x20\n 17353: a0 = a0 | a1\n 17356: a1 = u8 [a3 + 0x11]\n 17359: a4 = u8 [a3 + 0x10]\n 17362: a5 = u8 [a3 + 0x12]\n 17365: s1 = u8 [a3 + 0x13]\n 17368: a1 = a1 << 0x8\n 17371: a1 = a1 | a4\n 17374: a5 = a5 << 0x10\n 17377: s1 = s1 << 0x18\n 17380: a5 = a5 | s1\n 17383: a1 = a1 | a5\n 17386: a4 = u8 [a3 + 0x15]\n 17389: a5 = u8 [a3 + 0x14]\n 17392: s1 = u8 [a3 + 0x16]\n 17395: a2 = u8 [a3 + 0x17]\n 17398: a4 = a4 << 0x8\n 17401: a4 = a4 | a5\n 17404: s1 = s1 << 0x10\n 17407: a2 = a2 << 0x18\n 17410: a2 = a2 | s1\n 17413: a2 = a2 | a4\n 17416: a2 = a2 << 0x20\n 17419: t1 = a2 | a1\n 17422: a2 = u64 [sp + 0x1b0]\n 17426: a2 = a2 & 0x7\n 17429: a0 = a0 << a2\n 17432: a1 = t1 >> 0x1\n 17435: t0 = a2 ^ 0x3f\n 17438: a1 = a1 >> t0\n 17441: a0 = a0 | a1\n 17444: u64 [sp + 0x1b0] = a0\n 17448: a0 = u8 [a3 + 0x9]\n 17451: a1 = u8 [a3 + 0x8]\n 17454: a4 = u8 [a3 + 0xa]\n 17457: a5 = u8 [a3 + 0xb]\n 17460: a0 = a0 << 0x8\n 17463: a0 = a0 | a1\n 17466: a4 = a4 << 0x10\n 17469: a5 = a5 << 0x18\n 17472: a4 = a4 | a5\n 17475: a0 = a0 | a4\n 17478: a1 = u8 [a3 + 0xd]\n 17481: a4 = u8 [a3 + 0xc]\n 17484: a5 = u8 [a3 + 0xe]\n 17487: s1 = u8 [a3 + 0xf]\n 17490: a1 = a1 << 0x8\n 17493: a1 = a1 | a4\n 17496: a5 = a5 << 0x10\n 17499: s1 = s1 << 0x18\n 17502: a5 = a5 | s1\n 17505: a1 = a1 | a5\n 17508: a1 = a1 << 0x20\n 17511: a1 = a1 | a0\n 17514: a0 = a1 >> 0x1\n 17517: a4 = a2 ^ 0xffffffffffffffff\n 17520: a0 = a0 >> a4\n 17523: a4 = t1 << a2\n 17526: t1 = u64 [sp + 0x180]\n 17530: a0 = a0 | a4\n 17533: u64 [sp + 0x1a8] = a0\n 17537: a0 = u8 [a3 + 0x1]\n 17540: a4 = u8 [a3]\n 17542: a5 = u8 [a3 + 0x2]\n 17545: s1 = u8 [a3 + 0x3]\n 17548: a0 = a0 << 0x8\n 17551: a0 = a0 | a4\n 17554: a5 = a5 << 0x10\n 17557: s1 = s1 << 0x18\n 17560: a5 = a5 | s1\n 17563: a0 = a0 | a5\n 17566: a4 = u8 [a3 + 0x5]\n 17569: a5 = u8 [a3 + 0x4]\n 17572: s1 = u8 [a3 + 0x6]\n 17575: a3 = u8 [a3 + 0x7]\n 17578: a4 = a4 << 0x8\n 17581: a4 = a4 | a5\n 17584: s1 = s1 << 0x10\n 17587: a3 = a3 << 0x18\n 17590: a3 = a3 | s1\n 17593: a5 = u64 [sp + 0x188]\n 17597: a3 = a3 | a4\n 17600: a3 = a3 << 0x20\n 17603: a0 = a0 | a3\n 17606: a3 = a0 >> 0x1\n 17609: a3 = a3 >> t0\n 17612: t0 = u64 [sp + 0x190]\n 17616: a1 = a1 << a2\n 17619: a1 = a1 | a3\n 17622: u64 [sp + 0x198] = a1\n 17626: a1 = a5 | t1\n 17629: a3 = u64 [sp + 0x1b8]\n 17633: a4 = a3\n 17635: a3 = a3 | t0\n 17638: a1 = a1 | a3\n 17641: a0 = a0 << a2\n 17644: u64 [sp + 0x1a0] = a0\n 17648: jump @255 if a1 == 0\n      : @252 (gas: 214)\n 17652: u64 [sp + 376] = 0\n 17656: u64 [sp + 368] = 0\n 17660: a0 = u64 [sp + 0x160]\n 17664: u8 [sp + 0x440] = a0\n 17668: a0 = u64 [sp + 0x168]\n 17672: u8 [sp + 0x448] = a0\n 17676: a0 = u64 [sp + 0x148]\n 17680: u8 [sp + 0x447] = a0\n 17684: a0 = u64 [sp + 0xe0]\n 17688: u8 [sp + 0x446] = a0\n 17692: a0 = u64 [sp + 0xd8]\n 17696: u8 [sp + 0x445] = a0\n 17700: a0 = u64 [sp + 0xd0]\n 17704: u8 [sp + 0x444] = a0\n 17708: a0 = u64 [sp + 0x80]\n 17712: u8 [sp + 0x443] = a0\n 17716: a0 = u64 [sp + 0x78]\n 17719: u8 [sp + 0x442] = a0\n 17723: a0 = u64 [sp + 0x70]\n 17726: u8 [sp + 0x441] = a0\n 17730: u8 [sp + 0x450] = t2\n 17734: a0 = u64 [sp + 0x68]\n 17737: u8 [sp + 0x44f] = a0\n 17741: a0 = u64 [sp + 0x60]\n 17744: u8 [sp + 0x44e] = a0\n 17748: a0 = u64 [sp + 0x58]\n 17751: u8 [sp + 0x44d] = a0\n 17755: a0 = u64 [sp + 0x50]\n 17758: u8 [sp + 0x44c] = a0\n 17762: a0 = u64 [sp + 0x48]\n 17765: u8 [sp + 0x44b] = a0\n 17769: a0 = u64 [sp + 0x40]\n 17772: u8 [sp + 0x44a] = a0\n 17776: a0 = u64 [sp + 0x38]\n 17779: u8 [sp + 0x449] = a0\n 17783: u8 [sp + 0x458] = ra\n 17787: a0 = u64 [sp + 0x30]\n 17790: u8 [sp + 0x457] = a0\n 17794: a0 = u64 [sp + 0x28]\n 17797: u8 [sp + 0x456] = a0\n 17801: a0 = u64 [sp + 0x20]\n 17804: u8 [sp + 0x455] = a0\n 17808: a0 = u64 [sp + 0x18]\n 17811: u8 [sp + 0x454] = a0\n 17815: a0 = u64 [sp + 0x10]\n 17818: u8 [sp + 0x453] = a0\n 17822: u8 [sp + 1151] = 0\n 17826: u8 [sp + 1150] = 0\n 17830: u8 [sp + 1149] = 0\n 17834: u8 [sp + 1148] = 0\n 17838: u8 [sp + 1147] = 0\n 17842: u8 [sp + 1146] = 0\n 17846: u8 [sp + 1145] = 0\n 17850: u8 [sp + 1144] = 0\n 17854: u8 [sp + 1143] = 0\n 17858: u8 [sp + 1142] = 0\n 17862: u8 [sp + 1141] = 0\n 17866: u8 [sp + 1140] = 0\n 17870: u8 [sp + 1139] = 0\n 17874: u8 [sp + 1138] = 0\n 17878: u8 [sp + 1137] = 0\n 17882: u8 [sp + 1136] = 0\n 17886: u8 [sp + 1135] = 0\n 17890: u8 [sp + 1134] = 0\n 17894: u8 [sp + 1133] = 0\n 17898: u8 [sp + 1132] = 0\n 17902: u8 [sp + 1131] = 0\n 17906: u8 [sp + 1130] = 0\n 17910: u8 [sp + 1129] = 0\n 17914: u8 [sp + 1128] = 0\n 17918: u8 [sp + 1127] = 0\n 17922: u8 [sp + 1126] = 0\n 17926: u8 [sp + 1125] = 0\n 17930: u8 [sp + 1124] = 0\n 17934: u8 [sp + 1123] = 0\n 17938: u8 [sp + 1122] = 0\n 17942: u8 [sp + 1121] = 0\n 17946: u8 [sp + 1120] = 0\n 17950: a0 = u64 [sp + 0xc8]\n 17954: u8 [sp + 0x452] = a0\n 17958: a0 = u64 [sp + 0xc0]\n 17962: u8 [sp + 0x451] = a0\n 17966: a0 = u64 [sp + 0xb8]\n 17970: u8 [sp + 0x45f] = a0\n 17974: a0 = u64 [sp + 0xb0]\n 17978: u8 [sp + 0x45e] = a0\n 17982: a0 = u64 [sp + 0xa8]\n 17986: u8 [sp + 0x45d] = a0\n 17990: a0 = u64 [sp + 0xa0]\n 17994: u8 [sp + 0x45c] = a0\n 17998: a0 = u64 [sp + 0x98]\n 18002: u8 [sp + 0x45b] = a0\n 18006: a0 = u64 [sp + 0x90]\n 18010: u8 [sp + 0x45a] = a0\n 18014: a0 = u64 [sp + 0x88]\n 18018: u8 [sp + 0x459] = a0\n 18022: s1 = a4\n 18024: a0 = a4 << 0x38\n 18027: a0 = a0 >> 0x3b\n 18030: a2 = sp + 0x440\n 18034: a2 = a2 + a0\n 18037: a0 = u8 [a2 + 0x11]\n 18040: a1 = u8 [a2 + 0x10]\n 18043: a3 = u8 [a2 + 0x12]\n 18046: a4 = u8 [a2 + 0x13]\n 18049: a0 = a0 << 0x8\n 18052: a0 = a0 | a1\n 18055: a3 = a3 << 0x10\n 18058: a4 = a4 << 0x18\n 18061: a3 = a3 | a4\n 18064: a0 = a0 | a3\n 18067: a1 = u8 [a2 + 0x15]\n 18070: a3 = u8 [a2 + 0x14]\n 18073: a4 = u8 [a2 + 0x16]\n 18076: a5 = u8 [a2 + 0x17]\n 18079: a1 = a1 << 0x8\n 18082: a1 = a1 | a3\n 18085: a4 = a4 << 0x10\n 18088: a5 = a5 << 0x18\n 18091: a4 = a4 | a5\n 18094: a1 = a1 | a4\n 18097: a1 = a1 << 0x20\n 18100: t0 = a1 | a0\n 18103: t2 = s1 & 0x7\n 18106: a0 = t0 >> t2\n 18109: a3 = u8 [a2 + 0x19]\n 18112: a4 = u8 [a2 + 0x18]\n 18115: a5 = u8 [a2 + 0x1a]\n 18118: s1 = u8 [a2 + 0x1b]\n 18121: a3 = a3 << 0x8\n 18124: a3 = a3 | a4\n 18127: a5 = a5 << 0x10\n 18130: s1 = s1 << 0x18\n 18133: a5 = a5 | s1\n 18136: a3 = a3 | a5\n 18139: a4 = u8 [a2 + 0x1d]\n 18142: a5 = u8 [a2 + 0x1c]\n 18145: s1 = u8 [a2 + 0x1e]\n 18148: a1 = u8 [a2 + 0x1f]\n 18151: a4 = a4 << 0x8\n 18154: a4 = a4 | a5\n 18157: s1 = s1 << 0x10\n 18160: a1 = a1 << 0x18\n 18163: a1 = a1 | s1\n 18166: a1 = a1 | a4\n 18169: a1 = a1 << 0x20\n 18172: a1 = a1 | a3\n 18175: u64 [sp + 0x160] = a1\n 18179: a1 = a1 << 0x1\n 18182: ra = t2 ^ 0x3f\n 18185: a1 = a1 << ra\n 18188: a0 = a0 | a1\n 18191: a1 = u8 [a2 + 0x9]\n 18194: a3 = u8 [a2 + 0x8]\n 18197: a4 = u8 [a2 + 0xa]\n 18200: a5 = u8 [a2 + 0xb]\n 18203: a1 = a1 << 0x8\n 18206: a1 = a1 | a3\n 18209: a4 = a4 << 0x10\n 18212: a5 = a5 << 0x18\n 18215: a4 = a4 | a5\n 18218: a1 = a1 | a4\n 18221: a3 = u8 [a2 + 0xd]\n 18224: a4 = u8 [a2 + 0xc]\n 18227: a5 = u8 [a2 + 0xe]\n 18230: s1 = u8 [a2 + 0xf]\n 18233: a3 = a3 << 0x8\n 18236: a3 = a3 | a4\n 18239: a5 = a5 << 0x10\n 18242: s1 = s1 << 0x18\n 18245: a5 = a5 | s1\n 18248: a3 = a3 | a5\n 18251: a3 = a3 << 0x20\n 18254: a4 = a3 | a1\n 18257: a1 = a4 >> t2\n 18260: t0 = t0 << 0x1\n 18263: a3 = t2 ^ 0xffffffffffffffff\n 18266: a3 = t0 << a3\n 18269: a1 = a1 | a3\n 18272: u64 [sp + 0x168] = a1\n 18276: a3 = u8 [a2 + 0x1]\n 18279: a5 = u8 [a2]\n 18281: s1 = u8 [a2 + 0x2]\n 18284: t0 = u8 [a2 + 0x3]\n 18287: a3 = a3 << 0x8\n 18290: a3 = a3 | a5\n 18293: s1 = s1 << 0x10\n 18296: t0 = t0 << 0x18\n 18299: a5 = t0 | s1\n 18302: t0 = a5 | a3\n 18305: a5 = u8 [a2 + 0x5]\n 18308: s1 = u8 [a2 + 0x4]\n 18311: a3 = u8 [a2 + 0x6]\n 18314: a2 = u8 [a2 + 0x7]\n 18317: a5 = a5 << 0x8\n 18320: a5 = a5 | s1\n 18323: a3 = a3 << 0x10\n 18326: a2 = a2 << 0x18\n 18329: a2 = a2 | a3\n 18332: a2 = a2 | a5\n 18335: a5 = u64 [sp + 0x178]\n 18339: a2 = a2 << 0x20\n 18342: a2 = a2 | t0\n 18345: a4 = a4 << 0x1\n 18348: a3 = a4 << ra\n 18351: s1 = a2 >> t2\n 18354: t1 = s1 | a3\n 18357: a2 = u64 [sp + 0x160]\n 18361: s1 = a2 >> t2\n 18364: u64 [sp + 336] = 0x270f\n 18370: u64 [sp + 344] = 0x2710\n 18376: u64 [sp + 328] = 0\n 18380: t0 = u64 [sp + 0x168]\n 18384: fallthrough\n      : @253 (gas: 88)\n 18385: u64 [sp + 0x178] = a5\n 18389: u64 [sp + 352] = 0\n 18393: a3 = t1 >> 0x3f\n 18396: a4 = t0 << 0x1\n 18399: ra = a4 | a3\n 18402: a1 = t1\n 18404: t1 = s1\n 18406: s1 = a1 << 0x1\n 18409: a1 = t0\n 18411: t2 = u64 [sp + 0x1b0]\n 18415: a5 = t2 >> 0x3f\n 18418: t0 = s1 | a5\n 18421: a5 = u64 [sp + 0x148]\n 18425: a3 = a5 ^ ra\n 18428: a4 = a5 <u ra\n 18431: a2 = u64 [sp + 0x150]\n 18435: s1 = a2 <u t0\n 18438: s1 = a4 if a3 != 0\n 18441: t1 = t1 << 0x1\n 18444: a3 = a0 >> 0x3f\n 18447: a2 = t1 | a3\n 18450: u64 [sp + 0x168] = a2\n 18454: a1 = a1 >> 0x3f\n 18457: a0 = a0 << 0x1\n 18460: a3 = a0 | a1\n 18463: a0 = t2 << 0x1\n 18466: a2 = u64 [sp + 0x1a8]\n 18470: a1 = a2 >> 0x3f\n 18473: t1 = a0 | a1\n 18476: a1 = a2 << 0x1\n 18479: a0 = u64 [sp + 0x198]\n 18483: a2 = a0 >> 0x3f\n 18486: a1 = a1 | a2\n 18489: a2 = a0 << 0x1\n 18492: t2 = u64 [sp + 0x1a0]\n 18496: a4 = t2 >> 0x3f\n 18499: a2 = a2 | a4\n 18502: a4 = t2 << 0x1\n 18505: t2 = u64 [sp + 0x188]\n 18509: a0 = u64 [sp + 0x178]\n 18513: a4 = a4 | a0\n 18516: u64 [sp + 0x1a0] = a4\n 18520: a4 = u64 [sp + 0x170]\n 18524: a2 = a2 | a4\n 18527: u64 [sp + 0x198] = a2\n 18531: a1 = a1 | a4\n 18534: u64 [sp + 0x1a8] = a1\n 18538: a0 = a4 | t1\n 18541: u64 [sp + 0x1b0] = a0\n 18545: a0 = a5 - a3\n 18548: a0 = a0 <u s1\n 18551: a1 = a5 <u a3\n 18554: s1 = u64 [sp + 0x168]\n 18558: a2 = a5 - s1\n 18561: a2 = a2 - a1\n 18564: a2 = a2 - a0\n 18567: a2 = a2 >>a 0x3f\n 18570: a0 = u64 [sp + 0x158]\n 18574: a0 = a0 & a2\n 18577: t1 = t0 - a0\n 18580: a4 = t0 <u a0\n 18583: t0 = ra - a4\n 18586: a4 = 0 if ra != 0\n 18588: a1 = a3 - a4\n 18591: a3 = a3 <u a4\n 18594: s1 = s1 - a3\n 18597: a0 = u64 [sp + 0x1b8]\n 18601: a3 = a0 | t2\n 18604: a3 = a3 <u 0x1\n 18607: a5 = u64 [sp + 0x190]\n 18611: a4 = a5 <u a3\n 18614: a3 = a5 - a3\n 18617: a5 = a0 <u 0x1\n 18620: t2 = t2 - a5\n 18623: a5 = u64 [sp + 0x180]\n 18627: a5 = a5 - a4\n 18630: a0 = a0 + 0xffffffffffffffff\n 18633: u64 [sp + 0x180] = a5\n 18637: u64 [sp + 0x188] = t2\n 18641: a4 = t2 | a5\n 18644: u64 [sp + 0x1b8] = a0\n 18648: a5 = a0 | a3\n 18651: a0 = a1\n 18653: a4 = a4 | a5\n 18656: a5 = a2 & 0x1\n 18659: u64 [sp + 0x190] = a3\n 18663: u64 [sp + 368] = 0\n 18667: jump @253 if a4 != 0\n      : @254 (gas: 1)\n 18671: jump @256\n      : @255 (gas: 3)\n 18673: a5 = 0\n 18675: u64 [sp + 352] = 0\n 18679: fallthrough\n      : @256 (gas: 20)\n 18680: a2 = u64 [sp + 0x1a8]\n 18684: a0 = a2 >> 0x3f\n 18687: a1 = u64 [sp + 0x1b0]\n 18691: a1 = a1 << 0x1\n 18694: a1 = a1 | a0\n 18697: a4 = u64 [sp + 0x198]\n 18701: a0 = a4 >> 0x3f\n 18704: a2 = a2 << 0x1\n 18707: a3 = a2 | a0\n 18710: a2 = u64 [sp + 0x1a0]\n 18714: a0 = a2 >> 0x3f\n 18717: a4 = a4 << 0x1\n 18720: a2 = a2 << 0x1\n 18723: a2 = a2 | a5\n 18726: a5 = u64 [sp + 0x160]\n 18730: a0 = a0 | a5\n 18733: a0 = a0 | a4\n 18736: a4 = a5 | a3\n 18739: a5 = a5 | a1\n 18742: fallthrough\n      : @257 (gas: 16)\n 18743: a1 = u64 [sp + 0xf8]\n 18747: a1 = a2 <u a1\n 18750: a3 = u64 [sp + 0xf0]\n 18754: a2 = a3 ^ a0\n 18757: a0 = a0 <u a3\n 18760: a0 = a1 if a2 == 0\n 18763: a1 = u64 [sp + 0x100]\n 18767: s1 = a4 <u a1\n 18770: a3 = u64 [sp + 0xe8]\n 18774: a2 = a3 ^ a5\n 18777: a3 = a5 <u a3\n 18780: a3 = s1 if a2 == 0\n 18783: a1 = a1 ^ a4\n 18786: a1 = a1 | a2\n 18789: a3 = a0 if a1 == 0\n 18792: jump @259 if a3 == 0\n      : @258 (gas: 1)\n 18795: jump @378\n      : @259 (gas: 22)\n 18798: a0 = 0x32\n 18801: s1 = u64 [sp + 0x140]\n 18805: a1 = s1 mulhu a0\n 18808: a5 = u64 [sp + 0x138]\n 18812: a2 = a5 * a0\n 18815: t1 = a2 + a1\n 18818: a1 = t1 <u a2\n 18821: a2 = a5 mulhu a0\n 18824: a1 = a1 + a2\n 18827: a4 = u64 [sp + 0x130]\n 18831: a2 = a4 * a0\n 18834: ra = a1 + a2\n 18837: a1 = ra <u a1\n 18840: t0 = a4 mulhu a0\n 18843: a2 = u64 [sp + 0x128]\n 18847: a3 = a2 * a0\n 18850: a3 = a3 + t0\n 18853: a4 = a4 | s1\n 18856: a5 = a5 | a2\n 18859: a5 = a5 | a4\n 18862: a4 = a3 + a1\n 18865: jump @262 if a5 == 0\n      : @260 (gas: 7)\n 18868: a1 = 0 if a4 != 0\n 18870: a5 = a3 <u t0\n 18873: a3 = a2 mulhu a0\n 18876: a3 = a3 >u 0\n 18878: a2 = a3 | a5\n 18881: a1 = a1 | a2\n 18884: jump @262 if a1 == 0\n      : @261 (gas: 1)\n 18887: jump @396\n      : @262 (gas: 54)\n 18890: a1 = u64 [sp + 0x140]\n 18894: t2 = a1 * 0x32\n 18897: a0 = t2 | ra\n 18900: a1 = t1 | a4\n 18903: a0 = a0 | a1\n 18906: a0 = a0 <u 0x1\n 18909: u64 [sp + 0x1b8] = a0\n 18913: a1 = clz ra\n 18915: a1 = a1 + 0x40\n 18918: a5 = clz a4\n 18920: a5 = a1 if a4 == 0\n 18923: a1 = clz t2\n 18925: a1 = a1 + 0x40\n 18928: a2 = clz t1\n 18930: a2 = a1 if t1 == 0\n 18933: a1 = a2 + 0x80\n 18937: a3 = ra | a4\n 18940: a5 = a1 if a3 == 0\n 18943: a1 = a1 <u a2\n 18946: a1 = 0 if a3 != 0\n 18948: s1 = a1 >u 0\n 18950: a2 = a5 <u 0xf3\n 18954: a0 = a2 ^ 0x1\n 18957: s1 = a0 if a1 == 0\n 18960: a2 = s1 <u 0x1\n 18963: a2 = a2 + 0xffffffffffffffff\n 18966: t0 = a4\n 18968: a3 = -s1\n 18970: a1 = -a1\n 18972: a1 = a1 - a0\n 18975: a5 = 0xf2 - a5\n 18979: u64 [sp + 0x1b0] = a3\n 18983: a4 = a3 >u 0\n 18985: a0 = a2 >u 0\n 18987: a0 = a4 if a2 == 0\n 18990: a4 = a1 >u 0\n 18992: a3 = a5 <u 0x100\n 18996: a3 = a3 ^ 0x1\n 18999: a3 = a4 if a1 != 0\n 19002: a3 = a0 if s1 != 0\n 19005: a0 = u64 [sp + 0x1b8]\n 19009: a0 = a0 | a3\n 19012: u64 [sp + 0x170] = t0\n 19016: a3 = t0\n 19018: t0 = t2\n 19020: a3 = 0 if a0 != 0\n 19022: u64 [sp + 0x190] = a3\n 19026: a4 = ra\n 19028: a4 = 0 if a0 != 0\n 19030: t2 = t1\n 19032: t1 = 0 if a0 != 0\n 19034: s1 = t0\n 19036: s1 = 0 if a0 != 0\n 19038: jump @270 if a0 != 0\n      : @263 (gas: 6)\n 19042: a0 = a5 ^ 0xff\n 19046: a3 = u64 [sp + 0x1b0]\n 19050: a0 = a0 | a3\n 19053: a3 = a1 | a2\n 19056: a0 = a0 | a3\n 19059: jump @270 if a0 == 0\n      : @264 (gas: 259)\n 19063: a3 = a5 + 0x1\n 19066: u64 [sp + 0x1b8] = a3\n 19070: a0 = a3 <u 0x1\n 19073: a0 = a0 + a1\n 19076: u64 [sp + 0x198] = a0\n 19080: a0 = a0 | a3\n 19083: a0 = a0 <u 0x1\n 19086: a1 = ra\n 19088: a3 = u64 [sp + 0x1b0]\n 19092: a0 = a0 + a3\n 19095: u64 [sp + 0x188] = a0\n 19099: a0 = a0 <u a3\n 19102: a0 = a0 + a2\n 19105: u64 [sp + 0x190] = a0\n 19109: i32 ra = 0xff - a5\n 19113: u8 [sp + 0x3e0] = t0\n 19117: u8 [sp + 991] = 0\n 19121: u8 [sp + 990] = 0\n 19125: u8 [sp + 989] = 0\n 19129: u8 [sp + 988] = 0\n 19133: u8 [sp + 987] = 0\n 19137: u8 [sp + 986] = 0\n 19141: u8 [sp + 985] = 0\n 19145: u8 [sp + 984] = 0\n 19149: u8 [sp + 983] = 0\n 19153: u8 [sp + 982] = 0\n 19157: u8 [sp + 981] = 0\n 19161: u8 [sp + 980] = 0\n 19165: u8 [sp + 979] = 0\n 19169: u8 [sp + 978] = 0\n 19173: u8 [sp + 977] = 0\n 19177: u8 [sp + 976] = 0\n 19181: u8 [sp + 975] = 0\n 19185: u8 [sp + 974] = 0\n 19189: u8 [sp + 973] = 0\n 19193: u8 [sp + 972] = 0\n 19197: u8 [sp + 971] = 0\n 19201: u8 [sp + 970] = 0\n 19205: u8 [sp + 969] = 0\n 19209: u8 [sp + 968] = 0\n 19213: u8 [sp + 967] = 0\n 19217: u8 [sp + 966] = 0\n 19221: u8 [sp + 965] = 0\n 19225: u8 [sp + 964] = 0\n 19229: u8 [sp + 963] = 0\n 19233: u8 [sp + 962] = 0\n 19237: u8 [sp + 961] = 0\n 19241: u8 [sp + 960] = 0\n 19245: u8 [sp + 0x3e8] = t2\n 19249: a0 = t0 >> 0x38\n 19252: u64 [sp + 0x160] = a0\n 19256: u8 [sp + 0x3e7] = a0\n 19260: a0 = t0 >> 0x30\n 19263: u64 [sp + 0x158] = a0\n 19267: u8 [sp + 0x3e6] = a0\n 19271: a0 = t0 >> 0x28\n 19274: u64 [sp + 0x150] = a0\n 19278: u8 [sp + 0x3e5] = a0\n 19282: a0 = t0 >> 0x20\n 19285: u64 [sp + 0x100] = a0\n 19289: u8 [sp + 0x3e4] = a0\n 19293: a0 = ra << 0x38\n 19296: a0 = a0 >> 0x3b\n 19299: s1 = sp + 0x3e0\n 19303: s1 = s1 - a0\n 19306: a0 = t0 >> 0x18\n 19309: u64 [sp + 0xb0] = a0\n 19313: u8 [sp + 0x3e3] = a0\n 19317: a0 = t0 >> 0x10\n 19320: u64 [sp + 0xa8] = a0\n 19324: u8 [sp + 0x3e2] = a0\n 19328: a0 = t0 >> 0x8\n 19331: u64 [sp + 0xa0] = a0\n 19335: u8 [sp + 0x3e1] = a0\n 19339: u8 [sp + 0x3f0] = a1\n 19343: a0 = t2 >> 0x38\n 19346: u64 [sp + 0x98] = a0\n 19350: u8 [sp + 0x3ef] = a0\n 19354: a0 = t2 >> 0x30\n 19357: u64 [sp + 0x90] = a0\n 19361: u8 [sp + 0x3ee] = a0\n 19365: a0 = t2 >> 0x28\n 19368: u64 [sp + 0x88] = a0\n 19372: u8 [sp + 0x3ed] = a0\n 19376: a0 = t2 >> 0x20\n 19379: u64 [sp + 0x80] = a0\n 19383: u8 [sp + 0x3ec] = a0\n 19387: a0 = t2 >> 0x18\n 19390: u64 [sp + 0x78] = a0\n 19393: u8 [sp + 0x3eb] = a0\n 19397: a0 = t2 >> 0x10\n 19400: u64 [sp + 0x70] = a0\n 19403: u8 [sp + 0x3ea] = a0\n 19407: u64 [sp + 0x38] = t2\n 19410: a0 = t2 >> 0x8\n 19413: u64 [sp + 0x68] = a0\n 19416: u8 [sp + 0x3e9] = a0\n 19420: t2 = u64 [sp + 0x170]\n 19424: u8 [sp + 0x3f8] = t2\n 19428: a0 = a1 >> 0x38\n 19431: u64 [sp + 0x60] = a0\n 19434: u8 [sp + 0x3f7] = a0\n 19438: a0 = a1 >> 0x30\n 19441: u64 [sp + 0x58] = a0\n 19444: u8 [sp + 0x3f6] = a0\n 19448: a0 = a1 >> 0x28\n 19451: u64 [sp + 0x50] = a0\n 19454: u8 [sp + 0x3f5] = a0\n 19458: a0 = a1 >> 0x20\n 19461: u64 [sp + 0x48] = a0\n 19464: u8 [sp + 0x3f4] = a0\n 19468: a0 = a1 >> 0x18\n 19471: u64 [sp + 0x40] = a0\n 19474: u8 [sp + 0x3f3] = a0\n 19478: a0 = a1 >> 0x10\n 19481: u64 [sp + 0xf8] = a0\n 19485: u8 [sp + 0x3f2] = a0\n 19489: u64 [sp + 0x168] = a1\n 19493: a1 = a1 >> 0x8\n 19496: u64 [sp + 0xf0] = a1\n 19500: u8 [sp + 0x3f1] = a1\n 19504: a0 = t2 >> 0x38\n 19507: u64 [sp + 0xe8] = a0\n 19511: u8 [sp + 0x3ff] = a0\n 19515: a0 = t2 >> 0x30\n 19518: u64 [sp + 0xe0] = a0\n 19522: u8 [sp + 0x3fe] = a0\n 19526: a0 = t2 >> 0x28\n 19529: u64 [sp + 0xd8] = a0\n 19533: u8 [sp + 0x3fd] = a0\n 19537: a0 = t2 >> 0x20\n 19540: u64 [sp + 0xd0] = a0\n 19544: u8 [sp + 0x3fc] = a0\n 19548: a0 = t2 >> 0x18\n 19551: u64 [sp + 0xc8] = a0\n 19555: u8 [sp + 0x3fb] = a0\n 19559: a0 = t2 >> 0x10\n 19562: u64 [sp + 0xc0] = a0\n 19566: u8 [sp + 0x3fa] = a0\n 19570: a0 = t2 >> 0x8\n 19573: u64 [sp + 0xb8] = a0\n 19577: u8 [sp + 0x3f9] = a0\n 19581: a0 = u8 [s1 + 0x19]\n 19584: a1 = u8 [s1 + 0x18]\n 19587: a2 = u8 [s1 + 0x1a]\n 19590: a4 = u8 [s1 + 0x1b]\n 19593: a0 = a0 << 0x8\n 19596: a0 = a0 | a1\n 19599: a2 = a2 << 0x10\n 19602: a4 = a4 << 0x18\n 19605: a2 = a2 | a4\n 19608: a0 = a0 | a2\n 19611: a1 = u8 [s1 + 0x1d]\n 19614: a2 = u8 [s1 + 0x1c]\n 19617: a4 = u8 [s1 + 0x1e]\n 19620: a5 = u8 [s1 + 0x1f]\n 19623: a1 = a1 << 0x8\n 19626: a1 = a1 | a2\n 19629: a4 = a4 << 0x10\n 19632: a5 = a5 << 0x18\n 19635: a4 = a4 | a5\n 19638: a1 = a1 | a4\n 19641: a1 = a1 << 0x20\n 19644: a2 = a1 | a0\n 19647: a0 = u8 [s1 + 0x11]\n 19650: a1 = u8 [s1 + 0x10]\n 19653: a4 = u8 [s1 + 0x12]\n 19656: a5 = u8 [s1 + 0x13]\n 19659: a0 = a0 << 0x8\n 19662: a0 = a0 | a1\n 19665: a4 = a4 << 0x10\n 19668: a5 = a5 << 0x18\n 19671: a4 = a4 | a5\n 19674: a0 = a0 | a4\n 19677: a1 = u8 [s1 + 0x15]\n 19680: a4 = u8 [s1 + 0x14]\n 19683: a5 = u8 [s1 + 0x16]\n 19686: a3 = u8 [s1 + 0x17]\n 19689: a1 = a1 << 0x8\n 19692: a1 = a1 | a4\n 19695: a5 = a5 << 0x10\n 19698: a3 = a3 << 0x18\n 19701: a3 = a3 | a5\n 19704: a1 = a1 | a3\n 19707: a1 = a1 << 0x20\n 19710: t1 = a1 | a0\n 19713: a3 = ra & 0x7\n 19716: a0 = a2 << a3\n 19719: a1 = t1 >> 0x1\n 19722: u64 [sp + 0x30] = t0\n 19725: t0 = a3 ^ 0x3f\n 19728: a1 = a1 >> t0\n 19731: a0 = a0 | a1\n 19734: u64 [sp + 0x148] = a0\n 19738: a0 = u8 [s1 + 0x9]\n 19741: a1 = u8 [s1 + 0x8]\n 19744: a2 = u8 [s1 + 0xa]\n 19747: a4 = u8 [s1 + 0xb]\n 19750: a0 = a0 << 0x8\n 19753: a0 = a0 | a1\n 19756: a2 = a2 << 0x10\n 19759: a4 = a4 << 0x18\n 19762: a2 = a2 | a4\n 19765: a0 = a0 | a2\n 19768: a1 = u8 [s1 + 0xd]\n 19771: a2 = u8 [s1 + 0xc]\n 19774: a4 = u8 [s1 + 0xe]\n 19777: a5 = u8 [s1 + 0xf]\n 19780: a1 = a1 << 0x8\n 19783: a1 = a1 | a2\n 19786: a4 = a4 << 0x10\n 19789: a5 = a5 << 0x18\n 19792: a4 = a4 | a5\n 19795: a1 = a1 | a4\n 19798: a1 = a1 << 0x20\n 19801: a2 = a1 | a0\n 19804: a0 = a2 >> 0x1\n 19807: a1 = a3 ^ 0xffffffffffffffff\n 19810: a0 = a0 >> a1\n 19813: a1 = t1 << a3\n 19816: a0 = a0 | a1\n 19819: u64 [sp + 0x1b0] = a0\n 19823: a0 = u8 [s1 + 0x1]\n 19826: a1 = u8 [s1]\n 19828: a4 = u8 [s1 + 0x2]\n 19831: a5 = u8 [s1 + 0x3]\n 19834: a0 = a0 << 0x8\n 19837: a0 = a0 | a1\n 19840: a4 = a4 << 0x10\n 19843: a5 = a5 << 0x18\n 19846: a4 = a4 | a5\n 19849: a0 = a0 | a4\n 19852: a1 = u8 [s1 + 0x5]\n 19855: a4 = u8 [s1 + 0x4]\n 19858: a5 = u8 [s1 + 0x6]\n 19861: s1 = u8 [s1 + 0x7]\n 19864: a1 = a1 << 0x8\n 19867: a1 = a1 | a4\n 19870: a4 = u64 [sp + 0x190]\n 19874: ra = u64 [sp + 0x198]\n 19878: a5 = a5 << 0x10\n 19881: s1 = s1 << 0x18\n 19884: a5 = a5 | s1\n 19887: a1 = a1 | a5\n 19890: t1 = u64 [sp + 0x188]\n 19894: a1 = a1 << 0x20\n 19897: a0 = a0 | a1\n 19900: a1 = a0 >> 0x1\n 19903: a1 = a1 >> t0\n 19906: s1 = u64 [sp + 0x1b8]\n 19910: a2 = a2 << a3\n 19913: a1 = a1 | a2\n 19916: u64 [sp + 0x1a0] = a1\n 19920: a1 = ra | a4\n 19923: a2 = s1 | t1\n 19926: a1 = a1 | a2\n 19929: a0 = a0 << a3\n 19932: u64 [sp + 0x1a8] = a0\n 19936: jump @268 if a1 == 0\n      : @265 (gas: 213)\n 19940: u64 [sp + 384] = 0\n 19944: u64 [sp + 376] = 0\n 19948: a0 = u64 [sp + 0x30]\n 19951: u8 [sp + 0x380] = a0\n 19955: a0 = u64 [sp + 0x38]\n 19958: u8 [sp + 0x388] = a0\n 19962: a0 = u64 [sp + 0x160]\n 19966: u8 [sp + 0x387] = a0\n 19970: a0 = u64 [sp + 0x158]\n 19974: u8 [sp + 0x386] = a0\n 19978: a0 = u64 [sp + 0x150]\n 19982: u8 [sp + 0x385] = a0\n 19986: a0 = u64 [sp + 0x100]\n 19990: u8 [sp + 0x384] = a0\n 19994: a0 = u64 [sp + 0xb0]\n 19998: u8 [sp + 0x383] = a0\n 20002: a0 = u64 [sp + 0xa8]\n 20006: u8 [sp + 0x382] = a0\n 20010: a0 = u64 [sp + 0xa0]\n 20014: u8 [sp + 0x381] = a0\n 20018: a0 = u64 [sp + 0x168]\n 20022: u8 [sp + 0x390] = a0\n 20026: a0 = u64 [sp + 0x98]\n 20030: u8 [sp + 0x38f] = a0\n 20034: a0 = u64 [sp + 0x90]\n 20038: u8 [sp + 0x38e] = a0\n 20042: a0 = u64 [sp + 0x88]\n 20046: u8 [sp + 0x38d] = a0\n 20050: a0 = u64 [sp + 0x80]\n 20054: u8 [sp + 0x38c] = a0\n 20058: a0 = u64 [sp + 0x78]\n 20061: u8 [sp + 0x38b] = a0\n 20065: a0 = u64 [sp + 0x70]\n 20068: u8 [sp + 0x38a] = a0\n 20072: a0 = u64 [sp + 0x68]\n 20075: u8 [sp + 0x389] = a0\n 20079: u8 [sp + 0x398] = t2\n 20083: a0 = u64 [sp + 0x60]\n 20086: u8 [sp + 0x397] = a0\n 20090: a0 = u64 [sp + 0x58]\n 20093: u8 [sp + 0x396] = a0\n 20097: a0 = u64 [sp + 0x50]\n 20100: u8 [sp + 0x395] = a0\n 20104: a0 = u64 [sp + 0x48]\n 20107: u8 [sp + 0x394] = a0\n 20111: a0 = u64 [sp + 0x40]\n 20114: u8 [sp + 0x393] = a0\n 20118: u8 [sp + 959] = 0\n 20122: u8 [sp + 958] = 0\n 20126: u8 [sp + 957] = 0\n 20130: u8 [sp + 956] = 0\n 20134: u8 [sp + 955] = 0\n 20138: u8 [sp + 954] = 0\n 20142: u8 [sp + 953] = 0\n 20146: u8 [sp + 952] = 0\n 20150: u8 [sp + 951] = 0\n 20154: u8 [sp + 950] = 0\n 20158: u8 [sp + 949] = 0\n 20162: u8 [sp + 948] = 0\n 20166: u8 [sp + 947] = 0\n 20170: u8 [sp + 946] = 0\n 20174: u8 [sp + 945] = 0\n 20178: u8 [sp + 944] = 0\n 20182: u8 [sp + 943] = 0\n 20186: u8 [sp + 942] = 0\n 20190: u8 [sp + 941] = 0\n 20194: u8 [sp + 940] = 0\n 20198: u8 [sp + 939] = 0\n 20202: u8 [sp + 938] = 0\n 20206: u8 [sp + 937] = 0\n 20210: u8 [sp + 936] = 0\n 20214: u8 [sp + 935] = 0\n 20218: u8 [sp + 934] = 0\n 20222: u8 [sp + 933] = 0\n 20226: u8 [sp + 932] = 0\n 20230: u8 [sp + 931] = 0\n 20234: u8 [sp + 930] = 0\n 20238: u8 [sp + 929] = 0\n 20242: u8 [sp + 928] = 0\n 20246: a0 = u64 [sp + 0xf8]\n 20250: u8 [sp + 0x392] = a0\n 20254: a0 = u64 [sp + 0xf0]\n 20258: u8 [sp + 0x391] = a0\n 20262: a0 = u64 [sp + 0xe8]\n 20266: u8 [sp + 0x39f] = a0\n 20270: a0 = u64 [sp + 0xe0]\n 20274: u8 [sp + 0x39e] = a0\n 20278: a0 = u64 [sp + 0xd8]\n 20282: u8 [sp + 0x39d] = a0\n 20286: a0 = u64 [sp + 0xd0]\n 20290: u8 [sp + 0x39c] = a0\n 20294: a0 = u64 [sp + 0xc8]\n 20298: u8 [sp + 0x39b] = a0\n 20302: a0 = u64 [sp + 0xc0]\n 20306: u8 [sp + 0x39a] = a0\n 20310: a0 = u64 [sp + 0xb8]\n 20314: u8 [sp + 0x399] = a0\n 20318: a0 = s1 << 0x38\n 20321: a0 = a0 >> 0x3b\n 20324: a2 = sp + 0x380\n 20328: a2 = a2 + a0\n 20331: a0 = u8 [a2 + 0x11]\n 20334: a1 = u8 [a2 + 0x10]\n 20337: a3 = u8 [a2 + 0x12]\n 20340: a4 = u8 [a2 + 0x13]\n 20343: a0 = a0 << 0x8\n 20346: a0 = a0 | a1\n 20349: a3 = a3 << 0x10\n 20352: a4 = a4 << 0x18\n 20355: a3 = a3 | a4\n 20358: a0 = a0 | a3\n 20361: a1 = u8 [a2 + 0x15]\n 20364: a3 = u8 [a2 + 0x14]\n 20367: a4 = u8 [a2 + 0x16]\n 20370: a5 = u8 [a2 + 0x17]\n 20373: a1 = a1 << 0x8\n 20376: a1 = a1 | a3\n 20379: a4 = a4 << 0x10\n 20382: a5 = a5 << 0x18\n 20385: a4 = a4 | a5\n 20388: a1 = a1 | a4\n 20391: a1 = a1 << 0x20\n 20394: ra = a1 | a0\n 20397: a3 = s1 & 0x7\n 20400: t0 = ra >> a3\n 20403: a1 = u8 [a2 + 0x19]\n 20406: a4 = u8 [a2 + 0x18]\n 20409: a5 = u8 [a2 + 0x1a]\n 20412: s1 = u8 [a2 + 0x1b]\n 20415: a1 = a1 << 0x8\n 20418: a1 = a1 | a4\n 20421: a5 = a5 << 0x10\n 20424: s1 = s1 << 0x18\n 20427: a5 = a5 | s1\n 20430: a1 = a1 | a5\n 20433: a4 = u8 [a2 + 0x1d]\n 20436: a5 = u8 [a2 + 0x1c]\n 20439: s1 = u8 [a2 + 0x1e]\n 20442: a0 = u8 [a2 + 0x1f]\n 20445: a4 = a4 << 0x8\n 20448: a4 = a4 | a5\n 20451: s1 = s1 << 0x10\n 20454: a0 = a0 << 0x18\n 20457: a0 = a0 | s1\n 20460: a0 = a0 | a4\n 20463: a0 = a0 << 0x20\n 20466: t2 = a0 | a1\n 20469: a0 = t2 << 0x1\n 20472: a4 = a3 ^ 0x3f\n 20475: a0 = a0 << a4\n 20478: a0 = t0 | a0\n 20481: u64 [sp + 0x168] = a0\n 20485: a0 = u8 [a2 + 0x9]\n 20488: a1 = u8 [a2 + 0x8]\n 20491: s1 = u8 [a2 + 0xa]\n 20494: a5 = u8 [a2 + 0xb]\n 20497: a0 = a0 << 0x8\n 20500: a0 = a0 | a1\n 20503: s1 = s1 << 0x10\n 20506: a5 = a5 << 0x18\n 20509: a5 = a5 | s1\n 20512: t0 = a5 | a0\n 20515: a1 = u8 [a2 + 0xd]\n 20518: a5 = u8 [a2 + 0xc]\n 20521: s1 = u8 [a2 + 0xe]\n 20524: a0 = u8 [a2 + 0xf]\n 20527: a1 = a1 << 0x8\n 20530: a1 = a1 | a5\n 20533: s1 = s1 << 0x10\n 20536: a0 = a0 << 0x18\n 20539: a0 = a0 | s1\n 20542: a0 = a0 | a1\n 20545: a0 = a0 << 0x20\n 20548: t0 = a0 | t0\n 20551: a0 = t0 >> a3\n 20554: ra = ra << 0x1\n 20557: a5 = a3 ^ 0xffffffffffffffff\n 20560: a5 = ra << a5\n 20563: a0 = a0 | a5\n 20566: u64 [sp + 0x170] = a0\n 20570: a0 = u8 [a2 + 0x1]\n 20573: a5 = u8 [a2]\n 20575: s1 = u8 [a2 + 0x2]\n 20578: a1 = u8 [a2 + 0x3]\n 20581: a0 = a0 << 0x8\n 20584: a0 = a0 | a5\n 20587: s1 = s1 << 0x10\n 20590: a1 = a1 << 0x18\n 20593: a1 = a1 | s1\n 20596: a0 = a0 | a1\n 20599: a1 = u8 [a2 + 0x5]\n 20602: a5 = u8 [a2 + 0x4]\n 20605: s1 = u8 [a2 + 0x6]\n 20608: a2 = u8 [a2 + 0x7]\n 20611: a1 = a1 << 0x8\n 20614: a1 = a1 | a5\n 20617: s1 = s1 << 0x10\n 20620: a2 = a2 << 0x18\n 20623: a2 = a2 | s1\n 20626: a1 = a1 | a2\n 20629: a1 = a1 << 0x20\n 20632: a0 = a0 | a1\n 20635: t0 = t0 << 0x1\n 20638: a1 = t0 << a4\n 20641: a2 = a0 >> a3\n 20644: ra = a2 | a1\n 20647: t1 = t2 >> a3\n 20650: u64 [sp + 344] = 0x270f\n 20656: u64 [sp + 352] = 0x2710\n 20662: u64 [sp + 336] = 0\n 20666: t2 = u64 [sp + 0x168]\n 20670: t0 = u64 [sp + 0x148]\n 20674: fallthrough\n      : @266 (gas: 86)\n 20675: u64 [sp + 360] = 0\n 20679: a0 = ra >> 0x3f\n 20682: a4 = u64 [sp + 0x170]\n 20686: s1 = a4 << 0x1\n 20689: s1 = s1 | a0\n 20692: a2 = ra << 0x1\n 20695: a3 = t0\n 20697: a1 = t0 >> 0x3f\n 20700: ra = t1\n 20702: t1 = a2 | a1\n 20705: a1 = u64 [sp + 0x150]\n 20709: a0 = a1 ^ s1\n 20712: t0 = u64 [sp + 0x1b0]\n 20716: a5 = a1 <u s1\n 20719: a2 = u64 [sp + 0x158]\n 20723: a2 = a2 <u t1\n 20726: a2 = a5 if a0 != 0\n 20729: ra = ra << 0x1\n 20732: a5 = t2\n 20734: a0 = t2 >> 0x3f\n 20737: t2 = ra | a0\n 20740: a0 = a4 >> 0x3f\n 20743: a4 = a5 << 0x1\n 20746: a0 = a0 | a4\n 20749: a4 = a3 << 0x1\n 20752: a3 = t0 >> 0x3f\n 20755: ra = a4 | a3\n 20758: a4 = t0 << 0x1\n 20761: a3 = u64 [sp + 0x1a0]\n 20765: a5 = a3 >> 0x3f\n 20768: t0 = a4 | a5\n 20771: a4 = a3 << 0x1\n 20774: a5 = u64 [sp + 0x1a8]\n 20778: a3 = a5 >> 0x3f\n 20781: a3 = a3 | a4\n 20784: a5 = a5 << 0x1\n 20787: a4 = u64 [sp + 0x180]\n 20791: a5 = a5 | a4\n 20794: u64 [sp + 0x1a8] = a5\n 20798: a5 = u64 [sp + 0x178]\n 20802: a3 = a3 | a5\n 20805: u64 [sp + 0x1a0] = a3\n 20809: a3 = a5 | t0\n 20812: u64 [sp + 0x1b0] = a3\n 20816: t0 = a5 | ra\n 20819: a3 = a1 - a0\n 20822: a2 = a3 <u a2\n 20825: a3 = a1 <u a0\n 20828: a5 = t2\n 20830: a4 = a1 - t2\n 20833: a4 = a4 - a3\n 20836: a4 = a4 - a2\n 20839: a3 = a4 >>a 0x3f\n 20842: a4 = u64 [sp + 0x160]\n 20846: a4 = a4 & a3\n 20849: ra = t1 - a4\n 20852: a1 = t1 <u a4\n 20855: a2 = s1 - a1\n 20858: u64 [sp + 0x170] = a2\n 20862: a1 = 0 if s1 != 0\n 20864: t2 = a0 - a1\n 20867: a0 = a0 <u a1\n 20870: t1 = a5 - a0\n 20873: a4 = u64 [sp + 0x1b8]\n 20877: a5 = u64 [sp + 0x198]\n 20881: a0 = a4 | a5\n 20884: a0 = a0 <u 0x1\n 20887: a1 = u64 [sp + 0x188]\n 20891: a2 = a1 <u a0\n 20894: a0 = a1 - a0\n 20897: s1 = a4 <u 0x1\n 20900: a5 = a5 - s1\n 20903: a1 = u64 [sp + 0x190]\n 20907: a1 = a1 - a2\n 20910: a4 = a4 + 0xffffffffffffffff\n 20913: u64 [sp + 0x198] = a5\n 20917: u64 [sp + 0x190] = a1\n 20921: a1 = a1 | a5\n 20924: u64 [sp + 0x1b8] = a4\n 20928: s1 = a4 | a0\n 20931: a1 = a1 | s1\n 20934: a3 = a3 & 0x1\n 20937: u64 [sp + 0x180] = a3\n 20941: u64 [sp + 0x188] = a0\n 20945: u64 [sp + 376] = 0\n 20949: jump @266 if a1 != 0\n      : @267 (gas: 1)\n 20953: jump @269\n      : @268 (gas: 4)\n 20955: u64 [sp + 384] = 0\n 20959: u64 [sp + 360] = 0\n 20963: t0 = u64 [sp + 0x148]\n 20967: fallthrough\n      : @269 (gas: 21)\n 20968: a2 = u64 [sp + 0x1b0]\n 20972: a0 = a2 >> 0x3f\n 20975: a1 = t0 << 0x1\n 20978: a0 = a0 | a1\n 20981: a4 = u64 [sp + 0x1a0]\n 20985: a1 = a4 >> 0x3f\n 20988: a2 = a2 << 0x1\n 20991: a1 = a1 | a2\n 20994: a5 = u64 [sp + 0x1a8]\n 20998: a2 = a5 >> 0x3f\n 21001: a4 = a4 << 0x1\n 21004: a5 = a5 << 0x1\n 21007: s1 = u64 [sp + 0x180]\n 21011: s1 = s1 | a5\n 21014: a3 = u64 [sp + 0x168]\n 21018: a2 = a2 | a3\n 21021: t1 = a2 | a4\n 21024: a4 = a3 | a1\n 21027: a0 = a0 | a3\n 21030: u64 [sp + 0x190] = a0\n 21034: fallthrough\n      : @270 (gas: 22)\n 21035: u64 [sp + 0x100] = a4\n 21039: u64 [sp + 0x148] = t1\n 21043: u64 [sp + 0x150] = s1\n 21047: i32 a0 = sp + 0x5c0\n 21051: ecalli 5 // 'caller'\n 21053: a0 = i32 [sp + 0x5d0]\n 21057: u64 [sp + 0x188] = a0\n 21061: a0 = u64 [sp + 0x5c0]\n 21065: u64 [sp + 0x180] = a0\n 21069: a0 = u64 [sp + 0x5c8]\n 21073: u64 [sp + 0x178] = a0\n 21077: i32 a0 = sp + 0x5e0\n 21081: ecalli 0 // 'address'\n 21082: a0 = i32 [sp + 0x5f0]\n 21086: u64 [sp + 0x170] = a0\n 21090: a0 = u64 [sp + 0x5e0]\n 21094: u64 [sp + 0x168] = a0\n 21098: a0 = u64 [sp + 0x5e8]\n 21102: u64 [sp + 0x160] = a0\n 21106: a0 = 0x40\n 21109: a1 = 0x20\n 21112: ra = 208, jump @0\n      : @271 [@dyn 104] (gas: 102)\n 21118: a1 = u8 [a0 + 0x11]\n 21121: a2 = u8 [a0 + 0x10]\n 21124: a3 = u8 [a0 + 0x12]\n 21127: a4 = u8 [a0 + 0x13]\n 21130: a1 = a1 << 0x8\n 21133: a1 = a1 | a2\n 21136: a3 = a3 << 0x10\n 21139: a4 = a4 << 0x18\n 21142: a3 = a3 | a4\n 21145: a1 = a1 | a3\n 21148: a2 = u8 [a0 + 0x15]\n 21151: a3 = u8 [a0 + 0x14]\n 21154: a4 = u8 [a0 + 0x16]\n 21157: a5 = u8 [a0 + 0x17]\n 21160: a2 = a2 << 0x8\n 21163: a2 = a2 | a3\n 21166: a4 = a4 << 0x10\n 21169: a5 = a5 << 0x18\n 21172: a4 = a4 | a5\n 21175: a2 = a2 | a4\n 21178: a2 = a2 << 0x20\n 21181: t0 = a2 | a1\n 21184: a2 = u8 [a0 + 0x1]\n 21187: a3 = u8 [a0]\n 21189: a4 = u8 [a0 + 0x2]\n 21192: a5 = u8 [a0 + 0x3]\n 21195: a2 = a2 << 0x8\n 21198: a2 = a2 | a3\n 21201: a4 = a4 << 0x10\n 21204: a5 = a5 << 0x18\n 21207: a4 = a4 | a5\n 21210: a2 = a2 | a4\n 21213: a3 = u8 [a0 + 0x5]\n 21216: a4 = u8 [a0 + 0x4]\n 21219: a5 = u8 [a0 + 0x6]\n 21222: s1 = u8 [a0 + 0x7]\n 21225: a3 = a3 << 0x8\n 21228: a3 = a3 | a4\n 21231: a5 = a5 << 0x10\n 21234: s1 = s1 << 0x18\n 21237: a5 = a5 | s1\n 21240: a3 = a3 | a5\n 21243: a3 = a3 << 0x20\n 21246: a2 = a2 | a3\n 21249: a3 = u8 [a0 + 0x19]\n 21252: a4 = u8 [a0 + 0x18]\n 21255: a5 = u8 [a0 + 0x1a]\n 21258: s1 = u8 [a0 + 0x1b]\n 21261: a3 = a3 << 0x8\n 21264: a3 = a3 | a4\n 21267: a5 = a5 << 0x10\n 21270: s1 = s1 << 0x18\n 21273: a5 = a5 | s1\n 21276: a3 = a3 | a5\n 21279: a4 = u8 [a0 + 0x1d]\n 21282: a5 = u8 [a0 + 0x1c]\n 21285: s1 = u8 [a0 + 0x1e]\n 21288: a1 = u8 [a0 + 0x1f]\n 21291: a4 = a4 << 0x8\n 21294: a4 = a4 | a5\n 21297: s1 = s1 << 0x10\n 21300: a1 = a1 << 0x18\n 21303: a1 = a1 | s1\n 21306: a1 = a1 | a4\n 21309: a1 = a1 << 0x20\n 21312: a3 = a3 | a1\n 21315: a1 = u8 [a0 + 0x9]\n 21318: a4 = u8 [a0 + 0x8]\n 21321: a5 = u8 [a0 + 0xa]\n 21324: s1 = u8 [a0 + 0xb]\n 21327: a1 = a1 << 0x8\n 21330: a1 = a1 | a4\n 21333: a5 = a5 << 0x10\n 21336: s1 = s1 << 0x18\n 21339: a5 = a5 | s1\n 21342: a1 = a1 | a5\n 21345: a4 = u8 [a0 + 0xd]\n 21348: a5 = u8 [a0 + 0xc]\n 21351: s1 = u8 [a0 + 0xe]\n 21354: a0 = u8 [a0 + 0xf]\n 21357: a4 = a4 << 0x8\n 21360: a4 = a4 | a5\n 21363: s1 = s1 << 0x10\n 21366: a0 = a0 << 0x18\n 21369: a0 = a0 | s1\n 21372: a0 = a0 | a4\n 21375: a0 = a0 << 0x20\n 21378: a0 = a0 | a1\n 21381: s1 = reverse a0\n 21383: a3 = reverse a3\n 21385: a1 = reverse a2\n 21387: a0 = reverse t0\n 21389: u64 [sp + 0x1b8] = a0\n 21393: u64 [sp + 0x198] = a1\n 21397: a0 = a0 | a1\n 21400: a1 = a3 | s1\n 21403: a1 = a1 | a0\n 21406: a1 = a1 >> 0x20\n 21409: a0 = a0 | s1\n 21412: a0 = a0 << 0x20\n 21415: a0 = a0 | a1\n 21418: jump @273 if a0 == 0\n      : @272 (gas: 1)\n 21421: jump @376\n      : @273 (gas: 5)\n 21424: i32 a0 = a3 + 0\n 21426: a1 = 0x20\n 21429: u64 [sp + 0x1a8] = a0\n 21433: u64 [sp + 0x1b0] = a3\n 21437: ra = 210, jump @0\n      : @274 [@dyn 105] (gas: 45)\n 21443: u8 [a0 + 31] = 0\n 21446: u8 [a0 + 30] = 0\n 21449: u8 [a0 + 29] = 0\n 21452: u8 [a0 + 28] = 0\n 21455: u8 [a0 + 27] = 0\n 21458: u8 [a0 + 26] = 0\n 21461: u8 [a0 + 25] = 0\n 21464: u8 [a0 + 24] = 0\n 21467: u8 [a0 + 23] = 0\n 21470: u8 [a0 + 22] = 0\n 21473: u8 [a0 + 21] = 0\n 21476: u8 [a0 + 20] = 0\n 21479: u8 [a0 + 19] = 0\n 21482: u8 [a0 + 18] = 0\n 21485: u8 [a0 + 17] = 0\n 21488: u8 [a0 + 16] = 0\n 21491: u8 [a0 + 15] = 0\n 21494: u8 [a0 + 14] = 0\n 21497: u8 [a0 + 13] = 0\n 21500: u8 [a0 + 12] = 0\n 21503: u8 [a0 + 11] = 0\n 21506: u8 [a0 + 10] = 0\n 21509: u8 [a0 + 9] = 0\n 21512: u8 [a0 + 8] = 0\n 21515: u8 [a0 + 7] = 0\n 21518: u8 [a0 + 6] = 0\n 21521: u8 [a0 + 5] = 0\n 21524: u8 [a0 + 3] = 0xdd\n 21529: u8 [a0 + 2] = 0x72\n 21533: u8 [a0 + 1] = 0xb8\n 21538: u8 [a0 + 0] = 0x23\n 21541: u64 [sp + 0x50] = s1\n 21544: a3 = u64 [sp + 0x198]\n 21548: a3 = a3 | s1\n 21551: a1 = 0x100000000\n 21561: u64 [sp + 0x158] = a1\n 21565: a1 = 0xfffffffc\n 21575: a2 = u64 [sp + 0x1b0]\n 21579: a1 = a2 <u a1\n 21582: a2 = u64 [sp + 0x1b8]\n 21586: a1 = 0 if a2 != 0\n 21588: u64 [sp + 0x1a0] = a3\n 21592: a1 = 0 if a3 != 0\n 21594: u8 [a0 + 4] = 0\n 21597: jump @276 if a1 != 0\n      : @275 (gas: 1)\n 21600: jump @376\n      : @276 (gas: 19)\n 21603: a0 = u64 [sp + 0x178]\n 21607: a0 = reverse a0\n 21609: a1 = a0 >> 0x20\n 21612: a2 = u64 [sp + 0x180]\n 21616: a2 = reverse a2\n 21618: a3 = a2 << 0x20\n 21621: a1 = a1 | a3\n 21624: u64 [sp + 0x180] = a1\n 21628: a0 = a0 << 0x20\n 21631: a1 = u64 [sp + 0x188]\n 21635: a1 = reverse a1\n 21637: a1 = a1 >> 0x20\n 21640: a0 = a0 | a1\n 21643: u64 [sp + 0x188] = a0\n 21647: s1 = a2 >> 0x20\n 21650: a0 = u64 [sp + 0x1a8]\n 21654: i32 a0 = a0 + 0x4\n 21657: a1 = 0x20\n 21660: ra = 212, jump @0\n      : @277 [@dyn 106] (gas: 64)\n 21666: a1 = reverse s1\n 21668: a2 = u64 [sp + 0x180]\n 21672: a2 = reverse a2\n 21674: a3 = u64 [sp + 0x188]\n 21678: a3 = reverse a3\n 21680: a4 = a3 >> 0x38\n 21683: u8 [a0 + 0x1f] = a4\n 21686: a4 = a3 >> 0x30\n 21689: u8 [a0 + 0x1e] = a4\n 21692: a4 = a3 >> 0x28\n 21695: u8 [a0 + 0x1d] = a4\n 21698: a4 = a3 >> 0x20\n 21701: u8 [a0 + 0x1c] = a4\n 21704: a4 = a3 >> 0x18\n 21707: u8 [a0 + 0x1b] = a4\n 21710: a4 = a3 >> 0x10\n 21713: u8 [a0 + 0x1a] = a4\n 21716: a4 = a3 >> 0x8\n 21719: u8 [a0 + 0x19] = a4\n 21722: u8 [a0 + 0x18] = a3\n 21725: u8 [a0 + 0x10] = a2\n 21728: u8 [a0 + 11] = 0\n 21731: u8 [a0 + 10] = 0\n 21734: u8 [a0 + 9] = 0\n 21737: u8 [a0 + 7] = 0\n 21740: u8 [a0 + 6] = 0\n 21743: u8 [a0 + 5] = 0\n 21746: u8 [a0 + 4] = 0\n 21749: u8 [a0 + 3] = 0\n 21752: u8 [a0 + 2] = 0\n 21755: u8 [a0 + 1] = 0\n 21758: u8 [a0 + 0] = 0\n 21760: a3 = a2 >> 0x38\n 21763: u8 [a0 + 0x17] = a3\n 21766: a3 = a2 >> 0x30\n 21769: u8 [a0 + 0x16] = a3\n 21772: a3 = a2 >> 0x28\n 21775: u8 [a0 + 0x15] = a3\n 21778: a3 = a2 >> 0x20\n 21781: u8 [a0 + 0x14] = a3\n 21784: a3 = a2 >> 0x18\n 21787: u8 [a0 + 0x13] = a3\n 21790: a3 = a2 >> 0x10\n 21793: u8 [a0 + 0x12] = a3\n 21796: a2 = a2 >> 0x8\n 21799: u8 [a0 + 0x11] = a2\n 21802: u8 [a0 + 0x8] = a1\n 21805: a2 = a1 >> 0x38\n 21808: u8 [a0 + 0xf] = a2\n 21811: a2 = a1 >> 0x30\n 21814: u8 [a0 + 0xe] = a2\n 21817: a2 = a1 >> 0x28\n 21820: u8 [a0 + 0xd] = a2\n 21823: a1 = a1 >> 0x20\n 21826: a2 = u64 [sp + 0x158]\n 21830: a2 = a2 + 0xffffffffffffffdc\n 21833: a3 = u64 [sp + 0x1b0]\n 21837: a2 = a3 <u a2\n 21840: a3 = u64 [sp + 0x1b8]\n 21844: a2 = 0 if a3 != 0\n 21846: a3 = u64 [sp + 0x1a0]\n 21850: a2 = 0 if a3 != 0\n 21852: u8 [a0 + 0xc] = a1\n 21855: jump @279 if a2 != 0\n      : @278 (gas: 1)\n 21858: jump @376\n      : @279 (gas: 19)\n 21861: a0 = u64 [sp + 0x160]\n 21865: a0 = reverse a0\n 21867: a1 = a0 >> 0x20\n 21870: a2 = u64 [sp + 0x168]\n 21874: a2 = reverse a2\n 21876: a3 = a2 << 0x20\n 21879: a1 = a1 | a3\n 21882: u64 [sp + 0x188] = a1\n 21886: a0 = a0 << 0x20\n 21889: a1 = u64 [sp + 0x170]\n 21893: a1 = reverse a1\n 21895: a1 = a1 >> 0x20\n 21898: a0 = a0 | a1\n 21901: u64 [sp + 0x180] = a0\n 21905: s1 = a2 >> 0x20\n 21908: a0 = u64 [sp + 0x1a8]\n 21912: i32 a0 = a0 + 0x24\n 21915: a1 = 0x20\n 21918: ra = 214, jump @0\n      : @280 [@dyn 107] (gas: 63)\n 21924: a1 = reverse s1\n 21926: a2 = u64 [sp + 0x188]\n 21930: a2 = reverse a2\n 21932: a3 = u64 [sp + 0x180]\n 21936: a3 = reverse a3\n 21938: a4 = a3 >> 0x38\n 21941: u8 [a0 + 0x1f] = a4\n 21944: a4 = a3 >> 0x30\n 21947: u8 [a0 + 0x1e] = a4\n 21950: a4 = a3 >> 0x28\n 21953: u8 [a0 + 0x1d] = a4\n 21956: a4 = a3 >> 0x20\n 21959: u8 [a0 + 0x1c] = a4\n 21962: a4 = a3 >> 0x18\n 21965: u8 [a0 + 0x1b] = a4\n 21968: a4 = a3 >> 0x10\n 21971: u8 [a0 + 0x1a] = a4\n 21974: a4 = a3 >> 0x8\n 21977: u8 [a0 + 0x19] = a4\n 21980: u8 [a0 + 0x18] = a3\n 21983: u8 [a0 + 0x10] = a2\n 21986: u8 [a0 + 11] = 0\n 21989: u8 [a0 + 10] = 0\n 21992: u8 [a0 + 9] = 0\n 21995: u8 [a0 + 7] = 0\n 21998: u8 [a0 + 6] = 0\n 22001: u8 [a0 + 5] = 0\n 22004: u8 [a0 + 4] = 0\n 22007: u8 [a0 + 3] = 0\n 22010: u8 [a0 + 2] = 0\n 22013: u8 [a0 + 1] = 0\n 22016: u8 [a0 + 0] = 0\n 22018: a3 = a2 >> 0x38\n 22021: u8 [a0 + 0x17] = a3\n 22024: a3 = a2 >> 0x30\n 22027: u8 [a0 + 0x16] = a3\n 22030: a3 = a2 >> 0x28\n 22033: u8 [a0 + 0x15] = a3\n 22036: a3 = a2 >> 0x20\n 22039: u8 [a0 + 0x14] = a3\n 22042: a3 = a2 >> 0x18\n 22045: u8 [a0 + 0x13] = a3\n 22048: a3 = a2 >> 0x10\n 22051: u8 [a0 + 0x12] = a3\n 22054: a2 = a2 >> 0x8\n 22057: u8 [a0 + 0x11] = a2\n 22060: u8 [a0 + 0x8] = a1\n 22063: a2 = a1 >> 0x38\n 22066: u8 [a0 + 0xf] = a2\n 22069: a2 = a1 >> 0x30\n 22072: u8 [a0 + 0xe] = a2\n 22075: a2 = a1 >> 0x28\n 22078: u8 [a0 + 0xd] = a2\n 22081: a2 = a1 >> 0x20\n 22084: a3 = 0xffffffbc\n 22094: a4 = u64 [sp + 0x1b0]\n 22098: a3 = a4 <u a3\n 22101: a4 = u64 [sp + 0x1b8]\n 22105: a3 = 0 if a4 != 0\n 22107: a4 = u64 [sp + 0x1a0]\n 22111: a3 = 0 if a4 != 0\n 22113: u8 [a0 + 0xc] = a2\n 22116: jump @282 if a3 != 0\n      : @281 (gas: 1)\n 22119: jump @376\n      : @282 (gas: 6)\n 22122: a1 = 0x800000000\n 22132: u64 [sp + 0x1a0] = a1\n 22136: s1 = u64 [sp + 0x1a8]\n 22140: i32 a0 = s1 + 0x44\n 22143: a1 = 0x20\n 22146: ra = 216, jump @0\n      : @283 [@dyn 108] (gas: 127)\n 22152: a1 = u64 [sp + 0x190]\n 22156: a2 = reverse a1\n 22158: a1 = u64 [sp + 0x100]\n 22162: a4 = reverse a1\n 22164: a1 = u64 [sp + 0x148]\n 22168: a5 = reverse a1\n 22170: a1 = u64 [sp + 0x150]\n 22174: a3 = reverse a1\n 22176: a1 = a3 >> 0x38\n 22179: u64 [sp + 0x188] = a1\n 22183: u8 [a0 + 0x1f] = a1\n 22186: a1 = a3 >> 0x30\n 22189: u64 [sp + 0x180] = a1\n 22193: u8 [a0 + 0x1e] = a1\n 22196: a1 = a3 >> 0x28\n 22199: u64 [sp + 0x178] = a1\n 22203: u8 [a0 + 0x1d] = a1\n 22206: a1 = a3 >> 0x20\n 22209: u64 [sp + 0x170] = a1\n 22213: u8 [a0 + 0x1c] = a1\n 22216: a1 = a3 >> 0x18\n 22219: u64 [sp + 0x168] = a1\n 22223: u8 [a0 + 0x1b] = a1\n 22226: a1 = a3 >> 0x10\n 22229: u64 [sp + 0x158] = a1\n 22233: u8 [a0 + 0x1a] = a1\n 22236: a1 = a3 >> 0x8\n 22239: u64 [sp + 0x190] = a1\n 22243: u8 [a0 + 0x19] = a1\n 22246: u64 [sp + 0x150] = a3\n 22250: u8 [a0 + 0x18] = a3\n 22253: u8 [a0 + 0x10] = a5\n 22256: a1 = a5 >> 0x38\n 22259: u64 [sp + 0xf8] = a1\n 22263: u8 [a0 + 0x17] = a1\n 22266: a1 = a5 >> 0x30\n 22269: u64 [sp + 0xf0] = a1\n 22273: u8 [a0 + 0x16] = a1\n 22276: a1 = a5 >> 0x28\n 22279: u64 [sp + 0xe8] = a1\n 22283: u8 [a0 + 0x15] = a1\n 22286: a1 = a5 >> 0x20\n 22289: u64 [sp + 0xe0] = a1\n 22293: u8 [a0 + 0x14] = a1\n 22296: a1 = a5 >> 0x18\n 22299: u64 [sp + 0xd8] = a1\n 22303: u8 [a0 + 0x13] = a1\n 22306: a1 = a5 >> 0x10\n 22309: u64 [sp + 0xd0] = a1\n 22313: u8 [a0 + 0x12] = a1\n 22316: u64 [sp + 0x100] = a5\n 22320: a5 = a5 >> 0x8\n 22323: u64 [sp + 0xc8] = a5\n 22327: u8 [a0 + 0x11] = a5\n 22330: u8 [a0 + 0x8] = a4\n 22333: a1 = a4 >> 0x38\n 22336: u64 [sp + 0xc0] = a1\n 22340: u8 [a0 + 0xf] = a1\n 22343: a1 = a4 >> 0x30\n 22346: u64 [sp + 0xb8] = a1\n 22350: u8 [a0 + 0xe] = a1\n 22353: a1 = a4 >> 0x28\n 22356: u64 [sp + 0xb0] = a1\n 22360: u8 [a0 + 0xd] = a1\n 22363: a1 = a4 >> 0x20\n 22366: u64 [sp + 0xa8] = a1\n 22370: u8 [a0 + 0xc] = a1\n 22373: a1 = a4 >> 0x18\n 22376: u64 [sp + 0xa0] = a1\n 22380: u8 [a0 + 0xb] = a1\n 22383: a1 = a4 >> 0x10\n 22386: u64 [sp + 0x98] = a1\n 22390: u8 [a0 + 0xa] = a1\n 22393: u64 [sp + 0x148] = a4\n 22397: a4 = a4 >> 0x8\n 22400: u64 [sp + 0x90] = a4\n 22404: u8 [a0 + 0x9] = a4\n 22407: u8 [a0] = a2\n 22409: a1 = a2 >> 0x38\n 22412: u64 [sp + 0x88] = a1\n 22416: u8 [a0 + 0x7] = a1\n 22419: a1 = a2 >> 0x30\n 22422: u64 [sp + 0x80] = a1\n 22426: u8 [a0 + 0x6] = a1\n 22429: a1 = a2 >> 0x28\n 22432: u64 [sp + 0x78] = a1\n 22435: u8 [a0 + 0x5] = a1\n 22438: a1 = a2 >> 0x20\n 22441: u64 [sp + 0x70] = a1\n 22444: u8 [a0 + 0x4] = a1\n 22447: a1 = a2 >> 0x18\n 22450: u64 [sp + 0x68] = a1\n 22453: u8 [a0 + 0x3] = a1\n 22456: a1 = a2 >> 0x10\n 22459: u64 [sp + 0x60] = a1\n 22462: u8 [a0 + 0x2] = a1\n 22465: u64 [sp + 0x160] = a2\n 22469: a2 = a2 >> 0x8\n 22472: u64 [sp + 0x58] = a2\n 22475: u8 [a0 + 0x1] = a2\n 22478: ecalli 8 // 'ref_time_left'\n 22480: a0 = u64 [sp + 0x110]\n 22484: a0 = reverse a0\n 22486: a1 = a0 << 0x20\n 22489: a2 = u64 [sp + 0x118]\n 22493: a2 = reverse a2\n 22495: a2 = a2 >> 0x20\n 22498: a3 = a2 | a1\n 22501: a1 = u64 [sp + 0x108]\n 22505: a1 = reverse a1\n 22507: a2 = a1 << 0x20\n 22510: a0 = a0 >> 0x20\n 22513: a0 = a0 | a2\n 22516: a1 = a1 >> 0x20\n 22519: u64 [sp + 0x30] = a0\n 22522: u64 [sp + 0x608] = a0\n 22526: u64 [sp + 0x40] = a3\n 22529: u64 [sp + 0x600] = a3\n 22533: u64 [sp + 0x38] = a1\n 22536: u32 [sp + 0x610] = a1\n 22540: u64 [sp + 1592] = 0\n 22544: u64 [sp + 1584] = 0\n 22548: u64 [sp + 1576] = 0\n 22552: u64 [sp + 1568] = 0\n 22556: a1 = 0x64\n 22559: a0 = s1\n 22561: ra = 218, jump @0\n      : @284 [@dyn 109] (gas: 4)\n 22567: u64 [sp + 0x48] = a0\n 22570: a1 = 0x20\n 22573: a0 = s1\n 22575: ra = 220, jump @0\n      : @285 [@dyn 110] (gas: 31)\n 22581: u32 [sp + 1600] = 0x20\n 22586: u64 [sp + 1656] = 0xffffffffffffffff\n 22591: u64 [sp + 1648] = 0xffffffffffffffff\n 22596: u64 [sp + 1640] = 0xffffffffffffffff\n 22601: u64 [sp + 1632] = 0xffffffffffffffff\n 22606: a1 = sp + 0x600\n 22610: a1 = a1 << 0x20\n 22613: a1 = a1 >> 0x20\n 22616: s1 = u64 [sp + 0x1a0]\n 22620: s1 = s1 | a1\n 22623: a1 = sp + 0x620\n 22627: a1 = a1 << 0x20\n 22630: a1 = a1 >> 0x20\n 22633: a2 = sp + 0x660\n 22637: a2 = a2 << 0x20\n 22640: a3 = a2 | a1\n 22643: a1 = u64 [sp + 0x48]\n 22646: a1 = a1 << 0x20\n 22649: a1 = a1 >> 0x20\n 22652: a2 = 0x6400000000\n 22662: a4 = a1 | a2\n 22665: a0 = a0 << 0x20\n 22668: a0 = a0 >> 0x20\n 22671: a1 = sp + 0x640\n 22675: a1 = a1 << 0x20\n 22678: a5 = a1 | a0\n 22681: a1 = 0xffffffffffffffff\n 22684: a2 = 0xffffffffffffffff\n 22687: a0 = s1\n 22689: ecalli 1 // 'call'\n 22691: fallthrough\n      : @286 (gas: 1)\n 22692: jump @288 if a0 == 0\n      : @287 (gas: 1)\n 22695: jump @377\n      : @288 (gas: 2)\n 22698: ecalli 10 // 'return_data_size'\n 22700: fallthrough\n      : @289 (gas: 2)\n 22701: a1 = 0x20\n 22704: jump @291 if a0 >=u a1\n      : @290 (gas: 3)\n 22707: ecalli 10 // 'return_data_size'\n 22709: a1 = a0\n 22711: fallthrough\n      : @291 (gas: 27)\n 22712: a3 = u64 [sp + 0x198]\n 22716: s1 = u64 [sp + 0x1b8]\n 22720: a0 = a1 + 0x1f\n 22723: u64 [sp + 0x198] = a1\n 22727: a1 = a0 <u a1\n 22730: u64 [sp + 440] = 0\n 22734: a1 = a1 & 0x1\n 22737: a0 = a0 & 0xffffffffffffffe0\n 22740: a2 = u64 [sp + 0x1b0]\n 22744: a2 = a2 + a0\n 22747: u64 [sp + 0x1b0] = a2\n 22751: a0 = a2 <u a0\n 22754: s1 = s1 + a1\n 22757: s1 = s1 + a0\n 22760: a2 = s1 ^ a1\n 22763: a1 = s1 <u a1\n 22766: a1 = a0 if a2 == 0\n 22769: a0 = u64 [sp + 0x50]\n 22772: a1 = a1 + a0\n 22775: a0 = a1 <u a0\n 22778: a0 = a0 + a3\n 22781: u64 [sp + 0x50] = a1\n 22784: u64 [sp + 0x48] = a0\n 22787: a0 = a0 | a1\n 22790: a1 = s1 <u 0x1\n 22793: a1 = 0 if a0 != 0\n 22795: jump @293 if a1 != 0\n      : @292 (gas: 1)\n 22798: jump @384\n      : @293 (gas: 3)\n 22801: a0 = 0x40\n 22804: a1 = 0x20\n 22807: ra = 222, jump @0\n      : @294 [@dyn 111] (gas: 79)\n 22813: a1 = u64 [sp + 0x48]\n 22816: a1 = reverse a1\n 22818: a2 = u64 [sp + 0x50]\n 22821: a2 = reverse a2\n 22823: a3 = reverse s1\n 22825: a4 = u64 [sp + 0x1b0]\n 22829: a4 = reverse a4\n 22831: u8 [a0 + 0x18] = a4\n 22834: a5 = a4 >> 0x38\n 22837: u8 [a0 + 0x1f] = a5\n 22840: a5 = a4 >> 0x30\n 22843: u8 [a0 + 0x1e] = a5\n 22846: a5 = a4 >> 0x28\n 22849: u8 [a0 + 0x1d] = a5\n 22852: a5 = a4 >> 0x20\n 22855: u8 [a0 + 0x1c] = a5\n 22858: a5 = a4 >> 0x18\n 22861: u8 [a0 + 0x1b] = a5\n 22864: a5 = a4 >> 0x10\n 22867: u8 [a0 + 0x1a] = a5\n 22870: a4 = a4 >> 0x8\n 22873: u8 [a0 + 0x19] = a4\n 22876: u8 [a0 + 0x10] = a3\n 22879: a4 = a3 >> 0x38\n 22882: u8 [a0 + 0x17] = a4\n 22885: a4 = a3 >> 0x30\n 22888: u8 [a0 + 0x16] = a4\n 22891: a4 = a3 >> 0x28\n 22894: u8 [a0 + 0x15] = a4\n 22897: a4 = a3 >> 0x20\n 22900: u8 [a0 + 0x14] = a4\n 22903: a4 = a3 >> 0x18\n 22906: u8 [a0 + 0x13] = a4\n 22909: a4 = a3 >> 0x10\n 22912: u8 [a0 + 0x12] = a4\n 22915: a3 = a3 >> 0x8\n 22918: u8 [a0 + 0x11] = a3\n 22921: u8 [a0 + 0x8] = a2\n 22924: a3 = a2 >> 0x38\n 22927: u8 [a0 + 0xf] = a3\n 22930: a3 = a2 >> 0x30\n 22933: u8 [a0 + 0xe] = a3\n 22936: a3 = a2 >> 0x28\n 22939: u8 [a0 + 0xd] = a3\n 22942: a3 = a2 >> 0x20\n 22945: u8 [a0 + 0xc] = a3\n 22948: a3 = a2 >> 0x18\n 22951: u8 [a0 + 0xb] = a3\n 22954: a3 = a2 >> 0x10\n 22957: u8 [a0 + 0xa] = a3\n 22960: a2 = a2 >> 0x8\n 22963: u8 [a0 + 0x9] = a2\n 22966: u8 [a0] = a1\n 22968: a2 = a1 >> 0x38\n 22971: u8 [a0 + 0x7] = a2\n 22974: a2 = a1 >> 0x30\n 22977: u8 [a0 + 0x6] = a2\n 22980: a2 = a1 >> 0x28\n 22983: u8 [a0 + 0x5] = a2\n 22986: a2 = a1 >> 0x20\n 22989: u8 [a0 + 0x4] = a2\n 22992: a2 = a1 >> 0x18\n 22995: u8 [a0 + 0x3] = a2\n 22998: a2 = a1 >> 0x10\n 23001: u8 [a0 + 0x2] = a2\n 23004: a1 = a1 >> 0x8\n 23007: a5 = u64 [sp + 0x1b8]\n 23011: a2 = a5 >u 0\n 23013: a3 = u64 [sp + 0x198]\n 23017: a3 = a3 <u 0x20\n 23020: a3 = a3 ^ 0x1\n 23023: a3 = a2 if a5 != 0\n 23026: a2 = a5 >u 0\n 23028: a4 = a5 >u 0\n 23030: a4 = a2 if a5 == 0\n 23033: a2 = a5 | a5\n 23036: a4 = a3 if a2 == 0\n 23039: u8 [a0 + 0x1] = a1\n 23042: jump @296 if a4 != 0\n      : @295 (gas: 1)\n 23045: jump @378\n      : @296 (gas: 3)\n 23048: a1 = 0x20\n 23051: a0 = u64 [sp + 0x1a8]\n 23055: ra = 224, jump @0\n      : @297 [@dyn 112] (gas: 95)\n 23061: a1 = u8 [a0 + 0x19]\n 23064: a2 = u8 [a0 + 0x18]\n 23067: a3 = u8 [a0 + 0x1a]\n 23070: a4 = u8 [a0 + 0x1b]\n 23073: a1 = a1 << 0x8\n 23076: a1 = a1 | a2\n 23079: a3 = a3 << 0x10\n 23082: a4 = a4 << 0x18\n 23085: a3 = a3 | a4\n 23088: a1 = a1 | a3\n 23091: a2 = u8 [a0 + 0x1d]\n 23094: a3 = u8 [a0 + 0x1c]\n 23097: a4 = u8 [a0 + 0x1e]\n 23100: a5 = u8 [a0 + 0x1f]\n 23103: a2 = a2 << 0x8\n 23106: a2 = a2 | a3\n 23109: a4 = a4 << 0x10\n 23112: a5 = a5 << 0x18\n 23115: a4 = a4 | a5\n 23118: a2 = a2 | a4\n 23121: a2 = a2 << 0x20\n 23124: t0 = a2 | a1\n 23127: a2 = u8 [a0 + 0x11]\n 23130: a3 = u8 [a0 + 0x10]\n 23133: a4 = u8 [a0 + 0x12]\n 23136: a5 = u8 [a0 + 0x13]\n 23139: a2 = a2 << 0x8\n 23142: a2 = a2 | a3\n 23145: a4 = a4 << 0x10\n 23148: a5 = a5 << 0x18\n 23151: a4 = a4 | a5\n 23154: a2 = a2 | a4\n 23157: a3 = u8 [a0 + 0x15]\n 23160: a4 = u8 [a0 + 0x14]\n 23163: a5 = u8 [a0 + 0x16]\n 23166: s1 = u8 [a0 + 0x17]\n 23169: a3 = a3 << 0x8\n 23172: a3 = a3 | a4\n 23175: a5 = a5 << 0x10\n 23178: s1 = s1 << 0x18\n 23181: a5 = a5 | s1\n 23184: a3 = a3 | a5\n 23187: a3 = a3 << 0x20\n 23190: t1 = a3 | a2\n 23193: a3 = u8 [a0 + 0x1]\n 23196: a4 = u8 [a0]\n 23198: a5 = u8 [a0 + 0x2]\n 23201: s1 = u8 [a0 + 0x3]\n 23204: a3 = a3 << 0x8\n 23207: a3 = a3 | a4\n 23210: a5 = a5 << 0x10\n 23213: s1 = s1 << 0x18\n 23216: a5 = a5 | s1\n 23219: a3 = a3 | a5\n 23222: a4 = u8 [a0 + 0x9]\n 23225: a5 = u8 [a0 + 0x8]\n 23228: s1 = u8 [a0 + 0xa]\n 23231: a1 = u8 [a0 + 0xb]\n 23234: a4 = a4 << 0x8\n 23237: a4 = a4 | a5\n 23240: s1 = s1 << 0x10\n 23243: a1 = a1 << 0x18\n 23246: a1 = a1 | s1\n 23249: a4 = a4 | a1\n 23252: a1 = u8 [a0 + 0x5]\n 23255: a5 = u8 [a0 + 0x4]\n 23258: s1 = u8 [a0 + 0x6]\n 23261: a2 = u8 [a0 + 0x7]\n 23264: a1 = a1 << 0x8\n 23267: a1 = a1 | a5\n 23270: s1 = s1 << 0x10\n 23273: a2 = a2 << 0x18\n 23276: a2 = a2 | s1\n 23279: a1 = a1 | a2\n 23282: a2 = u8 [a0 + 0xd]\n 23285: a5 = u8 [a0 + 0xc]\n 23288: s1 = u8 [a0 + 0xe]\n 23291: a0 = u8 [a0 + 0xf]\n 23294: a2 = a2 << 0x8\n 23297: a2 = a2 | a5\n 23300: s1 = s1 << 0x10\n 23303: a0 = a0 << 0x18\n 23306: a0 = a0 | s1\n 23309: a0 = a0 | a2\n 23312: a2 = reverse t1\n 23314: a5 = reverse t0\n 23316: a5 = a5 <u 0x2\n 23319: a5 = 0 if a2 != 0\n 23321: a0 = a0 | a1\n 23324: a0 = a0 << 0x20\n 23327: a3 = a3 | a4\n 23330: a0 = a0 | a3\n 23333: a0 = reverse a0\n 23335: a5 = 0 if a0 != 0\n 23337: jump @299 if a5 != 0\n      : @298 (gas: 1)\n 23340: jump @378\n      : @299 (gas: 39)\n 23343: a0 = sp + 0x1000\n 23347: u64 [a0 + 4294965336] = 0\n 23351: a0 = sp + 0x1000\n 23355: u64 [a0 + 4294965328] = 0\n 23359: a0 = sp + 0x1000\n 23363: u64 [a0 + 4294965320] = 0\n 23367: a1 = sp + 0x1000\n 23371: u64 [a1 + 4294965312] = 0x1\n 23376: a0 = sp + 0x1000\n 23380: u64 [a0 + 4294965368] = 0\n 23384: a0 = sp + 0x1000\n 23388: u64 [a0 + 4294965360] = 0\n 23392: a0 = sp + 0x1000\n 23396: u64 [a0 + 4294965352] = 0\n 23400: a0 = sp + 0x1000\n 23404: u64 [a0 + 4294965344] = 0\n 23408: a1 = sp + 0x1000\n 23412: u32 [a1 + 4294965376] = 0x20\n 23417: a0 = sp + 0x1000\n 23421: i32 a1 = a0 + 0xfffffffffffff840\n 23425: a0 = sp + 0x1000\n 23429: i32 a3 = a0 + 0xfffffffffffff860\n 23433: a0 = sp + 0x1000\n 23437: i32 a4 = a0 + 0xfffffffffffff880\n 23441: a2 = 0xffffffffffffffff\n 23444: a0 = 0\n 23446: ecalli 6 // 'get_storage'\n 23448: a0 = sp + 0x1000\n 23452: a0 = u64 [a0 + 0xfffffffffffff860]\n 23456: u64 [sp + 0x48] = a0\n 23459: a0 = sp + 0x1000\n 23463: a0 = u64 [a0 + 0xfffffffffffff868]\n 23467: u64 [sp + 0x28] = a0\n 23470: a0 = sp + 0x1000\n 23474: a0 = u64 [a0 + 0xfffffffffffff870]\n 23478: u64 [sp + 0x20] = a0\n 23481: a0 = 0x40\n 23484: a1 = 0x20\n 23487: ra = 226, jump @0\n      : @300 [@dyn 113] (gas: 102)\n 23493: a1 = u8 [a0 + 0x11]\n 23496: a2 = u8 [a0 + 0x10]\n 23499: a3 = u8 [a0 + 0x12]\n 23502: a4 = u8 [a0 + 0x13]\n 23505: a1 = a1 << 0x8\n 23508: a1 = a1 | a2\n 23511: a3 = a3 << 0x10\n 23514: a4 = a4 << 0x18\n 23517: a3 = a3 | a4\n 23520: a1 = a1 | a3\n 23523: a2 = u8 [a0 + 0x15]\n 23526: a3 = u8 [a0 + 0x14]\n 23529: a4 = u8 [a0 + 0x16]\n 23532: a5 = u8 [a0 + 0x17]\n 23535: a2 = a2 << 0x8\n 23538: a2 = a2 | a3\n 23541: a4 = a4 << 0x10\n 23544: a5 = a5 << 0x18\n 23547: a4 = a4 | a5\n 23550: a2 = a2 | a4\n 23553: a2 = a2 << 0x20\n 23556: t0 = a2 | a1\n 23559: a2 = u8 [a0 + 0x1]\n 23562: a3 = u8 [a0]\n 23564: a4 = u8 [a0 + 0x2]\n 23567: a5 = u8 [a0 + 0x3]\n 23570: a2 = a2 << 0x8\n 23573: a2 = a2 | a3\n 23576: a4 = a4 << 0x10\n 23579: a5 = a5 << 0x18\n 23582: a4 = a4 | a5\n 23585: a2 = a2 | a4\n 23588: a3 = u8 [a0 + 0x5]\n 23591: a4 = u8 [a0 + 0x4]\n 23594: a5 = u8 [a0 + 0x6]\n 23597: s1 = u8 [a0 + 0x7]\n 23600: a3 = a3 << 0x8\n 23603: a3 = a3 | a4\n 23606: a5 = a5 << 0x10\n 23609: s1 = s1 << 0x18\n 23612: a5 = a5 | s1\n 23615: a3 = a3 | a5\n 23618: a3 = a3 << 0x20\n 23621: a2 = a2 | a3\n 23624: a3 = u8 [a0 + 0x19]\n 23627: a4 = u8 [a0 + 0x18]\n 23630: a5 = u8 [a0 + 0x1a]\n 23633: s1 = u8 [a0 + 0x1b]\n 23636: a3 = a3 << 0x8\n 23639: a3 = a3 | a4\n 23642: a5 = a5 << 0x10\n 23645: s1 = s1 << 0x18\n 23648: a5 = a5 | s1\n 23651: a3 = a3 | a5\n 23654: a4 = u8 [a0 + 0x1d]\n 23657: a5 = u8 [a0 + 0x1c]\n 23660: s1 = u8 [a0 + 0x1e]\n 23663: a1 = u8 [a0 + 0x1f]\n 23666: a4 = a4 << 0x8\n 23669: a4 = a4 | a5\n 23672: s1 = s1 << 0x10\n 23675: a1 = a1 << 0x18\n 23678: a1 = a1 | s1\n 23681: a1 = a1 | a4\n 23684: a1 = a1 << 0x20\n 23687: a3 = a3 | a1\n 23690: a1 = u8 [a0 + 0x9]\n 23693: a4 = u8 [a0 + 0x8]\n 23696: a5 = u8 [a0 + 0xa]\n 23699: s1 = u8 [a0 + 0xb]\n 23702: a1 = a1 << 0x8\n 23705: a1 = a1 | a4\n 23708: a5 = a5 << 0x10\n 23711: s1 = s1 << 0x18\n 23714: a5 = a5 | s1\n 23717: a1 = a1 | a5\n 23720: a4 = u8 [a0 + 0xd]\n 23723: a5 = u8 [a0 + 0xc]\n 23726: s1 = u8 [a0 + 0xe]\n 23729: a0 = u8 [a0 + 0xf]\n 23732: a4 = a4 << 0x8\n 23735: a4 = a4 | a5\n 23738: s1 = s1 << 0x10\n 23741: a0 = a0 << 0x18\n 23744: a0 = a0 | s1\n 23747: a0 = a0 | a4\n 23750: a0 = a0 << 0x20\n 23753: a0 = a0 | a1\n 23756: s1 = reverse a0\n 23758: a3 = reverse a3\n 23760: a1 = reverse a2\n 23762: a0 = reverse t0\n 23764: u64 [sp + 0x1b8] = a0\n 23768: u64 [sp + 0x198] = a1\n 23772: a0 = a0 | a1\n 23775: a1 = a3 | s1\n 23778: a1 = a1 | a0\n 23781: a1 = a1 >> 0x20\n 23784: a0 = a0 | s1\n 23787: a0 = a0 << 0x20\n 23790: a0 = a0 | a1\n 23793: jump @302 if a0 == 0\n      : @301 (gas: 1)\n 23796: jump @376\n      : @302 (gas: 5)\n 23799: i32 a0 = a3 + 0\n 23801: a1 = 0x20\n 23804: u64 [sp + 0x1a8] = a0\n 23808: u64 [sp + 0x1b0] = a3\n 23812: ra = 228, jump @0\n      : @303 [@dyn 114] (gas: 43)\n 23818: u8 [a0 + 31] = 0\n 23821: u8 [a0 + 30] = 0\n 23824: u8 [a0 + 29] = 0\n 23827: u8 [a0 + 28] = 0\n 23830: u8 [a0 + 27] = 0\n 23833: u8 [a0 + 26] = 0\n 23836: u8 [a0 + 25] = 0\n 23839: u8 [a0 + 24] = 0\n 23842: u8 [a0 + 23] = 0\n 23845: u8 [a0 + 22] = 0\n 23848: u8 [a0 + 21] = 0\n 23851: u8 [a0 + 20] = 0\n 23854: u8 [a0 + 19] = 0\n 23857: u8 [a0 + 18] = 0\n 23860: u8 [a0 + 17] = 0\n 23863: u8 [a0 + 16] = 0\n 23866: u8 [a0 + 15] = 0\n 23869: u8 [a0 + 14] = 0\n 23872: u8 [a0 + 13] = 0\n 23875: u8 [a0 + 12] = 0\n 23878: u8 [a0 + 11] = 0\n 23881: u8 [a0 + 10] = 0\n 23884: u8 [a0 + 9] = 0\n 23887: u8 [a0 + 8] = 0\n 23890: u8 [a0 + 7] = 0\n 23893: u8 [a0 + 6] = 0\n 23896: u8 [a0 + 5] = 0\n 23899: u8 [a0 + 3] = 0xb3\n 23904: u8 [a0 + 2] = 0xa7\n 23909: u8 [a0 + 1] = 0x5e\n 23913: u8 [a0 + 0] = 0x9\n 23916: u64 [sp + 0x10] = s1\n 23919: a3 = u64 [sp + 0x198]\n 23923: a3 = a3 | s1\n 23926: a1 = 0xfffffffc\n 23936: a2 = u64 [sp + 0x1b0]\n 23940: a1 = a2 <u a1\n 23943: a2 = u64 [sp + 0x1b8]\n 23947: a1 = 0 if a2 != 0\n 23949: u64 [sp + 0x18] = a3\n 23952: a1 = 0 if a3 != 0\n 23954: u8 [a0 + 4] = 0\n 23957: jump @305 if a1 != 0\n      : @304 (gas: 1)\n 23960: jump @376\n      : @305 (gas: 14)\n 23963: a1 = 0xffffffff\n 23973: u64 [sp + 0x50] = a1\n 23976: s1 = u64 [sp + 0x20]\n 23979: s1 = s1 & a1\n 23982: a1 = u64 [sp + 0x28]\n 23985: a1 = a1 & 0xffffffffffffffff\n 23988: u64 [sp + 0x28] = a1\n 23991: a1 = u64 [sp + 0x48]\n 23994: a0 = a1 & 0xffffffffffffffff\n 23997: u64 [sp + 0x48] = a0\n 24000: a0 = u64 [sp + 0x1a8]\n 24004: i32 a0 = a0 + 0x4\n 24007: a1 = 0x20\n 24010: ra = 230, jump @0\n      : @306 [@dyn 115] (gas: 63)\n 24016: a1 = reverse s1\n 24018: a2 = u64 [sp + 0x28]\n 24021: a2 = reverse a2\n 24023: a3 = u64 [sp + 0x48]\n 24026: a3 = reverse a3\n 24028: a4 = a3 >> 0x38\n 24031: u8 [a0 + 0x1f] = a4\n 24034: a4 = a3 >> 0x30\n 24037: u8 [a0 + 0x1e] = a4\n 24040: a4 = a3 >> 0x28\n 24043: u8 [a0 + 0x1d] = a4\n 24046: a4 = a3 >> 0x20\n 24049: u8 [a0 + 0x1c] = a4\n 24052: a4 = a3 >> 0x18\n 24055: u8 [a0 + 0x1b] = a4\n 24058: a4 = a3 >> 0x10\n 24061: u8 [a0 + 0x1a] = a4\n 24064: a4 = a3 >> 0x8\n 24067: u8 [a0 + 0x19] = a4\n 24070: u8 [a0 + 0x18] = a3\n 24073: u8 [a0 + 0x10] = a2\n 24076: u8 [a0 + 11] = 0\n 24079: u8 [a0 + 10] = 0\n 24082: u8 [a0 + 9] = 0\n 24085: u8 [a0 + 7] = 0\n 24088: u8 [a0 + 6] = 0\n 24091: u8 [a0 + 5] = 0\n 24094: u8 [a0 + 4] = 0\n 24097: u8 [a0 + 3] = 0\n 24100: u8 [a0 + 2] = 0\n 24103: u8 [a0 + 1] = 0\n 24106: u8 [a0 + 0] = 0\n 24108: a3 = a2 >> 0x38\n 24111: u8 [a0 + 0x17] = a3\n 24114: a3 = a2 >> 0x30\n 24117: u8 [a0 + 0x16] = a3\n 24120: a3 = a2 >> 0x28\n 24123: u8 [a0 + 0x15] = a3\n 24126: a3 = a2 >> 0x20\n 24129: u8 [a0 + 0x14] = a3\n 24132: a3 = a2 >> 0x18\n 24135: u8 [a0 + 0x13] = a3\n 24138: a3 = a2 >> 0x10\n 24141: u8 [a0 + 0x12] = a3\n 24144: a2 = a2 >> 0x8\n 24147: u8 [a0 + 0x11] = a2\n 24150: u8 [a0 + 0x8] = a1\n 24153: a2 = a1 >> 0x38\n 24156: u8 [a0 + 0xf] = a2\n 24159: a2 = a1 >> 0x30\n 24162: u8 [a0 + 0xe] = a2\n 24165: a2 = a1 >> 0x28\n 24168: u8 [a0 + 0xd] = a2\n 24171: a1 = a1 >> 0x20\n 24174: a2 = 0xffffffdc\n 24184: a3 = u64 [sp + 0x1b0]\n 24188: a2 = a3 <u a2\n 24191: a3 = u64 [sp + 0x1b8]\n 24195: a2 = 0 if a3 != 0\n 24197: a3 = u64 [sp + 0x18]\n 24200: a2 = 0 if a3 != 0\n 24202: u8 [a0 + 0xc] = a1\n 24205: jump @308 if a2 != 0\n      : @307 (gas: 1)\n 24208: jump @376\n      : @308 (gas: 4)\n 24211: s1 = u64 [sp + 0x1a8]\n 24215: i32 a0 = s1 + 0x24\n 24218: a1 = 0x20\n 24221: ra = 232, jump @0\n      : @309 [@dyn 116] (gas: 78)\n 24227: a1 = u64 [sp + 0x100]\n 24231: u8 [a0 + 0x10] = a1\n 24234: a1 = u64 [sp + 0xc0]\n 24238: u8 [a0 + 0xf] = a1\n 24241: a1 = u64 [sp + 0xb8]\n 24245: u8 [a0 + 0xe] = a1\n 24248: a1 = u64 [sp + 0xb0]\n 24252: u8 [a0 + 0xd] = a1\n 24255: a1 = u64 [sp + 0xa8]\n 24259: u8 [a0 + 0xc] = a1\n 24262: a1 = u64 [sp + 0xa0]\n 24266: u8 [a0 + 0xb] = a1\n 24269: a1 = u64 [sp + 0x98]\n 24273: u8 [a0 + 0xa] = a1\n 24276: a1 = u64 [sp + 0x90]\n 24280: u8 [a0 + 0x9] = a1\n 24283: a1 = u64 [sp + 0x148]\n 24287: u8 [a0 + 0x8] = a1\n 24290: a1 = u64 [sp + 0x88]\n 24294: u8 [a0 + 0x7] = a1\n 24297: a1 = u64 [sp + 0x80]\n 24301: u8 [a0 + 0x6] = a1\n 24304: a1 = u64 [sp + 0x78]\n 24307: u8 [a0 + 0x5] = a1\n 24310: a1 = u64 [sp + 0x70]\n 24313: u8 [a0 + 0x4] = a1\n 24316: a1 = u64 [sp + 0x68]\n 24319: u8 [a0 + 0x3] = a1\n 24322: a1 = u64 [sp + 0x60]\n 24325: u8 [a0 + 0x2] = a1\n 24328: a1 = u64 [sp + 0x58]\n 24331: u8 [a0 + 0x1] = a1\n 24334: a1 = u64 [sp + 0x160]\n 24338: u8 [a0] = a1\n 24340: a1 = u64 [sp + 0x150]\n 24344: u8 [a0 + 0x18] = a1\n 24347: a1 = u64 [sp + 0xf8]\n 24351: u8 [a0 + 0x17] = a1\n 24354: a1 = u64 [sp + 0xf0]\n 24358: u8 [a0 + 0x16] = a1\n 24361: a1 = u64 [sp + 0xe8]\n 24365: u8 [a0 + 0x15] = a1\n 24368: a1 = u64 [sp + 0xe0]\n 24372: u8 [a0 + 0x14] = a1\n 24375: a1 = u64 [sp + 0xd8]\n 24379: u8 [a0 + 0x13] = a1\n 24382: a1 = u64 [sp + 0xd0]\n 24386: u8 [a0 + 0x12] = a1\n 24389: a1 = u64 [sp + 0xc8]\n 24393: u8 [a0 + 0x11] = a1\n 24396: a1 = u64 [sp + 0x188]\n 24400: u8 [a0 + 0x1f] = a1\n 24403: a1 = u64 [sp + 0x180]\n 24407: u8 [a0 + 0x1e] = a1\n 24410: a1 = u64 [sp + 0x178]\n 24414: u8 [a0 + 0x1d] = a1\n 24417: a1 = u64 [sp + 0x170]\n 24421: u8 [a0 + 0x1c] = a1\n 24424: a1 = u64 [sp + 0x168]\n 24428: u8 [a0 + 0x1b] = a1\n 24431: a1 = u64 [sp + 0x158]\n 24435: u8 [a0 + 0x1a] = a1\n 24438: a1 = u64 [sp + 0x190]\n 24442: u8 [a0 + 0x19] = a1\n 24445: ecalli 8 // 'ref_time_left'\n 24447: a0 = u64 [sp + 0x30]\n 24450: u64 [sp + 0x688] = a0\n 24454: a0 = u64 [sp + 0x40]\n 24457: u64 [sp + 0x680] = a0\n 24461: a0 = u64 [sp + 0x38]\n 24464: u32 [sp + 0x690] = a0\n 24468: u64 [sp + 1720] = 0\n 24472: u64 [sp + 1712] = 0\n 24476: u64 [sp + 1704] = 0\n 24480: u64 [sp + 1696] = 0\n 24484: a1 = 0x44\n 24487: a0 = s1\n 24489: ra = 234, jump @0\n      : @310 [@dyn 117] (gas: 4)\n 24495: u64 [sp + 0x48] = a0\n 24498: a1 = 0x20\n 24501: a0 = s1\n 24503: ra = 236, jump @0\n      : @311 [@dyn 118] (gas: 31)\n 24509: u32 [sp + 1728] = 0x20\n 24514: u64 [sp + 1784] = 0xffffffffffffffff\n 24519: u64 [sp + 1776] = 0xffffffffffffffff\n 24524: u64 [sp + 1768] = 0xffffffffffffffff\n 24529: u64 [sp + 1760] = 0xffffffffffffffff\n 24534: a1 = sp + 0x680\n 24538: a1 = a1 << 0x20\n 24541: a1 = a1 >> 0x20\n 24544: s1 = u64 [sp + 0x1a0]\n 24548: s1 = s1 | a1\n 24551: a1 = sp + 0x6a0\n 24555: a1 = a1 << 0x20\n 24558: a1 = a1 >> 0x20\n 24561: a2 = sp + 0x6e0\n 24565: a2 = a2 << 0x20\n 24568: a3 = a2 | a1\n 24571: a1 = u64 [sp + 0x48]\n 24574: a1 = a1 << 0x20\n 24577: a1 = a1 >> 0x20\n 24580: a4 = u64 [sp + 0x120]\n 24584: a4 = a4 | a1\n 24587: a0 = a0 << 0x20\n 24590: a0 = a0 >> 0x20\n 24593: a1 = sp + 0x6c0\n 24597: a1 = a1 << 0x20\n 24600: a5 = a1 | a0\n 24603: a1 = 0xffffffffffffffff\n 24606: a2 = 0xffffffffffffffff\n 24609: a0 = s1\n 24611: ecalli 1 // 'call'\n 24613: fallthrough\n      : @312 (gas: 1)\n 24614: jump @314 if a0 == 0\n      : @313 (gas: 1)\n 24617: jump @377\n      : @314 (gas: 2)\n 24620: ecalli 10 // 'return_data_size'\n 24622: fallthrough\n      : @315 (gas: 2)\n 24623: a1 = 0x20\n 24626: jump @317 if a0 >=u a1\n      : @316 (gas: 3)\n 24629: ecalli 10 // 'return_data_size'\n 24631: a1 = a0\n 24633: fallthrough\n      : @317 (gas: 27)\n 24634: a3 = u64 [sp + 0x198]\n 24638: a4 = u64 [sp + 0x1b0]\n 24642: s1 = u64 [sp + 0x1b8]\n 24646: a0 = a1 + 0x1f\n 24649: u64 [sp + 0x1b0] = a1\n 24653: a1 = a0 <u a1\n 24656: u64 [sp + 440] = 0\n 24660: a1 = a1 & 0x1\n 24663: a0 = a0 & 0xffffffffffffffe0\n 24666: a4 = a4 + a0\n 24669: u64 [sp + 0x198] = a4\n 24673: a0 = a4 <u a0\n 24676: s1 = s1 + a1\n 24679: s1 = s1 + a0\n 24682: a2 = s1 ^ a1\n 24685: a1 = s1 <u a1\n 24688: a1 = a0 if a2 == 0\n 24691: a0 = u64 [sp + 0x10]\n 24694: a1 = a1 + a0\n 24697: a0 = a1 <u a0\n 24700: a0 = a0 + a3\n 24703: u64 [sp + 0x48] = a1\n 24706: u64 [sp + 0x40] = a0\n 24709: a0 = a0 | a1\n 24712: a1 = s1 <u 0x1\n 24715: a1 = 0 if a0 != 0\n 24717: jump @319 if a1 != 0\n      : @318 (gas: 1)\n 24720: jump @386\n      : @319 (gas: 3)\n 24723: a0 = 0x40\n 24726: a1 = 0x20\n 24729: ra = 238, jump @0\n      : @320 [@dyn 119] (gas: 79)\n 24735: a1 = u64 [sp + 0x40]\n 24738: a1 = reverse a1\n 24740: a2 = u64 [sp + 0x48]\n 24743: a2 = reverse a2\n 24745: a3 = reverse s1\n 24747: a4 = u64 [sp + 0x198]\n 24751: a4 = reverse a4\n 24753: u8 [a0 + 0x18] = a4\n 24756: a5 = a4 >> 0x38\n 24759: u8 [a0 + 0x1f] = a5\n 24762: a5 = a4 >> 0x30\n 24765: u8 [a0 + 0x1e] = a5\n 24768: a5 = a4 >> 0x28\n 24771: u8 [a0 + 0x1d] = a5\n 24774: a5 = a4 >> 0x20\n 24777: u8 [a0 + 0x1c] = a5\n 24780: a5 = a4 >> 0x18\n 24783: u8 [a0 + 0x1b] = a5\n 24786: a5 = a4 >> 0x10\n 24789: u8 [a0 + 0x1a] = a5\n 24792: a4 = a4 >> 0x8\n 24795: u8 [a0 + 0x19] = a4\n 24798: u8 [a0 + 0x10] = a3\n 24801: a4 = a3 >> 0x38\n 24804: u8 [a0 + 0x17] = a4\n 24807: a4 = a3 >> 0x30\n 24810: u8 [a0 + 0x16] = a4\n 24813: a4 = a3 >> 0x28\n 24816: u8 [a0 + 0x15] = a4\n 24819: a4 = a3 >> 0x20\n 24822: u8 [a0 + 0x14] = a4\n 24825: a4 = a3 >> 0x18\n 24828: u8 [a0 + 0x13] = a4\n 24831: a4 = a3 >> 0x10\n 24834: u8 [a0 + 0x12] = a4\n 24837: a3 = a3 >> 0x8\n 24840: u8 [a0 + 0x11] = a3\n 24843: u8 [a0 + 0x8] = a2\n 24846: a3 = a2 >> 0x38\n 24849: u8 [a0 + 0xf] = a3\n 24852: a3 = a2 >> 0x30\n 24855: u8 [a0 + 0xe] = a3\n 24858: a3 = a2 >> 0x28\n 24861: u8 [a0 + 0xd] = a3\n 24864: a3 = a2 >> 0x20\n 24867: u8 [a0 + 0xc] = a3\n 24870: a3 = a2 >> 0x18\n 24873: u8 [a0 + 0xb] = a3\n 24876: a3 = a2 >> 0x10\n 24879: u8 [a0 + 0xa] = a3\n 24882: a2 = a2 >> 0x8\n 24885: u8 [a0 + 0x9] = a2\n 24888: u8 [a0] = a1\n 24890: a2 = a1 >> 0x38\n 24893: u8 [a0 + 0x7] = a2\n 24896: a2 = a1 >> 0x30\n 24899: u8 [a0 + 0x6] = a2\n 24902: a2 = a1 >> 0x28\n 24905: u8 [a0 + 0x5] = a2\n 24908: a2 = a1 >> 0x20\n 24911: u8 [a0 + 0x4] = a2\n 24914: a2 = a1 >> 0x18\n 24917: u8 [a0 + 0x3] = a2\n 24920: a2 = a1 >> 0x10\n 24923: u8 [a0 + 0x2] = a2\n 24926: a1 = a1 >> 0x8\n 24929: a5 = u64 [sp + 0x1b8]\n 24933: a2 = a5 >u 0\n 24935: a3 = u64 [sp + 0x1b0]\n 24939: a3 = a3 <u 0x20\n 24942: a3 = a3 ^ 0x1\n 24945: a3 = a2 if a5 != 0\n 24948: a2 = a5 >u 0\n 24950: a4 = a5 >u 0\n 24952: a4 = a2 if a5 == 0\n 24955: a2 = a5 | a5\n 24958: a4 = a3 if a2 == 0\n 24961: u8 [a0 + 0x1] = a1\n 24964: jump @322 if a4 != 0\n      : @321 (gas: 1)\n 24967: jump @378\n      : @322 (gas: 3)\n 24970: a1 = 0x20\n 24973: a0 = u64 [sp + 0x1a8]\n 24977: ra = 240, jump @0\n      : @323 [@dyn 120] (gas: 95)\n 24983: a1 = u8 [a0 + 0x19]\n 24986: a2 = u8 [a0 + 0x18]\n 24989: a3 = u8 [a0 + 0x1a]\n 24992: a4 = u8 [a0 + 0x1b]\n 24995: a1 = a1 << 0x8\n 24998: a1 = a1 | a2\n 25001: a3 = a3 << 0x10\n 25004: a4 = a4 << 0x18\n 25007: a3 = a3 | a4\n 25010: a1 = a1 | a3\n 25013: a2 = u8 [a0 + 0x1d]\n 25016: a3 = u8 [a0 + 0x1c]\n 25019: a4 = u8 [a0 + 0x1e]\n 25022: a5 = u8 [a0 + 0x1f]\n 25025: a2 = a2 << 0x8\n 25028: a2 = a2 | a3\n 25031: a4 = a4 << 0x10\n 25034: a5 = a5 << 0x18\n 25037: a4 = a4 | a5\n 25040: a2 = a2 | a4\n 25043: a2 = a2 << 0x20\n 25046: t0 = a2 | a1\n 25049: a2 = u8 [a0 + 0x11]\n 25052: a3 = u8 [a0 + 0x10]\n 25055: a4 = u8 [a0 + 0x12]\n 25058: a5 = u8 [a0 + 0x13]\n 25061: a2 = a2 << 0x8\n 25064: a2 = a2 | a3\n 25067: a4 = a4 << 0x10\n 25070: a5 = a5 << 0x18\n 25073: a4 = a4 | a5\n 25076: a2 = a2 | a4\n 25079: a3 = u8 [a0 + 0x15]\n 25082: a4 = u8 [a0 + 0x14]\n 25085: a5 = u8 [a0 + 0x16]\n 25088: s1 = u8 [a0 + 0x17]\n 25091: a3 = a3 << 0x8\n 25094: a3 = a3 | a4\n 25097: a5 = a5 << 0x10\n 25100: s1 = s1 << 0x18\n 25103: a5 = a5 | s1\n 25106: a3 = a3 | a5\n 25109: a3 = a3 << 0x20\n 25112: t1 = a3 | a2\n 25115: a3 = u8 [a0 + 0x1]\n 25118: a4 = u8 [a0]\n 25120: a5 = u8 [a0 + 0x2]\n 25123: s1 = u8 [a0 + 0x3]\n 25126: a3 = a3 << 0x8\n 25129: a3 = a3 | a4\n 25132: a5 = a5 << 0x10\n 25135: s1 = s1 << 0x18\n 25138: a5 = a5 | s1\n 25141: a3 = a3 | a5\n 25144: a4 = u8 [a0 + 0x9]\n 25147: a5 = u8 [a0 + 0x8]\n 25150: s1 = u8 [a0 + 0xa]\n 25153: a1 = u8 [a0 + 0xb]\n 25156: a4 = a4 << 0x8\n 25159: a4 = a4 | a5\n 25162: s1 = s1 << 0x10\n 25165: a1 = a1 << 0x18\n 25168: a1 = a1 | s1\n 25171: a4 = a4 | a1\n 25174: a1 = u8 [a0 + 0x5]\n 25177: a5 = u8 [a0 + 0x4]\n 25180: s1 = u8 [a0 + 0x6]\n 25183: a2 = u8 [a0 + 0x7]\n 25186: a1 = a1 << 0x8\n 25189: a1 = a1 | a5\n 25192: s1 = s1 << 0x10\n 25195: a2 = a2 << 0x18\n 25198: a2 = a2 | s1\n 25201: a1 = a1 | a2\n 25204: a2 = u8 [a0 + 0xd]\n 25207: a5 = u8 [a0 + 0xc]\n 25210: s1 = u8 [a0 + 0xe]\n 25213: a0 = u8 [a0 + 0xf]\n 25216: a2 = a2 << 0x8\n 25219: a2 = a2 | a5\n 25222: s1 = s1 << 0x10\n 25225: a0 = a0 << 0x18\n 25228: a0 = a0 | s1\n 25231: a0 = a0 | a2\n 25234: a2 = reverse t1\n 25236: a5 = reverse t0\n 25238: a5 = a5 <u 0x2\n 25241: a5 = 0 if a2 != 0\n 25243: a0 = a0 | a1\n 25246: a0 = a0 << 0x20\n 25249: a3 = a3 | a4\n 25252: a0 = a0 | a3\n 25255: a0 = reverse a0\n 25257: a5 = 0 if a0 != 0\n 25259: jump @325 if a5 != 0\n      : @324 (gas: 1)\n 25262: jump @378\n      : @325 (gas: 76)\n 25265: a0 = sp + 0x1000\n 25269: u64 [a0 + 4294965336] = 0\n 25273: a0 = sp + 0x1000\n 25277: u64 [a0 + 4294965328] = 0\n 25281: a0 = sp + 0x1000\n 25285: u64 [a0 + 4294965320] = 0\n 25289: a1 = sp + 0x1000\n 25293: u64 [a1 + 4294965312] = 0x1\n 25298: a0 = sp + 0x1000\n 25302: u64 [a0 + 4294965368] = 0\n 25306: a0 = sp + 0x1000\n 25310: u64 [a0 + 4294965360] = 0\n 25314: a0 = sp + 0x1000\n 25318: u64 [a0 + 4294965352] = 0\n 25322: a0 = sp + 0x1000\n 25326: u64 [a0 + 4294965344] = 0\n 25330: s1 = 0x20\n 25333: a0 = sp + 0x1000\n 25337: u32 [a0 + 0xfffffffffffff880] = s1\n 25341: a0 = sp + 0x1000\n 25345: i32 a1 = a0 + 0xfffffffffffff840\n 25349: a0 = sp + 0x1000\n 25353: i32 a3 = a0 + 0xfffffffffffff860\n 25357: a0 = sp + 0x1000\n 25361: i32 a4 = a0 + 0xfffffffffffff880\n 25365: a2 = 0xffffffffffffffff\n 25368: a0 = 0\n 25370: ecalli 6 // 'get_storage'\n 25372: a0 = sp + 0x1000\n 25376: a0 = u64 [a0 + 0xfffffffffffff870]\n 25380: u64 [sp + 0x20] = a0\n 25383: a0 = sp + 0x1000\n 25387: a0 = u64 [a0 + 0xfffffffffffff868]\n 25391: u64 [sp + 0x18] = a0\n 25394: a0 = sp + 0x1000\n 25398: a0 = u64 [a0 + 0xfffffffffffff860]\n 25402: u64 [sp + 0x28] = a0\n 25405: a0 = sp + 0x1000\n 25409: u64 [a0 + 4294965336] = 0\n 25413: a0 = sp + 0x1000\n 25417: u64 [a0 + 4294965328] = 0\n 25421: a0 = sp + 0x1000\n 25425: u64 [a0 + 4294965320] = 0\n 25429: a1 = sp + 0x1000\n 25433: u64 [a1 + 4294965312] = 0x3\n 25438: a0 = sp + 0x1000\n 25442: u64 [a0 + 4294965368] = 0\n 25446: a0 = sp + 0x1000\n 25450: u64 [a0 + 4294965360] = 0\n 25454: a0 = sp + 0x1000\n 25458: u64 [a0 + 4294965352] = 0\n 25462: a0 = sp + 0x1000\n 25466: u64 [a0 + 4294965344] = 0\n 25470: a0 = sp + 0x1000\n 25474: u32 [a0 + 0xfffffffffffff880] = s1\n 25478: a0 = sp + 0x1000\n 25482: i32 a1 = a0 + 0xfffffffffffff840\n 25486: a0 = sp + 0x1000\n 25490: i32 a3 = a0 + 0xfffffffffffff860\n 25494: a0 = sp + 0x1000\n 25498: i32 a4 = a0 + 0xfffffffffffff880\n 25502: a2 = 0xffffffffffffffff\n 25505: a0 = 0\n 25507: ecalli 6 // 'get_storage'\n 25509: a0 = sp + 0x1000\n 25513: a0 = u64 [a0 + 0xfffffffffffff860]\n 25517: u64 [sp + 0x40] = a0\n 25520: a0 = sp + 0x1000\n 25524: a0 = u64 [a0 + 0xfffffffffffff868]\n 25528: u64 [sp + 0x38] = a0\n 25531: a0 = sp + 0x1000\n 25535: a0 = u64 [a0 + 0xfffffffffffff870]\n 25539: u64 [sp + 0x30] = a0\n 25542: a0 = 0x40\n 25545: a1 = 0x20\n 25548: ra = 242, jump @0\n      : @326 [@dyn 121] (gas: 103)\n 25554: a1 = u8 [a0 + 0x11]\n 25557: a2 = u8 [a0 + 0x10]\n 25560: a3 = u8 [a0 + 0x12]\n 25563: a4 = u8 [a0 + 0x13]\n 25566: a1 = a1 << 0x8\n 25569: a1 = a1 | a2\n 25572: a3 = a3 << 0x10\n 25575: a4 = a4 << 0x18\n 25578: a3 = a3 | a4\n 25581: a1 = a1 | a3\n 25584: a2 = u8 [a0 + 0x15]\n 25587: a3 = u8 [a0 + 0x14]\n 25590: a4 = u8 [a0 + 0x16]\n 25593: a5 = u8 [a0 + 0x17]\n 25596: a2 = a2 << 0x8\n 25599: a2 = a2 | a3\n 25602: a4 = a4 << 0x10\n 25605: a5 = a5 << 0x18\n 25608: a4 = a4 | a5\n 25611: a2 = a2 | a4\n 25614: a2 = a2 << 0x20\n 25617: t0 = a2 | a1\n 25620: a2 = u8 [a0 + 0x1]\n 25623: a3 = u8 [a0]\n 25625: a4 = u8 [a0 + 0x2]\n 25628: a5 = u8 [a0 + 0x3]\n 25631: a2 = a2 << 0x8\n 25634: a2 = a2 | a3\n 25637: a4 = a4 << 0x10\n 25640: a5 = a5 << 0x18\n 25643: a4 = a4 | a5\n 25646: a2 = a2 | a4\n 25649: a3 = u8 [a0 + 0x5]\n 25652: a4 = u8 [a0 + 0x4]\n 25655: a5 = u8 [a0 + 0x6]\n 25658: s1 = u8 [a0 + 0x7]\n 25661: a3 = a3 << 0x8\n 25664: a3 = a3 | a4\n 25667: a5 = a5 << 0x10\n 25670: s1 = s1 << 0x18\n 25673: a5 = a5 | s1\n 25676: a3 = a3 | a5\n 25679: a3 = a3 << 0x20\n 25682: a2 = a2 | a3\n 25685: a3 = u8 [a0 + 0x19]\n 25688: a4 = u8 [a0 + 0x18]\n 25691: a5 = u8 [a0 + 0x1a]\n 25694: s1 = u8 [a0 + 0x1b]\n 25697: a3 = a3 << 0x8\n 25700: a3 = a3 | a4\n 25703: a5 = a5 << 0x10\n 25706: s1 = s1 << 0x18\n 25709: a5 = a5 | s1\n 25712: a3 = a3 | a5\n 25715: a4 = u8 [a0 + 0x1d]\n 25718: a5 = u8 [a0 + 0x1c]\n 25721: s1 = u8 [a0 + 0x1e]\n 25724: a1 = u8 [a0 + 0x1f]\n 25727: a4 = a4 << 0x8\n 25730: a4 = a4 | a5\n 25733: s1 = s1 << 0x10\n 25736: a1 = a1 << 0x18\n 25739: a1 = a1 | s1\n 25742: a1 = a1 | a4\n 25745: a1 = a1 << 0x20\n 25748: a3 = a3 | a1\n 25751: a1 = u8 [a0 + 0x9]\n 25754: a4 = u8 [a0 + 0x8]\n 25757: a5 = u8 [a0 + 0xa]\n 25760: s1 = u8 [a0 + 0xb]\n 25763: a1 = a1 << 0x8\n 25766: a1 = a1 | a4\n 25769: a5 = a5 << 0x10\n 25772: s1 = s1 << 0x18\n 25775: a5 = a5 | s1\n 25778: a1 = a1 | a5\n 25781: a4 = u8 [a0 + 0xd]\n 25784: a5 = u8 [a0 + 0xc]\n 25787: s1 = u8 [a0 + 0xe]\n 25790: a0 = u8 [a0 + 0xf]\n 25793: a4 = a4 << 0x8\n 25796: a4 = a4 | a5\n 25799: s1 = s1 << 0x10\n 25802: a0 = a0 << 0x18\n 25805: a0 = a0 | s1\n 25808: a0 = a0 | a4\n 25811: a0 = a0 << 0x20\n 25814: a0 = a0 | a1\n 25817: s1 = reverse a0\n 25819: a1 = reverse a3\n 25821: a2 = reverse a2\n 25823: a0 = reverse t0\n 25825: u64 [sp + 0x1b0] = a0\n 25829: u64 [sp + 0x48] = a2\n 25832: a0 = a0 | a2\n 25835: u64 [sp + 0x1b8] = a1\n 25839: a1 = a1 | s1\n 25842: a1 = a1 | a0\n 25845: a1 = a1 >> 0x20\n 25848: a0 = a0 | s1\n 25851: a0 = a0 << 0x20\n 25854: a0 = a0 | a1\n 25857: jump @328 if a0 == 0\n      : @327 (gas: 1)\n 25860: jump @376\n      : @328 (gas: 4)\n 25863: a0 = i32 [sp + 0x1b8]\n 25867: a1 = 0x20\n 25870: u64 [sp + 0x1a8] = a0\n 25874: ra = 244, jump @0\n      : @329 [@dyn 122] (gas: 44)\n 25880: u8 [a0 + 31] = 0\n 25883: u8 [a0 + 30] = 0\n 25886: u8 [a0 + 29] = 0\n 25889: u8 [a0 + 28] = 0\n 25892: u8 [a0 + 27] = 0\n 25895: u8 [a0 + 26] = 0\n 25898: u8 [a0 + 25] = 0\n 25901: u8 [a0 + 24] = 0\n 25904: u8 [a0 + 23] = 0\n 25907: u8 [a0 + 22] = 0\n 25910: u8 [a0 + 21] = 0\n 25913: u8 [a0 + 20] = 0\n 25916: u8 [a0 + 19] = 0\n 25919: u8 [a0 + 18] = 0\n 25922: u8 [a0 + 17] = 0\n 25925: u8 [a0 + 16] = 0\n 25928: u8 [a0 + 15] = 0\n 25931: u8 [a0 + 14] = 0\n 25934: u8 [a0 + 13] = 0\n 25937: u8 [a0 + 12] = 0\n 25940: u8 [a0 + 11] = 0\n 25943: u8 [a0 + 10] = 0\n 25946: u8 [a0 + 9] = 0\n 25949: u8 [a0 + 8] = 0\n 25952: u8 [a0 + 7] = 0\n 25955: u8 [a0 + 6] = 0\n 25958: u8 [a0 + 5] = 0\n 25961: u8 [a0 + 3] = 0x42\n 25965: u8 [a0 + 2] = 0x81\n 25970: u8 [a0 + 1] = 0x2\n 25974: u8 [a0 + 0] = 0xbd\n 25978: u64 [sp + 0x10] = s1\n 25981: a3 = u64 [sp + 0x48]\n 25984: a3 = a3 | s1\n 25987: a1 = 0xfffffffc\n 25997: a2 = u64 [sp + 0x1b8]\n 26001: a1 = a2 <u a1\n 26004: a2 = u64 [sp + 0x1b0]\n 26008: a1 = 0 if a2 != 0\n 26010: u64 [sp + 0x198] = a3\n 26014: a1 = 0 if a3 != 0\n 26016: u8 [a0 + 4] = 0\n 26019: a2 = u64 [sp + 0x50]\n 26022: jump @331 if a1 != 0\n      : @330 (gas: 1)\n 26025: jump @376\n      : @331 (gas: 12)\n 26028: a1 = u64 [sp + 0x108]\n 26032: a1 = a1 & 0xffffffffffffffff\n 26035: u64 [sp + 0x108] = a1\n 26039: a1 = u64 [sp + 0x110]\n 26043: a0 = a1 & 0xffffffffffffffff\n 26046: u64 [sp + 0x110] = a0\n 26050: a0 = u64 [sp + 0x118]\n 26054: s1 = a0 & a2\n 26057: a0 = u64 [sp + 0x1a8]\n 26061: i32 a0 = a0 + 0x4\n 26064: a1 = 0x20\n 26067: ra = 246, jump @0\n      : @332 [@dyn 123] (gas: 65)\n 26073: a1 = reverse s1\n 26075: a2 = u64 [sp + 0x110]\n 26079: a2 = reverse a2\n 26081: a3 = u64 [sp + 0x108]\n 26085: a3 = reverse a3\n 26087: a4 = a3 >> 0x38\n 26090: u8 [a0 + 0x1f] = a4\n 26093: a4 = a3 >> 0x30\n 26096: u8 [a0 + 0x1e] = a4\n 26099: a4 = a3 >> 0x28\n 26102: u8 [a0 + 0x1d] = a4\n 26105: a4 = a3 >> 0x20\n 26108: u8 [a0 + 0x1c] = a4\n 26111: a4 = a3 >> 0x18\n 26114: u8 [a0 + 0x1b] = a4\n 26117: a4 = a3 >> 0x10\n 26120: u8 [a0 + 0x1a] = a4\n 26123: a4 = a3 >> 0x8\n 26126: u8 [a0 + 0x19] = a4\n 26129: u8 [a0 + 0x18] = a3\n 26132: u8 [a0 + 0x10] = a2\n 26135: u8 [a0 + 11] = 0\n 26138: u8 [a0 + 10] = 0\n 26141: u8 [a0 + 9] = 0\n 26144: u8 [a0 + 7] = 0\n 26147: u8 [a0 + 6] = 0\n 26150: u8 [a0 + 5] = 0\n 26153: u8 [a0 + 4] = 0\n 26156: u8 [a0 + 3] = 0\n 26159: u8 [a0 + 2] = 0\n 26162: u8 [a0 + 1] = 0\n 26165: u8 [a0 + 0] = 0\n 26167: a3 = a2 >> 0x38\n 26170: u8 [a0 + 0x17] = a3\n 26173: a3 = a2 >> 0x30\n 26176: u8 [a0 + 0x16] = a3\n 26179: a3 = a2 >> 0x28\n 26182: u8 [a0 + 0x15] = a3\n 26185: a3 = a2 >> 0x20\n 26188: u8 [a0 + 0x14] = a3\n 26191: a3 = a2 >> 0x18\n 26194: u8 [a0 + 0x13] = a3\n 26197: a3 = a2 >> 0x10\n 26200: u8 [a0 + 0x12] = a3\n 26203: a2 = a2 >> 0x8\n 26206: u8 [a0 + 0x11] = a2\n 26209: u8 [a0 + 0x8] = a1\n 26212: a2 = a1 >> 0x38\n 26215: u8 [a0 + 0xf] = a2\n 26218: a2 = a1 >> 0x30\n 26221: u8 [a0 + 0xe] = a2\n 26224: a2 = a1 >> 0x28\n 26227: u8 [a0 + 0xd] = a2\n 26230: a1 = a1 >> 0x20\n 26233: s1 = 0x100000000\n 26243: u64 [sp + 0x118] = s1\n 26247: a2 = 0xffffffdc\n 26257: a3 = u64 [sp + 0x1b8]\n 26261: a2 = a3 <u a2\n 26264: a3 = u64 [sp + 0x1b0]\n 26268: a2 = 0 if a3 != 0\n 26270: a3 = u64 [sp + 0x198]\n 26274: a2 = 0 if a3 != 0\n 26276: u8 [a0 + 0xc] = a1\n 26279: jump @334 if a2 != 0\n      : @333 (gas: 1)\n 26282: jump @376\n      : @334 (gas: 13)\n 26285: a0 = u64 [sp + 0x30]\n 26288: s1 = u64 [sp + 0x50]\n 26291: s1 = s1 & a0\n 26294: a0 = u64 [sp + 0x38]\n 26297: a0 = a0 & 0xffffffffffffffff\n 26300: u64 [sp + 0x108] = a0\n 26304: a0 = u64 [sp + 0x40]\n 26307: a0 = a0 & 0xffffffffffffffff\n 26310: u64 [sp + 0x110] = a0\n 26314: a0 = u64 [sp + 0x1a8]\n 26318: i32 a0 = a0 + 0x24\n 26321: a1 = 0x20\n 26324: ra = 248, jump @0\n      : @335 [@dyn 124] (gas: 64)\n 26330: a1 = reverse s1\n 26332: a2 = u64 [sp + 0x108]\n 26336: a2 = reverse a2\n 26338: a3 = u64 [sp + 0x110]\n 26342: a3 = reverse a3\n 26344: a4 = a3 >> 0x38\n 26347: u8 [a0 + 0x1f] = a4\n 26350: a4 = a3 >> 0x30\n 26353: u8 [a0 + 0x1e] = a4\n 26356: a4 = a3 >> 0x28\n 26359: u8 [a0 + 0x1d] = a4\n 26362: a4 = a3 >> 0x20\n 26365: u8 [a0 + 0x1c] = a4\n 26368: a4 = a3 >> 0x18\n 26371: u8 [a0 + 0x1b] = a4\n 26374: a4 = a3 >> 0x10\n 26377: u8 [a0 + 0x1a] = a4\n 26380: a4 = a3 >> 0x8\n 26383: u8 [a0 + 0x19] = a4\n 26386: u8 [a0 + 0x18] = a3\n 26389: u8 [a0 + 0x10] = a2\n 26392: u8 [a0 + 11] = 0\n 26395: u8 [a0 + 10] = 0\n 26398: u8 [a0 + 9] = 0\n 26401: u8 [a0 + 7] = 0\n 26404: u8 [a0 + 6] = 0\n 26407: u8 [a0 + 5] = 0\n 26410: u8 [a0 + 4] = 0\n 26413: u8 [a0 + 3] = 0\n 26416: u8 [a0 + 2] = 0\n 26419: u8 [a0 + 1] = 0\n 26422: u8 [a0 + 0] = 0\n 26424: a3 = a2 >> 0x38\n 26427: u8 [a0 + 0x17] = a3\n 26430: a3 = a2 >> 0x30\n 26433: u8 [a0 + 0x16] = a3\n 26436: a3 = a2 >> 0x28\n 26439: u8 [a0 + 0x15] = a3\n 26442: a3 = a2 >> 0x20\n 26445: u8 [a0 + 0x14] = a3\n 26448: a3 = a2 >> 0x18\n 26451: u8 [a0 + 0x13] = a3\n 26454: a3 = a2 >> 0x10\n 26457: u8 [a0 + 0x12] = a3\n 26460: a2 = a2 >> 0x8\n 26463: u8 [a0 + 0x11] = a2\n 26466: u8 [a0 + 0x8] = a1\n 26469: a2 = a1 >> 0x38\n 26472: u8 [a0 + 0xf] = a2\n 26475: a2 = a1 >> 0x30\n 26478: u8 [a0 + 0xe] = a2\n 26481: a2 = a1 >> 0x28\n 26484: u8 [a0 + 0xd] = a2\n 26487: a1 = a1 >> 0x20\n 26490: a2 = u64 [sp + 0x118]\n 26494: a2 = a2 + 0xffffffffffffffbc\n 26497: s1 = u64 [sp + 0x1b8]\n 26501: a2 = s1 <u a2\n 26504: a3 = u64 [sp + 0x1b0]\n 26508: a2 = 0 if a3 != 0\n 26510: a3 = u64 [sp + 0x198]\n 26514: a2 = 0 if a3 != 0\n 26516: u8 [a0 + 0xc] = a1\n 26519: jump @337 if a2 != 0\n      : @336 (gas: 1)\n 26522: jump @376\n      : @337 (gas: 4)\n 26525: a0 = u64 [sp + 0x1a8]\n 26529: i32 a0 = a0 + 0x44\n 26532: a1 = 0x20\n 26535: ra = 250, jump @0\n      : @338 [@dyn 125] (gas: 72)\n 26541: a1 = u64 [sp + 0x100]\n 26545: u8 [a0 + 0x10] = a1\n 26548: a1 = u64 [sp + 0xc0]\n 26552: u8 [a0 + 0xf] = a1\n 26555: a1 = u64 [sp + 0xb8]\n 26559: u8 [a0 + 0xe] = a1\n 26562: a1 = u64 [sp + 0xb0]\n 26566: u8 [a0 + 0xd] = a1\n 26569: a1 = u64 [sp + 0xa8]\n 26573: u8 [a0 + 0xc] = a1\n 26576: a1 = u64 [sp + 0xa0]\n 26580: u8 [a0 + 0xb] = a1\n 26583: a1 = u64 [sp + 0x98]\n 26587: u8 [a0 + 0xa] = a1\n 26590: a1 = u64 [sp + 0x90]\n 26594: u8 [a0 + 0x9] = a1\n 26597: a1 = u64 [sp + 0x148]\n 26601: u8 [a0 + 0x8] = a1\n 26604: a1 = u64 [sp + 0x88]\n 26608: u8 [a0 + 0x7] = a1\n 26611: a1 = u64 [sp + 0x80]\n 26615: u8 [a0 + 0x6] = a1\n 26618: a1 = u64 [sp + 0x78]\n 26621: u8 [a0 + 0x5] = a1\n 26624: a1 = u64 [sp + 0x70]\n 26627: u8 [a0 + 0x4] = a1\n 26630: a1 = u64 [sp + 0x68]\n 26633: u8 [a0 + 0x3] = a1\n 26636: a1 = u64 [sp + 0x60]\n 26639: u8 [a0 + 0x2] = a1\n 26642: a1 = u64 [sp + 0x58]\n 26645: u8 [a0 + 0x1] = a1\n 26648: a1 = u64 [sp + 0x160]\n 26652: u8 [a0] = a1\n 26654: a1 = u64 [sp + 0x150]\n 26658: u8 [a0 + 0x18] = a1\n 26661: a1 = u64 [sp + 0xf8]\n 26665: u8 [a0 + 0x17] = a1\n 26668: a1 = u64 [sp + 0xf0]\n 26672: u8 [a0 + 0x16] = a1\n 26675: a1 = u64 [sp + 0xe8]\n 26679: u8 [a0 + 0x15] = a1\n 26682: a1 = u64 [sp + 0xe0]\n 26686: u8 [a0 + 0x14] = a1\n 26689: a1 = u64 [sp + 0xd8]\n 26693: u8 [a0 + 0x13] = a1\n 26696: a1 = u64 [sp + 0xd0]\n 26700: u8 [a0 + 0x12] = a1\n 26703: a1 = u64 [sp + 0xc8]\n 26707: u8 [a0 + 0x11] = a1\n 26710: a1 = u64 [sp + 0x188]\n 26714: u8 [a0 + 0x1f] = a1\n 26717: a1 = u64 [sp + 0x180]\n 26721: u8 [a0 + 0x1e] = a1\n 26724: a1 = u64 [sp + 0x178]\n 26728: u8 [a0 + 0x1d] = a1\n 26731: a1 = u64 [sp + 0x170]\n 26735: u8 [a0 + 0x1c] = a1\n 26738: a1 = u64 [sp + 0x168]\n 26742: u8 [a0 + 0x1b] = a1\n 26745: a1 = u64 [sp + 0x158]\n 26749: u8 [a0 + 0x1a] = a1\n 26752: a1 = 0xffffff9c\n 26762: a1 = s1 <u a1\n 26765: a2 = u64 [sp + 0x1b0]\n 26769: a1 = 0 if a2 != 0\n 26771: a2 = u64 [sp + 0x198]\n 26775: a1 = 0 if a2 != 0\n 26777: a2 = u64 [sp + 0x190]\n 26781: u8 [a0 + 0x19] = a2\n 26784: s1 = u64 [sp + 0x1a8]\n 26788: jump @376 if a1 == 0\n      : @339 (gas: 3)\n 26792: i32 a0 = s1 + 0x64\n 26795: a1 = 0x20\n 26798: ra = 252, jump @0\n      : @340 [@dyn 126] (gas: 56)\n 26804: u8 [a0 + 31] = 0\n 26807: u8 [a0 + 30] = 0\n 26810: u8 [a0 + 29] = 0\n 26813: u8 [a0 + 28] = 0\n 26816: u8 [a0 + 27] = 0\n 26819: u8 [a0 + 26] = 0\n 26822: u8 [a0 + 25] = 0\n 26825: u8 [a0 + 24] = 0\n 26828: u8 [a0 + 23] = 0\n 26831: u8 [a0 + 22] = 0\n 26834: u8 [a0 + 21] = 0\n 26837: u8 [a0 + 20] = 0\n 26840: u8 [a0 + 19] = 0\n 26843: u8 [a0 + 18] = 0\n 26846: u8 [a0 + 17] = 0\n 26849: u8 [a0 + 16] = 0\n 26852: u8 [a0 + 15] = 0\n 26855: u8 [a0 + 14] = 0\n 26858: u8 [a0 + 13] = 0\n 26861: u8 [a0 + 12] = 0\n 26864: u8 [a0 + 11] = 0\n 26867: u8 [a0 + 10] = 0\n 26870: u8 [a0 + 9] = 0\n 26873: u8 [a0 + 8] = 0\n 26876: u8 [a0 + 7] = 0\n 26879: u8 [a0 + 6] = 0\n 26882: u8 [a0 + 5] = 0\n 26885: u8 [a0 + 4] = 0\n 26888: u8 [a0 + 3] = 0\n 26891: u8 [a0 + 2] = 0\n 26894: u8 [a0 + 1] = 0\n 26897: u8 [a0 + 0] = 0\n 26899: ecalli 8 // 'ref_time_left'\n 26901: a0 = u64 [sp + 0x18]\n 26904: a0 = reverse a0\n 26906: a1 = a0 << 0x20\n 26909: a2 = u64 [sp + 0x20]\n 26912: a2 = reverse a2\n 26914: a2 = a2 >> 0x20\n 26917: a1 = a1 | a2\n 26920: a2 = u64 [sp + 0x28]\n 26923: a2 = reverse a2\n 26925: a3 = a2 << 0x20\n 26928: a0 = a0 >> 0x20\n 26931: a0 = a0 | a3\n 26934: a2 = a2 >> 0x20\n 26937: u64 [sp + 0x708] = a0\n 26941: u64 [sp + 0x700] = a1\n 26945: u32 [sp + 0x710] = a2\n 26949: u64 [sp + 1848] = 0\n 26953: u64 [sp + 1840] = 0\n 26957: u64 [sp + 1832] = 0\n 26961: u64 [sp + 1824] = 0\n 26965: a1 = 0x84\n 26969: a0 = s1\n 26971: ra = 254, jump @0\n      : @341 [@dyn 127] (gas: 4)\n 26977: u64 [sp + 0x198] = a0\n 26981: a1 = 0x20\n 26984: a0 = s1\n 26986: ra = 256, jump @0\n      : @342 [@dyn 128] (gas: 31)\n 26992: u32 [sp + 1856] = 0x20\n 26997: u64 [sp + 1912] = 0xffffffffffffffff\n 27002: u64 [sp + 1904] = 0xffffffffffffffff\n 27007: u64 [sp + 1896] = 0xffffffffffffffff\n 27012: u64 [sp + 1888] = 0xffffffffffffffff\n 27017: a1 = sp + 0x700\n 27021: a1 = a1 << 0x20\n 27024: a1 = a1 >> 0x20\n 27027: s1 = u64 [sp + 0x1a0]\n 27031: s1 = s1 | a1\n 27034: a1 = sp + 0x720\n 27038: a1 = a1 << 0x20\n 27041: a1 = a1 >> 0x20\n 27044: a2 = sp + 0x760\n 27048: a2 = a2 << 0x20\n 27051: a3 = a2 | a1\n 27054: a1 = u64 [sp + 0x198]\n 27058: a1 = a1 << 0x20\n 27061: a1 = a1 >> 0x20\n 27064: a2 = 0x8400000000\n 27074: a4 = a1 | a2\n 27077: a0 = a0 << 0x20\n 27080: a0 = a0 >> 0x20\n 27083: a1 = sp + 0x740\n 27087: a1 = a1 << 0x20\n 27090: a5 = a1 | a0\n 27093: a1 = 0xffffffffffffffff\n 27096: a2 = 0xffffffffffffffff\n 27099: a0 = s1\n 27101: ecalli 1 // 'call'\n 27103: fallthrough\n      : @343 (gas: 1)\n 27104: jump @377 if a0 != 0\n      : @344 (gas: 2)\n 27108: ecalli 10 // 'return_data_size'\n 27110: fallthrough\n      : @345 (gas: 3)\n 27111: a1 = 0x20\n 27114: s1 = u64 [sp + 0x1b8]\n 27118: jump @347 if a0 >=u a1\n      : @346 (gas: 3)\n 27121: ecalli 10 // 'return_data_size'\n 27123: a1 = a0\n 27125: fallthrough\n      : @347 (gas: 26)\n 27126: a3 = u64 [sp + 0x48]\n 27129: a4 = u64 [sp + 0x1b0]\n 27133: a0 = a1 + 0x1f\n 27136: u64 [sp + 0x198] = a1\n 27140: a1 = a0 <u a1\n 27143: u64 [sp + 432] = 0\n 27147: a1 = a1 & 0x1\n 27150: a0 = a0 & 0xffffffffffffffe0\n 27153: s1 = s1 + a0\n 27156: u64 [sp + 0x1b8] = s1\n 27160: a0 = s1 <u a0\n 27163: s1 = a1 + a4\n 27166: s1 = s1 + a0\n 27169: a2 = s1 ^ a1\n 27172: a1 = s1 <u a1\n 27175: a1 = a0 if a2 == 0\n 27178: a0 = u64 [sp + 0x10]\n 27181: a1 = a1 + a0\n 27184: a0 = a1 <u a0\n 27187: a0 = a0 + a3\n 27190: u64 [sp + 0x190] = a1\n 27194: u64 [sp + 0x188] = a0\n 27198: a0 = a0 | a1\n 27201: a1 = s1 <u 0x1\n 27204: a1 = 0 if a0 != 0\n 27206: jump @388 if a1 == 0\n      : @348 (gas: 3)\n 27210: a0 = 0x40\n 27213: a1 = 0x20\n 27216: ra = 258, jump @0\n      : @349 [@dyn 129] (gas: 79)\n 27222: a1 = u64 [sp + 0x188]\n 27226: a1 = reverse a1\n 27228: a2 = u64 [sp + 0x190]\n 27232: a2 = reverse a2\n 27234: a3 = reverse s1\n 27236: a4 = u64 [sp + 0x1b8]\n 27240: a4 = reverse a4\n 27242: u8 [a0 + 0x18] = a4\n 27245: a5 = a4 >> 0x38\n 27248: u8 [a0 + 0x1f] = a5\n 27251: a5 = a4 >> 0x30\n 27254: u8 [a0 + 0x1e] = a5\n 27257: a5 = a4 >> 0x28\n 27260: u8 [a0 + 0x1d] = a5\n 27263: a5 = a4 >> 0x20\n 27266: u8 [a0 + 0x1c] = a5\n 27269: a5 = a4 >> 0x18\n 27272: u8 [a0 + 0x1b] = a5\n 27275: a5 = a4 >> 0x10\n 27278: u8 [a0 + 0x1a] = a5\n 27281: a4 = a4 >> 0x8\n 27284: u8 [a0 + 0x19] = a4\n 27287: u8 [a0 + 0x10] = a3\n 27290: a4 = a3 >> 0x38\n 27293: u8 [a0 + 0x17] = a4\n 27296: a4 = a3 >> 0x30\n 27299: u8 [a0 + 0x16] = a4\n 27302: a4 = a3 >> 0x28\n 27305: u8 [a0 + 0x15] = a4\n 27308: a4 = a3 >> 0x20\n 27311: u8 [a0 + 0x14] = a4\n 27314: a4 = a3 >> 0x18\n 27317: u8 [a0 + 0x13] = a4\n 27320: a4 = a3 >> 0x10\n 27323: u8 [a0 + 0x12] = a4\n 27326: a3 = a3 >> 0x8\n 27329: u8 [a0 + 0x11] = a3\n 27332: u8 [a0 + 0x8] = a2\n 27335: a3 = a2 >> 0x38\n 27338: u8 [a0 + 0xf] = a3\n 27341: a3 = a2 >> 0x30\n 27344: u8 [a0 + 0xe] = a3\n 27347: a3 = a2 >> 0x28\n 27350: u8 [a0 + 0xd] = a3\n 27353: a3 = a2 >> 0x20\n 27356: u8 [a0 + 0xc] = a3\n 27359: a3 = a2 >> 0x18\n 27362: u8 [a0 + 0xb] = a3\n 27365: a3 = a2 >> 0x10\n 27368: u8 [a0 + 0xa] = a3\n 27371: a2 = a2 >> 0x8\n 27374: u8 [a0 + 0x9] = a2\n 27377: u8 [a0] = a1\n 27379: a2 = a1 >> 0x38\n 27382: u8 [a0 + 0x7] = a2\n 27385: a2 = a1 >> 0x30\n 27388: u8 [a0 + 0x6] = a2\n 27391: a2 = a1 >> 0x28\n 27394: u8 [a0 + 0x5] = a2\n 27397: a2 = a1 >> 0x20\n 27400: u8 [a0 + 0x4] = a2\n 27403: a2 = a1 >> 0x18\n 27406: u8 [a0 + 0x3] = a2\n 27409: a2 = a1 >> 0x10\n 27412: u8 [a0 + 0x2] = a2\n 27415: a1 = a1 >> 0x8\n 27418: a5 = u64 [sp + 0x1b0]\n 27422: a2 = a5 >u 0\n 27424: a3 = u64 [sp + 0x198]\n 27428: a3 = a3 <u 0x20\n 27431: a3 = a3 ^ 0x1\n 27434: a3 = a2 if a5 != 0\n 27437: a2 = a5 >u 0\n 27439: a4 = a5 >u 0\n 27441: a4 = a2 if a5 == 0\n 27444: a2 = a5 | a5\n 27447: a4 = a3 if a2 == 0\n 27450: u8 [a0 + 0x1] = a1\n 27453: jump @378 if a4 == 0\n      : @350 (gas: 3)\n 27457: a1 = 0x20\n 27460: a0 = u64 [sp + 0x1a8]\n 27464: ra = 260, jump @0\n      : @351 [@dyn 130] (gas: 19)\n 27470: i32 a0 = sp + 0x780\n 27474: ecalli 5 // 'caller'\n 27476: a0 = u64 [sp + 0x788]\n 27480: a1 = i32 [sp + 0x790]\n 27484: s1 = u64 [sp + 0x780]\n 27488: a0 = reverse a0\n 27490: a2 = a0 << 0x20\n 27493: a1 = reverse a1\n 27495: a1 = a1 >> 0x20\n 27498: a1 = a1 | a2\n 27501: u64 [sp + 0x1b8] = a1\n 27505: a0 = a0 >> 0x20\n 27508: a1 = reverse s1\n 27510: a1 = a1 << 0x20\n 27513: a0 = a0 | a1\n 27516: u64 [sp + 0x1b0] = a0\n 27520: a1 = 0x20\n 27523: a0 = 0\n 27525: ra = 262, jump @0\n      : @352 [@dyn 131] (gas: 56)\n 27531: a1 = u64 [sp + 0x1b0]\n 27535: a1 = reverse a1\n 27537: a2 = u64 [sp + 0x1b8]\n 27541: a2 = reverse a2\n 27543: a3 = s1 >> 0x18\n 27546: u8 [a0 + 0xf] = a3\n 27549: a3 = s1 >> 0x10\n 27552: u8 [a0 + 0xe] = a3\n 27555: a3 = s1 >> 0x8\n 27558: u8 [a0 + 0xd] = a3\n 27561: u8 [a0 + 0xc] = s1\n 27564: u8 [a0 + 11] = 0\n 27567: u8 [a0 + 10] = 0\n 27570: u8 [a0 + 9] = 0\n 27573: u8 [a0 + 8] = 0\n 27576: u8 [a0 + 7] = 0\n 27579: u8 [a0 + 6] = 0\n 27582: u8 [a0 + 5] = 0\n 27585: u8 [a0 + 4] = 0\n 27588: u8 [a0 + 3] = 0\n 27591: u8 [a0 + 2] = 0\n 27594: u8 [a0 + 1] = 0\n 27597: u8 [a0 + 0] = 0\n 27599: u8 [a0 + 0x18] = a2\n 27602: u8 [a0 + 0x10] = a1\n 27605: a3 = a2 >> 0x38\n 27608: u8 [a0 + 0x1f] = a3\n 27611: a3 = a2 >> 0x30\n 27614: u8 [a0 + 0x1e] = a3\n 27617: a3 = a2 >> 0x28\n 27620: u8 [a0 + 0x1d] = a3\n 27623: a3 = a2 >> 0x20\n 27626: u8 [a0 + 0x1c] = a3\n 27629: a3 = a2 >> 0x18\n 27632: u8 [a0 + 0x1b] = a3\n 27635: a3 = a2 >> 0x10\n 27638: u8 [a0 + 0x1a] = a3\n 27641: a2 = a2 >> 0x8\n 27644: u8 [a0 + 0x19] = a2\n 27647: a2 = a1 >> 0x38\n 27650: u8 [a0 + 0x17] = a2\n 27653: a2 = a1 >> 0x30\n 27656: u8 [a0 + 0x16] = a2\n 27659: a2 = a1 >> 0x28\n 27662: u8 [a0 + 0x15] = a2\n 27665: a2 = a1 >> 0x20\n 27668: u8 [a0 + 0x14] = a2\n 27671: a2 = a1 >> 0x18\n 27674: u8 [a0 + 0x13] = a2\n 27677: a2 = a1 >> 0x10\n 27680: u8 [a0 + 0x12] = a2\n 27683: a1 = a1 >> 0x8\n 27686: u8 [a0 + 0x11] = a1\n 27689: a0 = 0x20\n 27692: a1 = 0x20\n 27695: ra = 264, jump @0\n      : @353 [@dyn 132] (gas: 35)\n 27701: u8 [a0 + 31] = 0x4\n 27705: u8 [a0 + 30] = 0\n 27708: u8 [a0 + 29] = 0\n 27711: u8 [a0 + 28] = 0\n 27714: u8 [a0 + 27] = 0\n 27717: u8 [a0 + 26] = 0\n 27720: u8 [a0 + 25] = 0\n 27723: u8 [a0 + 24] = 0\n 27726: u8 [a0 + 23] = 0\n 27729: u8 [a0 + 22] = 0\n 27732: u8 [a0 + 21] = 0\n 27735: u8 [a0 + 20] = 0\n 27738: u8 [a0 + 19] = 0\n 27741: u8 [a0 + 18] = 0\n 27744: u8 [a0 + 17] = 0\n 27747: u8 [a0 + 16] = 0\n 27750: u8 [a0 + 15] = 0\n 27753: u8 [a0 + 14] = 0\n 27756: u8 [a0 + 13] = 0\n 27759: u8 [a0 + 12] = 0\n 27762: u8 [a0 + 11] = 0\n 27765: u8 [a0 + 10] = 0\n 27768: u8 [a0 + 9] = 0\n 27771: u8 [a0 + 8] = 0\n 27774: u8 [a0 + 7] = 0\n 27777: u8 [a0 + 6] = 0\n 27780: u8 [a0 + 5] = 0\n 27783: u8 [a0 + 4] = 0\n 27786: u8 [a0 + 3] = 0\n 27789: u8 [a0 + 2] = 0\n 27792: u8 [a0 + 1] = 0\n 27795: u8 [a0 + 0] = 0\n 27797: a1 = 0x40\n 27800: a0 = 0\n 27802: ra = 266, jump @0\n      : @354 [@dyn 133] (gas: 49)\n 27808: i32 a0 = a0 + 0\n 27810: a1 = sp + 0x1000\n 27814: i32 a2 = a1 + 0xfffffffffffff860\n 27818: a1 = 0x40\n 27821: ecalli 7 // 'hash_keccak_256'\n 27823: a0 = sp + 0x1000\n 27827: a0 = u64 [a0 + 0xfffffffffffff878]\n 27831: a1 = sp + 0x1000\n 27835: a1 = u64 [a1 + 0xfffffffffffff870]\n 27839: a2 = sp + 0x1000\n 27843: a2 = u64 [a2 + 0xfffffffffffff868]\n 27847: a3 = sp + 0x1000\n 27851: a3 = u64 [a3 + 0xfffffffffffff860]\n 27855: a0 = reverse a0\n 27857: a1 = reverse a1\n 27859: a2 = reverse a2\n 27861: a3 = reverse a3\n 27863: u64 [sp + 0x198] = a3\n 27867: a4 = sp + 0x1000\n 27871: u64 [a4 + 0xfffffffffffff858] = a3\n 27875: u64 [sp + 0x1a8] = a2\n 27879: a3 = sp + 0x1000\n 27883: u64 [a3 + 0xfffffffffffff850] = a2\n 27887: u64 [sp + 0x1b0] = a1\n 27891: a2 = sp + 0x1000\n 27895: u64 [a2 + 0xfffffffffffff848] = a1\n 27899: u64 [sp + 0x1b8] = a0\n 27903: a1 = sp + 0x1000\n 27907: u64 [a1 + 0xfffffffffffff840] = a0\n 27911: a0 = sp + 0x1000\n 27915: u64 [a0 + 4294965368] = 0\n 27919: a0 = sp + 0x1000\n 27923: u64 [a0 + 4294965360] = 0\n 27927: a0 = sp + 0x1000\n 27931: u64 [a0 + 4294965352] = 0\n 27935: a0 = sp + 0x1000\n 27939: u64 [a0 + 4294965344] = 0\n 27943: a1 = sp + 0x1000\n 27947: u32 [a1 + 4294965376] = 0x20\n 27952: a0 = sp + 0x1000\n 27956: i32 a1 = a0 + 0xfffffffffffff840\n 27960: a0 = sp + 0x1000\n 27964: i32 a3 = a0 + 0xfffffffffffff860\n 27968: a0 = sp + 0x1000\n 27972: i32 a4 = a0 + 0xfffffffffffff880\n 27976: a2 = 0xffffffffffffffff\n 27979: a0 = 0\n 27981: ecalli 6 // 'get_storage'\n 27983: fallthrough\n      : @355 (gas: 37)\n 27984: a0 = sp + 0x1000\n 27988: a0 = u64 [a0 + 0xfffffffffffff868]\n 27992: a1 = sp + 0x1000\n 27996: a1 = u64 [a1 + 0xfffffffffffff860]\n 28000: a2 = sp + 0x1000\n 28004: a2 = u64 [a2 + 0xfffffffffffff878]\n 28008: a3 = sp + 0x1000\n 28012: a3 = u64 [a3 + 0xfffffffffffff870]\n 28016: a4 = u64 [sp + 0x138]\n 28020: a4 = a4 + a0\n 28023: a5 = u64 [sp + 0x140]\n 28027: a5 = a5 + a1\n 28030: u64 [sp + 0x190] = a5\n 28034: a1 = a5 <u a1\n 28037: a5 = a4 + a1\n 28040: a4 = a5 ^ a0\n 28043: u64 [sp + 0x188] = a5\n 28047: a0 = a5 <u a0\n 28050: a0 = a1 if a4 == 0\n 28053: a1 = u64 [sp + 0x130]\n 28057: a1 = a1 + a3\n 28060: s1 = a1 + a0\n 28063: a4 = s1 <u a1\n 28066: a5 = u64 [sp + 0x128]\n 28070: a5 = a5 + a2\n 28073: a1 = a1 <u a3\n 28076: a1 = a1 + a5\n 28079: a5 = a1 + a4\n 28082: a1 = s1 <u a3\n 28085: a4 = a5 ^ a2\n 28088: u64 [sp + 0x180] = a5\n 28092: a2 = a5 <u a2\n 28095: a2 = a1 if a4 == 0\n 28098: a3 = a3 ^ s1\n 28101: a3 = a3 | a4\n 28104: a2 = a0 if a3 == 0\n 28107: jump @390 if a2 != 0\n      : @356 (gas: 109)\n 28111: a0 = u64 [sp + 0x1a8]\n 28115: a1 = sp + 0x1000\n 28119: u64 [a1 + 0xfffffffffffff850] = a0\n 28123: a0 = u64 [sp + 0x1b0]\n 28127: a1 = sp + 0x1000\n 28131: u64 [a1 + 0xfffffffffffff848] = a0\n 28135: a0 = u64 [sp + 0x1b8]\n 28139: a1 = sp + 0x1000\n 28143: u64 [a1 + 0xfffffffffffff840] = a0\n 28147: a0 = u64 [sp + 0x198]\n 28151: a1 = sp + 0x1000\n 28155: u64 [a1 + 0xfffffffffffff858] = a0\n 28159: a0 = sp + 0x1000\n 28163: u64 [a0 + 4294965368] = 0\n 28167: a0 = sp + 0x1000\n 28171: u64 [a0 + 4294965360] = 0\n 28175: a0 = sp + 0x1000\n 28179: u64 [a0 + 4294965352] = 0\n 28183: a0 = sp + 0x1000\n 28187: u64 [a0 + 4294965344] = 0\n 28191: a1 = sp + 0x1000\n 28195: u32 [a1 + 4294965376] = 0x20\n 28200: a0 = sp + 0x1000\n 28204: i32 a1 = a0 + 0xfffffffffffff840\n 28208: a0 = sp + 0x1000\n 28212: i32 a3 = a0 + 0xfffffffffffff860\n 28216: a0 = sp + 0x1000\n 28220: i32 a4 = a0 + 0xfffffffffffff880\n 28224: a2 = 0xffffffffffffffff\n 28227: a0 = 0\n 28229: ecalli 6 // 'get_storage'\n 28231: a0 = u64 [sp + 0x198]\n 28235: a1 = sp + 0x1000\n 28239: u64 [a1 + 0xfffffffffffff858] = a0\n 28243: a0 = u64 [sp + 0x1a8]\n 28247: a1 = sp + 0x1000\n 28251: u64 [a1 + 0xfffffffffffff850] = a0\n 28255: a0 = u64 [sp + 0x1b0]\n 28259: a1 = sp + 0x1000\n 28263: u64 [a1 + 0xfffffffffffff848] = a0\n 28267: a0 = u64 [sp + 0x1b8]\n 28271: a1 = sp + 0x1000\n 28275: u64 [a1 + 0xfffffffffffff840] = a0\n 28279: a0 = u64 [sp + 0x180]\n 28283: a1 = sp + 0x1000\n 28287: u64 [a1 + 0xfffffffffffff878] = a0\n 28291: a0 = sp + 0x1000\n 28295: u64 [a0 + 0xfffffffffffff870] = s1\n 28299: a0 = u64 [sp + 0x188]\n 28303: a1 = sp + 0x1000\n 28307: u64 [a1 + 0xfffffffffffff868] = a0\n 28311: a0 = u64 [sp + 0x190]\n 28315: a1 = sp + 0x1000\n 28319: u64 [a1 + 0xfffffffffffff860] = a0\n 28323: a0 = sp + 0x1000\n 28327: i32 a1 = a0 + 0xfffffffffffff840\n 28331: a0 = sp + 0x1000\n 28335: i32 a3 = a0 + 0xfffffffffffff860\n 28339: a2 = 0xffffffffffffffff\n 28342: a4 = 0x20\n 28345: a0 = 0\n 28347: ecalli 13 // 'set_storage'\n 28349: a0 = sp + 0x1000\n 28353: u64 [a0 + 4294965336] = 0\n 28357: a0 = sp + 0x1000\n 28361: u64 [a0 + 4294965328] = 0\n 28365: a0 = sp + 0x1000\n 28369: u64 [a0 + 4294965320] = 0\n 28373: a1 = sp + 0x1000\n 28377: u64 [a1 + 4294965312] = 0x3\n 28382: a0 = sp + 0x1000\n 28386: u64 [a0 + 4294965368] = 0\n 28390: a0 = sp + 0x1000\n 28394: u64 [a0 + 4294965360] = 0\n 28398: a0 = sp + 0x1000\n 28402: u64 [a0 + 4294965352] = 0\n 28406: a0 = sp + 0x1000\n 28410: u64 [a0 + 4294965344] = 0\n 28414: a1 = sp + 0x1000\n 28418: u32 [a1 + 4294965376] = 0x20\n 28423: a0 = sp + 0x1000\n 28427: i32 a1 = a0 + 0xfffffffffffff840\n 28431: a0 = sp + 0x1000\n 28435: i32 a3 = a0 + 0xfffffffffffff860\n 28439: a0 = sp + 0x1000\n 28443: i32 a4 = a0 + 0xfffffffffffff880\n 28447: a2 = 0xffffffffffffffff\n 28450: a0 = 0\n 28452: ecalli 6 // 'get_storage'\n 28454: a0 = sp + 0x1000\n 28458: a0 = u64 [a0 + 0xfffffffffffff870]\n 28462: u64 [sp + 0x170] = a0\n 28466: a0 = sp + 0x1000\n 28470: a0 = u64 [a0 + 0xfffffffffffff868]\n 28474: u64 [sp + 0x168] = a0\n 28478: a0 = sp + 0x1000\n 28482: a0 = u64 [a0 + 0xfffffffffffff860]\n 28486: u64 [sp + 0x178] = a0\n 28490: i32 a0 = sp + 0x7a0\n 28494: ecalli 5 // 'caller'\n 28496: a0 = i32 [sp + 0x7b0]\n 28500: u64 [sp + 0x190] = a0\n 28504: a0 = u64 [sp + 0x7a0]\n 28508: u64 [sp + 0x188] = a0\n 28512: a0 = u64 [sp + 0x7a8]\n 28516: u64 [sp + 0x180] = a0\n 28520: a0 = 0x40\n 28523: a1 = 0x20\n 28526: ra = 268, jump @0\n      : @357 [@dyn 134] (gas: 102)\n 28532: a1 = u8 [a0 + 0x11]\n 28535: a2 = u8 [a0 + 0x10]\n 28538: a3 = u8 [a0 + 0x12]\n 28541: a4 = u8 [a0 + 0x13]\n 28544: a1 = a1 << 0x8\n 28547: a1 = a1 | a2\n 28550: a3 = a3 << 0x10\n 28553: a4 = a4 << 0x18\n 28556: a3 = a3 | a4\n 28559: a1 = a1 | a3\n 28562: a2 = u8 [a0 + 0x15]\n 28565: a3 = u8 [a0 + 0x14]\n 28568: a4 = u8 [a0 + 0x16]\n 28571: a5 = u8 [a0 + 0x17]\n 28574: a2 = a2 << 0x8\n 28577: a2 = a2 | a3\n 28580: a4 = a4 << 0x10\n 28583: a5 = a5 << 0x18\n 28586: a4 = a4 | a5\n 28589: a2 = a2 | a4\n 28592: a2 = a2 << 0x20\n 28595: t0 = a2 | a1\n 28598: a2 = u8 [a0 + 0x1]\n 28601: a3 = u8 [a0]\n 28603: a4 = u8 [a0 + 0x2]\n 28606: a5 = u8 [a0 + 0x3]\n 28609: a2 = a2 << 0x8\n 28612: a2 = a2 | a3\n 28615: a4 = a4 << 0x10\n 28618: a5 = a5 << 0x18\n 28621: a4 = a4 | a5\n 28624: a2 = a2 | a4\n 28627: a3 = u8 [a0 + 0x5]\n 28630: a4 = u8 [a0 + 0x4]\n 28633: a5 = u8 [a0 + 0x6]\n 28636: s1 = u8 [a0 + 0x7]\n 28639: a3 = a3 << 0x8\n 28642: a3 = a3 | a4\n 28645: a5 = a5 << 0x10\n 28648: s1 = s1 << 0x18\n 28651: a5 = a5 | s1\n 28654: a3 = a3 | a5\n 28657: a3 = a3 << 0x20\n 28660: a2 = a2 | a3\n 28663: a3 = u8 [a0 + 0x19]\n 28666: a4 = u8 [a0 + 0x18]\n 28669: a5 = u8 [a0 + 0x1a]\n 28672: s1 = u8 [a0 + 0x1b]\n 28675: a3 = a3 << 0x8\n 28678: a3 = a3 | a4\n 28681: a5 = a5 << 0x10\n 28684: s1 = s1 << 0x18\n 28687: a5 = a5 | s1\n 28690: a3 = a3 | a5\n 28693: a4 = u8 [a0 + 0x1d]\n 28696: a5 = u8 [a0 + 0x1c]\n 28699: s1 = u8 [a0 + 0x1e]\n 28702: a1 = u8 [a0 + 0x1f]\n 28705: a4 = a4 << 0x8\n 28708: a4 = a4 | a5\n 28711: s1 = s1 << 0x10\n 28714: a1 = a1 << 0x18\n 28717: a1 = a1 | s1\n 28720: a1 = a1 | a4\n 28723: a1 = a1 << 0x20\n 28726: a3 = a3 | a1\n 28729: a1 = u8 [a0 + 0x9]\n 28732: a4 = u8 [a0 + 0x8]\n 28735: a5 = u8 [a0 + 0xa]\n 28738: s1 = u8 [a0 + 0xb]\n 28741: a1 = a1 << 0x8\n 28744: a1 = a1 | a4\n 28747: a5 = a5 << 0x10\n 28750: s1 = s1 << 0x18\n 28753: a5 = a5 | s1\n 28756: a1 = a1 | a5\n 28759: a4 = u8 [a0 + 0xd]\n 28762: a5 = u8 [a0 + 0xc]\n 28765: s1 = u8 [a0 + 0xe]\n 28768: a0 = u8 [a0 + 0xf]\n 28771: a4 = a4 << 0x8\n 28774: a4 = a4 | a5\n 28777: s1 = s1 << 0x10\n 28780: a0 = a0 << 0x18\n 28783: a0 = a0 | s1\n 28786: a0 = a0 | a4\n 28789: a0 = a0 << 0x20\n 28792: a0 = a0 | a1\n 28795: s1 = reverse a0\n 28797: a3 = reverse a3\n 28799: a1 = reverse a2\n 28801: a0 = reverse t0\n 28803: u64 [sp + 0x1b8] = a0\n 28807: u64 [sp + 0x198] = a1\n 28811: a0 = a0 | a1\n 28814: a1 = a3 | s1\n 28817: a1 = a1 | a0\n 28820: a1 = a1 >> 0x20\n 28823: a0 = a0 | s1\n 28826: a0 = a0 << 0x20\n 28829: a0 = a0 | a1\n 28832: jump @376 if a0 != 0\n      : @358 (gas: 5)\n 28836: i32 a0 = a3 + 0\n 28838: a1 = 0x20\n 28841: u64 [sp + 0x1a8] = a0\n 28845: u64 [sp + 0x1b0] = a3\n 28849: ra = 270, jump @0\n      : @359 [@dyn 135] (gas: 45)\n 28855: u8 [a0 + 31] = 0\n 28858: u8 [a0 + 30] = 0\n 28861: u8 [a0 + 29] = 0\n 28864: u8 [a0 + 28] = 0\n 28867: u8 [a0 + 27] = 0\n 28870: u8 [a0 + 26] = 0\n 28873: u8 [a0 + 25] = 0\n 28876: u8 [a0 + 24] = 0\n 28879: u8 [a0 + 23] = 0\n 28882: u8 [a0 + 22] = 0\n 28885: u8 [a0 + 21] = 0\n 28888: u8 [a0 + 20] = 0\n 28891: u8 [a0 + 19] = 0\n 28894: u8 [a0 + 18] = 0\n 28897: u8 [a0 + 17] = 0\n 28900: u8 [a0 + 16] = 0\n 28903: u8 [a0 + 15] = 0\n 28906: u8 [a0 + 14] = 0\n 28909: u8 [a0 + 13] = 0\n 28912: u8 [a0 + 12] = 0\n 28915: u8 [a0 + 11] = 0\n 28918: u8 [a0 + 10] = 0\n 28921: u8 [a0 + 9] = 0\n 28924: u8 [a0 + 8] = 0\n 28927: u8 [a0 + 7] = 0\n 28930: u8 [a0 + 6] = 0\n 28933: u8 [a0 + 5] = 0\n 28936: u8 [a0 + 3] = 0xbb\n 28941: u8 [a0 + 2] = 0x9c\n 28946: u8 [a0 + 1] = 0x5\n 28950: u8 [a0 + 0] = 0xa9\n 28954: u64 [sp + 0x150] = s1\n 28958: a3 = u64 [sp + 0x198]\n 28962: a3 = a3 | s1\n 28965: a1 = 0x100000000\n 28975: u64 [sp + 0x158] = a1\n 28979: a1 = 0xfffffffc\n 28989: a2 = u64 [sp + 0x1b0]\n 28993: a1 = a2 <u a1\n 28996: a2 = u64 [sp + 0x1b8]\n 29000: a1 = 0 if a2 != 0\n 29002: u64 [sp + 0x160] = a3\n 29006: a1 = 0 if a3 != 0\n 29008: u8 [a0 + 4] = 0\n 29011: jump @376 if a1 == 0\n      : @360 (gas: 19)\n 29015: a0 = u64 [sp + 0x180]\n 29019: a0 = reverse a0\n 29021: a1 = a0 >> 0x20\n 29024: a2 = u64 [sp + 0x188]\n 29028: a2 = reverse a2\n 29030: a3 = a2 << 0x20\n 29033: a1 = a1 | a3\n 29036: u64 [sp + 0x188] = a1\n 29040: a0 = a0 << 0x20\n 29043: a1 = u64 [sp + 0x190]\n 29047: a1 = reverse a1\n 29049: a1 = a1 >> 0x20\n 29052: a0 = a0 | a1\n 29055: u64 [sp + 0x190] = a0\n 29059: s1 = a2 >> 0x20\n 29062: a0 = u64 [sp + 0x1a8]\n 29066: i32 a0 = a0 + 0x4\n 29069: a1 = 0x20\n 29072: ra = 272, jump @0\n      : @361 [@dyn 136] (gas: 64)\n 29078: a1 = reverse s1\n 29080: a2 = u64 [sp + 0x188]\n 29084: a2 = reverse a2\n 29086: a3 = u64 [sp + 0x190]\n 29090: a3 = reverse a3\n 29092: a4 = a3 >> 0x38\n 29095: u8 [a0 + 0x1f] = a4\n 29098: a4 = a3 >> 0x30\n 29101: u8 [a0 + 0x1e] = a4\n 29104: a4 = a3 >> 0x28\n 29107: u8 [a0 + 0x1d] = a4\n 29110: a4 = a3 >> 0x20\n 29113: u8 [a0 + 0x1c] = a4\n 29116: a4 = a3 >> 0x18\n 29119: u8 [a0 + 0x1b] = a4\n 29122: a4 = a3 >> 0x10\n 29125: u8 [a0 + 0x1a] = a4\n 29128: a4 = a3 >> 0x8\n 29131: u8 [a0 + 0x19] = a4\n 29134: u8 [a0 + 0x18] = a3\n 29137: u8 [a0 + 0x10] = a2\n 29140: u8 [a0 + 11] = 0\n 29143: u8 [a0 + 10] = 0\n 29146: u8 [a0 + 9] = 0\n 29149: u8 [a0 + 7] = 0\n 29152: u8 [a0 + 6] = 0\n 29155: u8 [a0 + 5] = 0\n 29158: u8 [a0 + 4] = 0\n 29161: u8 [a0 + 3] = 0\n 29164: u8 [a0 + 2] = 0\n 29167: u8 [a0 + 1] = 0\n 29170: u8 [a0 + 0] = 0\n 29172: a3 = a2 >> 0x38\n 29175: u8 [a0 + 0x17] = a3\n 29178: a3 = a2 >> 0x30\n 29181: u8 [a0 + 0x16] = a3\n 29184: a3 = a2 >> 0x28\n 29187: u8 [a0 + 0x15] = a3\n 29190: a3 = a2 >> 0x20\n 29193: u8 [a0 + 0x14] = a3\n 29196: a3 = a2 >> 0x18\n 29199: u8 [a0 + 0x13] = a3\n 29202: a3 = a2 >> 0x10\n 29205: u8 [a0 + 0x12] = a3\n 29208: a2 = a2 >> 0x8\n 29211: u8 [a0 + 0x11] = a2\n 29214: u8 [a0 + 0x8] = a1\n 29217: a2 = a1 >> 0x38\n 29220: u8 [a0 + 0xf] = a2\n 29223: a2 = a1 >> 0x30\n 29226: u8 [a0 + 0xe] = a2\n 29229: a2 = a1 >> 0x28\n 29232: u8 [a0 + 0xd] = a2\n 29235: a1 = a1 >> 0x20\n 29238: a2 = u64 [sp + 0x158]\n 29242: a2 = a2 + 0xffffffffffffffdc\n 29245: a3 = u64 [sp + 0x1b0]\n 29249: a2 = a3 <u a2\n 29252: a3 = u64 [sp + 0x1b8]\n 29256: a2 = 0 if a3 != 0\n 29258: a3 = u64 [sp + 0x160]\n 29262: a2 = 0 if a3 != 0\n 29264: u8 [a0 + 0xc] = a1\n 29267: jump @376 if a2 == 0\n      : @362 (gas: 4)\n 29271: s1 = u64 [sp + 0x1a8]\n 29275: i32 a0 = s1 + 0x24\n 29278: a1 = 0x20\n 29281: ra = 274, jump @0\n      : @363 [@dyn 137] (gas: 92)\n 29287: a1 = u64 [sp + 0x128]\n 29291: a1 = reverse a1\n 29293: a2 = u64 [sp + 0x130]\n 29297: a2 = reverse a2\n 29299: a3 = u64 [sp + 0x138]\n 29303: a3 = reverse a3\n 29305: a4 = u64 [sp + 0x140]\n 29309: a4 = reverse a4\n 29311: a5 = a4 >> 0x38\n 29314: u8 [a0 + 0x1f] = a5\n 29317: a5 = a4 >> 0x30\n 29320: u8 [a0 + 0x1e] = a5\n 29323: a5 = a4 >> 0x28\n 29326: u8 [a0 + 0x1d] = a5\n 29329: a5 = a4 >> 0x20\n 29332: u8 [a0 + 0x1c] = a5\n 29335: a5 = a4 >> 0x18\n 29338: u8 [a0 + 0x1b] = a5\n 29341: a5 = a4 >> 0x10\n 29344: u8 [a0 + 0x1a] = a5\n 29347: a5 = a4 >> 0x8\n 29350: u8 [a0 + 0x19] = a5\n 29353: u8 [a0 + 0x18] = a4\n 29356: u8 [a0 + 0x10] = a3\n 29359: a4 = a3 >> 0x38\n 29362: u8 [a0 + 0x17] = a4\n 29365: a4 = a3 >> 0x30\n 29368: u8 [a0 + 0x16] = a4\n 29371: a4 = a3 >> 0x28\n 29374: u8 [a0 + 0x15] = a4\n 29377: a4 = a3 >> 0x20\n 29380: u8 [a0 + 0x14] = a4\n 29383: a4 = a3 >> 0x18\n 29386: u8 [a0 + 0x13] = a4\n 29389: a4 = a3 >> 0x10\n 29392: u8 [a0 + 0x12] = a4\n 29395: a3 = a3 >> 0x8\n 29398: u8 [a0 + 0x11] = a3\n 29401: u8 [a0 + 0x8] = a2\n 29404: a3 = a2 >> 0x38\n 29407: u8 [a0 + 0xf] = a3\n 29410: a3 = a2 >> 0x30\n 29413: u8 [a0 + 0xe] = a3\n 29416: a3 = a2 >> 0x28\n 29419: u8 [a0 + 0xd] = a3\n 29422: a3 = a2 >> 0x20\n 29425: u8 [a0 + 0xc] = a3\n 29428: a3 = a2 >> 0x18\n 29431: u8 [a0 + 0xb] = a3\n 29434: a3 = a2 >> 0x10\n 29437: u8 [a0 + 0xa] = a3\n 29440: a2 = a2 >> 0x8\n 29443: u8 [a0 + 0x9] = a2\n 29446: u8 [a0] = a1\n 29448: a2 = a1 >> 0x38\n 29451: u8 [a0 + 0x7] = a2\n 29454: a2 = a1 >> 0x30\n 29457: u8 [a0 + 0x6] = a2\n 29460: a2 = a1 >> 0x28\n 29463: u8 [a0 + 0x5] = a2\n 29466: a2 = a1 >> 0x20\n 29469: u8 [a0 + 0x4] = a2\n 29472: a2 = a1 >> 0x18\n 29475: u8 [a0 + 0x3] = a2\n 29478: a2 = a1 >> 0x10\n 29481: u8 [a0 + 0x2] = a2\n 29484: a1 = a1 >> 0x8\n 29487: u8 [a0 + 0x1] = a1\n 29490: ecalli 8 // 'ref_time_left'\n 29492: a0 = u64 [sp + 0x168]\n 29496: a0 = reverse a0\n 29498: a1 = a0 << 0x20\n 29501: a2 = u64 [sp + 0x170]\n 29505: a2 = reverse a2\n 29507: a2 = a2 >> 0x20\n 29510: a1 = a1 | a2\n 29513: a2 = u64 [sp + 0x178]\n 29517: a2 = reverse a2\n 29519: a3 = a2 << 0x20\n 29522: a0 = a0 >> 0x20\n 29525: a0 = a0 | a3\n 29528: a2 = a2 >> 0x20\n 29531: u64 [sp + 0x7c8] = a0\n 29535: u64 [sp + 0x7c0] = a1\n 29539: u32 [sp + 0x7d0] = a2\n 29543: u64 [sp + 2040] = 0\n 29547: u64 [sp + 2032] = 0\n 29551: u64 [sp + 2024] = 0\n 29555: u64 [sp + 2016] = 0\n 29559: a1 = 0x44\n 29562: a0 = s1\n 29564: ra = 276, jump @0\n      : @364 [@dyn 138] (gas: 4)\n 29570: u64 [sp + 0x190] = a0\n 29574: a1 = 0x20\n 29577: a0 = s1\n 29579: ra = 278, jump @0\n      : @365 [@dyn 139] (gas: 38)\n 29585: a2 = sp + 0x1000\n 29589: u32 [a2 + 4294965248] = 0x20\n 29594: a2 = sp + 0x1000\n 29598: u64 [a2 + 4294965304] = 0xffffffffffffffff\n 29603: a2 = sp + 0x1000\n 29607: u64 [a2 + 4294965296] = 0xffffffffffffffff\n 29612: a2 = sp + 0x1000\n 29616: u64 [a2 + 4294965288] = 0xffffffffffffffff\n 29621: a2 = sp + 0x1000\n 29625: u64 [a2 + 4294965280] = 0xffffffffffffffff\n 29630: a1 = sp + 0x7c0\n 29634: a1 = a1 << 0x20\n 29637: a1 = a1 >> 0x20\n 29640: s1 = u64 [sp + 0x1a0]\n 29644: s1 = s1 | a1\n 29647: a1 = sp + 0x7e0\n 29651: a1 = a1 << 0x20\n 29654: a1 = a1 >> 0x20\n 29657: a2 = sp + 0x7ff\n 29661: a2 = a2 + 0x21\n 29664: a2 = a2 << 0x20\n 29667: a3 = a2 | a1\n 29670: a1 = u64 [sp + 0x190]\n 29674: a1 = a1 << 0x20\n 29677: a1 = a1 >> 0x20\n 29680: a4 = u64 [sp + 0x120]\n 29684: a4 = a4 | a1\n 29687: a0 = a0 << 0x20\n 29690: a0 = a0 >> 0x20\n 29693: a1 = sp + 0x7ff\n 29697: a1 = a1 + 0x1\n 29700: a1 = a1 << 0x20\n 29703: a5 = a1 | a0\n 29706: a1 = 0xffffffffffffffff\n 29709: a2 = 0xffffffffffffffff\n 29712: a0 = s1\n 29714: ecalli 1 // 'call'\n 29716: fallthrough\n      : @366 (gas: 1)\n 29717: jump @377 if a0 != 0\n      : @367 (gas: 2)\n 29721: ecalli 10 // 'return_data_size'\n 29723: fallthrough\n      : @368 (gas: 2)\n 29724: a1 = 0x20\n 29727: jump @370 if a0 >=u a1\n      : @369 (gas: 3)\n 29730: ecalli 10 // 'return_data_size'\n 29732: a1 = a0\n 29734: fallthrough\n      : @370 (gas: 27)\n 29735: a3 = u64 [sp + 0x198]\n 29739: s1 = u64 [sp + 0x1b8]\n 29743: a0 = a1 + 0x1f\n 29746: u64 [sp + 0x1a0] = a1\n 29750: a1 = a0 <u a1\n 29753: u64 [sp + 440] = 0\n 29757: a1 = a1 & 0x1\n 29760: a0 = a0 & 0xffffffffffffffe0\n 29763: a2 = u64 [sp + 0x1b0]\n 29767: a2 = a2 + a0\n 29770: u64 [sp + 0x1b0] = a2\n 29774: a0 = a2 <u a0\n 29777: s1 = s1 + a1\n 29780: s1 = s1 + a0\n 29783: a2 = s1 ^ a1\n 29786: a1 = s1 <u a1\n 29789: a1 = a0 if a2 == 0\n 29792: a0 = u64 [sp + 0x150]\n 29796: a1 = a1 + a0\n 29799: a0 = a1 <u a0\n 29802: a0 = a0 + a3\n 29805: u64 [sp + 0x198] = a1\n 29809: u64 [sp + 0x190] = a0\n 29813: a0 = a0 | a1\n 29816: a1 = s1 <u 0x1\n 29819: a1 = 0 if a0 != 0\n 29821: jump @392 if a1 == 0\n      : @371 (gas: 3)\n 29825: a0 = 0x40\n 29828: a1 = 0x20\n 29831: ra = 280, jump @0\n      : @372 [@dyn 140] (gas: 79)\n 29837: a1 = u64 [sp + 0x190]\n 29841: a1 = reverse a1\n 29843: a2 = u64 [sp + 0x198]\n 29847: a2 = reverse a2\n 29849: a3 = reverse s1\n 29851: a4 = u64 [sp + 0x1b0]\n 29855: a4 = reverse a4\n 29857: u8 [a0 + 0x18] = a4\n 29860: a5 = a4 >> 0x38\n 29863: u8 [a0 + 0x1f] = a5\n 29866: a5 = a4 >> 0x30\n 29869: u8 [a0 + 0x1e] = a5\n 29872: a5 = a4 >> 0x28\n 29875: u8 [a0 + 0x1d] = a5\n 29878: a5 = a4 >> 0x20\n 29881: u8 [a0 + 0x1c] = a5\n 29884: a5 = a4 >> 0x18\n 29887: u8 [a0 + 0x1b] = a5\n 29890: a5 = a4 >> 0x10\n 29893: u8 [a0 + 0x1a] = a5\n 29896: a4 = a4 >> 0x8\n 29899: u8 [a0 + 0x19] = a4\n 29902: u8 [a0 + 0x10] = a3\n 29905: a4 = a3 >> 0x38\n 29908: u8 [a0 + 0x17] = a4\n 29911: a4 = a3 >> 0x30\n 29914: u8 [a0 + 0x16] = a4\n 29917: a4 = a3 >> 0x28\n 29920: u8 [a0 + 0x15] = a4\n 29923: a4 = a3 >> 0x20\n 29926: u8 [a0 + 0x14] = a4\n 29929: a4 = a3 >> 0x18\n 29932: u8 [a0 + 0x13] = a4\n 29935: a4 = a3 >> 0x10\n 29938: u8 [a0 + 0x12] = a4\n 29941: a3 = a3 >> 0x8\n 29944: u8 [a0 + 0x11] = a3\n 29947: u8 [a0 + 0x8] = a2\n 29950: a3 = a2 >> 0x38\n 29953: u8 [a0 + 0xf] = a3\n 29956: a3 = a2 >> 0x30\n 29959: u8 [a0 + 0xe] = a3\n 29962: a3 = a2 >> 0x28\n 29965: u8 [a0 + 0xd] = a3\n 29968: a3 = a2 >> 0x20\n 29971: u8 [a0 + 0xc] = a3\n 29974: a3 = a2 >> 0x18\n 29977: u8 [a0 + 0xb] = a3\n 29980: a3 = a2 >> 0x10\n 29983: u8 [a0 + 0xa] = a3\n 29986: a2 = a2 >> 0x8\n 29989: u8 [a0 + 0x9] = a2\n 29992: u8 [a0] = a1\n 29994: a2 = a1 >> 0x38\n 29997: u8 [a0 + 0x7] = a2\n 30000: a2 = a1 >> 0x30\n 30003: u8 [a0 + 0x6] = a2\n 30006: a2 = a1 >> 0x28\n 30009: u8 [a0 + 0x5] = a2\n 30012: a2 = a1 >> 0x20\n 30015: u8 [a0 + 0x4] = a2\n 30018: a2 = a1 >> 0x18\n 30021: u8 [a0 + 0x3] = a2\n 30024: a2 = a1 >> 0x10\n 30027: u8 [a0 + 0x2] = a2\n 30030: a1 = a1 >> 0x8\n 30033: a5 = u64 [sp + 0x1b8]\n 30037: a2 = a5 >u 0\n 30039: a3 = u64 [sp + 0x1a0]\n 30043: a3 = a3 <u 0x20\n 30046: a3 = a3 ^ 0x1\n 30049: a3 = a2 if a5 != 0\n 30052: a2 = a5 >u 0\n 30054: a4 = a5 >u 0\n 30056: a4 = a2 if a5 == 0\n 30059: a2 = a5 | a5\n 30062: a4 = a3 if a2 == 0\n 30065: u8 [a0 + 0x1] = a1\n 30068: jump @378 if a4 == 0\n      : @373 (gas: 3)\n 30072: a1 = 0x20\n 30075: a0 = u64 [sp + 0x1a8]\n 30079: ra = 282, jump @0\n      : @374 [@dyn 141] (gas: 95)\n 30085: a1 = u8 [a0 + 0x19]\n 30088: a2 = u8 [a0 + 0x18]\n 30091: a3 = u8 [a0 + 0x1a]\n 30094: a4 = u8 [a0 + 0x1b]\n 30097: a1 = a1 << 0x8\n 30100: a1 = a1 | a2\n 30103: a3 = a3 << 0x10\n 30106: a4 = a4 << 0x18\n 30109: a3 = a3 | a4\n 30112: a1 = a1 | a3\n 30115: a2 = u8 [a0 + 0x1d]\n 30118: a3 = u8 [a0 + 0x1c]\n 30121: a4 = u8 [a0 + 0x1e]\n 30124: a5 = u8 [a0 + 0x1f]\n 30127: a2 = a2 << 0x8\n 30130: a2 = a2 | a3\n 30133: a4 = a4 << 0x10\n 30136: a5 = a5 << 0x18\n 30139: a4 = a4 | a5\n 30142: a2 = a2 | a4\n 30145: a2 = a2 << 0x20\n 30148: t0 = a2 | a1\n 30151: a2 = u8 [a0 + 0x11]\n 30154: a3 = u8 [a0 + 0x10]\n 30157: a4 = u8 [a0 + 0x12]\n 30160: a5 = u8 [a0 + 0x13]\n 30163: a2 = a2 << 0x8\n 30166: a2 = a2 | a3\n 30169: a4 = a4 << 0x10\n 30172: a5 = a5 << 0x18\n 30175: a4 = a4 | a5\n 30178: a2 = a2 | a4\n 30181: a3 = u8 [a0 + 0x15]\n 30184: a4 = u8 [a0 + 0x14]\n 30187: a5 = u8 [a0 + 0x16]\n 30190: s1 = u8 [a0 + 0x17]\n 30193: a3 = a3 << 0x8\n 30196: a3 = a3 | a4\n 30199: a5 = a5 << 0x10\n 30202: s1 = s1 << 0x18\n 30205: a5 = a5 | s1\n 30208: a3 = a3 | a5\n 30211: a3 = a3 << 0x20\n 30214: t1 = a3 | a2\n 30217: a3 = u8 [a0 + 0x1]\n 30220: a4 = u8 [a0]\n 30222: a5 = u8 [a0 + 0x2]\n 30225: s1 = u8 [a0 + 0x3]\n 30228: a3 = a3 << 0x8\n 30231: a3 = a3 | a4\n 30234: a5 = a5 << 0x10\n 30237: s1 = s1 << 0x18\n 30240: a5 = a5 | s1\n 30243: a3 = a3 | a5\n 30246: a4 = u8 [a0 + 0x9]\n 30249: a5 = u8 [a0 + 0x8]\n 30252: s1 = u8 [a0 + 0xa]\n 30255: a1 = u8 [a0 + 0xb]\n 30258: a4 = a4 << 0x8\n 30261: a4 = a4 | a5\n 30264: s1 = s1 << 0x10\n 30267: a1 = a1 << 0x18\n 30270: a1 = a1 | s1\n 30273: a4 = a4 | a1\n 30276: a1 = u8 [a0 + 0x5]\n 30279: a5 = u8 [a0 + 0x4]\n 30282: s1 = u8 [a0 + 0x6]\n 30285: a2 = u8 [a0 + 0x7]\n 30288: a1 = a1 << 0x8\n 30291: a1 = a1 | a5\n 30294: s1 = s1 << 0x10\n 30297: a2 = a2 << 0x18\n 30300: a2 = a2 | s1\n 30303: a1 = a1 | a2\n 30306: a2 = u8 [a0 + 0xd]\n 30309: a5 = u8 [a0 + 0xc]\n 30312: s1 = u8 [a0 + 0xe]\n 30315: a0 = u8 [a0 + 0xf]\n 30318: a2 = a2 << 0x8\n 30321: a2 = a2 | a5\n 30324: s1 = s1 << 0x10\n 30327: a0 = a0 << 0x18\n 30330: a0 = a0 | s1\n 30333: a0 = a0 | a2\n 30336: a2 = reverse t1\n 30338: a5 = reverse t0\n 30340: a5 = a5 <u 0x2\n 30343: a5 = 0 if a2 != 0\n 30345: a0 = a0 | a1\n 30348: a0 = a0 << 0x20\n 30351: a3 = a3 | a4\n 30354: a0 = a0 | a3\n 30357: a0 = reverse a0\n 30359: a5 = 0 if a0 != 0\n 30361: jump @378 if a5 == 0\n      : @375 (gas: 8)\n 30364: sp = s0 + 0xfffffffffffff800\n 30368: sp = sp + 0xffffffffffffff60\n 30372: sp = sp + 0x6b0\n 30376: ra = u64 [sp + 0x1e8]\n 30380: s0 = u64 [sp + 0x1e0]\n 30384: s1 = u64 [sp + 0x1d8]\n 30388: sp = sp + 0x1f0\n 30392: ret\n      : @376 (gas: 1)\n 30394: trap\n      : @377 (gas: 1)\n 30395: ra = 284, jump @204\n      : @378 [@dyn 142] (gas: 3)\n 30401: a0 = 0\n 30403: a1 = 0\n 30405: ra = 286, jump @0\n      : @379 [@dyn 143] (gas: 5)\n 30411: i32 a1 = a0 + 0\n 30413: a0 = 0x1\n 30416: a2 = 0\n 30418: ecalli 11 // 'seal_return'\n 30420: fallthrough\n      : @380 (gas: 8)\n 30421: u64 [sp + 496] = 0\n 30425: u64 [sp + 488] = 0\n 30429: u64 [sp + 480] = 0\n 30433: a0 = 0x4e487b7100000000\n 30443: a1 = sp + 0x1e0\n 30447: u64 [sp + 0x1f8] = a0\n 30451: a0 = 0\n 30453: ra = 288, jump @8\n      : @381 [@dyn 144] (gas: 8)\n 30459: u64 [sp + 472] = 0\n 30463: u64 [sp + 464] = 0\n 30467: u64 [sp + 448] = 0x41\n 30472: a0 = 0x4\n 30475: a1 = sp + 0x1c0\n 30479: u64 [sp + 456] = 0\n 30483: ra = 0x132\n 30487: jump @8\n      : @382 (gas: 8)\n 30490: u64 [sp + 560] = 0\n 30494: u64 [sp + 552] = 0\n 30498: u64 [sp + 544] = 0\n 30502: a0 = 0x4e487b7100000000\n 30512: a1 = sp + 0x220\n 30516: u64 [sp + 0x238] = a0\n 30520: a0 = 0\n 30522: ra = 290, jump @8\n      : @383 [@dyn 145] (gas: 8)\n 30528: u64 [sp + 536] = 0\n 30532: u64 [sp + 528] = 0\n 30536: u64 [sp + 512] = 0x11\n 30541: a0 = 0x4\n 30544: a1 = sp + 0x200\n 30548: u64 [sp + 520] = 0\n 30552: ra = 0x132\n 30556: jump @8\n      : @384 (gas: 8)\n 30559: u64 [sp + 624] = 0\n 30563: u64 [sp + 616] = 0\n 30567: u64 [sp + 608] = 0\n 30571: a0 = 0x4e487b7100000000\n 30581: a1 = sp + 0x260\n 30585: u64 [sp + 0x278] = a0\n 30589: a0 = 0\n 30591: ra = 292, jump @8\n      : @385 [@dyn 146] (gas: 8)\n 30597: u64 [sp + 600] = 0\n 30601: u64 [sp + 592] = 0\n 30605: u64 [sp + 576] = 0x41\n 30610: a0 = 0x4\n 30613: a1 = sp + 0x240\n 30617: u64 [sp + 584] = 0\n 30621: ra = 0x132\n 30625: jump @8\n      : @386 (gas: 8)\n 30628: u64 [sp + 688] = 0\n 30632: u64 [sp + 680] = 0\n 30636: u64 [sp + 672] = 0\n 30640: a0 = 0x4e487b7100000000\n 30650: a1 = sp + 0x2a0\n 30654: u64 [sp + 0x2b8] = a0\n 30658: a0 = 0\n 30660: ra = 294, jump @8\n      : @387 [@dyn 147] (gas: 8)\n 30666: u64 [sp + 664] = 0\n 30670: u64 [sp + 656] = 0\n 30674: u64 [sp + 640] = 0x41\n 30679: a0 = 0x4\n 30682: a1 = sp + 0x280\n 30686: u64 [sp + 648] = 0\n 30690: ra = 0x132\n 30694: jump @8\n      : @388 (gas: 8)\n 30697: u64 [sp + 752] = 0\n 30701: u64 [sp + 744] = 0\n 30705: u64 [sp + 736] = 0\n 30709: a0 = 0x4e487b7100000000\n 30719: a1 = sp + 0x2e0\n 30723: u64 [sp + 0x2f8] = a0\n 30727: a0 = 0\n 30729: ra = 296, jump @8\n      : @389 [@dyn 148] (gas: 8)\n 30735: u64 [sp + 728] = 0\n 30739: u64 [sp + 720] = 0\n 30743: u64 [sp + 704] = 0x41\n 30748: a0 = 0x4\n 30751: a1 = sp + 0x2c0\n 30755: u64 [sp + 712] = 0\n 30759: ra = 0x132\n 30763: jump @8\n      : @390 (gas: 8)\n 30766: u64 [sp + 816] = 0\n 30770: u64 [sp + 808] = 0\n 30774: u64 [sp + 800] = 0\n 30778: a0 = 0x4e487b7100000000\n 30788: a1 = sp + 0x320\n 30792: u64 [sp + 0x338] = a0\n 30796: a0 = 0\n 30798: ra = 298, jump @8\n      : @391 [@dyn 149] (gas: 8)\n 30804: u64 [sp + 792] = 0\n 30808: u64 [sp + 784] = 0\n 30812: u64 [sp + 768] = 0x11\n 30817: a0 = 0x4\n 30820: a1 = sp + 0x300\n 30824: u64 [sp + 776] = 0\n 30828: ra = 0x132\n 30832: jump @8\n      : @392 (gas: 8)\n 30835: u64 [sp + 880] = 0\n 30839: u64 [sp + 872] = 0\n 30843: u64 [sp + 864] = 0\n 30847: a0 = 0x4e487b7100000000\n 30857: a1 = sp + 0x360\n 30861: u64 [sp + 0x378] = a0\n 30865: a0 = 0\n 30867: ra = 300, jump @8\n      : @393 [@dyn 150] (gas: 8)\n 30873: u64 [sp + 856] = 0\n 30877: u64 [sp + 848] = 0\n 30881: u64 [sp + 832] = 0x41\n 30886: a0 = 0x4\n 30889: a1 = sp + 0x340\n 30893: u64 [sp + 840] = 0\n 30897: ra = 0x132\n 30901: jump @8\n      : @394 (gas: 8)\n 30904: u64 [sp + 1264] = 0\n 30908: u64 [sp + 1256] = 0\n 30912: u64 [sp + 1248] = 0\n 30916: a0 = 0x4e487b7100000000\n 30926: a1 = sp + 0x4e0\n 30930: u64 [sp + 0x4f8] = a0\n 30934: a0 = 0\n 30936: ra = 302, jump @8\n      : @395 [@dyn 151] (gas: 8)\n 30942: u64 [sp + 1240] = 0\n 30946: u64 [sp + 1232] = 0\n 30950: u64 [sp + 1216] = 0x11\n 30955: a0 = 0x4\n 30958: a1 = sp + 0x4c0\n 30962: u64 [sp + 1224] = 0\n 30966: ra = 0x132\n 30970: jump @8\n      : @396 (gas: 8)\n 30973: u64 [sp + 1072] = 0\n 30977: u64 [sp + 1064] = 0\n 30981: u64 [sp + 1056] = 0\n 30985: a0 = 0x4e487b7100000000\n 30995: a1 = sp + 0x420\n 30999: u64 [sp + 0x438] = a0\n 31003: a0 = 0\n 31005: ra = 304, jump @8\n      : @397 [@dyn 152] (gas: 7)\n 31011: u64 [sp + 1048] = 0\n 31015: u64 [sp + 1040] = 0\n 31019: u64 [sp + 1024] = 0x11\n 31024: a0 = 0x4\n 31027: a1 = sp + 0x400\n 31031: u64 [sp + 1032] = 0\n 31035: ra = 306, jump @8\n      : @398 [@dyn 153] (gas: 3)\n 31041: a1 = 0x24\n 31044: a0 = 0\n 31046: ra = 308, jump @0\n      : @399 [@dyn 154] (gas: 6)\n 31052: i32 a1 = a0 + 0\n 31054: a0 = 0x1\n 31057: a2 = 0x24\n 31060: ra = 0x136\n 31064: ecalli 11 // 'seal_return'\n 31066: fallthrough\n      : @400 [@dyn 155] (gas: 30)\n 31067: sp = sp + 0xffffffffffffff80\n 31070: u64 [sp + 0x78] = ra\n 31073: u64 [sp + 0x70] = s0\n 31076: u64 [sp + 0x68] = s1\n 31079: s0 = sp + 0x80\n 31083: sp = sp & 0xfffffffffffffff0\n 31086: a4 = u64 [a2]\n 31088: a3 = u64 [a1]\n 31090: s1 = u64 [a2 + 0x8]\n 31093: t1 = u64 [a1 + 0x8]\n 31096: t2 = u64 [a2 + 0x10]\n 31099: a5 = u64 [a1 + 0x10]\n 31102: a2 = u64 [a2 + 0x18]\n 31105: a1 = u64 [a1 + 0x18]\n 31108: t0 = t1 ^ s1\n 31111: u64 [sp + 0x8] = s1\n 31114: s1 = t1 <u s1\n 31117: u64 [sp + 0x18] = a4\n 31120: u64 [sp + 0x10] = a3\n 31123: a3 = a3 <u a4\n 31126: u64 [sp] = a3\n 31128: s1 = a3 if t0 == 0\n 31131: a3 = a1 ^ a2\n 31134: ra = a1 <u a2\n 31137: t0 = a5 <u t2\n 31140: ra = t0 if a3 == 0\n 31143: a4 = a5 ^ t2\n 31146: a3 = a3 | a4\n 31149: ra = s1 if a3 == 0\n 31152: jump @402 if ra != 0\n      : @401 (gas: 23)\n 31155: a3 = a5 - t2\n 31158: a1 = a1 - a2\n 31161: a1 = a1 - t0\n 31164: a2 = a3 <u s1\n 31167: a1 = a1 - a2\n 31170: a3 = a3 - s1\n 31173: a2 = u64 [sp + 0x8]\n 31176: a2 = t1 - a2\n 31179: a4 = u64 [sp]\n 31181: a2 = a2 - a4\n 31184: a4 = u64 [sp + 0x18]\n 31187: a5 = u64 [sp + 0x10]\n 31190: a4 = a5 - a4\n 31193: u64 [a0] = a4\n 31195: u64 [a0 + 0x8] = a2\n 31198: u64 [a0 + 0x10] = a3\n 31201: u64 [a0 + 0x18] = a1\n 31204: sp = s0 + 0xffffffffffffff80\n 31207: ra = u64 [sp + 0x78]\n 31210: s0 = u64 [sp + 0x70]\n 31213: s1 = u64 [sp + 0x68]\n 31216: sp = sp + 0x80\n 31220: ret\n      : @402 (gas: 8)\n 31222: u64 [sp + 80] = 0\n 31225: u64 [sp + 72] = 0\n 31228: u64 [sp + 64] = 0\n 31231: a0 = 0x4e487b7100000000\n 31241: a1 = sp + 0x40\n 31244: u64 [sp + 0x58] = a0\n 31247: a0 = 0\n 31249: ra = 312, jump @8\n      : @403 [@dyn 156] (gas: 7)\n 31255: u64 [sp + 56] = 0\n 31258: u64 [sp + 48] = 0\n 31261: u64 [sp + 32] = 0x11\n 31265: a0 = 0x4\n 31268: a1 = sp + 0x20\n 31271: u64 [sp + 40] = 0\n 31274: ra = 314, jump @8\n      : @404 [@dyn 157] (gas: 3)\n 31280: a1 = 0x24\n 31283: a0 = 0\n 31285: ra = 316, jump @0\n      : @405 [@dyn 158] (gas: 6)\n 31291: i32 a1 = a0 + 0\n 31293: a0 = 0x1\n 31296: a2 = 0x24\n 31299: ra = 0x13e\n 31303: ecalli 11 // 'seal_return'\n 31305: fallthrough\n      : @406 [@dyn 159] (gas: 33)\n 31306: sp = sp + 0xfffffffffffffda0\n 31310: u64 [sp + 0x258] = ra\n 31314: u64 [sp + 0x250] = s0\n 31318: u64 [sp + 0x248] = s1\n 31322: s0 = sp + 0x260\n 31326: sp = sp & 0xffffffffffffffe0\n 31329: a1 = u64 [a0]\n 31331: u64 [sp + 0x80] = a1\n 31335: a1 = u64 [a0 + 0x8]\n 31338: u64 [sp + 0x78] = a1\n 31341: a1 = u64 [a0 + 0x10]\n 31344: u64 [sp + 0x68] = a1\n 31347: a0 = u64 [a0 + 0x18]\n 31350: u64 [sp + 0x70] = a0\n 31353: i32 a0 = sp + 0x120\n 31357: ecalli 5 // 'caller'\n 31359: a0 = u64 [sp + 0x128]\n 31363: a1 = i32 [sp + 0x130]\n 31367: s1 = u64 [sp + 0x120]\n 31371: a0 = reverse a0\n 31373: a2 = a0 << 0x20\n 31376: a1 = reverse a1\n 31378: a1 = a1 >> 0x20\n 31381: a1 = a1 | a2\n 31384: u64 [sp + 0x98] = a1\n 31388: a0 = a0 >> 0x20\n 31391: a1 = reverse s1\n 31393: a1 = a1 << 0x20\n 31396: a0 = a0 | a1\n 31399: u64 [sp + 0x90] = a0\n 31403: a1 = 0x20\n 31406: a0 = 0\n 31408: ra = 320, jump @0\n      : @407 [@dyn 160] (gas: 56)\n 31414: a1 = u64 [sp + 0x90]\n 31418: a1 = reverse a1\n 31420: a2 = u64 [sp + 0x98]\n 31424: a2 = reverse a2\n 31426: a3 = s1 >> 0x18\n 31429: u8 [a0 + 0xf] = a3\n 31432: a3 = s1 >> 0x10\n 31435: u8 [a0 + 0xe] = a3\n 31438: a3 = s1 >> 0x8\n 31441: u8 [a0 + 0xd] = a3\n 31444: u8 [a0 + 0xc] = s1\n 31447: u8 [a0 + 11] = 0\n 31450: u8 [a0 + 10] = 0\n 31453: u8 [a0 + 9] = 0\n 31456: u8 [a0 + 8] = 0\n 31459: u8 [a0 + 7] = 0\n 31462: u8 [a0 + 6] = 0\n 31465: u8 [a0 + 5] = 0\n 31468: u8 [a0 + 4] = 0\n 31471: u8 [a0 + 3] = 0\n 31474: u8 [a0 + 2] = 0\n 31477: u8 [a0 + 1] = 0\n 31480: u8 [a0 + 0] = 0\n 31482: u8 [a0 + 0x18] = a2\n 31485: u8 [a0 + 0x10] = a1\n 31488: a3 = a2 >> 0x38\n 31491: u8 [a0 + 0x1f] = a3\n 31494: a3 = a2 >> 0x30\n 31497: u8 [a0 + 0x1e] = a3\n 31500: a3 = a2 >> 0x28\n 31503: u8 [a0 + 0x1d] = a3\n 31506: a3 = a2 >> 0x20\n 31509: u8 [a0 + 0x1c] = a3\n 31512: a3 = a2 >> 0x18\n 31515: u8 [a0 + 0x1b] = a3\n 31518: a3 = a2 >> 0x10\n 31521: u8 [a0 + 0x1a] = a3\n 31524: a2 = a2 >> 0x8\n 31527: u8 [a0 + 0x19] = a2\n 31530: a2 = a1 >> 0x38\n 31533: u8 [a0 + 0x17] = a2\n 31536: a2 = a1 >> 0x30\n 31539: u8 [a0 + 0x16] = a2\n 31542: a2 = a1 >> 0x28\n 31545: u8 [a0 + 0x15] = a2\n 31548: a2 = a1 >> 0x20\n 31551: u8 [a0 + 0x14] = a2\n 31554: a2 = a1 >> 0x18\n 31557: u8 [a0 + 0x13] = a2\n 31560: a2 = a1 >> 0x10\n 31563: u8 [a0 + 0x12] = a2\n 31566: a1 = a1 >> 0x8\n 31569: u8 [a0 + 0x11] = a1\n 31572: a0 = 0x20\n 31575: a1 = 0x20\n 31578: ra = 322, jump @0\n      : @408 [@dyn 161] (gas: 35)\n 31584: u8 [a0 + 31] = 0x4\n 31588: u8 [a0 + 30] = 0\n 31591: u8 [a0 + 29] = 0\n 31594: u8 [a0 + 28] = 0\n 31597: u8 [a0 + 27] = 0\n 31600: u8 [a0 + 26] = 0\n 31603: u8 [a0 + 25] = 0\n 31606: u8 [a0 + 24] = 0\n 31609: u8 [a0 + 23] = 0\n 31612: u8 [a0 + 22] = 0\n 31615: u8 [a0 + 21] = 0\n 31618: u8 [a0 + 20] = 0\n 31621: u8 [a0 + 19] = 0\n 31624: u8 [a0 + 18] = 0\n 31627: u8 [a0 + 17] = 0\n 31630: u8 [a0 + 16] = 0\n 31633: u8 [a0 + 15] = 0\n 31636: u8 [a0 + 14] = 0\n 31639: u8 [a0 + 13] = 0\n 31642: u8 [a0 + 12] = 0\n 31645: u8 [a0 + 11] = 0\n 31648: u8 [a0 + 10] = 0\n 31651: u8 [a0 + 9] = 0\n 31654: u8 [a0 + 8] = 0\n 31657: u8 [a0 + 7] = 0\n 31660: u8 [a0 + 6] = 0\n 31663: u8 [a0 + 5] = 0\n 31666: u8 [a0 + 4] = 0\n 31669: u8 [a0 + 3] = 0\n 31672: u8 [a0 + 2] = 0\n 31675: u8 [a0 + 1] = 0\n 31678: u8 [a0 + 0] = 0\n 31680: a1 = 0x40\n 31683: a0 = 0\n 31685: ra = 324, jump @0\n      : @409 [@dyn 162] (gas: 32)\n 31691: i32 a0 = a0 + 0\n 31693: i32 a2 = sp + 0x220\n 31697: a1 = 0x40\n 31700: ecalli 7 // 'hash_keccak_256'\n 31702: a0 = u64 [sp + 0x238]\n 31706: a1 = u64 [sp + 0x230]\n 31710: a2 = u64 [sp + 0x228]\n 31714: a3 = u64 [sp + 0x220]\n 31718: a0 = reverse a0\n 31720: a1 = reverse a1\n 31722: a2 = reverse a2\n 31724: a3 = reverse a3\n 31726: u64 [sp + 0x60] = a3\n 31729: u64 [sp + 0x218] = a3\n 31733: u64 [sp + 0x88] = a2\n 31737: u64 [sp + 0x210] = a2\n 31741: u64 [sp + 0x90] = a1\n 31745: u64 [sp + 0x208] = a1\n 31749: u64 [sp + 0x98] = a0\n 31753: u64 [sp + 0x200] = a0\n 31757: u64 [sp + 568] = 0\n 31761: u64 [sp + 560] = 0\n 31765: u64 [sp + 552] = 0\n 31769: u64 [sp + 544] = 0\n 31773: u32 [sp + 576] = 0x20\n 31778: i32 a1 = sp + 0x200\n 31782: i32 a3 = sp + 0x220\n 31786: i32 a4 = sp + 0x240\n 31790: a2 = 0xffffffffffffffff\n 31793: a0 = 0\n 31795: ecalli 6 // 'get_storage'\n 31797: fallthrough\n      : @410 (gas: 22)\n 31798: t1 = u64 [sp + 0x238]\n 31802: a3 = u64 [sp + 0x230]\n 31806: t0 = u64 [sp + 0x228]\n 31810: a2 = u64 [sp + 0x220]\n 31814: a1 = u64 [sp + 0x70]\n 31817: a0 = t1 ^ a1\n 31820: a4 = t1 <u a1\n 31823: a1 = u64 [sp + 0x68]\n 31826: a5 = a3 <u a1\n 31829: u64 [sp + 0x50] = a5\n 31832: a4 = a5 if a0 == 0\n 31835: a5 = u64 [sp + 0x78]\n 31838: t2 = t0 ^ a5\n 31841: s1 = t0 <u a5\n 31844: a5 = u64 [sp + 0x80]\n 31848: u64 [sp + 0x40] = a2\n 31851: ra = a2 <u a5\n 31854: s1 = ra if t2 == 0\n 31857: a5 = a3 ^ a1\n 31860: a0 = a0 | a5\n 31863: a4 = s1 if a0 == 0\n 31866: jump @437 if a4 != 0\n      : @411 (gas: 98)\n 31870: a0 = a3 - a1\n 31873: a1 = a0 - s1\n 31876: u64 [sp + 0x58] = a1\n 31879: a0 = a0 <u s1\n 31882: a1 = u64 [sp + 0x70]\n 31885: a2 = t1 - a1\n 31888: a1 = u64 [sp + 0x50]\n 31891: a2 = a2 - a1\n 31894: a2 = a2 - a0\n 31897: u64 [sp + 0x50] = a2\n 31900: a0 = u64 [sp + 0x78]\n 31903: a0 = t0 - a0\n 31906: a0 = a0 - ra\n 31909: u64 [sp + 0x48] = a0\n 31912: a0 = u64 [sp + 0x80]\n 31916: a1 = u64 [sp + 0x40]\n 31919: a0 = a1 - a0\n 31922: u64 [sp + 0x40] = a0\n 31925: a0 = u64 [sp + 0x88]\n 31929: u64 [sp + 0x210] = a0\n 31933: a0 = u64 [sp + 0x90]\n 31937: u64 [sp + 0x208] = a0\n 31941: a0 = u64 [sp + 0x98]\n 31945: u64 [sp + 0x200] = a0\n 31949: s1 = u64 [sp + 0x60]\n 31952: u64 [sp + 0x218] = s1\n 31956: u64 [sp + 568] = 0\n 31960: u64 [sp + 560] = 0\n 31964: u64 [sp + 552] = 0\n 31968: u64 [sp + 544] = 0\n 31972: u32 [sp + 576] = 0x20\n 31977: i32 a1 = sp + 0x200\n 31981: i32 a3 = sp + 0x220\n 31985: i32 a4 = sp + 0x240\n 31989: a2 = 0xffffffffffffffff\n 31992: a0 = 0\n 31994: ecalli 6 // 'get_storage'\n 31996: u64 [sp + 0x218] = s1\n 32000: a0 = u64 [sp + 0x88]\n 32004: u64 [sp + 0x210] = a0\n 32008: a0 = u64 [sp + 0x90]\n 32012: u64 [sp + 0x208] = a0\n 32016: a0 = u64 [sp + 0x98]\n 32020: u64 [sp + 0x200] = a0\n 32024: a0 = u64 [sp + 0x50]\n 32027: u64 [sp + 0x238] = a0\n 32031: a0 = u64 [sp + 0x58]\n 32034: u64 [sp + 0x230] = a0\n 32038: a0 = u64 [sp + 0x48]\n 32041: u64 [sp + 0x228] = a0\n 32045: a0 = u64 [sp + 0x40]\n 32048: u64 [sp + 0x220] = a0\n 32052: i32 a1 = sp + 0x200\n 32056: i32 a3 = sp + 0x220\n 32060: a2 = 0xffffffffffffffff\n 32063: a4 = 0x20\n 32066: a0 = 0\n 32068: ecalli 13 // 'set_storage'\n 32070: u64 [sp + 536] = 0\n 32074: u64 [sp + 528] = 0\n 32078: u64 [sp + 520] = 0\n 32082: u64 [sp + 512] = 0x3\n 32087: u64 [sp + 568] = 0\n 32091: u64 [sp + 560] = 0\n 32095: u64 [sp + 552] = 0\n 32099: u64 [sp + 544] = 0\n 32103: u32 [sp + 576] = 0x20\n 32108: i32 a1 = sp + 0x200\n 32112: i32 a3 = sp + 0x220\n 32116: i32 a4 = sp + 0x240\n 32120: a2 = 0xffffffffffffffff\n 32123: a0 = 0\n 32125: ecalli 6 // 'get_storage'\n 32127: a0 = u64 [sp + 0x230]\n 32131: u64 [sp + 0x10] = a0\n 32134: a0 = u64 [sp + 0x228]\n 32138: u64 [sp + 0x8] = a0\n 32141: a0 = u64 [sp + 0x220]\n 32145: u64 [sp + 0x18] = a0\n 32148: i32 a0 = sp + 0x140\n 32152: ecalli 5 // 'caller'\n 32154: a0 = i32 [sp + 0x150]\n 32158: u64 [sp + 0x50] = a0\n 32161: a0 = u64 [sp + 0x140]\n 32165: u64 [sp + 0x48] = a0\n 32168: a0 = u64 [sp + 0x148]\n 32172: u64 [sp + 0x40] = a0\n 32175: i32 a0 = sp + 0x160\n 32179: ecalli 0 // 'address'\n 32180: a0 = i32 [sp + 0x170]\n 32184: u64 [sp + 0x38] = a0\n 32187: a0 = u64 [sp + 0x160]\n 32191: u64 [sp + 0x30] = a0\n 32194: a0 = u64 [sp + 0x168]\n 32198: u64 [sp + 0x28] = a0\n 32201: a0 = 0x40\n 32204: a1 = 0x20\n 32207: ra = 326, jump @0\n      : @412 [@dyn 163] (gas: 102)\n 32213: a1 = u8 [a0 + 0x11]\n 32216: a2 = u8 [a0 + 0x10]\n 32219: a3 = u8 [a0 + 0x12]\n 32222: a4 = u8 [a0 + 0x13]\n 32225: a1 = a1 << 0x8\n 32228: a1 = a1 | a2\n 32231: a3 = a3 << 0x10\n 32234: a4 = a4 << 0x18\n 32237: a3 = a3 | a4\n 32240: a1 = a1 | a3\n 32243: a2 = u8 [a0 + 0x15]\n 32246: a3 = u8 [a0 + 0x14]\n 32249: a4 = u8 [a0 + 0x16]\n 32252: a5 = u8 [a0 + 0x17]\n 32255: a2 = a2 << 0x8\n 32258: a2 = a2 | a3\n 32261: a4 = a4 << 0x10\n 32264: a5 = a5 << 0x18\n 32267: a4 = a4 | a5\n 32270: a2 = a2 | a4\n 32273: a2 = a2 << 0x20\n 32276: t0 = a2 | a1\n 32279: a2 = u8 [a0 + 0x1]\n 32282: a3 = u8 [a0]\n 32284: a4 = u8 [a0 + 0x2]\n 32287: a5 = u8 [a0 + 0x3]\n 32290: a2 = a2 << 0x8\n 32293: a2 = a2 | a3\n 32296: a4 = a4 << 0x10\n 32299: a5 = a5 << 0x18\n 32302: a4 = a4 | a5\n 32305: a2 = a2 | a4\n 32308: a3 = u8 [a0 + 0x5]\n 32311: a4 = u8 [a0 + 0x4]\n 32314: a5 = u8 [a0 + 0x6]\n 32317: s1 = u8 [a0 + 0x7]\n 32320: a3 = a3 << 0x8\n 32323: a3 = a3 | a4\n 32326: a5 = a5 << 0x10\n 32329: s1 = s1 << 0x18\n 32332: a5 = a5 | s1\n 32335: a3 = a3 | a5\n 32338: a3 = a3 << 0x20\n 32341: a2 = a2 | a3\n 32344: a3 = u8 [a0 + 0x19]\n 32347: a4 = u8 [a0 + 0x18]\n 32350: a5 = u8 [a0 + 0x1a]\n 32353: s1 = u8 [a0 + 0x1b]\n 32356: a3 = a3 << 0x8\n 32359: a3 = a3 | a4\n 32362: a5 = a5 << 0x10\n 32365: s1 = s1 << 0x18\n 32368: a5 = a5 | s1\n 32371: a3 = a3 | a5\n 32374: a4 = u8 [a0 + 0x1d]\n 32377: a5 = u8 [a0 + 0x1c]\n 32380: s1 = u8 [a0 + 0x1e]\n 32383: a1 = u8 [a0 + 0x1f]\n 32386: a4 = a4 << 0x8\n 32389: a4 = a4 | a5\n 32392: s1 = s1 << 0x10\n 32395: a1 = a1 << 0x18\n 32398: a1 = a1 | s1\n 32401: a1 = a1 | a4\n 32404: a1 = a1 << 0x20\n 32407: a3 = a3 | a1\n 32410: a1 = u8 [a0 + 0x9]\n 32413: a4 = u8 [a0 + 0x8]\n 32416: a5 = u8 [a0 + 0xa]\n 32419: s1 = u8 [a0 + 0xb]\n 32422: a1 = a1 << 0x8\n 32425: a1 = a1 | a4\n 32428: a5 = a5 << 0x10\n 32431: s1 = s1 << 0x18\n 32434: a5 = a5 | s1\n 32437: a1 = a1 | a5\n 32440: a4 = u8 [a0 + 0xd]\n 32443: a5 = u8 [a0 + 0xc]\n 32446: s1 = u8 [a0 + 0xe]\n 32449: a0 = u8 [a0 + 0xf]\n 32452: a4 = a4 << 0x8\n 32455: a4 = a4 | a5\n 32458: s1 = s1 << 0x10\n 32461: a0 = a0 << 0x18\n 32464: a0 = a0 | s1\n 32467: a0 = a0 | a4\n 32470: a0 = a0 << 0x20\n 32473: a0 = a0 | a1\n 32476: s1 = reverse a0\n 32478: a3 = reverse a3\n 32480: a1 = reverse a2\n 32482: a0 = reverse t0\n 32484: u64 [sp + 0x98] = a0\n 32488: u64 [sp + 0x60] = a1\n 32491: a0 = a0 | a1\n 32494: a1 = a3 | s1\n 32497: a1 = a1 | a0\n 32500: a1 = a1 >> 0x20\n 32503: a0 = a0 | s1\n 32506: a0 = a0 << 0x20\n 32509: a0 = a0 | a1\n 32512: jump @433 if a0 != 0\n      : @413 (gas: 5)\n 32516: i32 a0 = a3 + 0\n 32518: a1 = 0x20\n 32521: u64 [sp + 0x88] = a0\n 32525: u64 [sp + 0x90] = a3\n 32529: ra = 328, jump @0\n      : @414 [@dyn 164] (gas: 45)\n 32535: u8 [a0 + 31] = 0\n 32538: u8 [a0 + 30] = 0\n 32541: u8 [a0 + 29] = 0\n 32544: u8 [a0 + 28] = 0\n 32547: u8 [a0 + 27] = 0\n 32550: u8 [a0 + 26] = 0\n 32553: u8 [a0 + 25] = 0\n 32556: u8 [a0 + 24] = 0\n 32559: u8 [a0 + 23] = 0\n 32562: u8 [a0 + 22] = 0\n 32565: u8 [a0 + 21] = 0\n 32568: u8 [a0 + 20] = 0\n 32571: u8 [a0 + 19] = 0\n 32574: u8 [a0 + 18] = 0\n 32577: u8 [a0 + 17] = 0\n 32580: u8 [a0 + 16] = 0\n 32583: u8 [a0 + 15] = 0\n 32586: u8 [a0 + 14] = 0\n 32589: u8 [a0 + 13] = 0\n 32592: u8 [a0 + 12] = 0\n 32595: u8 [a0 + 11] = 0\n 32598: u8 [a0 + 10] = 0\n 32601: u8 [a0 + 9] = 0\n 32604: u8 [a0 + 8] = 0\n 32607: u8 [a0 + 7] = 0\n 32610: u8 [a0 + 6] = 0\n 32613: u8 [a0 + 5] = 0\n 32616: u8 [a0 + 3] = 0xdd\n 32621: u8 [a0 + 2] = 0x72\n 32625: u8 [a0 + 1] = 0xb8\n 32630: u8 [a0 + 0] = 0x23\n 32633: u64 [sp] = s1\n 32635: a3 = u64 [sp + 0x60]\n 32638: a3 = a3 | s1\n 32641: a1 = 0x100000000\n 32651: u64 [sp + 0x20] = a1\n 32654: a1 = 0xfffffffc\n 32664: a2 = u64 [sp + 0x90]\n 32668: a1 = a2 <u a1\n 32671: a2 = u64 [sp + 0x98]\n 32675: a1 = 0 if a2 != 0\n 32677: u64 [sp + 0x58] = a3\n 32680: a1 = 0 if a3 != 0\n 32682: u8 [a0 + 4] = 0\n 32685: jump @433 if a1 == 0\n      : @415 (gas: 19)\n 32689: a0 = u64 [sp + 0x40]\n 32692: a0 = reverse a0\n 32694: a1 = a0 >> 0x20\n 32697: a2 = u64 [sp + 0x48]\n 32700: a2 = reverse a2\n 32702: a3 = a2 << 0x20\n 32705: a1 = a1 | a3\n 32708: u64 [sp + 0x48] = a1\n 32711: a0 = a0 << 0x20\n 32714: a1 = u64 [sp + 0x50]\n 32717: a1 = reverse a1\n 32719: a1 = a1 >> 0x20\n 32722: a0 = a0 | a1\n 32725: u64 [sp + 0x50] = a0\n 32728: s1 = a2 >> 0x20\n 32731: a0 = u64 [sp + 0x88]\n 32735: i32 a0 = a0 + 0x4\n 32738: a1 = 0x20\n 32741: ra = 330, jump @0\n      : @416 [@dyn 165] (gas: 64)\n 32747: a1 = reverse s1\n 32749: a2 = u64 [sp + 0x48]\n 32752: a2 = reverse a2\n 32754: a3 = u64 [sp + 0x50]\n 32757: a3 = reverse a3\n 32759: a4 = a3 >> 0x38\n 32762: u8 [a0 + 0x1f] = a4\n 32765: a4 = a3 >> 0x30\n 32768: u8 [a0 + 0x1e] = a4\n 32771: a4 = a3 >> 0x28\n 32774: u8 [a0 + 0x1d] = a4\n 32777: a4 = a3 >> 0x20\n 32780: u8 [a0 + 0x1c] = a4\n 32783: a4 = a3 >> 0x18\n 32786: u8 [a0 + 0x1b] = a4\n 32789: a4 = a3 >> 0x10\n 32792: u8 [a0 + 0x1a] = a4\n 32795: a4 = a3 >> 0x8\n 32798: u8 [a0 + 0x19] = a4\n 32801: u8 [a0 + 0x18] = a3\n 32804: u8 [a0 + 0x10] = a2\n 32807: u8 [a0 + 11] = 0\n 32810: u8 [a0 + 10] = 0\n 32813: u8 [a0 + 9] = 0\n 32816: u8 [a0 + 7] = 0\n 32819: u8 [a0 + 6] = 0\n 32822: u8 [a0 + 5] = 0\n 32825: u8 [a0 + 4] = 0\n 32828: u8 [a0 + 3] = 0\n 32831: u8 [a0 + 2] = 0\n 32834: u8 [a0 + 1] = 0\n 32837: u8 [a0 + 0] = 0\n 32839: a3 = a2 >> 0x38\n 32842: u8 [a0 + 0x17] = a3\n 32845: a3 = a2 >> 0x30\n 32848: u8 [a0 + 0x16] = a3\n 32851: a3 = a2 >> 0x28\n 32854: u8 [a0 + 0x15] = a3\n 32857: a3 = a2 >> 0x20\n 32860: u8 [a0 + 0x14] = a3\n 32863: a3 = a2 >> 0x18\n 32866: u8 [a0 + 0x13] = a3\n 32869: a3 = a2 >> 0x10\n 32872: u8 [a0 + 0x12] = a3\n 32875: a2 = a2 >> 0x8\n 32878: u8 [a0 + 0x11] = a2\n 32881: u8 [a0 + 0x8] = a1\n 32884: a2 = a1 >> 0x38\n 32887: u8 [a0 + 0xf] = a2\n 32890: a2 = a1 >> 0x30\n 32893: u8 [a0 + 0xe] = a2\n 32896: a2 = a1 >> 0x28\n 32899: u8 [a0 + 0xd] = a2\n 32902: a1 = a1 >> 0x20\n 32905: a2 = u64 [sp + 0x20]\n 32908: a2 = a2 + 0xffffffffffffffdc\n 32911: a3 = u64 [sp + 0x90]\n 32915: a2 = a3 <u a2\n 32918: a3 = u64 [sp + 0x98]\n 32922: a2 = 0 if a3 != 0\n 32924: a3 = u64 [sp + 0x58]\n 32927: a2 = 0 if a3 != 0\n 32929: u8 [a0 + 0xc] = a1\n 32932: jump @433 if a2 == 0\n      : @417 (gas: 19)\n 32936: a0 = u64 [sp + 0x28]\n 32939: a0 = reverse a0\n 32941: a1 = a0 >> 0x20\n 32944: a2 = u64 [sp + 0x30]\n 32947: a2 = reverse a2\n 32949: a3 = a2 << 0x20\n 32952: a1 = a1 | a3\n 32955: u64 [sp + 0x50] = a1\n 32958: a0 = a0 << 0x20\n 32961: a1 = u64 [sp + 0x38]\n 32964: a1 = reverse a1\n 32966: a1 = a1 >> 0x20\n 32969: a0 = a0 | a1\n 32972: u64 [sp + 0x48] = a0\n 32975: s1 = a2 >> 0x20\n 32978: a0 = u64 [sp + 0x88]\n 32982: i32 a0 = a0 + 0x24\n 32985: a1 = 0x20\n 32988: ra = 332, jump @0\n      : @418 [@dyn 166] (gas: 63)\n 32995: a1 = reverse s1\n 32997: a2 = u64 [sp + 0x50]\n 33000: a2 = reverse a2\n 33002: a3 = u64 [sp + 0x48]\n 33005: a3 = reverse a3\n 33007: a4 = a3 >> 0x38\n 33010: u8 [a0 + 0x1f] = a4\n 33013: a4 = a3 >> 0x30\n 33016: u8 [a0 + 0x1e] = a4\n 33019: a4 = a3 >> 0x28\n 33022: u8 [a0 + 0x1d] = a4\n 33025: a4 = a3 >> 0x20\n 33028: u8 [a0 + 0x1c] = a4\n 33031: a4 = a3 >> 0x18\n 33034: u8 [a0 + 0x1b] = a4\n 33037: a4 = a3 >> 0x10\n 33040: u8 [a0 + 0x1a] = a4\n 33043: a4 = a3 >> 0x8\n 33046: u8 [a0 + 0x19] = a4\n 33049: u8 [a0 + 0x18] = a3\n 33052: u8 [a0 + 0x10] = a2\n 33055: u8 [a0 + 11] = 0\n 33058: u8 [a0 + 10] = 0\n 33061: u8 [a0 + 9] = 0\n 33064: u8 [a0 + 7] = 0\n 33067: u8 [a0 + 6] = 0\n 33070: u8 [a0 + 5] = 0\n 33073: u8 [a0 + 4] = 0\n 33076: u8 [a0 + 3] = 0\n 33079: u8 [a0 + 2] = 0\n 33082: u8 [a0 + 1] = 0\n 33085: u8 [a0 + 0] = 0\n 33087: a3 = a2 >> 0x38\n 33090: u8 [a0 + 0x17] = a3\n 33093: a3 = a2 >> 0x30\n 33096: u8 [a0 + 0x16] = a3\n 33099: a3 = a2 >> 0x28\n 33102: u8 [a0 + 0x15] = a3\n 33105: a3 = a2 >> 0x20\n 33108: u8 [a0 + 0x14] = a3\n 33111: a3 = a2 >> 0x18\n 33114: u8 [a0 + 0x13] = a3\n 33117: a3 = a2 >> 0x10\n 33120: u8 [a0 + 0x12] = a3\n 33123: a2 = a2 >> 0x8\n 33126: u8 [a0 + 0x11] = a2\n 33129: u8 [a0 + 0x8] = a1\n 33132: a2 = a1 >> 0x38\n 33135: u8 [a0 + 0xf] = a2\n 33138: a2 = a1 >> 0x30\n 33141: u8 [a0 + 0xe] = a2\n 33144: a2 = a1 >> 0x28\n 33147: u8 [a0 + 0xd] = a2\n 33150: a1 = a1 >> 0x20\n 33153: a2 = 0xffffffbc\n 33163: a3 = u64 [sp + 0x90]\n 33167: a2 = a3 <u a2\n 33170: a3 = u64 [sp + 0x98]\n 33174: a2 = 0 if a3 != 0\n 33176: a3 = u64 [sp + 0x58]\n 33179: a2 = 0 if a3 != 0\n 33181: u8 [a0 + 0xc] = a1\n 33184: jump @433 if a2 == 0\n      : @419 (gas: 4)\n 33188: s1 = u64 [sp + 0x88]\n 33192: i32 a0 = s1 + 0x44\n 33195: a1 = 0x20\n 33198: ra = 334, jump @0\n      : @420 [@dyn 167] (gas: 92)\n 33205: a1 = u64 [sp + 0x70]\n 33208: a1 = reverse a1\n 33210: a2 = u64 [sp + 0x68]\n 33213: a2 = reverse a2\n 33215: a3 = u64 [sp + 0x78]\n 33218: a3 = reverse a3\n 33220: a4 = u64 [sp + 0x80]\n 33224: a4 = reverse a4\n 33226: a5 = a4 >> 0x38\n 33229: u8 [a0 + 0x1f] = a5\n 33232: a5 = a4 >> 0x30\n 33235: u8 [a0 + 0x1e] = a5\n 33238: a5 = a4 >> 0x28\n 33241: u8 [a0 + 0x1d] = a5\n 33244: a5 = a4 >> 0x20\n 33247: u8 [a0 + 0x1c] = a5\n 33250: a5 = a4 >> 0x18\n 33253: u8 [a0 + 0x1b] = a5\n 33256: a5 = a4 >> 0x10\n 33259: u8 [a0 + 0x1a] = a5\n 33262: a5 = a4 >> 0x8\n 33265: u8 [a0 + 0x19] = a5\n 33268: u8 [a0 + 0x18] = a4\n 33271: u8 [a0 + 0x10] = a3\n 33274: a4 = a3 >> 0x38\n 33277: u8 [a0 + 0x17] = a4\n 33280: a4 = a3 >> 0x30\n 33283: u8 [a0 + 0x16] = a4\n 33286: a4 = a3 >> 0x28\n 33289: u8 [a0 + 0x15] = a4\n 33292: a4 = a3 >> 0x20\n 33295: u8 [a0 + 0x14] = a4\n 33298: a4 = a3 >> 0x18\n 33301: u8 [a0 + 0x13] = a4\n 33304: a4 = a3 >> 0x10\n 33307: u8 [a0 + 0x12] = a4\n 33310: a3 = a3 >> 0x8\n 33313: u8 [a0 + 0x11] = a3\n 33316: u8 [a0 + 0x8] = a2\n 33319: a3 = a2 >> 0x38\n 33322: u8 [a0 + 0xf] = a3\n 33325: a3 = a2 >> 0x30\n 33328: u8 [a0 + 0xe] = a3\n 33331: a3 = a2 >> 0x28\n 33334: u8 [a0 + 0xd] = a3\n 33337: a3 = a2 >> 0x20\n 33340: u8 [a0 + 0xc] = a3\n 33343: a3 = a2 >> 0x18\n 33346: u8 [a0 + 0xb] = a3\n 33349: a3 = a2 >> 0x10\n 33352: u8 [a0 + 0xa] = a3\n 33355: a2 = a2 >> 0x8\n 33358: u8 [a0 + 0x9] = a2\n 33361: u8 [a0] = a1\n 33363: a2 = a1 >> 0x38\n 33366: u8 [a0 + 0x7] = a2\n 33369: a2 = a1 >> 0x30\n 33372: u8 [a0 + 0x6] = a2\n 33375: a2 = a1 >> 0x28\n 33378: u8 [a0 + 0x5] = a2\n 33381: a2 = a1 >> 0x20\n 33384: u8 [a0 + 0x4] = a2\n 33387: a2 = a1 >> 0x18\n 33390: u8 [a0 + 0x3] = a2\n 33393: a2 = a1 >> 0x10\n 33396: u8 [a0 + 0x2] = a2\n 33399: a1 = a1 >> 0x8\n 33402: u8 [a0 + 0x1] = a1\n 33405: ecalli 8 // 'ref_time_left'\n 33407: a0 = u64 [sp + 0x8]\n 33410: a0 = reverse a0\n 33412: a1 = a0 << 0x20\n 33415: a2 = u64 [sp + 0x10]\n 33418: a2 = reverse a2\n 33420: a2 = a2 >> 0x20\n 33423: a1 = a1 | a2\n 33426: a2 = u64 [sp + 0x18]\n 33429: a2 = reverse a2\n 33431: a3 = a2 << 0x20\n 33434: a0 = a0 >> 0x20\n 33437: a0 = a0 | a3\n 33440: a2 = a2 >> 0x20\n 33443: u64 [sp + 0x188] = a0\n 33447: u64 [sp + 0x180] = a1\n 33451: u32 [sp + 0x190] = a2\n 33455: u64 [sp + 440] = 0\n 33459: u64 [sp + 432] = 0\n 33463: u64 [sp + 424] = 0\n 33467: u64 [sp + 416] = 0\n 33471: a1 = 0x64\n 33474: a0 = s1\n 33476: ra = 336, jump @0\n      : @421 [@dyn 168] (gas: 4)\n 33483: u64 [sp + 0x80] = a0\n 33487: a1 = 0x20\n 33490: a0 = s1\n 33492: ra = 338, jump @0\n      : @422 [@dyn 169] (gas: 31)\n 33499: u32 [sp + 448] = 0x20\n 33504: u64 [sp + 504] = 0xffffffffffffffff\n 33509: u64 [sp + 496] = 0xffffffffffffffff\n 33514: u64 [sp + 488] = 0xffffffffffffffff\n 33519: u64 [sp + 480] = 0xffffffffffffffff\n 33524: a1 = sp + 0x180\n 33528: a1 = a1 << 0x20\n 33531: a1 = a1 >> 0x20\n 33534: s1 = 0x800000000\n 33544: s1 = s1 | a1\n 33547: a1 = sp + 0x1a0\n 33551: a1 = a1 << 0x20\n 33554: a1 = a1 >> 0x20\n 33557: a2 = sp + 0x1e0\n 33561: a2 = a2 << 0x20\n 33564: a3 = a2 | a1\n 33567: a1 = u64 [sp + 0x80]\n 33571: a1 = a1 << 0x20\n 33574: a1 = a1 >> 0x20\n 33577: a2 = 0x6400000000\n 33587: a4 = a1 | a2\n 33590: a0 = a0 << 0x20\n 33593: a0 = a0 >> 0x20\n 33596: a1 = sp + 0x1c0\n 33600: a1 = a1 << 0x20\n 33603: a5 = a1 | a0\n 33606: a1 = 0xffffffffffffffff\n 33609: a2 = 0xffffffffffffffff\n 33612: a0 = s1\n 33614: ecalli 1 // 'call'\n 33616: fallthrough\n      : @423 (gas: 1)\n 33617: jump @434 if a0 != 0\n      : @424 (gas: 2)\n 33621: ecalli 10 // 'return_data_size'\n 33623: fallthrough\n      : @425 (gas: 2)\n 33624: a1 = 0x20\n 33627: jump @427 if a0 >=u a1\n      : @426 (gas: 3)\n 33630: ecalli 10 // 'return_data_size'\n 33632: a1 = a0\n 33634: fallthrough\n      : @427 (gas: 28)\n 33635: a4 = 0\n 33637: a3 = u64 [sp + 0x60]\n 33640: a2 = u64 [sp + 0x90]\n 33644: s1 = u64 [sp + 0x98]\n 33648: a0 = a1 + 0x1f\n 33651: u64 [sp + 0x90] = a1\n 33655: a1 = a0 <u a1\n 33658: u64 [sp + 152] = 0\n 33662: a1 = a1 & 0x1\n 33665: a0 = a0 & 0xffffffffffffffe0\n 33668: a2 = a2 + a0\n 33671: u64 [sp + 0x80] = a2\n 33675: a0 = a2 <u a0\n 33678: s1 = s1 + a1\n 33681: s1 = s1 + a0\n 33684: a2 = s1 ^ a1\n 33687: a1 = s1 <u a1\n 33690: a1 = a0 if a2 == 0\n 33693: a0 = u64 [sp]\n 33695: a1 = a1 + a0\n 33698: a0 = a1 <u a0\n 33701: a0 = a0 + a3\n 33704: u64 [sp + 0x78] = a1\n 33707: u64 [sp + 0x70] = a0\n 33710: a0 = a0 | a1\n 33713: a1 = s1 <u 0x1\n 33716: a1 = 0 if a0 != 0\n 33718: jump @439 if a1 == 0\n      : @428 (gas: 3)\n 33722: a0 = 0x40\n 33725: a1 = 0x20\n 33728: ra = 340, jump @0\n      : @429 [@dyn 170] (gas: 79)\n 33735: a1 = u64 [sp + 0x70]\n 33738: a1 = reverse a1\n 33740: a2 = u64 [sp + 0x78]\n 33743: a2 = reverse a2\n 33745: a3 = reverse s1\n 33747: a4 = u64 [sp + 0x80]\n 33751: a4 = reverse a4\n 33753: u8 [a0 + 0x18] = a4\n 33756: a5 = a4 >> 0x38\n 33759: u8 [a0 + 0x1f] = a5\n 33762: a5 = a4 >> 0x30\n 33765: u8 [a0 + 0x1e] = a5\n 33768: a5 = a4 >> 0x28\n 33771: u8 [a0 + 0x1d] = a5\n 33774: a5 = a4 >> 0x20\n 33777: u8 [a0 + 0x1c] = a5\n 33780: a5 = a4 >> 0x18\n 33783: u8 [a0 + 0x1b] = a5\n 33786: a5 = a4 >> 0x10\n 33789: u8 [a0 + 0x1a] = a5\n 33792: a4 = a4 >> 0x8\n 33795: u8 [a0 + 0x19] = a4\n 33798: u8 [a0 + 0x10] = a3\n 33801: a4 = a3 >> 0x38\n 33804: u8 [a0 + 0x17] = a4\n 33807: a4 = a3 >> 0x30\n 33810: u8 [a0 + 0x16] = a4\n 33813: a4 = a3 >> 0x28\n 33816: u8 [a0 + 0x15] = a4\n 33819: a4 = a3 >> 0x20\n 33822: u8 [a0 + 0x14] = a4\n 33825: a4 = a3 >> 0x18\n 33828: u8 [a0 + 0x13] = a4\n 33831: a4 = a3 >> 0x10\n 33834: u8 [a0 + 0x12] = a4\n 33837: a3 = a3 >> 0x8\n 33840: u8 [a0 + 0x11] = a3\n 33843: u8 [a0 + 0x8] = a2\n 33846: a3 = a2 >> 0x38\n 33849: u8 [a0 + 0xf] = a3\n 33852: a3 = a2 >> 0x30\n 33855: u8 [a0 + 0xe] = a3\n 33858: a3 = a2 >> 0x28\n 33861: u8 [a0 + 0xd] = a3\n 33864: a3 = a2 >> 0x20\n 33867: u8 [a0 + 0xc] = a3\n 33870: a3 = a2 >> 0x18\n 33873: u8 [a0 + 0xb] = a3\n 33876: a3 = a2 >> 0x10\n 33879: u8 [a0 + 0xa] = a3\n 33882: a2 = a2 >> 0x8\n 33885: u8 [a0 + 0x9] = a2\n 33888: u8 [a0] = a1\n 33890: a2 = a1 >> 0x38\n 33893: u8 [a0 + 0x7] = a2\n 33896: a2 = a1 >> 0x30\n 33899: u8 [a0 + 0x6] = a2\n 33902: a2 = a1 >> 0x28\n 33905: u8 [a0 + 0x5] = a2\n 33908: a2 = a1 >> 0x20\n 33911: u8 [a0 + 0x4] = a2\n 33914: a2 = a1 >> 0x18\n 33917: u8 [a0 + 0x3] = a2\n 33920: a2 = a1 >> 0x10\n 33923: u8 [a0 + 0x2] = a2\n 33926: a1 = a1 >> 0x8\n 33929: a5 = u64 [sp + 0x98]\n 33933: a2 = a5 >u 0\n 33935: a3 = u64 [sp + 0x90]\n 33939: a3 = a3 <u 0x20\n 33942: a3 = a3 ^ 0x1\n 33945: a3 = a2 if a5 != 0\n 33948: a2 = a5 >u 0\n 33950: a4 = a5 >u 0\n 33952: a4 = a2 if a5 == 0\n 33955: a2 = a5 | a5\n 33958: a4 = a3 if a2 == 0\n 33961: u8 [a0 + 0x1] = a1\n 33964: jump @435 if a4 == 0\n      : @430 (gas: 3)\n 33968: a1 = 0x20\n 33971: a0 = u64 [sp + 0x88]\n 33975: ra = 342, jump @0\n      : @431 [@dyn 171] (gas: 95)\n 33982: a1 = u8 [a0 + 0x19]\n 33985: a2 = u8 [a0 + 0x18]\n 33988: a3 = u8 [a0 + 0x1a]\n 33991: a4 = u8 [a0 + 0x1b]\n 33994: a1 = a1 << 0x8\n 33997: a1 = a1 | a2\n 34000: a3 = a3 << 0x10\n 34003: a4 = a4 << 0x18\n 34006: a3 = a3 | a4\n 34009: a1 = a1 | a3\n 34012: a2 = u8 [a0 + 0x1d]\n 34015: a3 = u8 [a0 + 0x1c]\n 34018: a4 = u8 [a0 + 0x1e]\n 34021: a5 = u8 [a0 + 0x1f]\n 34024: a2 = a2 << 0x8\n 34027: a2 = a2 | a3\n 34030: a4 = a4 << 0x10\n 34033: a5 = a5 << 0x18\n 34036: a4 = a4 | a5\n 34039: a2 = a2 | a4\n 34042: a2 = a2 << 0x20\n 34045: t0 = a2 | a1\n 34048: a2 = u8 [a0 + 0x11]\n 34051: a3 = u8 [a0 + 0x10]\n 34054: a4 = u8 [a0 + 0x12]\n 34057: a5 = u8 [a0 + 0x13]\n 34060: a2 = a2 << 0x8\n 34063: a2 = a2 | a3\n 34066: a4 = a4 << 0x10\n 34069: a5 = a5 << 0x18\n 34072: a4 = a4 | a5\n 34075: a2 = a2 | a4\n 34078: a3 = u8 [a0 + 0x15]\n 34081: a4 = u8 [a0 + 0x14]\n 34084: a5 = u8 [a0 + 0x16]\n 34087: s1 = u8 [a0 + 0x17]\n 34090: a3 = a3 << 0x8\n 34093: a3 = a3 | a4\n 34096: a5 = a5 << 0x10\n 34099: s1 = s1 << 0x18\n 34102: a5 = a5 | s1\n 34105: a3 = a3 | a5\n 34108: a3 = a3 << 0x20\n 34111: t1 = a3 | a2\n 34114: a3 = u8 [a0 + 0x1]\n 34117: a4 = u8 [a0]\n 34119: a5 = u8 [a0 + 0x2]\n 34122: s1 = u8 [a0 + 0x3]\n 34125: a3 = a3 << 0x8\n 34128: a3 = a3 | a4\n 34131: a5 = a5 << 0x10\n 34134: s1 = s1 << 0x18\n 34137: a5 = a5 | s1\n 34140: a3 = a3 | a5\n 34143: a4 = u8 [a0 + 0x9]\n 34146: a5 = u8 [a0 + 0x8]\n 34149: s1 = u8 [a0 + 0xa]\n 34152: a1 = u8 [a0 + 0xb]\n 34155: a4 = a4 << 0x8\n 34158: a4 = a4 | a5\n 34161: s1 = s1 << 0x10\n 34164: a1 = a1 << 0x18\n 34167: a1 = a1 | s1\n 34170: a4 = a4 | a1\n 34173: a1 = u8 [a0 + 0x5]\n 34176: a5 = u8 [a0 + 0x4]\n 34179: s1 = u8 [a0 + 0x6]\n 34182: a2 = u8 [a0 + 0x7]\n 34185: a1 = a1 << 0x8\n 34188: a1 = a1 | a5\n 34191: s1 = s1 << 0x10\n 34194: a2 = a2 << 0x18\n 34197: a2 = a2 | s1\n 34200: a1 = a1 | a2\n 34203: a2 = u8 [a0 + 0xd]\n 34206: a5 = u8 [a0 + 0xc]\n 34209: s1 = u8 [a0 + 0xe]\n 34212: a0 = u8 [a0 + 0xf]\n 34215: a2 = a2 << 0x8\n 34218: a2 = a2 | a5\n 34221: s1 = s1 << 0x10\n 34224: a0 = a0 << 0x18\n 34227: a0 = a0 | s1\n 34230: a0 = a0 | a2\n 34233: a2 = reverse t1\n 34235: a5 = reverse t0\n 34237: a5 = a5 <u 0x2\n 34240: a5 = 0 if a2 != 0\n 34242: a0 = a0 | a1\n 34245: a0 = a0 << 0x20\n 34248: a3 = a3 | a4\n 34251: a0 = a0 | a3\n 34254: a0 = reverse a0\n 34256: a5 = 0 if a0 != 0\n 34258: jump @435 if a5 == 0\n      : @432 (gas: 6)\n 34261: sp = s0 + 0xfffffffffffffda0\n 34265: ra = u64 [sp + 0x258]\n 34269: s0 = u64 [sp + 0x250]\n 34273: s1 = u64 [sp + 0x248]\n 34277: sp = sp + 0x260\n 34281: ret\n      : @433 (gas: 1)\n 34283: trap\n      : @434 (gas: 1)\n 34284: ra = 344, jump @204\n      : @435 [@dyn 172] (gas: 3)\n 34290: a0 = 0\n 34292: a1 = 0\n 34294: ra = 346, jump @0\n      : @436 [@dyn 173] (gas: 5)\n 34301: i32 a1 = a0 + 0\n 34303: a0 = 0x1\n 34306: a2 = 0\n 34308: ecalli 11 // 'seal_return'\n 34310: fallthrough\n      : @437 (gas: 8)\n 34311: u64 [sp + 208] = 0\n 34315: u64 [sp + 200] = 0\n 34319: u64 [sp + 192] = 0\n 34323: a0 = 0x4e487b7100000000\n 34333: a1 = sp + 0xc0\n 34337: u64 [sp + 0xd8] = a0\n 34341: a0 = 0\n 34343: ra = 348, jump @8\n      : @438 [@dyn 174] (gas: 8)\n 34350: u64 [sp + 184] = 0\n 34354: u64 [sp + 176] = 0\n 34358: u64 [sp + 160] = 0x11\n 34363: a0 = 0x4\n 34366: a1 = sp + 0xa0\n 34370: u64 [sp + 168] = 0\n 34374: ra = 0x160\n 34378: jump @8\n      : @439 (gas: 8)\n 34382: u64 [sp + 272] = 0\n 34386: u64 [sp + 264] = 0\n 34390: u64 [sp + 256] = 0\n 34394: a0 = 0x4e487b7100000000\n 34404: a1 = sp + 0x100\n 34408: u64 [sp + 0x118] = a0\n 34412: a0 = 0\n 34414: ra = 350, jump @8\n      : @440 [@dyn 175] (gas: 7)\n 34421: u64 [sp + 248] = 0\n 34425: u64 [sp + 240] = 0\n 34429: u64 [sp + 224] = 0x41\n 34434: a0 = 0x4\n 34437: a1 = sp + 0xe0\n 34441: u64 [sp + 232] = 0\n 34445: ra = 352, jump @8\n      : @441 [@dyn 176] (gas: 3)\n 34452: a1 = 0x24\n 34455: a0 = 0\n 34457: ra = 354, jump @0\n      : @442 [@dyn 177] (gas: 7)\n 34464: i32 a1 = a0 + 0\n 34466: a0 = 0x1\n 34469: a2 = 0x24\n 34472: ecalli 11 // 'seal_return'\n 34474: a0 = 0\n 34476: ra = 0x164\n 34480: jump @10\n      : @443 [export #0: 'call'] (gas: 2)\n 34484: a0 = 0\n 34486: ra = 356, jump @10\n      : @444 [@dyn 178] [export #1: 'deploy'] (gas: 2)\n 34493: a0 = 0x1\n 34496: ra = 358, jump @10\n      : @445 [@dyn 179] (gas: 249)\n 34503: sp = sp + 0xffffffffffffff80\n 34506: u64 [sp + 0x78] = ra\n 34509: u64 [sp + 0x70] = s0\n 34512: u64 [sp + 0x68] = s1\n 34515: s0 = sp + 0x80\n 34519: sp = sp & 0xfffffffffffffff0\n 34522: t0 = u64 [a1]\n 34524: t1 = u64 [a1 + 0x8]\n 34527: t2 = u64 [a1 + 0x10]\n 34530: a1 = u64 [a1 + 0x18]\n 34533: a3 = u64 [a2]\n 34535: a4 = u64 [a2 + 0x8]\n 34538: a5 = u64 [a2 + 0x10]\n 34541: a2 = u64 [a2 + 0x18]\n 34544: s1 = a0\n 34546: u64 [sp + 0x18] = a2\n 34549: u64 [sp + 0x10] = a5\n 34552: u64 [sp + 0x8] = a4\n 34555: u64 [sp] = a3\n 34557: u64 [sp + 0x38] = a1\n 34560: u64 [sp + 0x30] = t2\n 34563: u64 [sp + 0x28] = t1\n 34566: a0 = sp + 0x40\n 34569: a1 = sp + 0x20\n 34572: a2 = sp\n 34574: u64 [sp + 0x20] = t0\n 34577: ra = 0x168\n 34581: sp = sp + 0xffffffffffffff40\n 34585: u64 [sp + 0xb8] = ra\n 34589: u64 [sp + 0xb0] = s0\n 34593: u64 [sp + 0xa8] = s1\n 34597: s0 = sp + 0xc0\n 34601: sp = sp & 0xffffffffffffffe0\n 34604: u64 [sp + 0x18] = a0\n 34607: a0 = u64 [a2 + 0x18]\n 34610: u64 [sp + 0x10] = a0\n 34613: a0 = u64 [a2 + 0x10]\n 34616: u64 [sp + 0x8] = a0\n 34619: s1 = u64 [a2 + 0x8]\n 34622: a0 = u64 [a2]\n 34624: u64 [sp] = a0\n 34626: a0 = u64 [a1 + 0x18]\n 34629: a2 = u64 [a1 + 0x10]\n 34632: a3 = u64 [a1 + 0x8]\n 34635: a1 = u64 [a1]\n 34637: u64 [sp + 0x78] = a0\n 34640: u64 [sp + 0x70] = a2\n 34643: u64 [sp + 0x68] = a3\n 34646: u64 [sp + 0x60] = a1\n 34649: u64 [sp + 152] = 0\n 34653: u64 [sp + 144] = 0\n 34657: u64 [sp + 136] = 0\n 34661: u64 [sp + 128] = 0\n 34665: u32 [sp + 160] = 0x20\n 34670: i32 a1 = sp + 0x60\n 34673: i32 a3 = sp + 0x80\n 34677: i32 a4 = sp + 0xa0\n 34681: a2 = 0xffffffffffffffff\n 34684: a0 = 0\n 34686: ecalli 6 // 'get_storage'\n 34688: a1 = u64 [sp + 0x80]\n 34692: a2 = u64 [sp + 0x88]\n 34696: t1 = u64 [sp]\n 34698: a0 = t1 >> 0x3d\n 34701: a3 = s1 << 0x3\n 34704: a3 = a3 | a0\n 34707: s1 = s1 >> 0x3d\n 34710: a4 = u64 [sp + 0x8]\n 34713: a0 = a4 << 0x3\n 34716: s1 = s1 | a0\n 34719: a0 = a4 >> 0x3d\n 34722: a4 = u64 [sp + 0x10]\n 34725: a4 = a4 << 0x3\n 34728: a4 = a4 | a0\n 34731: a0 = t1 << 0x3\n 34734: a5 = a3 >u 0\n 34736: a0 = a0 <u 0x100\n 34740: t0 = a0 ^ 0x1\n 34743: t0 = a5 if a3 != 0\n 34746: a3 = a4 >u 0\n 34748: a5 = s1 >u 0\n 34750: a5 = a3 if a4 != 0\n 34753: a3 = u64 [sp + 0x90]\n 34757: s1 = s1 | a4\n 34760: a4 = u64 [sp + 0x98]\n 34764: t0 = a5 if s1 != 0\n 34767: u8 [sp + 95] = 0\n 34770: u8 [sp + 94] = 0\n 34773: u8 [sp + 93] = 0\n 34776: u8 [sp + 92] = 0\n 34779: u8 [sp + 91] = 0\n 34782: u8 [sp + 90] = 0\n 34785: u8 [sp + 89] = 0\n 34788: u8 [sp + 88] = 0\n 34791: u8 [sp + 87] = 0\n 34794: u8 [sp + 86] = 0\n 34797: u8 [sp + 85] = 0\n 34800: u8 [sp + 84] = 0\n 34803: u8 [sp + 83] = 0\n 34806: u8 [sp + 82] = 0\n 34809: u8 [sp + 81] = 0\n 34812: u8 [sp + 80] = 0\n 34815: u8 [sp + 79] = 0\n 34818: u8 [sp + 78] = 0\n 34821: u8 [sp + 77] = 0\n 34824: u8 [sp + 76] = 0\n 34827: u8 [sp + 75] = 0\n 34830: u8 [sp + 74] = 0\n 34833: u8 [sp + 73] = 0\n 34836: u8 [sp + 72] = 0\n 34839: u8 [sp + 71] = 0\n 34842: u8 [sp + 70] = 0\n 34845: u8 [sp + 69] = 0\n 34848: u8 [sp + 68] = 0\n 34851: u8 [sp + 67] = 0\n 34854: u8 [sp + 66] = 0\n 34857: u8 [sp + 65] = 0\n 34860: u8 [sp + 64] = 0\n 34863: u8 [sp + 0x38] = a4\n 34866: u8 [sp + 0x30] = a3\n 34869: u8 [sp + 0x28] = a2\n 34872: u8 [sp + 0x20] = a1\n 34875: a5 = a4 >> 0x38\n 34878: u8 [sp + 0x3f] = a5\n 34881: a5 = a4 >> 0x30\n 34884: u8 [sp + 0x3e] = a5\n 34887: a5 = a4 >> 0x28\n 34890: u8 [sp + 0x3d] = a5\n 34893: a5 = a4 >> 0x20\n 34896: u8 [sp + 0x3c] = a5\n 34899: a5 = a4 >> 0x18\n 34902: u8 [sp + 0x3b] = a5\n 34905: a5 = a4 >> 0x10\n 34908: u8 [sp + 0x3a] = a5\n 34911: a4 = a4 >> 0x8\n 34914: u8 [sp + 0x39] = a4\n 34917: a4 = a3 >> 0x38\n 34920: u8 [sp + 0x37] = a4\n 34923: a4 = a3 >> 0x30\n 34926: u8 [sp + 0x36] = a4\n 34929: a4 = a3 >> 0x28\n 34932: u8 [sp + 0x35] = a4\n 34935: a4 = a3 >> 0x20\n 34938: u8 [sp + 0x34] = a4\n 34941: a4 = a3 >> 0x18\n 34944: u8 [sp + 0x33] = a4\n 34947: a4 = a3 >> 0x10\n 34950: u8 [sp + 0x32] = a4\n 34953: a3 = a3 >> 0x8\n 34956: u8 [sp + 0x31] = a3\n 34959: a3 = a2 >> 0x38\n 34962: u8 [sp + 0x2f] = a3\n 34965: a3 = a2 >> 0x30\n 34968: u8 [sp + 0x2e] = a3\n 34971: a3 = a2 >> 0x28\n 34974: u8 [sp + 0x2d] = a3\n 34977: a3 = a2 >> 0x20\n 34980: u8 [sp + 0x2c] = a3\n 34983: a3 = a2 >> 0x18\n 34986: u8 [sp + 0x2b] = a3\n 34989: a3 = a2 >> 0x10\n 34992: u8 [sp + 0x2a] = a3\n 34995: a2 = a2 >> 0x8\n 34998: u8 [sp + 0x29] = a2\n 35001: a2 = a1 >> 0x38\n 35004: u8 [sp + 0x27] = a2\n 35007: a2 = a1 >> 0x30\n 35010: u8 [sp + 0x26] = a2\n 35013: a2 = a1 >> 0x28\n 35016: u8 [sp + 0x25] = a2\n 35019: a2 = a1 >> 0x20\n 35022: u8 [sp + 0x24] = a2\n 35025: a2 = a1 >> 0x18\n 35028: u8 [sp + 0x23] = a2\n 35031: a2 = a1 >> 0x10\n 35034: u8 [sp + 0x22] = a2\n 35037: a1 = a1 >> 0x8\n 35040: u8 [sp + 0x21] = a1\n 35043: a1 = t1 & 0x1f\n 35046: a2 = sp + 0x20\n 35049: a1 = a1 | a2\n 35052: a2 = u8 [a1 + 0x9]\n 35055: a3 = u8 [a1 + 0x8]\n 35058: a4 = u8 [a1 + 0xa]\n 35061: a5 = u8 [a1 + 0xb]\n 35064: a2 = a2 << 0x8\n 35067: a2 = a2 | a3\n 35070: a4 = a4 << 0x10\n 35073: a5 = a5 << 0x18\n 35076: a4 = a4 | a5\n 35079: a2 = a2 | a4\n 35082: a3 = u8 [a1 + 0xd]\n 35085: a4 = u8 [a1 + 0xc]\n 35088: a5 = u8 [a1 + 0xe]\n 35091: s1 = u8 [a1 + 0xf]\n 35094: a3 = a3 << 0x8\n 35097: a3 = a3 | a4\n 35100: a5 = a5 << 0x10\n 35103: s1 = s1 << 0x18\n 35106: a5 = a5 | s1\n 35109: a3 = a3 | a5\n 35112: a3 = a3 << 0x20\n 35115: a2 = a2 | a3\n 35118: a3 = u8 [a1 + 0x1]\n 35121: a4 = u8 [a1]\n 35123: a5 = u8 [a1 + 0x2]\n 35126: s1 = u8 [a1 + 0x3]\n 35129: a3 = a3 << 0x8\n 35132: a3 = a3 | a4\n 35135: a5 = a5 << 0x10\n 35138: s1 = s1 << 0x18\n 35141: a5 = a5 | s1\n 35144: a3 = a3 | a5\n 35147: a4 = u8 [a1 + 0x5]\n 35150: a5 = u8 [a1 + 0x4]\n 35153: s1 = u8 [a1 + 0x6]\n 35156: a0 = u8 [a1 + 0x7]\n 35159: a4 = a4 << 0x8\n 35162: a4 = a4 | a5\n 35165: s1 = s1 << 0x10\n 35168: a0 = a0 << 0x18\n 35171: a0 = a0 | s1\n 35174: a0 = a0 | a4\n 35177: a0 = a0 << 0x20\n 35180: a3 = a3 | a0\n 35183: a0 = u8 [a1 + 0x11]\n 35186: a4 = u8 [a1 + 0x10]\n 35189: a5 = u8 [a1 + 0x12]\n 35192: a1 = u8 [a1 + 0x13]\n 35195: a0 = a0 << 0x8\n 35198: a0 = a0 | a4\n 35201: a5 = a5 << 0x10\n 35204: a1 = a1 << 0x18\n 35207: a1 = a1 | a5\n 35210: a0 = a0 | a1\n 35213: a3 = 0 if t0 != 0\n 35215: a2 = 0 if t0 != 0\n 35217: a0 = 0 if t0 != 0\n 35219: a1 = u64 [sp + 0x18]\n 35222: u64 [a1 + 0x10] = a0\n 35225: u64 [a1 + 0x8] = a2\n 35228: u64 [a1] = a3\n 35230: u64 [a1 + 24] = 0\n 35233: sp = s0 + 0xffffffffffffff40\n 35237: ra = u64 [sp + 0xb8]\n 35241: s0 = u64 [sp + 0xb0]\n 35245: s1 = u64 [sp + 0xa8]\n 35249: sp = sp + 0xc0\n 35253: ret\n      : @446 [@dyn 180] (gas: 14)\n 35255: a0 = u64 [sp + 0x50]\n 35258: a1 = u64 [sp + 0x58]\n 35261: a2 = u64 [sp + 0x40]\n 35264: a3 = u64 [sp + 0x48]\n 35267: u64 [s1 + 0x10] = a0\n 35270: u64 [s1 + 0x18] = a1\n 35273: u64 [s1] = a2\n 35275: u64 [s1 + 0x8] = a3\n 35278: sp = s0 + 0xffffffffffffff80\n 35281: ra = u64 [sp + 0x78]\n 35284: s0 = u64 [sp + 0x70]\n 35287: s1 = u64 [sp + 0x68]\n 35290: sp = sp + 0x80\n 35294: ret\n",
						"bytecode": {
							"object": ""
						},
						"deployedBytecode": {
							"object": ""
						},
						"methodIdentifiers": {
							"borrow(uint256,address,uint256)": "0c28d13e",
							"borrowAsset()": "446456e5",
							"borrows(address)": "54a5706f",
							"collateralToken()": "b2016bd4",
							"conv()": "08b36870",
							"repay(uint256)": "371fd8e6",
							"vault()": "fbfa77cf"
						}
					},
					"irOptimized": "/// @use-src 0:\"contracts/v2/LendingEngine.sol\"\nobject \"LendingEngine_245\" {\n    code {\n        {\n            /// @src 0:803:2440  \"contract LendingEngine {...\"\n            mstore(64, memoryguard(0x80))\n            if callvalue()\n            {\n                revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb()\n            }\n            let _1, _2, _3, _4 := copy_arguments_for_constructor_object_LendingEngine()\n            constructor_LendingEngine(_1, _2, _3, _4)\n            let _5 := allocate_unbounded()\n            codecopy(_5, dataoffset(\"LendingEngine_245_deployed\"), datasize(\"LendingEngine_245_deployed\"))\n            return(_5, datasize(\"LendingEngine_245_deployed\"))\n        }\n        function allocate_unbounded() -> memPtr\n        { memPtr := mload(64) }\n        function revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb()\n        { revert(0, 0) }\n        function round_up_to_mul_of(value) -> result\n        {\n            result := and(add(value, 31), not(31))\n        }\n        function panic_error_0x41()\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x41)\n            revert(0, 0x24)\n        }\n        function finalize_allocation(memPtr, size)\n        {\n            let newFreePtr := add(memPtr, round_up_to_mul_of(size))\n            if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n            mstore(64, newFreePtr)\n        }\n        function allocate_memory(size) -> memPtr\n        {\n            memPtr := allocate_unbounded()\n            finalize_allocation(memPtr, size)\n        }\n        function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b()\n        { revert(0, 0) }\n        function cleanup_uint160(value) -> cleaned\n        {\n            cleaned := and(value, sub(shl(160, 1), 1))\n        }\n        function cleanup_address(value) -> cleaned\n        {\n            cleaned := cleanup_uint160(value)\n        }\n        function validator_revert_address(value)\n        {\n            if iszero(eq(value, cleanup_address(value))) { revert(0, 0) }\n        }\n        function abi_decode_address_fromMemory(offset, end) -> value\n        {\n            value := mload(offset)\n            validator_revert_address(value)\n        }\n        function abi_decode_addresst_addresst_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3\n        {\n            if slt(sub(dataEnd, headStart), 128)\n            {\n                revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b()\n            }\n            let offset := 0\n            value0 := abi_decode_address_fromMemory(add(headStart, offset), dataEnd)\n            let offset_1 := 32\n            value1 := abi_decode_address_fromMemory(add(headStart, offset_1), dataEnd)\n            let offset_2 := 64\n            value2 := abi_decode_address_fromMemory(add(headStart, offset_2), dataEnd)\n            let offset_3 := 96\n            value3 := abi_decode_address_fromMemory(add(headStart, offset_3), dataEnd)\n        }\n        function copy_arguments_for_constructor_object_LendingEngine() -> ret_param, ret_param_1, ret_param_2, ret_param_3\n        {\n            let programSize := datasize(\"LendingEngine_245\")\n            let argSize := sub(codesize(), programSize)\n            let memoryDataOffset := allocate_memory(argSize)\n            codecopy(memoryDataOffset, programSize, argSize)\n            ret_param, ret_param_1, ret_param_2, ret_param_3 := abi_decode_addresst_addresst_addresst_address_fromMemory(memoryDataOffset, add(memoryDataOffset, argSize))\n        }\n        function shift_left(value) -> newValue\n        { newValue := shl(0, value) }\n        function update_byte_slice_shift(value, toInsert) -> result\n        {\n            let mask := sub(shl(160, 1), 1)\n            toInsert := shift_left(toInsert)\n            value := and(value, not(mask))\n            result := or(value, and(toInsert, mask))\n        }\n        function identity(value) -> ret\n        { ret := value }\n        function convert_uint160_to_uint160(value) -> converted\n        {\n            converted := cleanup_uint160(identity(cleanup_uint160(value)))\n        }\n        function convert_uint160_to_address(value) -> converted\n        {\n            converted := convert_uint160_to_uint160(value)\n        }\n        function convert_address_to_address(value) -> converted\n        {\n            converted := convert_uint160_to_address(value)\n        }\n        function prepare_store_address(value) -> ret\n        { ret := value }\n        function update_storage_value_offset_address_to_address(slot, value)\n        {\n            let convertedValue := convert_address_to_address(value)\n            sstore(slot, update_byte_slice_shift(sload(slot), prepare_store_address(convertedValue)))\n        }\n        function convert_uint160_to_contract_IAssetConversion(value) -> converted\n        {\n            converted := convert_uint160_to_uint160(value)\n        }\n        function convert_address_to_contract_IAssetConversion(value) -> converted\n        {\n            converted := convert_uint160_to_contract_IAssetConversion(value)\n        }\n        function convert_contract_IAssetConversion_to_contract_IAssetConversion(value) -> converted\n        {\n            converted := convert_uint160_to_contract_IAssetConversion(value)\n        }\n        function prepare_store_contract_IAssetConversion(value) -> ret\n        { ret := value }\n        function update_storage_value_offset_contract_IAssetConversion_to_contract_IAssetConversion(slot, value)\n        {\n            let convertedValue := convert_contract_IAssetConversion_to_contract_IAssetConversion(value)\n            sstore(slot, update_byte_slice_shift(sload(slot), prepare_store_contract_IAssetConversion(convertedValue)))\n        }\n        function convert_uint160_to_contract_IERC20(value) -> converted\n        {\n            converted := convert_uint160_to_uint160(value)\n        }\n        function convert_address_to_contract_IERC20(value) -> converted\n        {\n            converted := convert_uint160_to_contract_IERC20(value)\n        }\n        function convert_contract_IERC20_to_contract_IERC20(value) -> converted\n        {\n            converted := convert_uint160_to_contract_IERC20(value)\n        }\n        function prepare_store_contract_IERC20(value) -> ret\n        { ret := value }\n        function update_storage_value_offset_contract_IERC20_to_contract_IERC20(slot, value)\n        {\n            let convertedValue := convert_contract_IERC20_to_contract_IERC20(value)\n            sstore(slot, update_byte_slice_shift(sload(slot), prepare_store_contract_IERC20(convertedValue)))\n        }\n        /// @ast-id 117 @src 0:1145:1442  \"constructor(...\"\n        function constructor_LendingEngine(var_vault, var_conv, var_collateral, var_borrow)\n        {\n            /// @src 0:1291:1297  \"_vault\"\n            let _1 := var_vault\n            let expr := _1\n            /// @src 0:1274:1297  \"vault          = _vault\"\n            update_storage_value_offset_address_to_address(0x00, expr)\n            /// @src 0:1341:1346  \"_conv\"\n            let _2 := var_conv\n            let expr_1 := _2\n            /// @src 0:1324:1347  \"IAssetConversion(_conv)\"\n            let expr_101_address := convert_address_to_contract_IAssetConversion(expr_1)\n            /// @src 0:1307:1347  \"conv           = IAssetConversion(_conv)\"\n            update_storage_value_offset_contract_IAssetConversion_to_contract_IAssetConversion(0x01, expr_101_address)\n            /// @src 0:1381:1392  \"_collateral\"\n            let _3 := var_collateral\n            let expr_2 := _3\n            /// @src 0:1374:1393  \"IERC20(_collateral)\"\n            let expr_107_address := convert_address_to_contract_IERC20(expr_2)\n            /// @src 0:1357:1393  \"collateralToken= IERC20(_collateral)\"\n            update_storage_value_offset_contract_IERC20_to_contract_IERC20(0x02, expr_107_address)\n            /// @src 0:1427:1434  \"_borrow\"\n            let _4 := var_borrow\n            let expr_3 := _4\n            /// @src 0:1420:1435  \"IERC20(_borrow)\"\n            let expr_address := convert_address_to_contract_IERC20(expr_3)\n            /// @src 0:1403:1435  \"borrowAsset    = IERC20(_borrow)\"\n            update_storage_value_offset_contract_IERC20_to_contract_IERC20(0x03, expr_address)\n        }\n    }\n    /// @use-src 0:\"contracts/v2/LendingEngine.sol\"\n    object \"LendingEngine_245_deployed\" {\n        code {\n            {\n                /// @src 0:803:2440  \"contract LendingEngine {...\"\n                mstore(64, memoryguard(0x80))\n                if iszero(lt(calldatasize(), 4))\n                {\n                    let selector := shift_right_unsigned(calldataload(0))\n                    switch selector\n                    case 0x08b36870 { external_fun_conv() }\n                    case 0x0c28d13e { external_fun_borrow() }\n                    case 0x371fd8e6 { external_fun_repay() }\n                    case 0x446456e5 { external_fun_borrowAsset() }\n                    case 0x54a5706f { external_fun_borrows() }\n                    case 0xb2016bd4 {\n                        external_fun_collateralToken()\n                    }\n                    case 0xfbfa77cf { external_fun_vault() }\n                    default { }\n                }\n                revert_error_42b3090547df1d2001c96683413b8cf91c1b902ef5e3cb8d9f6f304cf7446f74()\n            }\n            function shift_right_unsigned(value) -> newValue\n            { newValue := shr(224, value) }\n            function allocate_unbounded() -> memPtr\n            { memPtr := mload(64) }\n            function revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb()\n            { revert(0, 0) }\n            function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b()\n            { revert(0, 0) }\n            function abi_decode(headStart, dataEnd)\n            {\n                if slt(sub(dataEnd, headStart), 0)\n                {\n                    revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b()\n                }\n            }\n            function shift_right_unsigned_dynamic(bits, value) -> newValue\n            { newValue := shr(bits, value) }\n            function cleanup_from_storage_contract_IAssetConversion(value) -> cleaned\n            {\n                cleaned := and(value, sub(shl(160, 1), 1))\n            }\n            function extract_from_storage_value_dynamict_contract_IAssetConversion(slot_value, offset) -> value\n            {\n                value := cleanup_from_storage_contract_IAssetConversion(shift_right_unsigned_dynamic(mul(offset, 8), slot_value))\n            }\n            function read_from_storage_split_dynamic_contract_IAssetConversion(slot, offset) -> value\n            {\n                value := extract_from_storage_value_dynamict_contract_IAssetConversion(sload(slot), offset)\n            }\n            /// @ast-id 64 @src 0:858:886  \"IAssetConversion public conv\"\n            function getter_fun_conv() -> ret_address\n            {\n                let slot := 1\n                let offset := 0\n                ret_address := read_from_storage_split_dynamic_contract_IAssetConversion(slot, offset)\n            }\n            /// @src 0:803:2440  \"contract LendingEngine {...\"\n            function cleanup_uint160(value) -> cleaned\n            {\n                cleaned := and(value, sub(shl(160, 1), 1))\n            }\n            function identity(value) -> ret\n            { ret := value }\n            function convert_uint160_to_uint160(value) -> converted\n            {\n                converted := cleanup_uint160(identity(cleanup_uint160(value)))\n            }\n            function convert_uint160_to_address(value) -> converted\n            {\n                converted := convert_uint160_to_uint160(value)\n            }\n            function convert_contract_IAssetConversion_to_address(value) -> converted\n            {\n                converted := convert_uint160_to_address(value)\n            }\n            function abi_encode_contract_IAssetConversion(value, pos)\n            {\n                mstore(pos, convert_contract_IAssetConversion_to_address(value))\n            }\n            function abi_encode_tuple_contract_IAssetConversion(headStart, value0) -> tail\n            {\n                tail := add(headStart, 32)\n                abi_encode_contract_IAssetConversion(value0, add(headStart, 0))\n            }\n            function external_fun_conv()\n            {\n                if callvalue()\n                {\n                    revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb()\n                }\n                abi_decode(4, calldatasize())\n                let ret := getter_fun_conv()\n                let memPos := allocate_unbounded()\n                let memEnd := abi_encode_tuple_contract_IAssetConversion(memPos, ret)\n                return(memPos, sub(memEnd, memPos))\n            }\n            function cleanup_uint256(value) -> cleaned\n            { cleaned := value }\n            function validator_revert_uint256(value)\n            {\n                if iszero(eq(value, cleanup_uint256(value))) { revert(0, 0) }\n            }\n            function abi_decode_uint256(offset, end) -> value\n            {\n                value := calldataload(offset)\n                validator_revert_uint256(value)\n            }\n            function cleanup_address(value) -> cleaned\n            {\n                cleaned := cleanup_uint160(value)\n            }\n            function validator_revert_address(value)\n            {\n                if iszero(eq(value, cleanup_address(value))) { revert(0, 0) }\n            }\n            function abi_decode_address(offset, end) -> value\n            {\n                value := calldataload(offset)\n                validator_revert_address(value)\n            }\n            function abi_decode_uint256t_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n            {\n                if slt(sub(dataEnd, headStart), 96)\n                {\n                    revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b()\n                }\n                let offset := 0\n                value0 := abi_decode_uint256(add(headStart, offset), dataEnd)\n                let offset_1 := 32\n                value1 := abi_decode_address(add(headStart, offset_1), dataEnd)\n                let offset_2 := 64\n                value2 := abi_decode_uint256(add(headStart, offset_2), dataEnd)\n            }\n            function abi_encode_tuple(headStart) -> tail\n            { tail := add(headStart, 0) }\n            function external_fun_borrow()\n            {\n                if callvalue()\n                {\n                    revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb()\n                }\n                let param, param_1, param_2 := abi_decode_uint256t_addresst_uint256(4, calldatasize())\n                fun_borrow(param, param_1, param_2)\n                let memPos := allocate_unbounded()\n                let memEnd := abi_encode_tuple(memPos)\n                return(memPos, sub(memEnd, memPos))\n            }\n            function abi_decode_tuple_uint256(headStart, dataEnd) -> value0\n            {\n                if slt(sub(dataEnd, headStart), 32)\n                {\n                    revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b()\n                }\n                let offset := 0\n                value0 := abi_decode_uint256(add(headStart, offset), dataEnd)\n            }\n            function external_fun_repay()\n            {\n                if callvalue()\n                {\n                    revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb()\n                }\n                let param := abi_decode_tuple_uint256(4, calldatasize())\n                fun_repay(param)\n                let memPos := allocate_unbounded()\n                let memEnd := abi_encode_tuple(memPos)\n                return(memPos, sub(memEnd, memPos))\n            }\n            function cleanup_from_storage_contract_IERC20(value) -> cleaned\n            {\n                cleaned := and(value, sub(shl(160, 1), 1))\n            }\n            function extract_from_storage_value_dynamict_contract_IERC20(slot_value, offset) -> value\n            {\n                value := cleanup_from_storage_contract_IERC20(shift_right_unsigned_dynamic(mul(offset, 8), slot_value))\n            }\n            function read_from_storage_split_dynamic_contract_IERC20(slot, offset) -> value\n            {\n                value := extract_from_storage_value_dynamict_contract_IERC20(sload(slot), offset)\n            }\n            /// @ast-id 70 @src 0:927:952  \"IERC20 public borrowAsset\"\n            function getter_fun_borrowAsset() -> ret_address\n            {\n                let slot := 3\n                let offset := 0\n                ret_address := read_from_storage_split_dynamic_contract_IERC20(slot, offset)\n            }\n            /// @src 0:803:2440  \"contract LendingEngine {...\"\n            function convert_contract_IERC20_to_address(value) -> converted\n            {\n                converted := convert_uint160_to_address(value)\n            }\n            function abi_encode_contract_IERC20_to_address(value, pos)\n            {\n                mstore(pos, convert_contract_IERC20_to_address(value))\n            }\n            function abi_encode_contract_IERC20(headStart, value0) -> tail\n            {\n                tail := add(headStart, 32)\n                abi_encode_contract_IERC20_to_address(value0, add(headStart, 0))\n            }\n            function external_fun_borrowAsset()\n            {\n                if callvalue()\n                {\n                    revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb()\n                }\n                abi_decode(4, calldatasize())\n                let ret := getter_fun_borrowAsset()\n                let memPos := allocate_unbounded()\n                let memEnd := abi_encode_contract_IERC20(memPos, ret)\n                return(memPos, sub(memEnd, memPos))\n            }\n            function abi_decode_tuple_address(headStart, dataEnd) -> value0\n            {\n                if slt(sub(dataEnd, headStart), 32)\n                {\n                    revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b()\n                }\n                let offset := 0\n                value0 := abi_decode_address(add(headStart, offset), dataEnd)\n            }\n            function convert_address_to_address(value) -> converted\n            {\n                converted := convert_uint160_to_address(value)\n            }\n            function mapping_index_access_mapping_address_uint256_of_address(slot, key) -> dataSlot\n            {\n                mstore(0, convert_address_to_address(key))\n                mstore(0x20, slot)\n                dataSlot := keccak256(0, 0x40)\n            }\n            function cleanup_from_storage_uint256(value) -> cleaned\n            { cleaned := value }\n            function extract_from_storage_value_dynamict_uint256(slot_value, offset) -> value\n            {\n                value := cleanup_from_storage_uint256(shift_right_unsigned_dynamic(mul(offset, 8), slot_value))\n            }\n            function read_from_storage_split_dynamic_uint256(slot, offset) -> value\n            {\n                value := extract_from_storage_value_dynamict_uint256(sload(slot), offset)\n            }\n            /// @ast-id 83 @src 0:1096:1138  \"mapping(address => uint256) public borrows\"\n            function getter_fun_borrows(key) -> ret\n            {\n                let slot := 4\n                let offset := 0\n                slot := mapping_index_access_mapping_address_uint256_of_address(slot, key)\n                ret := read_from_storage_split_dynamic_uint256(slot, offset)\n            }\n            /// @src 0:803:2440  \"contract LendingEngine {...\"\n            function abi_encode_uint256_to_uint256(value, pos)\n            {\n                mstore(pos, cleanup_uint256(value))\n            }\n            function abi_encode_uint256(headStart, value0) -> tail\n            {\n                tail := add(headStart, 32)\n                abi_encode_uint256_to_uint256(value0, add(headStart, 0))\n            }\n            function external_fun_borrows()\n            {\n                if callvalue()\n                {\n                    revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb()\n                }\n                let param := abi_decode_tuple_address(4, calldatasize())\n                let ret := getter_fun_borrows(param)\n                let memPos := allocate_unbounded()\n                let memEnd := abi_encode_uint256(memPos, ret)\n                return(memPos, sub(memEnd, memPos))\n            }\n            /// @ast-id 67 @src 0:892:921  \"IERC20 public collateralToken\"\n            function getter_fun_collateralToken() -> ret_address\n            {\n                let slot := 2\n                let offset := 0\n                ret_address := read_from_storage_split_dynamic_contract_IERC20(slot, offset)\n            }\n            /// @src 0:803:2440  \"contract LendingEngine {...\"\n            function external_fun_collateralToken()\n            {\n                if callvalue()\n                {\n                    revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb()\n                }\n                abi_decode(4, calldatasize())\n                let ret := getter_fun_collateralToken()\n                let memPos := allocate_unbounded()\n                let memEnd := abi_encode_contract_IERC20(memPos, ret)\n                return(memPos, sub(memEnd, memPos))\n            }\n            function cleanup_from_storage_address(value) -> cleaned\n            {\n                cleaned := and(value, sub(shl(160, 1), 1))\n            }\n            function extract_from_storage_value_dynamict_address(slot_value, offset) -> value\n            {\n                value := cleanup_from_storage_address(shift_right_unsigned_dynamic(mul(offset, 8), slot_value))\n            }\n            function read_from_storage_split_dynamic_address(slot, offset) -> value\n            {\n                value := extract_from_storage_value_dynamict_address(sload(slot), offset)\n            }\n            /// @ast-id 61 @src 0:832:852  \"address public vault\"\n            function getter_fun_vault() -> ret\n            {\n                let slot := 0\n                let offset := 0\n                ret := read_from_storage_split_dynamic_address(slot, offset)\n            }\n            /// @src 0:803:2440  \"contract LendingEngine {...\"\n            function abi_encode_address(value, pos)\n            {\n                mstore(pos, cleanup_address(value))\n            }\n            function abi_encode_tuple_address(headStart, value0) -> tail\n            {\n                tail := add(headStart, 32)\n                abi_encode_address(value0, add(headStart, 0))\n            }\n            function external_fun_vault()\n            {\n                if callvalue()\n                {\n                    revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb()\n                }\n                abi_decode(4, calldatasize())\n                let ret := getter_fun_vault()\n                let memPos := allocate_unbounded()\n                let memEnd := abi_encode_tuple_address(memPos, ret)\n                return(memPos, sub(memEnd, memPos))\n            }\n            function revert_error_42b3090547df1d2001c96683413b8cf91c1b902ef5e3cb8d9f6f304cf7446f74()\n            { revert(0, 0) }\n            function shift_right_0_unsigned(value) -> newValue\n            { newValue := shr(0, value) }\n            function extract_from_storage_value_offset_address(slot_value) -> value\n            {\n                value := cleanup_from_storage_address(shift_right_0_unsigned(slot_value))\n            }\n            function read_from_storage_split_offset_address(slot) -> value\n            {\n                value := extract_from_storage_value_offset_address(sload(slot))\n            }\n            function convert_uint160_to_contract_IVault(value) -> converted\n            {\n                converted := convert_uint160_to_uint160(value)\n            }\n            function convert_address_to_contract_IVault(value) -> converted\n            {\n                converted := convert_uint160_to_contract_IVault(value)\n            }\n            function convert_contract_IVault_to_address(value) -> converted\n            {\n                converted := convert_uint160_to_address(value)\n            }\n            function extract_from_storage_value_offset_contract_IERC20(slot_value) -> value\n            {\n                value := cleanup_from_storage_contract_IERC20(shift_right_0_unsigned(slot_value))\n            }\n            function read_from_storage_split_offset_contract_IERC20(slot) -> value\n            {\n                value := extract_from_storage_value_offset_contract_IERC20(sload(slot))\n            }\n            function round_up_to_mul_of(value) -> result\n            {\n                result := and(add(value, 31), not(31))\n            }\n            function panic_error_0x41()\n            {\n                mstore(0, shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(0, 0x24)\n            }\n            function finalize_allocation(memPtr, size)\n            {\n                let newFreePtr := add(memPtr, round_up_to_mul_of(size))\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n                mstore(64, newFreePtr)\n            }\n            function shift_left_224(value) -> newValue\n            { newValue := shl(224, value) }\n            function abi_decode_t_uint256_fromMemory(offset, end) -> value\n            {\n                value := mload(offset)\n                validator_revert_uint256(value)\n            }\n            function abi_decode_uint256_fromMemory(headStart, dataEnd) -> value0\n            {\n                if slt(sub(dataEnd, headStart), 32)\n                {\n                    revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b()\n                }\n                let offset := 0\n                value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n            }\n            function abi_encode_address_address(headStart, value0, value1) -> tail\n            {\n                tail := add(headStart, 64)\n                abi_encode_address(value0, add(headStart, 0))\n                abi_encode_address(value1, add(headStart, 32))\n            }\n            function revert_forward()\n            {\n                let pos := allocate_unbounded()\n                returndatacopy(pos, 0, returndatasize())\n                revert(pos, returndatasize())\n            }\n            function extract_from_storage_value_offset_uint256(slot_value) -> value\n            {\n                value := cleanup_from_storage_uint256(shift_right_0_unsigned(slot_value))\n            }\n            function read_from_storage_split_offset_uint256(slot) -> value\n            {\n                value := extract_from_storage_value_offset_uint256(sload(slot))\n            }\n            function panic_error_0x11()\n            {\n                mstore(0, shl(224, 0x4e487b71))\n                mstore(4, 0x11)\n                revert(0, 0x24)\n            }\n            function checked_add_uint256(x, y) -> sum\n            {\n                x := cleanup_uint256(x)\n                y := cleanup_uint256(y)\n                sum := add(x, y)\n                if gt(x, sum) { panic_error_0x11() }\n            }\n            function cleanup_rational_by_1(value) -> cleaned\n            { cleaned := value }\n            function convert_rational_by_to_uint256(value) -> converted\n            {\n                converted := cleanup_uint256(identity(cleanup_rational_by_1(value)))\n            }\n            /// @src 0:959:993  \"uint256 constant LTV_BPS   = 5_000\"\n            function constant_LTV_BPS() -> ret\n            {\n                /// @src 0:988:993  \"5_000\"\n                let expr := 0x1388\n                let _1 := convert_rational_by_to_uint256(expr)\n                ret := _1\n            }\n            function checked_mul_uint256(x, y) -> product\n            {\n                x := cleanup_uint256(x)\n                y := cleanup_uint256(y)\n                let product_raw := mul(x, y)\n                product := cleanup_uint256(product_raw)\n                if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n            }\n            function cleanup_rational_by(value) -> cleaned\n            { cleaned := value }\n            function convert_rational_10000_by_1_to_uint256(value) -> converted\n            {\n                converted := cleanup_uint256(identity(cleanup_rational_by(value)))\n            }\n            /// @src 0:1054:1089  \"uint256 constant BPS_DENOM = 10_000\"\n            function constant_BPS_DENOM() -> ret\n            {\n                /// @src 0:1083:1089  \"10_000\"\n                let expr := 0x2710\n                let _1 := convert_rational_10000_by_1_to_uint256(expr)\n                ret := _1\n            }\n            function panic_error_0x12()\n            {\n                mstore(0, /** @src 0:803:2440  \"contract LendingEngine {...\" */ shl(224, 0x4e487b71))\n                /// @src 0:1083:1089  \"10_000\"\n                mstore(4, 0x12)\n                revert(0, 0x24)\n            }\n            function checked_div_uint256(x, y) -> r\n            {\n                x := cleanup_uint256(x)\n                y := cleanup_uint256(y)\n                if iszero(y) { panic_error_0x12() }\n                r := div(x, y)\n            }\n            function require_helper(condition)\n            {\n                if iszero(condition) { revert(0, 0) }\n            }\n            function cleanup_t_rational_by_1(value) -> cleaned\n            { cleaned := value }\n            function convert_t_rational_by_to_t_uint256(value) -> converted\n            {\n                converted := cleanup_uint256(identity(cleanup_t_rational_by_1(value)))\n            }\n            /// @src 0:1006:1040  \"uint256 constant FEE_BPS   =    50\"\n            function constant_FEE_BPS() -> ret\n            {\n                /// @src 0:1038:1040  \"50\"\n                let expr := 0x32\n                let _1 := convert_t_rational_by_to_t_uint256(expr)\n                ret := _1\n            }\n            function convert_uint160_to_contract_IERC20(value) -> converted\n            {\n                converted := convert_uint160_to_uint160(value)\n            }\n            function convert_address_to_contract_IERC20(value) -> converted\n            {\n                converted := convert_uint160_to_contract_IERC20(value)\n            }\n            function convert_contract_LendingEngine_to_address(value) -> converted\n            {\n                converted := convert_uint160_to_address(value)\n            }\n            function cleanup_bool(value) -> cleaned\n            {\n                cleaned := iszero(iszero(value))\n            }\n            function validator_revert_bool(value)\n            {\n                if iszero(eq(value, cleanup_bool(value))) { revert(0, 0) }\n            }\n            function abi_decode_t_bool_fromMemory(offset, end) -> value\n            {\n                value := mload(offset)\n                validator_revert_bool(value)\n            }\n            function abi_decode_bool_fromMemory(headStart, dataEnd) -> value0\n            {\n                if slt(sub(dataEnd, headStart), 32)\n                {\n                    revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b()\n                }\n                let offset := 0\n                value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n            }\n            function abi_encode_address_address_uint256(headStart, value0, value1, value2) -> tail\n            {\n                tail := add(headStart, 96)\n                abi_encode_address(value0, add(headStart, 0))\n                abi_encode_address(value1, add(headStart, 32))\n                abi_encode_uint256_to_uint256(value2, add(headStart, 64))\n            }\n            function extract_from_storage_value_offset_contract_IAssetConversion(slot_value) -> value\n            {\n                value := cleanup_from_storage_contract_IAssetConversion(shift_right_0_unsigned(slot_value))\n            }\n            function read_from_storage_split_offset_contract_IAssetConversion(slot) -> value\n            {\n                value := extract_from_storage_value_offset_contract_IAssetConversion(sload(slot))\n            }\n            function abi_encode_address_uint256(headStart, value0, value1) -> tail\n            {\n                tail := add(headStart, 64)\n                abi_encode_address(value0, add(headStart, 0))\n                abi_encode_uint256_to_uint256(value1, add(headStart, 32))\n            }\n            function cleanup_t_rational_by(value) -> cleaned\n            { cleaned := value }\n            function convert_rational_0_by_1_to_uint256(value) -> converted\n            {\n                converted := cleanup_uint256(identity(cleanup_t_rational_by(value)))\n            }\n            function abi_encode_rational_by(value, pos)\n            {\n                mstore(pos, convert_rational_0_by_1_to_uint256(value))\n            }\n            function abi_encode_address_address_uint256_rational_by(headStart, value0, value1, value2, value3) -> tail\n            {\n                tail := add(headStart, 128)\n                abi_encode_address(value0, add(headStart, 0))\n                abi_encode_address(value1, add(headStart, 32))\n                abi_encode_uint256_to_uint256(value2, add(headStart, 64))\n                abi_encode_rational_by(value3, add(headStart, 96))\n            }\n            function shift_left(value) -> newValue\n            { newValue := shl(0, value) }\n            function update_byte_slice_shift(value, toInsert) -> result\n            {\n                let mask := not(0)\n                toInsert := shift_left(toInsert)\n                value := and(value, not(mask))\n                result := or(value, and(toInsert, mask))\n            }\n            function convert_uint256_to_uint256(value) -> converted\n            {\n                converted := cleanup_uint256(identity(cleanup_uint256(value)))\n            }\n            function prepare_store_uint256(value) -> ret\n            { ret := value }\n            function update_storage_value_offset_uint256_to_uint256(slot, value)\n            {\n                let convertedValue := convert_uint256_to_uint256(value)\n                sstore(slot, update_byte_slice_shift(sload(slot), prepare_store_uint256(convertedValue)))\n            }\n            /// @ast-id 218 @src 0:1525:2248  \"function borrow(...\"\n            function fun_borrow(var_amount, var_feeAsset, var)\n            {\n                /// @src 0:1689:1694  \"vault\"\n                let _1 := read_from_storage_split_offset_address(0x00)\n                let expr := _1\n                /// @src 0:1682:1695  \"IVault(vault)\"\n                let expr_131_address := convert_address_to_contract_IVault(expr)\n                /// @src 0:1682:1709  \"IVault(vault).erc20Deposits\"\n                let expr_132_address := convert_contract_IVault_to_address(expr_131_address)\n                let expr_132_functionSelector := 0xa0b3f3e1\n                /// @src 0:1710:1720  \"msg.sender\"\n                let expr_1 := caller()\n                /// @src 0:1730:1745  \"collateralToken\"\n                let _2_address := read_from_storage_split_offset_contract_IERC20(0x02)\n                let expr_137_address := _2_address\n                /// @src 0:1722:1746  \"address(collateralToken)\"\n                let expr_2 := convert_contract_IERC20_to_address(expr_137_address)\n                /// @src 0:1682:1747  \"IVault(vault).erc20Deposits(msg.sender, address(collateralToken))\"\n                let _2 := allocate_unbounded()\n                mstore(_2, shift_left_224(expr_132_functionSelector))\n                let _3 := abi_encode_address_address(add(_2, 4), expr_1, expr_2)\n                let _4 := staticcall(gas(), expr_132_address, _2, sub(_3, _2), _2, 32)\n                if iszero(_4) { revert_forward() }\n                let expr_3\n                if _4\n                {\n                    let _5 := 32\n                    if gt(_5, returndatasize()) { _5 := returndatasize() }\n                    finalize_allocation(_2, _5)\n                    expr_3 := abi_decode_uint256_fromMemory(_2, add(_2, _5))\n                }\n                /// @src 0:1668:1747  \"uint256 col = IVault(vault).erc20Deposits(msg.sender, address(collateralToken))\"\n                let var_col := expr_3\n                /// @src 0:1765:1772  \"borrows\"\n                let _7_slot := 0x04\n                let expr_slot := _7_slot\n                /// @src 0:1773:1783  \"msg.sender\"\n                let expr_4 := caller()\n                /// @src 0:1765:1784  \"borrows[msg.sender]\"\n                let _6 := mapping_index_access_mapping_address_uint256_of_address(expr_slot, expr_4)\n                let _7 := read_from_storage_split_offset_uint256(_6)\n                let expr_5 := _7\n                /// @src 0:1787:1793  \"amount\"\n                let _8 := var_amount\n                let expr_6 := _8\n                /// @src 0:1765:1793  \"borrows[msg.sender] + amount\"\n                let expr_7 := checked_add_uint256(expr_5, expr_6)\n                /// @src 0:1798:1801  \"col\"\n                let _9 := var_col\n                let expr_8 := _9\n                /// @src 0:1804:1811  \"LTV_BPS\"\n                let expr_9 := constant_LTV_BPS()\n                /// @src 0:1798:1811  \"col * LTV_BPS\"\n                let expr_10 := checked_mul_uint256(expr_8, expr_9)\n                /// @src 0:1797:1812  \"(col * LTV_BPS)\"\n                let expr_11 := expr_10\n                /// @src 0:1815:1824  \"BPS_DENOM\"\n                let expr_12 := constant_BPS_DENOM()\n                /// @src 0:1797:1824  \"(col * LTV_BPS) / BPS_DENOM\"\n                let expr_13 := checked_div_uint256(expr_11, expr_12)\n                /// @src 0:1765:1824  \"borrows[msg.sender] + amount <= (col * LTV_BPS) / BPS_DENOM\"\n                let expr_14 := iszero(gt(cleanup_uint256(expr_7), cleanup_uint256(expr_13)))\n                /// @src 0:1757:1825  \"require(borrows[msg.sender] + amount <= (col * LTV_BPS) / BPS_DENOM)\"\n                require_helper(expr_14)\n                /// @src 0:1884:1890  \"amount\"\n                let _10 := var_amount\n                let expr_15 := _10\n                /// @src 0:1893:1900  \"FEE_BPS\"\n                let expr_16 := constant_FEE_BPS()\n                /// @src 0:1884:1900  \"amount * FEE_BPS\"\n                let expr_17 := checked_mul_uint256(expr_15, expr_16)\n                /// @src 0:1883:1901  \"(amount * FEE_BPS)\"\n                let expr_18 := expr_17\n                /// @src 0:1904:1913  \"BPS_DENOM\"\n                let expr_19 := constant_BPS_DENOM()\n                /// @src 0:1883:1913  \"(amount * FEE_BPS) / BPS_DENOM\"\n                let expr_20 := checked_div_uint256(expr_18, expr_19)\n                /// @src 0:1866:1913  \"uint256 feeAmt = (amount * FEE_BPS) / BPS_DENOM\"\n                let var_feeAmt := expr_20\n                /// @src 0:1930:1938  \"feeAsset\"\n                let _11 := var_feeAsset\n                let expr_21 := _11\n                /// @src 0:1923:1939  \"IERC20(feeAsset)\"\n                let expr_168_address := convert_address_to_contract_IERC20(expr_21)\n                /// @src 0:1923:1952  \"IERC20(feeAsset).transferFrom\"\n                let expr_address := convert_contract_IERC20_to_address(expr_168_address)\n                let expr_functionSelector := 0x23b872dd\n                /// @src 0:1953:1963  \"msg.sender\"\n                let expr_22 := caller()\n                /// @src 0:1973:1977  \"this\"\n                let expr_174_address := address()\n                /// @src 0:1965:1978  \"address(this)\"\n                let expr_23 := convert_contract_LendingEngine_to_address(expr_174_address)\n                /// @src 0:1980:1986  \"feeAmt\"\n                let _12 := var_feeAmt\n                let expr_24 := _12\n                /// @src 0:1923:1987  \"IERC20(feeAsset).transferFrom(msg.sender, address(this), feeAmt)\"\n                let _13 := allocate_unbounded()\n                mstore(_13, shift_left_224(expr_functionSelector))\n                let _14 := abi_encode_address_address_uint256(add(_13, 4), expr_22, expr_23, expr_24)\n                let _15 := call(gas(), expr_address, 0, _13, sub(_14, _13), _13, 32)\n                if iszero(_15) { revert_forward() }\n                let expr_25\n                if _15\n                {\n                    let _16 := 32\n                    if gt(_16, returndatasize()) { _16 := returndatasize() }\n                    finalize_allocation(_13, _16)\n                    expr_25 := abi_decode_bool_fromMemory(_13, add(_13, _16))\n                }\n                /// @src 0:2004:2012  \"feeAsset\"\n                let _17 := var_feeAsset\n                let expr_26 := _17\n                /// @src 0:1997:2013  \"IERC20(feeAsset)\"\n                let expr_181_address := convert_address_to_contract_IERC20(expr_26)\n                /// @src 0:1997:2021  \"IERC20(feeAsset).approve\"\n                let expr_182_address := convert_contract_IERC20_to_address(expr_181_address)\n                let expr_182_functionSelector := 0x095ea7b3\n                /// @src 0:2030:2034  \"conv\"\n                let _address := read_from_storage_split_offset_contract_IAssetConversion(0x01)\n                let expr_185_address := _address\n                /// @src 0:2022:2035  \"address(conv)\"\n                let expr_27 := convert_contract_IAssetConversion_to_address(expr_185_address)\n                /// @src 0:2037:2043  \"feeAmt\"\n                let _18 := var_feeAmt\n                let expr_28 := _18\n                /// @src 0:1997:2044  \"IERC20(feeAsset).approve(address(conv), feeAmt)\"\n                let _19 := allocate_unbounded()\n                mstore(_19, shift_left_224(expr_182_functionSelector))\n                let _20 := abi_encode_address_uint256(add(_19, 4), expr_27, expr_28)\n                let _21 := call(gas(), expr_182_address, 0, _19, sub(_20, _19), _19, 32)\n                if iszero(_21) { revert_forward() }\n                let expr_29\n                if _21\n                {\n                    let _22 := 32\n                    if gt(_22, returndatasize()) { _22 := returndatasize() }\n                    finalize_allocation(_19, _22)\n                    expr_29 := abi_decode_bool_fromMemory(_19, add(_19, _22))\n                }\n                /// @src 0:2054:2058  \"conv\"\n                let _29_address := read_from_storage_split_offset_contract_IAssetConversion(0x01)\n                let expr_190_address := _29_address\n                /// @src 0:2054:2073  \"conv.swapExactInput\"\n                let expr_192_address := convert_contract_IAssetConversion_to_address(expr_190_address)\n                let expr_192_functionSelector := 0xbd028142\n                /// @src 0:2074:2082  \"feeAsset\"\n                let _23 := var_feeAsset\n                let expr_30 := _23\n                /// @src 0:2092:2103  \"borrowAsset\"\n                let _31_address := read_from_storage_split_offset_contract_IERC20(0x03)\n                let expr_196_address := _31_address\n                /// @src 0:2084:2104  \"address(borrowAsset)\"\n                let expr_31 := convert_contract_IERC20_to_address(expr_196_address)\n                /// @src 0:2106:2112  \"feeAmt\"\n                let _24 := var_feeAmt\n                let expr_32 := _24\n                /// @src 0:2114:2115  \"0\"\n                let expr_33 := 0x00\n                /// @src 0:2054:2116  \"conv.swapExactInput(feeAsset, address(borrowAsset), feeAmt, 0)\"\n                let _25 := allocate_unbounded()\n                mstore(_25, shift_left_224(expr_192_functionSelector))\n                let _26 := abi_encode_address_address_uint256_rational_by(add(_25, 4), expr_30, expr_31, expr_32, expr_33)\n                let _27 := call(gas(), expr_192_address, 0, _25, sub(_26, _25), _25, 32)\n                if iszero(_27) { revert_forward() }\n                let expr_34\n                if _27\n                {\n                    let _28 := 32\n                    if gt(_28, returndatasize()) { _28 := returndatasize() }\n                    finalize_allocation(_25, _28)\n                    expr_34 := abi_decode_uint256_fromMemory(_25, add(_25, _28))\n                }\n                /// @src 0:2185:2191  \"amount\"\n                let _29 := var_amount\n                let expr_35 := _29\n                /// @src 0:2162:2169  \"borrows\"\n                let _slot := 0x04\n                let expr_202_slot := _slot\n                /// @src 0:2170:2180  \"msg.sender\"\n                let expr_36 := caller()\n                /// @src 0:2162:2181  \"borrows[msg.sender]\"\n                let _30 := mapping_index_access_mapping_address_uint256_of_address(expr_202_slot, expr_36)\n                /// @src 0:2162:2191  \"borrows[msg.sender] += amount\"\n                let _31 := read_from_storage_split_offset_uint256(_30)\n                let expr_37 := checked_add_uint256(_31, expr_35)\n                update_storage_value_offset_uint256_to_uint256(_30, expr_37)\n                /// @src 0:2201:2212  \"borrowAsset\"\n                let _41_address := read_from_storage_split_offset_contract_IERC20(0x03)\n                let expr_209_address := _41_address\n                /// @src 0:2201:2221  \"borrowAsset.transfer\"\n                let expr_211_address := convert_contract_IERC20_to_address(expr_209_address)\n                let expr_211_functionSelector := 0xa9059cbb\n                /// @src 0:2222:2232  \"msg.sender\"\n                let expr_38 := caller()\n                /// @src 0:2234:2240  \"amount\"\n                let _32 := var_amount\n                let expr_39 := _32\n                /// @src 0:2201:2241  \"borrowAsset.transfer(msg.sender, amount)\"\n                let _33 := allocate_unbounded()\n                mstore(_33, shift_left_224(expr_211_functionSelector))\n                let _34 := abi_encode_address_uint256(add(_33, 4), expr_38, expr_39)\n                let _35 := call(gas(), expr_211_address, 0, _33, sub(_34, _33), _33, 32)\n                if iszero(_35) { revert_forward() }\n                let expr_40\n                if _35\n                {\n                    let _36 := 32\n                    if gt(_36, returndatasize()) { _36 := returndatasize() }\n                    finalize_allocation(_33, _36)\n                    expr_40 := abi_decode_bool_fromMemory(_33, add(_33, _36))\n                }\n            }\n            /// @src 0:803:2440  \"contract LendingEngine {...\"\n            function checked_sub_uint256(x, y) -> diff\n            {\n                x := cleanup_uint256(x)\n                y := cleanup_uint256(y)\n                diff := sub(x, y)\n                if gt(diff, x) { panic_error_0x11() }\n            }\n            /// @ast-id 244 @src 0:2283:2438  \"function repay(uint256 amount) external {...\"\n            function fun_repay(var_amount)\n            {\n                /// @src 0:2356:2362  \"amount\"\n                let _1 := var_amount\n                let expr := _1\n                /// @src 0:2333:2340  \"borrows\"\n                let _48_slot := 0x04\n                let expr_224_slot := _48_slot\n                /// @src 0:2341:2351  \"msg.sender\"\n                let expr_1 := caller()\n                /// @src 0:2333:2352  \"borrows[msg.sender]\"\n                let _2 := mapping_index_access_mapping_address_uint256_of_address(expr_224_slot, expr_1)\n                /// @src 0:2333:2362  \"borrows[msg.sender] -= amount\"\n                let _3 := read_from_storage_split_offset_uint256(_2)\n                let expr_2 := checked_sub_uint256(_3, expr)\n                update_storage_value_offset_uint256_to_uint256(_2, expr_2)\n                /// @src 0:2372:2383  \"borrowAsset\"\n                let _51_address := read_from_storage_split_offset_contract_IERC20(0x03)\n                let expr_231_address := _51_address\n                /// @src 0:2372:2396  \"borrowAsset.transferFrom\"\n                let expr_233_address := convert_contract_IERC20_to_address(expr_231_address)\n                let expr_233_functionSelector := 0x23b872dd\n                /// @src 0:2397:2407  \"msg.sender\"\n                let expr_3 := caller()\n                /// @src 0:2417:2421  \"this\"\n                let expr_238_address := address()\n                /// @src 0:2409:2422  \"address(this)\"\n                let expr_4 := convert_contract_LendingEngine_to_address(expr_238_address)\n                /// @src 0:2424:2430  \"amount\"\n                let _4 := var_amount\n                let expr_5 := _4\n                /// @src 0:2372:2431  \"borrowAsset.transferFrom(msg.sender, address(this), amount)\"\n                let _5 := allocate_unbounded()\n                mstore(_5, shift_left_224(expr_233_functionSelector))\n                let _6 := abi_encode_address_address_uint256(add(_5, 4), expr_3, expr_4, expr_5)\n                let _7 := call(gas(), expr_233_address, 0, _5, sub(_6, _5), _5, 32)\n                if iszero(_7) { revert_forward() }\n                let expr_6\n                if _7\n                {\n                    let _8 := 32\n                    if gt(_8, returndatasize()) { _8 := returndatasize() }\n                    finalize_allocation(_5, _8)\n                    expr_6 := abi_decode_bool_fromMemory(_5, add(_5, _8))\n                }\n            }\n        }\n        data \".metadata\" hex\"a2646970667358221220785942b28e666dc7dd2f63c483523366432f8adff2348dc8e7240450905d211d64736f6c634300081c0033\"\n    }\n}\n",
					"hash": "65421184bb5bcfeef4628fd3fc62a49db27d6636c1b2f6558a54adb1a5abb243",
					"factoryDependencies": {}
				}
			}
		},
		"sources": {
			"contracts/v2/LendingEngine.sol": {
				"id": 0,
				"ast": {
					"absolutePath": "contracts/v2/LendingEngine.sol",
					"exportedSymbols": {
						"IAssetConversion": [
							58
						],
						"IERC20": [
							32
						],
						"IVault": [
							43
						],
						"LendingEngine": [
							245
						]
					},
					"id": 246,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".18"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "58:29:0",
								"text": "Minimal ERC-20 interface"
							},
							"fullyImplemented": false,
							"id": 32,
							"linearizedBaseContracts": [
								32
							],
							"name": "IERC20",
							"nameLocation": "97:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "23b872dd",
									"id": 13,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "119:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "140:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "132:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "132:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 6,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "154:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "146:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 5,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "146:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 8,
												"mutability": "mutable",
												"name": "amt",
												"nameLocation": "166:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "158:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 7,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "158:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "131:39:0"
									},
									"returnParameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "189:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 10,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "189:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "188:6:0"
									},
									"scope": 32,
									"src": "110:85:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a9059cbb",
									"id": 22,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "209:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 15,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "226:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 22,
												"src": "218:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 14,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "218:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 17,
												"mutability": "mutable",
												"name": "amt",
												"nameLocation": "238:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 22,
												"src": "230:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 16,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "230:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "217:25:0"
									},
									"returnParameters": {
										"id": 21,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 22,
												"src": "261:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 19,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "261:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "260:6:0"
									},
									"scope": 32,
									"src": "200:67:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "095ea7b3",
									"id": 31,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "281:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 27,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "297:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "289:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 23,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "289:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 26,
												"mutability": "mutable",
												"name": "amt",
												"nameLocation": "314:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "306:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 25,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "306:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "288:30:0"
									},
									"returnParameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "337:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 28,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "337:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "336:6:0"
									},
									"scope": 32,
									"src": "272:71:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 246,
							"src": "87:258:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IVault",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 33,
								"nodeType": "StructuredDocumentation",
								"src": "347:44:0",
								"text": "Vault interface for checking collateral"
							},
							"fullyImplemented": false,
							"id": 43,
							"linearizedBaseContracts": [
								43
							],
							"name": "IVault",
							"nameLocation": "401:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "a0b3f3e1",
									"id": 42,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "erc20Deposits",
									"nameLocation": "423:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 38,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "445:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "437:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "437:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "459:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "451:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "451:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "436:29:0"
									},
									"returnParameters": {
										"id": 41,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 40,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "489:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 39,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "489:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "488:9:0"
									},
									"scope": 43,
									"src": "414:84:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 246,
							"src": "391:109:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IAssetConversion",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 44,
								"nodeType": "StructuredDocumentation",
								"src": "502:24:0",
								"text": "Mock swap interface"
							},
							"fullyImplemented": false,
							"id": 58,
							"linearizedBaseContracts": [
								58
							],
							"name": "IAssetConversion",
							"nameLocation": "536:16:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "bd028142",
									"id": 57,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactInput",
									"nameLocation": "568:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 46,
												"mutability": "mutable",
												"name": "tokenIn",
												"nameLocation": "600:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 57,
												"src": "592:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 45,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "592:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 48,
												"mutability": "mutable",
												"name": "tokenOut",
												"nameLocation": "625:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 57,
												"src": "617:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 47,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "617:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 50,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "651:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 57,
												"src": "643:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 49,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "643:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 57,
												"src": "669:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "669:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "582:111:0"
									},
									"returnParameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 55,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 57,
												"src": "712:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 54,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "712:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "711:9:0"
									},
									"scope": 58,
									"src": "559:162:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 246,
							"src": "526:197:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "LendingEngine",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 59,
								"nodeType": "StructuredDocumentation",
								"src": "725:78:0",
								"text": "@notice Borrow up to 50% LTV, pay 0.5% fee in any asset via on-chain swap"
							},
							"fullyImplemented": true,
							"id": 245,
							"linearizedBaseContracts": [
								245
							],
							"name": "LendingEngine",
							"nameLocation": "812:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "fbfa77cf",
									"id": 61,
									"mutability": "mutable",
									"name": "vault",
									"nameLocation": "847:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 245,
									"src": "832:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 60,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "832:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "08b36870",
									"id": 64,
									"mutability": "mutable",
									"name": "conv",
									"nameLocation": "882:4:0",
									"nodeType": "VariableDeclaration",
									"scope": 245,
									"src": "858:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IAssetConversion_$58",
										"typeString": "contract IAssetConversion"
									},
									"typeName": {
										"id": 63,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 62,
											"name": "IAssetConversion",
											"nameLocations": [
												"858:16:0"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 58,
											"src": "858:16:0"
										},
										"referencedDeclaration": 58,
										"src": "858:16:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IAssetConversion_$58",
											"typeString": "contract IAssetConversion"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "b2016bd4",
									"id": 67,
									"mutability": "mutable",
									"name": "collateralToken",
									"nameLocation": "906:15:0",
									"nodeType": "VariableDeclaration",
									"scope": 245,
									"src": "892:29:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$32",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 66,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 65,
											"name": "IERC20",
											"nameLocations": [
												"892:6:0"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 32,
											"src": "892:6:0"
										},
										"referencedDeclaration": 32,
										"src": "892:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$32",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "446456e5",
									"id": 70,
									"mutability": "mutable",
									"name": "borrowAsset",
									"nameLocation": "941:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 245,
									"src": "927:25:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$32",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 69,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 68,
											"name": "IERC20",
											"nameLocations": [
												"927:6:0"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 32,
											"src": "927:6:0"
										},
										"referencedDeclaration": 32,
										"src": "927:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$32",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 73,
									"mutability": "constant",
									"name": "LTV_BPS",
									"nameLocation": "976:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 245,
									"src": "959:34:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 71,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "959:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "355f303030",
										"id": 72,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "988:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_5000_by_1",
											"typeString": "int_const 5000"
										},
										"value": "5_000"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 76,
									"mutability": "constant",
									"name": "FEE_BPS",
									"nameLocation": "1023:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 245,
									"src": "1006:34:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 74,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1006:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3530",
										"id": 75,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1038:2:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_50_by_1",
											"typeString": "int_const 50"
										},
										"value": "50"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 79,
									"mutability": "constant",
									"name": "BPS_DENOM",
									"nameLocation": "1071:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 245,
									"src": "1054:35:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 77,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1054:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31305f303030",
										"id": 78,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1083:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10000_by_1",
											"typeString": "int_const 10000"
										},
										"value": "10_000"
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "54a5706f",
									"id": 83,
									"mutability": "mutable",
									"name": "borrows",
									"nameLocation": "1131:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 245,
									"src": "1096:42:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 82,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 80,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1104:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1096:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 81,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1115:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 116,
										"nodeType": "Block",
										"src": "1264:178:0",
										"statements": [
											{
												"expression": {
													"id": 96,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 94,
														"name": "vault",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 61,
														"src": "1274:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 95,
														"name": "_vault",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 85,
														"src": "1291:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1274:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 97,
												"nodeType": "ExpressionStatement",
												"src": "1274:23:0"
											},
											{
												"expression": {
													"id": 102,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 98,
														"name": "conv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 64,
														"src": "1307:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IAssetConversion_$58",
															"typeString": "contract IAssetConversion"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 100,
																"name": "_conv",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 87,
																"src": "1341:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 99,
															"name": "IAssetConversion",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 58,
															"src": "1324:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IAssetConversion_$58_$",
																"typeString": "type(contract IAssetConversion)"
															}
														},
														"id": 101,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1324:23:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IAssetConversion_$58",
															"typeString": "contract IAssetConversion"
														}
													},
													"src": "1307:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IAssetConversion_$58",
														"typeString": "contract IAssetConversion"
													}
												},
												"id": 103,
												"nodeType": "ExpressionStatement",
												"src": "1307:40:0"
											},
											{
												"expression": {
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 104,
														"name": "collateralToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 67,
														"src": "1357:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$32",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 106,
																"name": "_collateral",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 89,
																"src": "1381:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 105,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 32,
															"src": "1374:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$32_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 107,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1374:19:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$32",
															"typeString": "contract IERC20"
														}
													},
													"src": "1357:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$32",
														"typeString": "contract IERC20"
													}
												},
												"id": 109,
												"nodeType": "ExpressionStatement",
												"src": "1357:36:0"
											},
											{
												"expression": {
													"id": 114,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 110,
														"name": "borrowAsset",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 70,
														"src": "1403:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$32",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 112,
																"name": "_borrow",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 91,
																"src": "1427:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 111,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 32,
															"src": "1420:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$32_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 113,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1420:15:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$32",
															"typeString": "contract IERC20"
														}
													},
													"src": "1403:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$32",
														"typeString": "contract IERC20"
													}
												},
												"id": 115,
												"nodeType": "ExpressionStatement",
												"src": "1403:32:0"
											}
										]
									},
									"id": 117,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 92,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "_vault",
												"nameLocation": "1174:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 117,
												"src": "1166:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 84,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1166:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 87,
												"mutability": "mutable",
												"name": "_conv",
												"nameLocation": "1198:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 117,
												"src": "1190:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 86,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1190:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 89,
												"mutability": "mutable",
												"name": "_collateral",
												"nameLocation": "1221:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 117,
												"src": "1213:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 88,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1213:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 91,
												"mutability": "mutable",
												"name": "_borrow",
												"nameLocation": "1250:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 117,
												"src": "1242:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 90,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1242:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1156:107:0"
									},
									"returnParameters": {
										"id": 93,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1264:0:0"
									},
									"scope": 245,
									"src": "1145:297:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 217,
										"nodeType": "Block",
										"src": "1634:614:0",
										"statements": [
											{
												"assignments": [
													128
												],
												"declarations": [
													{
														"constant": false,
														"id": 128,
														"mutability": "mutable",
														"name": "col",
														"nameLocation": "1676:3:0",
														"nodeType": "VariableDeclaration",
														"scope": 217,
														"src": "1668:11:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 127,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1668:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 140,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 133,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1710:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 134,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1714:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1710:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 137,
																	"name": "collateralToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 67,
																	"src": "1730:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$32",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$32",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 136,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1722:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 135,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1722:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 138,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1722:24:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 130,
																	"name": "vault",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 61,
																	"src": "1689:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 129,
																"name": "IVault",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 43,
																"src": "1682:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IVault_$43_$",
																	"typeString": "type(contract IVault)"
																}
															},
															"id": 131,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1682:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IVault_$43",
																"typeString": "contract IVault"
															}
														},
														"id": 132,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1696:13:0",
														"memberName": "erc20Deposits",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 42,
														"src": "1682:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view external returns (uint256)"
														}
													},
													"id": 139,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1682:65:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1668:79:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 154,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 147,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 142,
																		"name": "borrows",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 83,
																		"src": "1765:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 145,
																	"indexExpression": {
																		"expression": {
																			"id": 143,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "1773:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 144,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1777:6:0",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "1773:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1765:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 146,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 120,
																	"src": "1787:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1765:28:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 153,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 150,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 148,
																				"name": "col",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 128,
																				"src": "1798:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"id": 149,
																				"name": "LTV_BPS",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 73,
																				"src": "1804:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "1798:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 151,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1797:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 152,
																	"name": "BPS_DENOM",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 79,
																	"src": "1815:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1797:27:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1765:59:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 141,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1757:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 155,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1757:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 156,
												"nodeType": "ExpressionStatement",
												"src": "1757:68:0"
											},
											{
												"assignments": [
													158
												],
												"declarations": [
													{
														"constant": false,
														"id": 158,
														"mutability": "mutable",
														"name": "feeAmt",
														"nameLocation": "1874:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 217,
														"src": "1866:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 157,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1866:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 165,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 164,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 161,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 159,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 120,
																	"src": "1884:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 160,
																	"name": "FEE_BPS",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 76,
																	"src": "1893:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1884:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 162,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1883:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 163,
														"name": "BPS_DENOM",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 79,
														"src": "1904:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1883:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1866:47:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 170,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1953:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 171,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1957:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1953:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 174,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1973:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_LendingEngine_$245",
																		"typeString": "contract LendingEngine"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_LendingEngine_$245",
																		"typeString": "contract LendingEngine"
																	}
																],
																"id": 173,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1965:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 172,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1965:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 175,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1965:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 176,
															"name": "feeAmt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 158,
															"src": "1980:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 167,
																	"name": "feeAsset",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 122,
																	"src": "1930:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 166,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 32,
																"src": "1923:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$32_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 168,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1923:16:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$32",
																"typeString": "contract IERC20"
															}
														},
														"id": 169,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1940:12:0",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 13,
														"src": "1923:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 177,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1923:64:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 178,
												"nodeType": "ExpressionStatement",
												"src": "1923:64:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 185,
																	"name": "conv",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 64,
																	"src": "2030:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IAssetConversion_$58",
																		"typeString": "contract IAssetConversion"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IAssetConversion_$58",
																		"typeString": "contract IAssetConversion"
																	}
																],
																"id": 184,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2022:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 183,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2022:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 186,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2022:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 187,
															"name": "feeAmt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 158,
															"src": "2037:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 180,
																	"name": "feeAsset",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 122,
																	"src": "2004:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 179,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 32,
																"src": "1997:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$32_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 181,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1997:16:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$32",
																"typeString": "contract IERC20"
															}
														},
														"id": 182,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2014:7:0",
														"memberName": "approve",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 31,
														"src": "1997:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 188,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1997:47:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 189,
												"nodeType": "ExpressionStatement",
												"src": "1997:47:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 193,
															"name": "feeAsset",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 122,
															"src": "2074:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 196,
																	"name": "borrowAsset",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 70,
																	"src": "2092:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$32",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$32",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 195,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2084:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 194,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2084:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 197,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2084:20:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 198,
															"name": "feeAmt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 158,
															"src": "2106:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "30",
															"id": 199,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2114:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"expression": {
															"id": 190,
															"name": "conv",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 64,
															"src": "2054:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IAssetConversion_$58",
																"typeString": "contract IAssetConversion"
															}
														},
														"id": 192,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2059:14:0",
														"memberName": "swapExactInput",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 57,
														"src": "2054:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (address,address,uint256,uint256) external returns (uint256)"
														}
													},
													"id": 200,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2054:62:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 201,
												"nodeType": "ExpressionStatement",
												"src": "2054:62:0"
											},
											{
												"expression": {
													"id": 207,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 202,
															"name": "borrows",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 83,
															"src": "2162:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 205,
														"indexExpression": {
															"expression": {
																"id": 203,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2170:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 204,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2174:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2170:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2162:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 206,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 120,
														"src": "2185:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2162:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 208,
												"nodeType": "ExpressionStatement",
												"src": "2162:29:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 212,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2222:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 213,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2226:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2222:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 214,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 120,
															"src": "2234:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 209,
															"name": "borrowAsset",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 70,
															"src": "2201:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$32",
																"typeString": "contract IERC20"
															}
														},
														"id": 211,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2213:8:0",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 22,
														"src": "2201:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 215,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2201:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 216,
												"nodeType": "ExpressionStatement",
												"src": "2201:40:0"
											}
										]
									},
									"documentation": {
										"id": 118,
										"nodeType": "StructuredDocumentation",
										"src": "1448:72:0",
										"text": "@notice Pulls feeAsset, swaps feeâ†’borrowAsset, then sends `amount`"
									},
									"functionSelector": "0c28d13e",
									"id": 218,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "borrow",
									"nameLocation": "1534:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 125,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 120,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1558:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 218,
												"src": "1550:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 119,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1550:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 122,
												"mutability": "mutable",
												"name": "feeAsset",
												"nameLocation": "1582:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 218,
												"src": "1574:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 121,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1574:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 124,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 218,
												"src": "1600:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 123,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1600:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1540:84:0"
									},
									"returnParameters": {
										"id": 126,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1634:0:0"
									},
									"scope": 245,
									"src": "1525:723:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 243,
										"nodeType": "Block",
										"src": "2323:115:0",
										"statements": [
											{
												"expression": {
													"id": 229,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 224,
															"name": "borrows",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 83,
															"src": "2333:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 227,
														"indexExpression": {
															"expression": {
																"id": 225,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2341:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 226,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2345:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2341:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2333:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 228,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 221,
														"src": "2356:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2333:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 230,
												"nodeType": "ExpressionStatement",
												"src": "2333:29:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 234,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2397:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 235,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2401:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2397:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 238,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2417:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_LendingEngine_$245",
																		"typeString": "contract LendingEngine"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_LendingEngine_$245",
																		"typeString": "contract LendingEngine"
																	}
																],
																"id": 237,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2409:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 236,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2409:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 239,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2409:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 240,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 221,
															"src": "2424:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 231,
															"name": "borrowAsset",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 70,
															"src": "2372:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$32",
																"typeString": "contract IERC20"
															}
														},
														"id": 233,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2384:12:0",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 13,
														"src": "2372:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 241,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2372:59:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 242,
												"nodeType": "ExpressionStatement",
												"src": "2372:59:0"
											}
										]
									},
									"documentation": {
										"id": 219,
										"nodeType": "StructuredDocumentation",
										"src": "2254:24:0",
										"text": "@notice Simple repay"
									},
									"functionSelector": "371fd8e6",
									"id": 244,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "repay",
									"nameLocation": "2292:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 222,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2306:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 244,
												"src": "2298:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 220,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2298:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2297:16:0"
									},
									"returnParameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2323:0:0"
									},
									"scope": 245,
									"src": "2283:155:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 246,
							"src": "803:1637:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:2409:0"
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": null,
				"formattedMessage": "\nWarning: It looks like you are using '<address payable>.send/transfer(<X>)'.\nUsing '<address payable>.send/transfer(<X>)' is deprecated and strongly discouraged!\nThe resolc compiler uses a heuristic to detect '<address payable>.send/transfer(<X>)' calls,\nwhich disables call re-entrancy and supplies all remaining gas instead of the 2300 gas stipend.\nHowever, detection is not guaranteed. You are advised to carefully test this, employ\nre-entrancy guards or use the withdrawal pattern instead!\nLearn more on https://docs.soliditylang.org/en/latest/security-considerations.html#reentrancy\nand https://docs.soliditylang.org/en/latest/common-patterns.html#withdrawal-from-contracts\n\n--> contracts/v2/LendingEngine.sol\n",
				"message": "\nWarning: It looks like you are using '<address payable>.send/transfer(<X>)'.\nUsing '<address payable>.send/transfer(<X>)' is deprecated and strongly discouraged!\nThe resolc compiler uses a heuristic to detect '<address payable>.send/transfer(<X>)' calls,\nwhich disables call re-entrancy and supplies all remaining gas instead of the 2300 gas stipend.\nHowever, detection is not guaranteed. You are advised to carefully test this, employ\nre-entrancy guards or use the withdrawal pattern instead!\nLearn more on https://docs.soliditylang.org/en/latest/security-considerations.html#reentrancy\nand https://docs.soliditylang.org/en/latest/common-patterns.html#withdrawal-from-contracts\n",
				"severity": "warning",
				"sourceLocation": {
					"file": "0",
					"start": 2201,
					"end": 2241
				},
				"type": "Warning"
			}
		],
		"version": "0.8.28",
		"long_version": "0.8.28+commit.7893614a.Emscripten.clang",
		"revive_version": "0.1.0-dev.12+commit.66f9a4d.llvm-18.1.8"
	}
}
{
	"id": "0fb4f2534dbc928176fb25fe95181ffc",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.28",
	"solcLongVersion": "0.8.28+commit.7893614a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/v2/MockAssetConversion.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.18;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\n\n/// @notice A 1:1 “swap” mock for fee‐asset → borrow‐asset conversion\ncontract MockAssetConversion {\n    /// @dev Swaps `amountIn` of tokenIn for tokenOut at 1:1, honoring `minAmountOut` stub\n    function swapExactInput(\n        address tokenIn,\n        address tokenOut,\n        uint256 amountIn,\n        uint256 /* minAmountOut */\n    ) external returns (uint256 amountOut) {\n        // pull feeAsset\n        require(IERC20(tokenIn).transferFrom(msg.sender, address(this), amountIn),\n            \"transferFrom failed\"\n        );\n        // send back same amount of tokenOut\n        require(IERC20(tokenOut).transfer(msg.sender, amountIn),\n            \"transfer failed\"\n        );\n        return amountIn;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.deployedBytecode",
						"evm.methodIdentifiers"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":false},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					},
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"evm": {
						"bytecode": {
							"object": ""
						},
						"deployedBytecode": {
							"object": ""
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"irOptimized": ""
				}
			},
			"contracts/v2/MockAssetConversion.sol": {
				"MockAssetConversion": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenIn",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenOut",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "swapExactInput",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"metadata": {
						"optimizer_settings": {
							"is_debug_logging_enabled": false,
							"is_fallback_to_size_enabled": false,
							"is_verify_each_enabled": false,
							"level_back_end": "Aggressive",
							"level_middle_end": "Aggressive",
							"level_middle_end_size": "Zero"
						},
						"revive_pallet_version": null,
						"revive_version": "0.1.0-dev.12+commit.66f9a4d.llvm-18.1.8",
						"solc_metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"swapExactInput\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"swapExactInput(address,address,uint256,uint256)\":{\"details\":\"Swaps `amountIn` of tokenIn for tokenOut at 1:1, honoring `minAmountOut` stub\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"A 1:1 \\u201cswap\\u201d mock for fee\\u2010asset \\u2192 borrow\\u2010asset conversion\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/v2/MockAssetConversion.sol\":\"MockAssetConversion\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":false},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"contracts/v2/MockAssetConversion.sol\":{\"keccak256\":\"0x8585a8c30537a5f03f1e0e2a616f459c509291c86f593e19843e10ec3705ad7f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9173a0826a0375b7bd3a1fa46f33fab1e41926f9719125de48335d17774fe35c\",\"dweb:/ipfs/QmRNQW3iuVTSAf5rvQZZoc45v7zjmXhpjQPJeiwewqCVJs\"]}},\"version\":1}",
						"solc_version": "0.8.28+commit.7893614a.Emscripten.clang"
					},
					"devdoc": {
						"kind": "dev",
						"methods": {
							"swapExactInput(address,address,uint256,uint256)": {
								"details": "Swaps `amountIn` of tokenIn for tokenOut at 1:1, honoring `minAmountOut` stub"
							}
						},
						"version": 1
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "A 1:1 “swap” mock for fee‐asset → borrow‐asset conversion",
						"version": 1
					},
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"evm": {
						"assembly": "// RO data = 0/0 bytes\n// RW data = 0/65552 bytes\n// Stack size = 16384 bytes\n\n// Instructions = 3475\n// Code size = 10750 bytes\n\n      : @0 (gas: 2)\n     0: i32 a2 = a0 >> 0x10\n     3: jump @6 if a2 != 0\n      : @1 (gas: 2)\n     6: a2 = 0x10001\n    11: jump @6 if a1 >=u a2\n      : @2 (gas: 4)\n    14: a1 = a1 + a0\n    17: i32 a1 = a1 + 0x1f\n    20: a1 = a1 & 0xffffffffffffffe0\n    23: jump @7 if a1 >=u 65537\n      : @3 (gas: 2)\n    29: a3 = i32 [0x20000]\n    34: jump @5 if a3 >=u a1\n      : @4 (gas: 4)\n    37: u32 [0x20000] = a1\n    42: a1 = 0x20010\n    47: a0 = a0 + a1\n    50: ret\n      : @5 (gas: 3)\n    52: a1 = 0x20010\n    57: a0 = a0 + a1\n    60: ret\n      : @6 (gas: 1)\n    62: trap\n      : @7 (gas: 1)\n    63: trap\n      : @8 (gas: 13)\n    64: sp = sp + 0xffffffffffffffd8\n    67: u64 [sp + 0x20] = ra\n    70: u64 [sp + 0x18] = s0\n    73: u64 [sp + 0x10] = s1\n    76: a2 = u64 [a1]\n    78: u64 [sp + 0x8] = a2\n    81: a2 = u64 [a1 + 0x8]\n    84: u64 [sp] = a2\n    86: s0 = u64 [a1 + 0x10]\n    89: s1 = u64 [a1 + 0x18]\n    92: i32 a0 = a0 + 0\n    94: a1 = 0x20\n    97: ra = 2, jump @0\n      : @9 [@dyn 1] (gas: 71)\n   101: a1 = reverse s1\n   103: a2 = reverse s0\n   105: a3 = u64 [sp]\n   107: a3 = reverse a3\n   109: a4 = u64 [sp + 0x8]\n   112: a4 = reverse a4\n   114: u8 [a0 + 0x18] = a4\n   117: u8 [a0 + 0x10] = a3\n   120: u8 [a0 + 0x8] = a2\n   123: u8 [a0] = a1\n   125: a5 = a4 >> 0x38\n   128: u8 [a0 + 0x1f] = a5\n   131: a5 = a4 >> 0x30\n   134: u8 [a0 + 0x1e] = a5\n   137: a5 = a4 >> 0x28\n   140: u8 [a0 + 0x1d] = a5\n   143: a5 = a4 >> 0x20\n   146: u8 [a0 + 0x1c] = a5\n   149: a5 = a4 >> 0x18\n   152: u8 [a0 + 0x1b] = a5\n   155: a5 = a4 >> 0x10\n   158: u8 [a0 + 0x1a] = a5\n   161: a4 = a4 >> 0x8\n   164: u8 [a0 + 0x19] = a4\n   167: a4 = a3 >> 0x38\n   170: u8 [a0 + 0x17] = a4\n   173: a4 = a3 >> 0x30\n   176: u8 [a0 + 0x16] = a4\n   179: a4 = a3 >> 0x28\n   182: u8 [a0 + 0x15] = a4\n   185: a4 = a3 >> 0x20\n   188: u8 [a0 + 0x14] = a4\n   191: a4 = a3 >> 0x18\n   194: u8 [a0 + 0x13] = a4\n   197: a4 = a3 >> 0x10\n   200: u8 [a0 + 0x12] = a4\n   203: a3 = a3 >> 0x8\n   206: u8 [a0 + 0x11] = a3\n   209: a3 = a2 >> 0x38\n   212: u8 [a0 + 0xf] = a3\n   215: a3 = a2 >> 0x30\n   218: u8 [a0 + 0xe] = a3\n   221: a3 = a2 >> 0x28\n   224: u8 [a0 + 0xd] = a3\n   227: a3 = a2 >> 0x20\n   230: u8 [a0 + 0xc] = a3\n   233: a3 = a2 >> 0x18\n   236: u8 [a0 + 0xb] = a3\n   239: a3 = a2 >> 0x10\n   242: u8 [a0 + 0xa] = a3\n   245: a2 = a2 >> 0x8\n   248: u8 [a0 + 0x9] = a2\n   251: a2 = a1 >> 0x38\n   254: u8 [a0 + 0x7] = a2\n   257: a2 = a1 >> 0x30\n   260: u8 [a0 + 0x6] = a2\n   263: a2 = a1 >> 0x28\n   266: u8 [a0 + 0x5] = a2\n   269: a2 = a1 >> 0x20\n   272: u8 [a0 + 0x4] = a2\n   275: a2 = a1 >> 0x18\n   278: u8 [a0 + 0x3] = a2\n   281: a2 = a1 >> 0x10\n   284: u8 [a0 + 0x2] = a2\n   287: a1 = a1 >> 0x8\n   290: u8 [a0 + 0x1] = a1\n   293: ra = u64 [sp + 0x20]\n   296: s0 = u64 [sp + 0x18]\n   299: s1 = u64 [sp + 0x10]\n   302: sp = sp + 0x28\n   305: ret\n      : @10 (gas: 6)\n   307: sp = sp + 0xfffffffffffffff0\n   310: u64 [sp + 0x8] = ra\n   313: u64 [sp] = s0\n   315: s0 = a0 & 0x1\n   318: ecalli 4 // 'call_data_size'\n   320: fallthrough\n      : @11 (gas: 2)\n   321: u32 [0x20004] = a0\n   326: jump @13 if s0 == 0\n      : @12 (gas: 1)\n   329: ra = 4, jump @14\n      : @13 [@dyn 2] (gas: 1)\n   333: ra = 6, jump @28\n      : @14 [@dyn 3] (gas: 9)\n   338: sp = sp + 0xffffffffffffffc0\n   341: u64 [sp + 0x38] = ra\n   344: u64 [sp + 0x30] = s0\n   347: u64 [sp + 0x28] = s1\n   350: s0 = sp + 0x40\n   353: sp = sp & 0xffffffffffffffe0\n   356: a0 = 0x40\n   359: a1 = 0x20\n   362: ra = 8, jump @0\n      : @15 [@dyn 4] (gas: 39)\n   367: u8 [a0 + 31] = 0x80\n   372: u8 [a0 + 30] = 0\n   375: u8 [a0 + 29] = 0\n   378: u8 [a0 + 28] = 0\n   381: u8 [a0 + 27] = 0\n   384: u8 [a0 + 26] = 0\n   387: u8 [a0 + 25] = 0\n   390: u8 [a0 + 24] = 0\n   393: u8 [a0 + 23] = 0\n   396: u8 [a0 + 22] = 0\n   399: u8 [a0 + 21] = 0\n   402: u8 [a0 + 20] = 0\n   405: u8 [a0 + 19] = 0\n   408: u8 [a0 + 18] = 0\n   411: u8 [a0 + 17] = 0\n   414: u8 [a0 + 16] = 0\n   417: u8 [a0 + 15] = 0\n   420: u8 [a0 + 14] = 0\n   423: u8 [a0 + 13] = 0\n   426: u8 [a0 + 12] = 0\n   429: u8 [a0 + 11] = 0\n   432: u8 [a0 + 10] = 0\n   435: u8 [a0 + 9] = 0\n   438: u8 [a0 + 8] = 0\n   441: u8 [a0 + 7] = 0\n   444: u8 [a0 + 6] = 0\n   447: u8 [a0 + 5] = 0\n   450: u8 [a0 + 4] = 0\n   453: u8 [a0 + 3] = 0\n   456: u8 [a0 + 2] = 0\n   459: u8 [a0 + 1] = 0\n   462: u8 [a0 + 0] = 0\n   464: u64 [sp + 24] = 0\n   467: u64 [sp + 0] = 0\n   469: u64 [sp + 8] = 0\n   472: u64 [sp + 16] = 0\n   475: i32 a0 = sp + 0\n   477: ecalli 11 // 'value_transferred'\n   479: fallthrough\n      : @16 (gas: 8)\n   480: a0 = u64 [sp + 0x10]\n   483: a1 = u64 [sp + 0x18]\n   486: a2 = u64 [sp + 0x8]\n   489: a3 = u64 [sp]\n   491: a1 = a1 | a2\n   494: a0 = a0 | a3\n   497: a0 = a0 | a1\n   500: jump @20 if a0 != 0\n      : @17 (gas: 3)\n   504: a0 = 0x40\n   507: a1 = 0x20\n   510: ra = 10, jump @0\n      : @18 [@dyn 5] (gas: 100)\n   515: a1 = u8 [a0 + 0x11]\n   518: a2 = u8 [a0 + 0x10]\n   521: a3 = u8 [a0 + 0x12]\n   524: a4 = u8 [a0 + 0x13]\n   527: a1 = a1 << 0x8\n   530: a1 = a1 | a2\n   533: a3 = a3 << 0x10\n   536: a4 = a4 << 0x18\n   539: a3 = a3 | a4\n   542: a1 = a1 | a3\n   545: a2 = u8 [a0 + 0x15]\n   548: a3 = u8 [a0 + 0x14]\n   551: a4 = u8 [a0 + 0x16]\n   554: a5 = u8 [a0 + 0x17]\n   557: a2 = a2 << 0x8\n   560: a2 = a2 | a3\n   563: a4 = a4 << 0x10\n   566: a5 = a5 << 0x18\n   569: a4 = a4 | a5\n   572: a2 = a2 | a4\n   575: a2 = a2 << 0x20\n   578: t0 = a2 | a1\n   581: a2 = u8 [a0 + 0x1]\n   584: a3 = u8 [a0]\n   586: a4 = u8 [a0 + 0x2]\n   589: a5 = u8 [a0 + 0x3]\n   592: a2 = a2 << 0x8\n   595: a2 = a2 | a3\n   598: a4 = a4 << 0x10\n   601: a5 = a5 << 0x18\n   604: a4 = a4 | a5\n   607: a2 = a2 | a4\n   610: a3 = u8 [a0 + 0x5]\n   613: a4 = u8 [a0 + 0x4]\n   616: a5 = u8 [a0 + 0x6]\n   619: s1 = u8 [a0 + 0x7]\n   622: a3 = a3 << 0x8\n   625: a3 = a3 | a4\n   628: a5 = a5 << 0x10\n   631: s1 = s1 << 0x18\n   634: a5 = a5 | s1\n   637: a3 = a3 | a5\n   640: a3 = a3 << 0x20\n   643: a2 = a2 | a3\n   646: a3 = u8 [a0 + 0x19]\n   649: a4 = u8 [a0 + 0x18]\n   652: a5 = u8 [a0 + 0x1a]\n   655: s1 = u8 [a0 + 0x1b]\n   658: a3 = a3 << 0x8\n   661: a3 = a3 | a4\n   664: a5 = a5 << 0x10\n   667: s1 = s1 << 0x18\n   670: a5 = a5 | s1\n   673: a3 = a3 | a5\n   676: a4 = u8 [a0 + 0x1d]\n   679: a5 = u8 [a0 + 0x1c]\n   682: s1 = u8 [a0 + 0x1e]\n   685: a1 = u8 [a0 + 0x1f]\n   688: a4 = a4 << 0x8\n   691: a4 = a4 | a5\n   694: s1 = s1 << 0x10\n   697: a1 = a1 << 0x18\n   700: a1 = a1 | s1\n   703: a1 = a1 | a4\n   706: a1 = a1 << 0x20\n   709: a3 = a3 | a1\n   712: a1 = u8 [a0 + 0x9]\n   715: a4 = u8 [a0 + 0x8]\n   718: a5 = u8 [a0 + 0xa]\n   721: s1 = u8 [a0 + 0xb]\n   724: a1 = a1 << 0x8\n   727: a1 = a1 | a4\n   730: a5 = a5 << 0x10\n   733: s1 = s1 << 0x18\n   736: a5 = a5 | s1\n   739: a1 = a1 | a5\n   742: a4 = u8 [a0 + 0xd]\n   745: a5 = u8 [a0 + 0xc]\n   748: s1 = u8 [a0 + 0xe]\n   751: a0 = u8 [a0 + 0xf]\n   754: a4 = a4 << 0x8\n   757: a4 = a4 | a5\n   760: s1 = s1 << 0x10\n   763: a0 = a0 << 0x18\n   766: a0 = a0 | s1\n   769: a0 = a0 | a4\n   772: a0 = a0 << 0x20\n   775: a0 = a0 | a1\n   778: a0 = reverse a0\n   780: s1 = reverse a3\n   782: a1 = reverse a2\n   784: a2 = reverse t0\n   786: a1 = a1 | a2\n   789: a2 = s1 | a0\n   792: a2 = a2 | a1\n   795: a2 = a2 >> 0x20\n   798: a0 = a0 | a1\n   801: a0 = a0 << 0x20\n   804: a0 = a0 | a2\n   807: jump @22 if a0 == 0\n      : @19 (gas: 1)\n   810: trap\n      : @20 (gas: 3)\n   811: a0 = 0\n   813: a1 = 0\n   815: ra = 12, jump @0\n      : @21 [@dyn 6] (gas: 5)\n   820: i32 a1 = a0 + 0\n   822: a0 = 0x1\n   825: a2 = 0\n   827: ecalli 9 // 'seal_return'\n   829: fallthrough\n      : @22 (gas: 4)\n   830: i32 s1 = s1 + 0\n   832: a0 = s1\n   834: a1 = 0\n   836: ra = 14, jump @0\n      : @23 [@dyn 7] (gas: 5)\n   841: i32 a0 = a0 + 0\n   843: a1 = 0\n   845: a2 = 0\n   847: ecalli 2 // 'call_data_copy'\n   849: fallthrough\n      : @24 (gas: 2)\n   850: a1 = i32 [0x20008]\n   855: jump @26 if a1 == 0\n      : @25 (gas: 4)\n   858: a0 = 0x30010\n   863: i32 a0 = a0 + 0\n   865: ecalli 10 // 'set_immutable_data'\n   867: fallthrough\n      : @26 (gas: 3)\n   868: a0 = s1\n   870: a1 = 0\n   872: ra = 16, jump @0\n      : @27 [@dyn 8] (gas: 6)\n   877: i32 a1 = a0 + 0\n   879: a0 = 0\n   881: a2 = 0\n   883: ra = 0x12\n   886: ecalli 9 // 'seal_return'\n   888: fallthrough\n      : @28 [@dyn 9] (gas: 8)\n   889: sp = sp + 0xffffffffffffffc0\n   892: u64 [sp + 0x38] = ra\n   895: u64 [sp + 0x30] = s0\n   898: s0 = sp + 0x40\n   901: sp = sp & 0xffffffffffffffe0\n   904: a0 = 0x40\n   907: a1 = 0x20\n   910: ra = 20, jump @0\n      : @29 [@dyn 10] (gas: 34)\n   915: u8 [a0 + 31] = 0x80\n   920: u8 [a0 + 30] = 0\n   923: u8 [a0 + 29] = 0\n   926: u8 [a0 + 28] = 0\n   929: u8 [a0 + 27] = 0\n   932: u8 [a0 + 26] = 0\n   935: u8 [a0 + 25] = 0\n   938: u8 [a0 + 24] = 0\n   941: u8 [a0 + 23] = 0\n   944: u8 [a0 + 22] = 0\n   947: u8 [a0 + 21] = 0\n   950: u8 [a0 + 20] = 0\n   953: u8 [a0 + 19] = 0\n   956: u8 [a0 + 18] = 0\n   959: u8 [a0 + 17] = 0\n   962: u8 [a0 + 16] = 0\n   965: u8 [a0 + 15] = 0\n   968: u8 [a0 + 14] = 0\n   971: u8 [a0 + 13] = 0\n   974: u8 [a0 + 12] = 0\n   977: u8 [a0 + 11] = 0\n   980: u8 [a0 + 10] = 0\n   983: u8 [a0 + 9] = 0\n   986: u8 [a0 + 8] = 0\n   989: u8 [a0 + 7] = 0\n   992: u8 [a0 + 3] = 0\n   995: u8 [a0 + 2] = 0\n   998: u8 [a0 + 1] = 0\n  1001: u8 [a0 + 0] = 0\n  1003: a1 = i32 [0x20004]\n  1008: u8 [a0 + 6] = 0\n  1011: u8 [a0 + 5] = 0\n  1014: u8 [a0 + 4] = 0\n  1017: jump @33 if a1 <u 4\n      : @30 (gas: 4)\n  1021: i32 a0 = sp + 0\n  1023: a1 = 0\n  1025: ecalli 3 // 'call_data_load'\n  1027: fallthrough\n      : @31 (gas: 4)\n  1028: a0 = u32 [sp + 0x1c]\n  1031: a0 = a0 << 0x20\n  1034: a1 = 0xbd02814200000000\n  1044: jump @33 if a0 != a1\n      : @32 (gas: 14)\n  1047: ra = 0x16\n  1050: sp = sp + 0xfffffffffffffe20\n  1054: u64 [sp + 0x1d8] = ra\n  1058: u64 [sp + 0x1d0] = s0\n  1062: u64 [sp + 0x1c8] = s1\n  1066: s0 = sp + 0x1e0\n  1070: sp = sp & 0xffffffffffffffe0\n  1073: u64 [sp + 440] = 0\n  1077: u64 [sp + 432] = 0\n  1081: u64 [sp + 424] = 0\n  1085: u64 [sp + 416] = 0\n  1089: i32 a0 = sp + 0x1a0\n  1093: ecalli 11 // 'value_transferred'\n  1095: jump @54\n      : @33 [@dyn 11] (gas: 1)\n  1098: ra = 24, jump @65\n      : @34 [@dyn 12] (gas: 7)\n  1103: sp = sp + 0xfffffffffffffff0\n  1106: u64 [sp + 0x8] = ra\n  1109: u64 [sp] = s0\n  1111: s0 = a0\n  1113: a0 = 0x40\n  1116: a1 = 0x20\n  1119: ra = 26, jump @0\n      : @35 [@dyn 13] (gas: 100)\n  1124: a1 = u8 [a0 + 0x1]\n  1127: a2 = u8 [a0]\n  1129: a3 = u8 [a0 + 0x2]\n  1132: a4 = u8 [a0 + 0x3]\n  1135: a1 = a1 << 0x8\n  1138: a1 = a1 | a2\n  1141: a3 = a3 << 0x10\n  1144: a4 = a4 << 0x18\n  1147: a3 = a3 | a4\n  1150: a1 = a1 | a3\n  1153: a2 = u8 [a0 + 0x5]\n  1156: a3 = u8 [a0 + 0x4]\n  1159: a4 = u8 [a0 + 0x6]\n  1162: a5 = u8 [a0 + 0x7]\n  1165: a2 = a2 << 0x8\n  1168: a2 = a2 | a3\n  1171: a4 = a4 << 0x10\n  1174: a5 = a5 << 0x18\n  1177: a4 = a4 | a5\n  1180: a2 = a2 | a4\n  1183: a2 = a2 << 0x20\n  1186: t0 = a2 | a1\n  1189: a2 = u8 [a0 + 0x9]\n  1192: a3 = u8 [a0 + 0x8]\n  1195: a4 = u8 [a0 + 0xa]\n  1198: a5 = u8 [a0 + 0xb]\n  1201: a2 = a2 << 0x8\n  1204: a2 = a2 | a3\n  1207: a4 = a4 << 0x10\n  1210: a5 = a5 << 0x18\n  1213: a4 = a4 | a5\n  1216: a2 = a2 | a4\n  1219: a3 = u8 [a0 + 0xd]\n  1222: a4 = u8 [a0 + 0xc]\n  1225: a5 = u8 [a0 + 0xe]\n  1228: a1 = u8 [a0 + 0xf]\n  1231: a3 = a3 << 0x8\n  1234: a3 = a3 | a4\n  1237: a5 = a5 << 0x10\n  1240: a1 = a1 << 0x18\n  1243: a1 = a1 | a5\n  1246: a1 = a1 | a3\n  1249: a1 = a1 << 0x20\n  1252: t1 = a1 | a2\n  1255: a1 = u8 [a0 + 0x11]\n  1258: a3 = u8 [a0 + 0x10]\n  1261: a4 = u8 [a0 + 0x12]\n  1264: a5 = u8 [a0 + 0x13]\n  1267: a1 = a1 << 0x8\n  1270: a1 = a1 | a3\n  1273: a4 = a4 << 0x10\n  1276: a5 = a5 << 0x18\n  1279: a4 = a4 | a5\n  1282: a1 = a1 | a4\n  1285: a3 = u8 [a0 + 0x15]\n  1288: a4 = u8 [a0 + 0x14]\n  1291: a5 = u8 [a0 + 0x16]\n  1294: a2 = u8 [a0 + 0x17]\n  1297: a3 = a3 << 0x8\n  1300: a3 = a3 | a4\n  1303: a5 = a5 << 0x10\n  1306: a2 = a2 << 0x18\n  1309: a2 = a2 | a5\n  1312: a2 = a2 | a3\n  1315: a2 = a2 << 0x20\n  1318: a3 = a2 | a1\n  1321: a1 = u8 [a0 + 0x19]\n  1324: a2 = u8 [a0 + 0x18]\n  1327: a4 = u8 [a0 + 0x1a]\n  1330: a5 = u8 [a0 + 0x1b]\n  1333: a1 = a1 << 0x8\n  1336: a1 = a1 | a2\n  1339: a4 = a4 << 0x10\n  1342: a5 = a5 << 0x18\n  1345: a4 = a4 | a5\n  1348: a1 = a1 | a4\n  1351: a2 = u8 [a0 + 0x1d]\n  1354: a4 = u8 [a0 + 0x1c]\n  1357: a5 = u8 [a0 + 0x1e]\n  1360: a0 = u8 [a0 + 0x1f]\n  1363: a2 = a2 << 0x8\n  1366: a2 = a2 | a4\n  1369: a5 = a5 << 0x10\n  1372: a0 = a0 << 0x18\n  1375: a0 = a0 | a5\n  1378: a0 = a0 | a2\n  1381: a0 = a0 << 0x20\n  1384: a0 = a0 | a1\n  1387: a0 = reverse a0\n  1389: a1 = reverse a3\n  1391: a2 = reverse t1\n  1393: a3 = reverse t0\n  1395: u64 [s0 + 0x18] = a3\n  1398: u64 [s0 + 0x10] = a2\n  1401: u64 [s0 + 0x8] = a1\n  1404: u64 [s0] = a0\n  1406: ra = u64 [sp + 0x8]\n  1409: s0 = u64 [sp]\n  1411: sp = sp + 0x10\n  1414: ret\n      : @36 (gas: 45)\n  1416: sp = sp + 0xffffffffffffff40\n  1420: u64 [sp + 0xb8] = ra\n  1424: u64 [sp + 0xb0] = s0\n  1428: u64 [sp + 0xa8] = s1\n  1432: s0 = sp + 0xc0\n  1436: sp = sp & 0xffffffffffffffe0\n  1439: ra = u64 [a1 + 0x10]\n  1442: t2 = u64 [a1 + 0x8]\n  1445: t0 = u64 [a2 + 0x8]\n  1448: a5 = u64 [a1]\n  1450: u64 [sp + 0x78] = a5\n  1453: a3 = u64 [a2]\n  1455: u64 [sp + 0x68] = a3\n  1458: a4 = u64 [a2 + 0x10]\n  1461: t1 = t0 ^ t2\n  1464: s1 = t0 <u t2\n  1467: a3 = a3 <u a5\n  1470: s1 = a3 if t1 == 0\n  1473: t1 = u64 [a1 + 0x18]\n  1476: a5 = u64 [a2 + 0x18]\n  1479: a2 = a4 - ra\n  1482: a1 = a2 - s1\n  1485: u64 [sp + 0x70] = a1\n  1488: a1 = a2 <u s1\n  1491: a4 = a4 <u ra\n  1494: u64 [sp + 0x60] = t1\n  1497: a2 = a5 - t1\n  1500: a5 = u64 [sp + 0x78]\n  1503: a2 = a2 - a4\n  1506: a2 = a2 - a1\n  1509: a1 = t0 - t2\n  1512: a1 = a1 - a3\n  1515: a3 = u64 [sp + 0x68]\n  1518: a3 = a3 - a5\n  1521: a4 = a1 >u 0\n  1523: a3 = a3 <u 0x80\n  1527: a3 = a3 ^ 0x1\n  1530: a3 = a4 if a1 != 0\n  1533: s1 = a2 >s 0\n  1535: a1 = u64 [sp + 0x70]\n  1538: a4 = a1 >u 0\n  1540: a4 = s1 if a2 != 0\n  1543: a1 = a1 | a2\n  1546: a3 = a4 if a1 != 0\n  1549: jump @48 if a3 == 0\n      : @37 (gas: 12)\n  1553: s1 = a0\n  1555: a0 = a5 | ra\n  1558: u64 [sp + 0x70] = t2\n  1561: a1 = u64 [sp + 0x60]\n  1564: a1 = t2 | a1\n  1567: a0 = a0 | a1\n  1570: a0 = a0 >> 0x20\n  1573: u64 [sp + 0x58] = ra\n  1576: a1 = a1 | ra\n  1579: a1 = a1 << 0x20\n  1582: a0 = a0 | a1\n  1585: jump @47 if a0 != 0\n      : @38 (gas: 5)\n  1589: i32 a1 = a5 + 0\n  1591: i32 a0 = sp + 0x80\n  1595: u64 [sp + 0x68] = a1\n  1598: ecalli 3 // 'call_data_load'\n  1600: fallthrough\n      : @39 (gas: 10)\n  1601: a3 = u64 [sp + 0x90]\n  1605: a4 = u64 [sp + 0x98]\n  1609: a0 = 0x100000000\n  1619: a1 = a3 ^ a0\n  1622: a1 = a1 | a4\n  1625: a2 = a3 >> 0x20\n  1628: a2 = a2 <u 0x1\n  1631: a2 = 0 if a4 != 0\n  1633: a2 = 0 if a1 == 0\n  1635: jump @48 if a2 == 0\n      : @40 (gas: 13)\n  1639: u64 [sp + 0x48] = a4\n  1642: u64 [sp + 0x50] = a3\n  1645: a1 = u64 [sp + 0x58]\n  1648: a2 = u64 [sp + 0x60]\n  1651: a2 = a2 | a1\n  1654: a0 = 0xffffffe0\n  1664: a1 = u64 [sp + 0x78]\n  1667: a0 = a1 <u a0\n  1670: a1 = u64 [sp + 0x70]\n  1673: a0 = 0 if a1 != 0\n  1675: u64 [sp + 0x60] = a2\n  1678: a0 = 0 if a2 != 0\n  1680: jump @47 if a0 == 0\n      : @41 (gas: 9)\n  1684: a0 = u64 [sp + 0x88]\n  1688: u64 [sp + 0x40] = a0\n  1691: a0 = u64 [sp + 0x80]\n  1695: u64 [sp + 0x58] = a0\n  1698: a0 = u64 [sp + 0x68]\n  1701: i32 a1 = a0 + 0x20\n  1704: i32 a0 = sp + 0x80\n  1708: ecalli 3 // 'call_data_load'\n  1710: fallthrough\n      : @42 (gas: 10)\n  1711: a3 = u64 [sp + 0x90]\n  1715: a4 = u64 [sp + 0x98]\n  1719: a0 = 0x100000000\n  1729: a1 = a3 ^ a0\n  1732: a1 = a1 | a4\n  1735: a2 = a3 >> 0x20\n  1738: a2 = a2 <u 0x1\n  1741: a2 = 0 if a4 != 0\n  1743: a2 = 0 if a1 == 0\n  1745: jump @48 if a2 == 0\n      : @43 (gas: 10)\n  1749: u64 [sp + 0x30] = a4\n  1752: u64 [sp + 0x38] = a3\n  1755: a0 = 0xffffffc0\n  1765: a1 = u64 [sp + 0x78]\n  1768: a0 = a1 <u a0\n  1771: a1 = u64 [sp + 0x70]\n  1774: a0 = 0 if a1 != 0\n  1776: a1 = u64 [sp + 0x60]\n  1779: a0 = 0 if a1 != 0\n  1781: jump @47 if a0 == 0\n      : @44 (gas: 9)\n  1785: a0 = u64 [sp + 0x88]\n  1789: u64 [sp + 0x20] = a0\n  1792: a0 = u64 [sp + 0x80]\n  1796: u64 [sp + 0x28] = a0\n  1799: a0 = u64 [sp + 0x68]\n  1802: i32 a1 = a0 + 0x40\n  1805: i32 a0 = sp + 0x80\n  1809: ecalli 3 // 'call_data_load'\n  1811: fallthrough\n      : @45 (gas: 8)\n  1812: a0 = 0xffffffa0\n  1822: a1 = u64 [sp + 0x78]\n  1825: a0 = a1 <u a0\n  1828: a1 = u64 [sp + 0x70]\n  1831: a0 = 0 if a1 != 0\n  1833: a1 = u64 [sp + 0x60]\n  1836: a0 = 0 if a1 != 0\n  1838: jump @47 if a0 == 0\n      : @46 (gas: 50)\n  1842: a0 = u64 [sp + 0x98]\n  1846: u64 [sp + 0x18] = a0\n  1849: a0 = u64 [sp + 0x90]\n  1853: u64 [sp + 0x60] = a0\n  1856: a0 = u64 [sp + 0x88]\n  1860: u64 [sp + 0x70] = a0\n  1863: a0 = u64 [sp + 0x80]\n  1867: u64 [sp + 0x78] = a0\n  1870: a0 = u64 [sp + 0x68]\n  1873: i32 a1 = a0 + 0x60\n  1876: i32 a0 = sp + 0x80\n  1880: ecalli 3 // 'call_data_load'\n  1882: a0 = u64 [sp + 0x98]\n  1886: a1 = u64 [sp + 0x90]\n  1890: a2 = u64 [sp + 0x88]\n  1894: a3 = u64 [sp + 0x80]\n  1898: u64 [s1 + 0x78] = a0\n  1901: u64 [s1 + 0x70] = a1\n  1904: u64 [s1 + 0x68] = a2\n  1907: u64 [s1 + 0x60] = a3\n  1910: a0 = u64 [sp + 0x18]\n  1913: u64 [s1 + 0x58] = a0\n  1916: a0 = u64 [sp + 0x60]\n  1919: u64 [s1 + 0x50] = a0\n  1922: a0 = u64 [sp + 0x70]\n  1925: u64 [s1 + 0x48] = a0\n  1928: a0 = u64 [sp + 0x78]\n  1931: u64 [s1 + 0x40] = a0\n  1934: a0 = u64 [sp + 0x30]\n  1937: u64 [s1 + 0x38] = a0\n  1940: a0 = u64 [sp + 0x38]\n  1943: u64 [s1 + 0x30] = a0\n  1946: a0 = u64 [sp + 0x20]\n  1949: u64 [s1 + 0x28] = a0\n  1952: a0 = u64 [sp + 0x28]\n  1955: u64 [s1 + 0x20] = a0\n  1958: a0 = u64 [sp + 0x48]\n  1961: u64 [s1 + 0x18] = a0\n  1964: a0 = u64 [sp + 0x50]\n  1967: u64 [s1 + 0x10] = a0\n  1970: a0 = u64 [sp + 0x40]\n  1973: u64 [s1 + 0x8] = a0\n  1976: a0 = u64 [sp + 0x58]\n  1979: u64 [s1] = a0\n  1981: sp = s0 + 0xffffffffffffff40\n  1985: ra = u64 [sp + 0xb8]\n  1989: s0 = u64 [sp + 0xb0]\n  1993: s1 = u64 [sp + 0xa8]\n  1997: sp = sp + 0xc0\n  2001: ret\n      : @47 (gas: 1)\n  2003: trap\n      : @48 (gas: 3)\n  2004: a0 = 0\n  2006: a1 = 0\n  2008: ra = 28, jump @0\n      : @49 [@dyn 14] (gas: 6)\n  2013: i32 a1 = a0 + 0\n  2015: a0 = 0x1\n  2018: a2 = 0\n  2020: ra = 0x1e\n  2023: ecalli 9 // 'seal_return'\n  2025: fallthrough\n      : @50 [@dyn 15] (gas: 12)\n  2026: a2 = u64 [a1 + 0x10]\n  2029: a3 = u64 [a1 + 0x18]\n  2032: a4 = u64 [a1 + 0x8]\n  2035: a1 = u64 [a1]\n  2037: a3 = a3 | a4\n  2040: a4 = a1 | a2\n  2043: a4 = a4 | a3\n  2046: a4 = a4 >> 0x20\n  2049: a2 = a2 | a3\n  2052: a2 = a2 << 0x20\n  2055: a2 = a2 | a4\n  2058: jump @53 if a2 != 0\n      : @51 (gas: 13)\n  2062: sp = sp + 0xffffffffffffffd8\n  2065: u64 [sp + 0x20] = ra\n  2068: u64 [sp + 0x18] = s0\n  2071: u64 [sp + 0x10] = s1\n  2074: s0 = u64 [a0 + 0x18]\n  2077: s1 = u64 [a0 + 0x10]\n  2080: a2 = u64 [a0 + 0x8]\n  2083: u64 [sp] = a2\n  2085: a0 = u64 [a0]\n  2087: u64 [sp + 0x8] = a0\n  2090: i32 a0 = a1 + 0\n  2092: a1 = 0x20\n  2095: ra = 32, jump @0\n      : @52 [@dyn 16] (gas: 71)\n  2100: a1 = reverse s0\n  2102: a2 = reverse s1\n  2104: a3 = u64 [sp]\n  2106: a3 = reverse a3\n  2108: a4 = u64 [sp + 0x8]\n  2111: a4 = reverse a4\n  2113: a5 = a4 >> 0x38\n  2116: u8 [a0 + 0x1f] = a5\n  2119: a5 = a4 >> 0x30\n  2122: u8 [a0 + 0x1e] = a5\n  2125: a5 = a4 >> 0x28\n  2128: u8 [a0 + 0x1d] = a5\n  2131: a5 = a4 >> 0x20\n  2134: u8 [a0 + 0x1c] = a5\n  2137: a5 = a4 >> 0x18\n  2140: u8 [a0 + 0x1b] = a5\n  2143: a5 = a4 >> 0x10\n  2146: u8 [a0 + 0x1a] = a5\n  2149: a5 = a4 >> 0x8\n  2152: u8 [a0 + 0x19] = a5\n  2155: u8 [a0 + 0x18] = a4\n  2158: u8 [a0 + 0x10] = a3\n  2161: a4 = a3 >> 0x38\n  2164: u8 [a0 + 0x17] = a4\n  2167: a4 = a3 >> 0x30\n  2170: u8 [a0 + 0x16] = a4\n  2173: a4 = a3 >> 0x28\n  2176: u8 [a0 + 0x15] = a4\n  2179: a4 = a3 >> 0x20\n  2182: u8 [a0 + 0x14] = a4\n  2185: a4 = a3 >> 0x18\n  2188: u8 [a0 + 0x13] = a4\n  2191: a4 = a3 >> 0x10\n  2194: u8 [a0 + 0x12] = a4\n  2197: a3 = a3 >> 0x8\n  2200: u8 [a0 + 0x11] = a3\n  2203: u8 [a0 + 0x8] = a2\n  2206: a3 = a2 >> 0x38\n  2209: u8 [a0 + 0xf] = a3\n  2212: a3 = a2 >> 0x30\n  2215: u8 [a0 + 0xe] = a3\n  2218: a3 = a2 >> 0x28\n  2221: u8 [a0 + 0xd] = a3\n  2224: a3 = a2 >> 0x20\n  2227: u8 [a0 + 0xc] = a3\n  2230: a3 = a2 >> 0x18\n  2233: u8 [a0 + 0xb] = a3\n  2236: a3 = a2 >> 0x10\n  2239: u8 [a0 + 0xa] = a3\n  2242: a2 = a2 >> 0x8\n  2245: u8 [a0 + 0x9] = a2\n  2248: u8 [a0] = a1\n  2250: a2 = a1 >> 0x38\n  2253: u8 [a0 + 0x7] = a2\n  2256: a2 = a1 >> 0x30\n  2259: u8 [a0 + 0x6] = a2\n  2262: a2 = a1 >> 0x28\n  2265: u8 [a0 + 0x5] = a2\n  2268: a2 = a1 >> 0x20\n  2271: u8 [a0 + 0x4] = a2\n  2274: a2 = a1 >> 0x18\n  2277: u8 [a0 + 0x3] = a2\n  2280: a2 = a1 >> 0x10\n  2283: u8 [a0 + 0x2] = a2\n  2286: a1 = a1 >> 0x8\n  2289: u8 [a0 + 0x1] = a1\n  2292: ra = u64 [sp + 0x20]\n  2295: s0 = u64 [sp + 0x18]\n  2298: s1 = u64 [sp + 0x10]\n  2301: sp = sp + 0x28\n  2304: ret\n      : @53 (gas: 1)\n  2306: trap\n      : @54 (gas: 8)\n  2307: a0 = u64 [sp + 0x1b0]\n  2311: a1 = u64 [sp + 0x1b8]\n  2315: a2 = u64 [sp + 0x1a8]\n  2319: a3 = u64 [sp + 0x1a0]\n  2323: a1 = a1 | a2\n  2326: a0 = a0 | a3\n  2329: a0 = a0 | a1\n  2332: jump @60 if a0 != 0\n      : @55 (gas: 13)\n  2336: a0 = u32 [0x20004]\n  2341: u64 [sp + 248] = 0\n  2345: u64 [sp + 240] = 0\n  2349: u64 [sp + 232] = 0\n  2353: u64 [sp + 0xe0] = a0\n  2357: u64 [sp + 280] = 0\n  2361: u64 [sp + 272] = 0\n  2365: u64 [sp + 256] = 0x4\n  2370: a0 = sp + 0x120\n  2374: a1 = sp + 0x100\n  2378: a2 = sp + 0xe0\n  2382: u64 [sp + 264] = 0\n  2386: ra = 34, jump @36\n      : @56 [@dyn 17] (gas: 82)\n  2391: a0 = u64 [sp + 0x120]\n  2395: u64 [sp + 0x38] = a0\n  2398: t1 = u64 [sp + 0x128]\n  2402: t2 = u64 [sp + 0x130]\n  2406: ra = u64 [sp + 0x138]\n  2410: t0 = u64 [sp + 0x140]\n  2414: a4 = u64 [sp + 0x148]\n  2418: s1 = u64 [sp + 0x150]\n  2422: a5 = u64 [sp + 0x158]\n  2426: a3 = u64 [sp + 0x160]\n  2430: a1 = u64 [sp + 0x168]\n  2434: a2 = u64 [sp + 0x170]\n  2438: a0 = u64 [sp + 0x178]\n  2442: u64 [sp + 0x18] = a0\n  2445: u64 [sp + 0x78] = a0\n  2448: u64 [sp + 0x20] = a2\n  2451: u64 [sp + 0x70] = a2\n  2454: u64 [sp + 0x28] = a1\n  2457: u64 [sp + 0x68] = a1\n  2460: u64 [sp + 0x30] = a3\n  2463: u64 [sp + 0x60] = a3\n  2466: u64 [sp + 0x98] = a5\n  2470: u64 [sp + 0x90] = s1\n  2474: u64 [sp + 0x88] = a4\n  2478: u64 [sp + 0x80] = t0\n  2482: u64 [sp + 0xb8] = ra\n  2486: u64 [sp + 0xb0] = t2\n  2490: u64 [sp + 0xa8] = t1\n  2494: a0 = sp + 0xc0\n  2498: a1 = sp + 0xa0\n  2502: a2 = sp + 0x80\n  2506: a3 = sp + 0x60\n  2509: a5 = u64 [sp + 0x38]\n  2512: u64 [sp + 0xa0] = a5\n  2516: ra = 0x24\n  2519: sp = sp + 0xfffffffffffffbe0\n  2523: u64 [sp + 0x418] = ra\n  2527: u64 [sp + 0x410] = s0\n  2531: u64 [sp + 0x408] = s1\n  2535: s0 = sp + 0x420\n  2539: sp = sp & 0xffffffffffffffe0\n  2542: a4 = u64 [a3 + 0x18]\n  2545: u64 [sp + 0x170] = a4\n  2549: a4 = u64 [a3 + 0x10]\n  2552: u64 [sp + 0x168] = a4\n  2556: a4 = u64 [a3 + 0x8]\n  2559: u64 [sp + 0x160] = a4\n  2563: a3 = u64 [a3]\n  2565: u64 [sp + 0x158] = a3\n  2569: a3 = u64 [a2 + 0x10]\n  2572: u64 [sp + 0xf0] = a3\n  2576: a3 = u64 [a2 + 0x8]\n  2579: u64 [sp + 0xe8] = a3\n  2583: a2 = u64 [a2]\n  2585: u64 [sp + 0xf8] = a2\n  2589: a2 = u64 [a1 + 0x10]\n  2592: u64 [sp + 0x110] = a2\n  2596: a2 = u64 [a1 + 0x8]\n  2599: u64 [sp + 0x108] = a2\n  2603: a1 = u64 [a1]\n  2605: u64 [sp + 0x118] = a1\n  2609: u64 [sp + 0xe0] = a0\n  2613: i32 a0 = sp + 0x2a0\n  2617: ecalli 5 // 'caller'\n  2619: a0 = i32 [sp + 0x2b0]\n  2623: u64 [sp + 0x150] = a0\n  2627: a0 = u64 [sp + 0x2a0]\n  2631: u64 [sp + 0x148] = a0\n  2635: a0 = u64 [sp + 0x2a8]\n  2639: u64 [sp + 0x140] = a0\n  2643: i32 a0 = sp + 0x2c0\n  2647: ecalli 0 // 'address'\n  2648: a0 = i32 [sp + 0x2d0]\n  2652: u64 [sp + 0x138] = a0\n  2656: a0 = u64 [sp + 0x2c0]\n  2660: u64 [sp + 0x130] = a0\n  2664: a0 = u64 [sp + 0x2c8]\n  2668: u64 [sp + 0x128] = a0\n  2672: a0 = 0x40\n  2675: a1 = 0x20\n  2678: ra = 0x4a\n  2681: jump @0\n      : @57 [@dyn 18] (gas: 3)\n  2684: a0 = 0x40\n  2687: a1 = 0x20\n  2690: ra = 38, jump @0\n      : @58 [@dyn 19] (gas: 100)\n  2695: a1 = u8 [a0 + 0x11]\n  2698: a2 = u8 [a0 + 0x10]\n  2701: a3 = u8 [a0 + 0x12]\n  2704: a4 = u8 [a0 + 0x13]\n  2707: a1 = a1 << 0x8\n  2710: a1 = a1 | a2\n  2713: a3 = a3 << 0x10\n  2716: a4 = a4 << 0x18\n  2719: a3 = a3 | a4\n  2722: a1 = a1 | a3\n  2725: a2 = u8 [a0 + 0x15]\n  2728: a3 = u8 [a0 + 0x14]\n  2731: a4 = u8 [a0 + 0x16]\n  2734: a5 = u8 [a0 + 0x17]\n  2737: a2 = a2 << 0x8\n  2740: a2 = a2 | a3\n  2743: a4 = a4 << 0x10\n  2746: a5 = a5 << 0x18\n  2749: a4 = a4 | a5\n  2752: a2 = a2 | a4\n  2755: a2 = a2 << 0x20\n  2758: t0 = a2 | a1\n  2761: a2 = u8 [a0 + 0x1]\n  2764: a3 = u8 [a0]\n  2766: a4 = u8 [a0 + 0x2]\n  2769: a5 = u8 [a0 + 0x3]\n  2772: a2 = a2 << 0x8\n  2775: a2 = a2 | a3\n  2778: a4 = a4 << 0x10\n  2781: a5 = a5 << 0x18\n  2784: a4 = a4 | a5\n  2787: a2 = a2 | a4\n  2790: a3 = u8 [a0 + 0x5]\n  2793: a4 = u8 [a0 + 0x4]\n  2796: a5 = u8 [a0 + 0x6]\n  2799: s1 = u8 [a0 + 0x7]\n  2802: a3 = a3 << 0x8\n  2805: a3 = a3 | a4\n  2808: a5 = a5 << 0x10\n  2811: s1 = s1 << 0x18\n  2814: a5 = a5 | s1\n  2817: a3 = a3 | a5\n  2820: a3 = a3 << 0x20\n  2823: a2 = a2 | a3\n  2826: a3 = u8 [a0 + 0x19]\n  2829: a4 = u8 [a0 + 0x18]\n  2832: a5 = u8 [a0 + 0x1a]\n  2835: s1 = u8 [a0 + 0x1b]\n  2838: a3 = a3 << 0x8\n  2841: a3 = a3 | a4\n  2844: a5 = a5 << 0x10\n  2847: s1 = s1 << 0x18\n  2850: a5 = a5 | s1\n  2853: a3 = a3 | a5\n  2856: a4 = u8 [a0 + 0x1d]\n  2859: a5 = u8 [a0 + 0x1c]\n  2862: s1 = u8 [a0 + 0x1e]\n  2865: a1 = u8 [a0 + 0x1f]\n  2868: a4 = a4 << 0x8\n  2871: a4 = a4 | a5\n  2874: s1 = s1 << 0x10\n  2877: a1 = a1 << 0x18\n  2880: a1 = a1 | s1\n  2883: a1 = a1 | a4\n  2886: a1 = a1 << 0x20\n  2889: a3 = a3 | a1\n  2892: a1 = u8 [a0 + 0x9]\n  2895: a4 = u8 [a0 + 0x8]\n  2898: a5 = u8 [a0 + 0xa]\n  2901: s1 = u8 [a0 + 0xb]\n  2904: a1 = a1 << 0x8\n  2907: a1 = a1 | a4\n  2910: a5 = a5 << 0x10\n  2913: s1 = s1 << 0x18\n  2916: a5 = a5 | s1\n  2919: a1 = a1 | a5\n  2922: a4 = u8 [a0 + 0xd]\n  2925: a5 = u8 [a0 + 0xc]\n  2928: s1 = u8 [a0 + 0xe]\n  2931: a0 = u8 [a0 + 0xf]\n  2934: a4 = a4 << 0x8\n  2937: a4 = a4 | a5\n  2940: s1 = s1 << 0x10\n  2943: a0 = a0 << 0x18\n  2946: a0 = a0 | s1\n  2949: a0 = a0 | a4\n  2952: a0 = a0 << 0x20\n  2955: a0 = a0 | a1\n  2958: a1 = reverse a0\n  2960: a0 = reverse a3\n  2962: a2 = reverse a2\n  2964: a3 = reverse t0\n  2966: a2 = a2 | a3\n  2969: a3 = a0 | a1\n  2972: a3 = a3 | a2\n  2975: a3 = a3 >> 0x20\n  2978: a1 = a1 | a2\n  2981: a1 = a1 << 0x20\n  2984: a1 = a1 | a3\n  2987: jump @62 if a1 == 0\n      : @59 (gas: 1)\n  2990: trap\n      : @60 (gas: 3)\n  2991: a0 = 0\n  2993: a1 = 0\n  2995: ra = 40, jump @0\n      : @61 [@dyn 20] (gas: 5)\n  3000: i32 a1 = a0 + 0\n  3002: a0 = 0x1\n  3005: a2 = 0\n  3007: ecalli 9 // 'seal_return'\n  3009: fallthrough\n      : @62 (gas: 4)\n  3010: i32 s1 = a0 + 0\n  3012: a1 = 0x20\n  3015: a0 = s1\n  3017: ra = 42, jump @0\n      : @63 [@dyn 21] (gas: 71)\n  3022: a1 = u64 [sp + 0x18]\n  3025: a1 = reverse a1\n  3027: a2 = u64 [sp + 0x20]\n  3030: a2 = reverse a2\n  3032: a3 = u64 [sp + 0x28]\n  3035: a3 = reverse a3\n  3037: a4 = u64 [sp + 0x30]\n  3040: a4 = reverse a4\n  3042: a5 = a4 >> 0x38\n  3045: u8 [a0 + 0x1f] = a5\n  3048: a5 = a4 >> 0x30\n  3051: u8 [a0 + 0x1e] = a5\n  3054: a5 = a4 >> 0x28\n  3057: u8 [a0 + 0x1d] = a5\n  3060: a5 = a4 >> 0x20\n  3063: u8 [a0 + 0x1c] = a5\n  3066: a5 = a4 >> 0x18\n  3069: u8 [a0 + 0x1b] = a5\n  3072: a5 = a4 >> 0x10\n  3075: u8 [a0 + 0x1a] = a5\n  3078: a5 = a4 >> 0x8\n  3081: u8 [a0 + 0x19] = a5\n  3084: u8 [a0 + 0x18] = a4\n  3087: u8 [a0 + 0x10] = a3\n  3090: a4 = a3 >> 0x38\n  3093: u8 [a0 + 0x17] = a4\n  3096: a4 = a3 >> 0x30\n  3099: u8 [a0 + 0x16] = a4\n  3102: a4 = a3 >> 0x28\n  3105: u8 [a0 + 0x15] = a4\n  3108: a4 = a3 >> 0x20\n  3111: u8 [a0 + 0x14] = a4\n  3114: a4 = a3 >> 0x18\n  3117: u8 [a0 + 0x13] = a4\n  3120: a4 = a3 >> 0x10\n  3123: u8 [a0 + 0x12] = a4\n  3126: a3 = a3 >> 0x8\n  3129: u8 [a0 + 0x11] = a3\n  3132: u8 [a0 + 0x8] = a2\n  3135: a3 = a2 >> 0x38\n  3138: u8 [a0 + 0xf] = a3\n  3141: a3 = a2 >> 0x30\n  3144: u8 [a0 + 0xe] = a3\n  3147: a3 = a2 >> 0x28\n  3150: u8 [a0 + 0xd] = a3\n  3153: a3 = a2 >> 0x20\n  3156: u8 [a0 + 0xc] = a3\n  3159: a3 = a2 >> 0x18\n  3162: u8 [a0 + 0xb] = a3\n  3165: a3 = a2 >> 0x10\n  3168: u8 [a0 + 0xa] = a3\n  3171: a2 = a2 >> 0x8\n  3174: u8 [a0 + 0x9] = a2\n  3177: u8 [a0] = a1\n  3179: a2 = a1 >> 0x38\n  3182: u8 [a0 + 0x7] = a2\n  3185: a2 = a1 >> 0x30\n  3188: u8 [a0 + 0x6] = a2\n  3191: a2 = a1 >> 0x28\n  3194: u8 [a0 + 0x5] = a2\n  3197: a2 = a1 >> 0x20\n  3200: u8 [a0 + 0x4] = a2\n  3203: a2 = a1 >> 0x18\n  3206: u8 [a0 + 0x3] = a2\n  3209: a2 = a1 >> 0x10\n  3212: u8 [a0 + 0x2] = a2\n  3215: a1 = a1 >> 0x8\n  3218: u8 [a0 + 0x1] = a1\n  3221: a1 = 0x20\n  3224: a0 = s1\n  3226: ra = 44, jump @0\n      : @64 [@dyn 22] (gas: 6)\n  3231: i32 a1 = a0 + 0\n  3233: a2 = 0x20\n  3236: a0 = 0\n  3238: ra = 0x2e\n  3241: ecalli 9 // 'seal_return'\n  3243: fallthrough\n      : @65 [@dyn 23] (gas: 5)\n  3244: sp = sp + 0xfffffffffffffff8\n  3247: u64 [sp] = ra\n  3249: a0 = 0\n  3251: a1 = 0\n  3253: ra = 48, jump @0\n      : @66 [@dyn 24] (gas: 6)\n  3258: i32 a1 = a0 + 0\n  3260: a0 = 0x1\n  3263: a2 = 0\n  3265: ra = 0x32\n  3268: ecalli 9 // 'seal_return'\n  3270: fallthrough\n      : @67 [@dyn 25] (gas: 5)\n  3271: u64 [a0 + 24] = 0\n  3274: u64 [a0 + 16] = 0\n  3277: u64 [a0 + 8] = 0\n  3280: u64 [a0 + 0] = 0\n  3282: ret\n      : @68 [@dyn 26] (gas: 97)\n  3284: a1 = u8 [a0 + 0x11]\n  3287: a2 = u8 [a0 + 0x10]\n  3290: a3 = u8 [a0 + 0x12]\n  3293: a4 = u8 [a0 + 0x13]\n  3296: a1 = a1 << 0x8\n  3299: a1 = a1 | a2\n  3302: a3 = a3 << 0x10\n  3305: a4 = a4 << 0x18\n  3308: a3 = a3 | a4\n  3311: a1 = a1 | a3\n  3314: a2 = u8 [a0 + 0x15]\n  3317: a3 = u8 [a0 + 0x14]\n  3320: a4 = u8 [a0 + 0x16]\n  3323: a5 = u8 [a0 + 0x17]\n  3326: a2 = a2 << 0x8\n  3329: a2 = a2 | a3\n  3332: a4 = a4 << 0x10\n  3335: a5 = a5 << 0x18\n  3338: a4 = a4 | a5\n  3341: a2 = a2 | a4\n  3344: a2 = a2 << 0x20\n  3347: t0 = a2 | a1\n  3350: a2 = u8 [a0 + 0x1]\n  3353: a3 = u8 [a0]\n  3355: a4 = u8 [a0 + 0x2]\n  3358: a5 = u8 [a0 + 0x3]\n  3361: a2 = a2 << 0x8\n  3364: a2 = a2 | a3\n  3367: a4 = a4 << 0x10\n  3370: a5 = a5 << 0x18\n  3373: a4 = a4 | a5\n  3376: a2 = a2 | a4\n  3379: a3 = u8 [a0 + 0x5]\n  3382: a4 = u8 [a0 + 0x4]\n  3385: a5 = u8 [a0 + 0x6]\n  3388: s1 = u8 [a0 + 0x7]\n  3391: a3 = a3 << 0x8\n  3394: a3 = a3 | a4\n  3397: a5 = a5 << 0x10\n  3400: s1 = s1 << 0x18\n  3403: a5 = a5 | s1\n  3406: a3 = a3 | a5\n  3409: a3 = a3 << 0x20\n  3412: a2 = a2 | a3\n  3415: a3 = u8 [a0 + 0x19]\n  3418: a4 = u8 [a0 + 0x18]\n  3421: a5 = u8 [a0 + 0x1a]\n  3424: s1 = u8 [a0 + 0x1b]\n  3427: a3 = a3 << 0x8\n  3430: a3 = a3 | a4\n  3433: a5 = a5 << 0x10\n  3436: s1 = s1 << 0x18\n  3439: a5 = a5 | s1\n  3442: a3 = a3 | a5\n  3445: a4 = u8 [a0 + 0x1d]\n  3448: a5 = u8 [a0 + 0x1c]\n  3451: s1 = u8 [a0 + 0x1e]\n  3454: a1 = u8 [a0 + 0x1f]\n  3457: a4 = a4 << 0x8\n  3460: a4 = a4 | a5\n  3463: s1 = s1 << 0x10\n  3466: a1 = a1 << 0x18\n  3469: a1 = a1 | s1\n  3472: a1 = a1 | a4\n  3475: a1 = a1 << 0x20\n  3478: a3 = a3 | a1\n  3481: a1 = u8 [a0 + 0x9]\n  3484: a4 = u8 [a0 + 0x8]\n  3487: a5 = u8 [a0 + 0xa]\n  3490: s1 = u8 [a0 + 0xb]\n  3493: a1 = a1 << 0x8\n  3496: a1 = a1 | a4\n  3499: a5 = a5 << 0x10\n  3502: s1 = s1 << 0x18\n  3505: a5 = a5 | s1\n  3508: a1 = a1 | a5\n  3511: a4 = u8 [a0 + 0xd]\n  3514: a5 = u8 [a0 + 0xc]\n  3517: s1 = u8 [a0 + 0xe]\n  3520: a0 = u8 [a0 + 0xf]\n  3523: a4 = a4 << 0x8\n  3526: a4 = a4 | a5\n  3529: s1 = s1 << 0x10\n  3532: a0 = a0 << 0x18\n  3535: a0 = a0 | s1\n  3538: a0 = a0 | a4\n  3541: a0 = a0 << 0x20\n  3544: a0 = a0 | a1\n  3547: s1 = reverse a0\n  3549: a0 = reverse a3\n  3551: u64 [sp + 0x8] = a0\n  3554: a0 = reverse a2\n  3556: u64 [sp + 0x18] = a0\n  3559: a0 = reverse t0\n  3561: u64 [sp + 0x10] = a0\n  3564: ecalli 8 // 'return_data_size'\n  3566: fallthrough\n      : @69 (gas: 11)\n  3567: a3 = u64 [sp + 0x8]\n  3570: a1 = u64 [sp + 0x18]\n  3573: a2 = u64 [sp + 0x10]\n  3576: a1 = a1 | a2\n  3579: a2 = a3 | s1\n  3582: a2 = a2 | a1\n  3585: a2 = a2 >> 0x20\n  3588: a1 = a1 | s1\n  3591: a1 = a1 << 0x20\n  3594: a1 = a1 | a2\n  3597: jump @76 if a1 != 0\n      : @70 (gas: 3)\n  3600: s1 = a0\n  3602: a0 = a0 >> 0x20\n  3605: jump @76 if a0 != 0\n      : @71 (gas: 5)\n  3608: i32 a0 = a3 + 0\n  3610: i32 a1 = s1 + 0\n  3612: u64 [sp + 0x18] = a1\n  3615: u64 [sp + 0x10] = a0\n  3618: ra = 54, jump @0\n      : @72 [@dyn 27] (gas: 6)\n  3623: u32 [sp + 0x20] = s1\n  3626: i32 a0 = a0 + 0\n  3628: i32 a1 = sp + 0x20\n  3631: a2 = 0\n  3633: ecalli 7 // 'return_data_copy'\n  3635: fallthrough\n      : @73 (gas: 3)\n  3636: a0 = i32 [sp + 0x20]\n  3639: a1 = u64 [sp + 0x18]\n  3642: jump @76 if a0 <u a1\n      : @74 (gas: 2)\n  3645: ecalli 8 // 'return_data_size'\n  3647: fallthrough\n      : @75 (gas: 2)\n  3648: a1 = a0 >> 0x20\n  3651: jump @77 if a1 == 0\n      : @76 (gas: 1)\n  3654: trap\n      : @77 (gas: 4)\n  3655: i32 s1 = a0 + 0\n  3657: a0 = u64 [sp + 0x10]\n  3660: a1 = s1\n  3662: ra = 56, jump @0\n      : @78 [@dyn 28] (gas: 6)\n  3667: i32 a1 = a0 + 0\n  3669: a0 = 0x1\n  3672: a2 = s1\n  3674: ra = 0x3a\n  3677: ecalli 9 // 'seal_return'\n  3679: fallthrough\n      : @79 [@dyn 29] (gas: 20)\n  3680: sp = sp + 0xffffffffffffffb0\n  3683: u64 [sp + 0x48] = ra\n  3686: u64 [sp + 0x40] = s0\n  3689: u64 [sp + 0x38] = s1\n  3692: a4 = u64 [a1 + 0x10]\n  3695: a3 = u64 [a1 + 0x18]\n  3698: a5 = u64 [a1 + 0x8]\n  3701: s0 = u64 [a1]\n  3703: u64 [sp + 0x28] = a3\n  3706: u64 [sp + 0x20] = a5\n  3709: a1 = a5 | a3\n  3712: a3 = s0 | a4\n  3715: a3 = a3 | a1\n  3718: a3 = a3 >> 0x20\n  3721: u64 [sp + 0x30] = a4\n  3724: a1 = a1 | a4\n  3727: a1 = a1 << 0x20\n  3730: a1 = a1 | a3\n  3733: u64 [sp + 0x18] = a0\n  3736: jump @82 if a1 != 0\n      : @80 (gas: 10)\n  3740: a0 = u64 [a2 + 0x18]\n  3743: u64 [sp] = a0\n  3745: s1 = u64 [a2 + 0x10]\n  3748: a0 = u64 [a2 + 0x8]\n  3751: u64 [sp + 0x8] = a0\n  3754: a0 = u64 [a2]\n  3756: u64 [sp + 0x10] = a0\n  3759: i32 a0 = s0 + 0\n  3761: a1 = 0x20\n  3764: ra = 60, jump @0\n      : @81 [@dyn 30] (gas: 88)\n  3769: a1 = u64 [sp]\n  3771: a1 = reverse a1\n  3773: a2 = reverse s1\n  3775: a3 = u64 [sp + 0x8]\n  3778: a3 = reverse a3\n  3780: a4 = u64 [sp + 0x10]\n  3783: a4 = reverse a4\n  3785: a5 = a4 >> 0x38\n  3788: u8 [a0 + 0x1f] = a5\n  3791: a5 = a4 >> 0x30\n  3794: u8 [a0 + 0x1e] = a5\n  3797: a5 = a4 >> 0x28\n  3800: u8 [a0 + 0x1d] = a5\n  3803: a5 = a4 >> 0x20\n  3806: u8 [a0 + 0x1c] = a5\n  3809: a5 = a4 >> 0x18\n  3812: u8 [a0 + 0x1b] = a5\n  3815: a5 = a4 >> 0x10\n  3818: u8 [a0 + 0x1a] = a5\n  3821: a5 = a4 >> 0x8\n  3824: u8 [a0 + 0x19] = a5\n  3827: u8 [a0 + 0x18] = a4\n  3830: u8 [a0 + 0x10] = a3\n  3833: a4 = a3 >> 0x38\n  3836: u8 [a0 + 0x17] = a4\n  3839: a4 = a3 >> 0x30\n  3842: u8 [a0 + 0x16] = a4\n  3845: a4 = a3 >> 0x28\n  3848: u8 [a0 + 0x15] = a4\n  3851: a4 = a3 >> 0x20\n  3854: u8 [a0 + 0x14] = a4\n  3857: a4 = a3 >> 0x18\n  3860: u8 [a0 + 0x13] = a4\n  3863: a4 = a3 >> 0x10\n  3866: u8 [a0 + 0x12] = a4\n  3869: a3 = a3 >> 0x8\n  3872: u8 [a0 + 0x11] = a3\n  3875: u8 [a0 + 0x8] = a2\n  3878: a3 = a2 >> 0x38\n  3881: u8 [a0 + 0xf] = a3\n  3884: a3 = a2 >> 0x30\n  3887: u8 [a0 + 0xe] = a3\n  3890: a3 = a2 >> 0x28\n  3893: u8 [a0 + 0xd] = a3\n  3896: a3 = a2 >> 0x20\n  3899: u8 [a0 + 0xc] = a3\n  3902: a3 = a2 >> 0x18\n  3905: u8 [a0 + 0xb] = a3\n  3908: a3 = a2 >> 0x10\n  3911: u8 [a0 + 0xa] = a3\n  3914: a2 = a2 >> 0x8\n  3917: u8 [a0 + 0x9] = a2\n  3920: u8 [a0] = a1\n  3922: a2 = a1 >> 0x38\n  3925: u8 [a0 + 0x7] = a2\n  3928: a2 = a1 >> 0x30\n  3931: u8 [a0 + 0x6] = a2\n  3934: a2 = a1 >> 0x28\n  3937: u8 [a0 + 0x5] = a2\n  3940: a2 = a1 >> 0x20\n  3943: u8 [a0 + 0x4] = a2\n  3946: a2 = a1 >> 0x18\n  3949: u8 [a0 + 0x3] = a2\n  3952: a2 = a1 >> 0x10\n  3955: u8 [a0 + 0x2] = a2\n  3958: a1 = a1 >> 0x8\n  3961: u8 [a0 + 0x1] = a1\n  3964: a0 = s0 + 0x20\n  3967: a1 = a0 <u s0\n  3970: a3 = u64 [sp + 0x20]\n  3973: a2 = a3 + a1\n  3976: a3 = a2 <u a3\n  3979: a3 = a1 if a1 == 0\n  3982: a1 = u64 [sp + 0x30]\n  3985: a3 = a3 + a1\n  3988: a1 = a3 <u a1\n  3991: a4 = u64 [sp + 0x28]\n  3994: a1 = a1 + a4\n  3997: a4 = u64 [sp + 0x18]\n  4000: u64 [a4] = a0\n  4002: u64 [a4 + 0x8] = a2\n  4005: u64 [a4 + 0x10] = a3\n  4008: u64 [a4 + 0x18] = a1\n  4011: ra = u64 [sp + 0x48]\n  4014: s0 = u64 [sp + 0x40]\n  4017: s1 = u64 [sp + 0x38]\n  4020: sp = sp + 0x50\n  4023: ret\n      : @82 (gas: 1)\n  4025: trap\n      : @83 (gas: 17)\n  4026: sp = sp + 0xffffffffffffffa0\n  4029: u64 [sp + 0x58] = ra\n  4032: u64 [sp + 0x50] = s0\n  4035: u64 [sp + 0x48] = s1\n  4038: a3 = u64 [a1 + 0x18]\n  4041: a4 = u64 [a1 + 0x10]\n  4044: a5 = u64 [a1 + 0x8]\n  4047: s1 = u64 [a1]\n  4049: a1 = a5 | a3\n  4052: a2 = s1 | a4\n  4055: a2 = a2 | a1\n  4058: a2 = a2 >> 0x20\n  4061: a1 = a1 | a4\n  4064: a1 = a1 << 0x20\n  4067: a1 = a1 | a2\n  4070: u64 [sp + 0x28] = a0\n  4073: jump @90 if a1 != 0\n      : @84 (gas: 19)\n  4077: a0 = s1 + 0x20\n  4080: u64 [sp + 0x30] = a0\n  4083: a0 = a0 <u s1\n  4086: a1 = a5 + a0\n  4089: u64 [sp + 0x40] = a1\n  4092: u64 [sp + 0x8] = a5\n  4095: s0 = a1 <u a5\n  4098: s0 = a0 if a0 == 0\n  4101: s0 = s0 + a4\n  4104: u64 [sp + 0x10] = a4\n  4107: a0 = s0 <u a4\n  4110: u64 [sp + 0x18] = a3\n  4113: a0 = a0 + a3\n  4116: u64 [sp + 0x38] = a0\n  4119: u64 [sp] = s1\n  4121: i32 a0 = s1 + 0\n  4123: a1 = 0x20\n  4126: s1 = 0x20\n  4129: ra = 62, jump @0\n      : @85 [@dyn 31] (gas: 45)\n  4134: u8 [a0 + 0x1f] = s1\n  4137: a1 = u64 [sp + 0x30]\n  4140: s1 = a1\n  4142: a1 = a1 | s0\n  4145: a2 = u64 [sp + 0x40]\n  4148: a4 = u64 [sp + 0x38]\n  4151: a2 = a2 | a4\n  4154: a1 = a1 | a2\n  4157: a1 = a1 >> 0x20\n  4160: u64 [sp + 0x20] = s0\n  4163: a2 = a2 | s0\n  4166: a2 = a2 << 0x20\n  4169: a1 = a1 | a2\n  4172: u8 [a0 + 30] = 0\n  4175: u8 [a0 + 29] = 0\n  4178: u8 [a0 + 28] = 0\n  4181: u8 [a0 + 27] = 0\n  4184: u8 [a0 + 26] = 0\n  4187: u8 [a0 + 25] = 0\n  4190: u8 [a0 + 24] = 0\n  4193: u8 [a0 + 23] = 0\n  4196: u8 [a0 + 22] = 0\n  4199: u8 [a0 + 21] = 0\n  4202: u8 [a0 + 20] = 0\n  4205: u8 [a0 + 19] = 0\n  4208: u8 [a0 + 18] = 0\n  4211: u8 [a0 + 17] = 0\n  4214: u8 [a0 + 16] = 0\n  4217: u8 [a0 + 15] = 0\n  4220: u8 [a0 + 14] = 0\n  4223: u8 [a0 + 13] = 0\n  4226: u8 [a0 + 12] = 0\n  4229: u8 [a0 + 11] = 0\n  4232: u8 [a0 + 10] = 0\n  4235: u8 [a0 + 9] = 0\n  4238: u8 [a0 + 8] = 0\n  4241: u8 [a0 + 7] = 0\n  4244: u8 [a0 + 6] = 0\n  4247: u8 [a0 + 5] = 0\n  4250: u8 [a0 + 4] = 0\n  4253: u8 [a0 + 3] = 0\n  4256: u8 [a0 + 2] = 0\n  4259: u8 [a0 + 1] = 0\n  4262: u8 [a0 + 0] = 0\n  4264: jump @90 if a1 != 0\n      : @86 (gas: 4)\n  4268: i32 s0 = s1 + 0\n  4270: a1 = 0x20\n  4273: a0 = s0\n  4275: ra = 64, jump @0\n      : @87 [@dyn 32] (gas: 41)\n  4280: u8 [a0 + 31] = 0x13\n  4284: u8 [a0 + 30] = 0\n  4287: u8 [a0 + 29] = 0\n  4290: u8 [a0 + 28] = 0\n  4293: u8 [a0 + 27] = 0\n  4296: u8 [a0 + 26] = 0\n  4299: u8 [a0 + 25] = 0\n  4302: u8 [a0 + 24] = 0\n  4305: u8 [a0 + 23] = 0\n  4308: u8 [a0 + 22] = 0\n  4311: u8 [a0 + 21] = 0\n  4314: u8 [a0 + 20] = 0\n  4317: u8 [a0 + 19] = 0\n  4320: u8 [a0 + 18] = 0\n  4323: u8 [a0 + 17] = 0\n  4326: u8 [a0 + 16] = 0\n  4329: u8 [a0 + 15] = 0\n  4332: u8 [a0 + 14] = 0\n  4335: u8 [a0 + 13] = 0\n  4338: u8 [a0 + 12] = 0\n  4341: u8 [a0 + 11] = 0\n  4344: u8 [a0 + 10] = 0\n  4347: u8 [a0 + 9] = 0\n  4350: u8 [a0 + 8] = 0\n  4353: u8 [a0 + 7] = 0\n  4356: u8 [a0 + 6] = 0\n  4359: u8 [a0 + 5] = 0\n  4362: u8 [a0 + 4] = 0\n  4365: u8 [a0 + 3] = 0\n  4368: u8 [a0 + 2] = 0\n  4371: u8 [a0 + 1] = 0\n  4374: a1 = u64 [sp + 0x20]\n  4377: a2 = u64 [sp + 0x38]\n  4380: a1 = a1 | a2\n  4383: a2 = 0xffffffe0\n  4393: a2 = s1 <u a2\n  4396: a3 = u64 [sp + 0x40]\n  4399: a2 = 0 if a3 != 0\n  4401: a2 = 0 if a1 != 0\n  4403: u8 [a0 + 0] = 0\n  4405: jump @90 if a2 == 0\n      : @88 (gas: 3)\n  4409: i32 a0 = s0 + 0x20\n  4412: a1 = 0x20\n  4415: ra = 66, jump @0\n      : @89 [@dyn 33] (gas: 55)\n  4420: u8 [a0 + 31] = 0\n  4423: u8 [a0 + 30] = 0\n  4426: u8 [a0 + 29] = 0\n  4429: u8 [a0 + 28] = 0\n  4432: u8 [a0 + 27] = 0\n  4435: u8 [a0 + 26] = 0\n  4438: u8 [a0 + 25] = 0\n  4441: u8 [a0 + 24] = 0\n  4444: u8 [a0 + 23] = 0\n  4447: u8 [a0 + 22] = 0\n  4450: u8 [a0 + 21] = 0\n  4453: u8 [a0 + 20] = 0\n  4456: u8 [a0 + 19] = 0\n  4459: u8 [a0 + 18] = 0x64\n  4463: u8 [a0 + 17] = 0x65\n  4467: u8 [a0 + 16] = 0x6c\n  4471: u8 [a0 + 15] = 0x69\n  4475: u8 [a0 + 14] = 0x61\n  4479: u8 [a0 + 13] = 0x66\n  4483: u8 [a0 + 12] = 0x20\n  4487: u8 [a0 + 11] = 0x6d\n  4491: u8 [a0 + 10] = 0x6f\n  4495: u8 [a0 + 9] = 0x72\n  4499: a5 = 0x46\n  4502: u8 [a0 + 0x8] = a5\n  4505: u8 [a0 + 7] = 0x72\n  4509: u8 [a0 + 6] = 0x65\n  4513: u8 [a0 + 5] = 0x66\n  4517: u8 [a0 + 4] = 0x73\n  4521: u8 [a0 + 3] = 0x6e\n  4525: u8 [a0 + 2] = 0x61\n  4529: u8 [a0 + 1] = 0x72\n  4533: u8 [a0 + 0] = 0x74\n  4536: a1 = u64 [sp]\n  4538: a0 = a1 + 0x60\n  4541: a1 = a0 <u a1\n  4544: a3 = u64 [sp + 0x8]\n  4547: a2 = a3 + a1\n  4550: a3 = a2 <u a3\n  4553: a3 = a1 if a1 == 0\n  4556: a1 = u64 [sp + 0x10]\n  4559: a3 = a3 + a1\n  4562: a1 = a3 <u a1\n  4565: a4 = u64 [sp + 0x18]\n  4568: a1 = a1 + a4\n  4571: a4 = u64 [sp + 0x28]\n  4574: u64 [a4] = a0\n  4576: u64 [a4 + 0x8] = a2\n  4579: u64 [a4 + 0x10] = a3\n  4582: u64 [a4 + 0x18] = a1\n  4585: ra = u64 [sp + 0x58]\n  4588: s0 = u64 [sp + 0x50]\n  4591: s1 = u64 [sp + 0x48]\n  4594: sp = sp + 0x60\n  4597: ret\n      : @90 (gas: 1)\n  4599: trap\n      : @91 (gas: 17)\n  4600: sp = sp + 0xffffffffffffffa0\n  4603: u64 [sp + 0x58] = ra\n  4606: u64 [sp + 0x50] = s0\n  4609: u64 [sp + 0x48] = s1\n  4612: a3 = u64 [a1 + 0x18]\n  4615: a4 = u64 [a1 + 0x10]\n  4618: a5 = u64 [a1 + 0x8]\n  4621: s1 = u64 [a1]\n  4623: a1 = a5 | a3\n  4626: a2 = s1 | a4\n  4629: a2 = a2 | a1\n  4632: a2 = a2 >> 0x20\n  4635: a1 = a1 | a4\n  4638: a1 = a1 << 0x20\n  4641: a1 = a1 | a2\n  4644: u64 [sp + 0x28] = a0\n  4647: jump @98 if a1 != 0\n      : @92 (gas: 19)\n  4651: a0 = s1 + 0x20\n  4654: u64 [sp + 0x30] = a0\n  4657: a0 = a0 <u s1\n  4660: a1 = a5 + a0\n  4663: u64 [sp + 0x40] = a1\n  4666: u64 [sp + 0x8] = a5\n  4669: s0 = a1 <u a5\n  4672: s0 = a0 if a0 == 0\n  4675: s0 = s0 + a4\n  4678: u64 [sp + 0x10] = a4\n  4681: a0 = s0 <u a4\n  4684: u64 [sp + 0x18] = a3\n  4687: a0 = a0 + a3\n  4690: u64 [sp + 0x38] = a0\n  4693: u64 [sp] = s1\n  4695: i32 a0 = s1 + 0\n  4697: a1 = 0x20\n  4700: s1 = 0x20\n  4703: ra = 68, jump @0\n      : @93 [@dyn 34] (gas: 45)\n  4708: u8 [a0 + 0x1f] = s1\n  4711: a1 = u64 [sp + 0x30]\n  4714: s1 = a1\n  4716: a1 = a1 | s0\n  4719: a2 = u64 [sp + 0x40]\n  4722: a4 = u64 [sp + 0x38]\n  4725: a2 = a2 | a4\n  4728: a1 = a1 | a2\n  4731: a1 = a1 >> 0x20\n  4734: u64 [sp + 0x20] = s0\n  4737: a2 = a2 | s0\n  4740: a2 = a2 << 0x20\n  4743: a1 = a1 | a2\n  4746: u8 [a0 + 30] = 0\n  4749: u8 [a0 + 29] = 0\n  4752: u8 [a0 + 28] = 0\n  4755: u8 [a0 + 27] = 0\n  4758: u8 [a0 + 26] = 0\n  4761: u8 [a0 + 25] = 0\n  4764: u8 [a0 + 24] = 0\n  4767: u8 [a0 + 23] = 0\n  4770: u8 [a0 + 22] = 0\n  4773: u8 [a0 + 21] = 0\n  4776: u8 [a0 + 20] = 0\n  4779: u8 [a0 + 19] = 0\n  4782: u8 [a0 + 18] = 0\n  4785: u8 [a0 + 17] = 0\n  4788: u8 [a0 + 16] = 0\n  4791: u8 [a0 + 15] = 0\n  4794: u8 [a0 + 14] = 0\n  4797: u8 [a0 + 13] = 0\n  4800: u8 [a0 + 12] = 0\n  4803: u8 [a0 + 11] = 0\n  4806: u8 [a0 + 10] = 0\n  4809: u8 [a0 + 9] = 0\n  4812: u8 [a0 + 8] = 0\n  4815: u8 [a0 + 7] = 0\n  4818: u8 [a0 + 6] = 0\n  4821: u8 [a0 + 5] = 0\n  4824: u8 [a0 + 4] = 0\n  4827: u8 [a0 + 3] = 0\n  4830: u8 [a0 + 2] = 0\n  4833: u8 [a0 + 1] = 0\n  4836: u8 [a0 + 0] = 0\n  4838: jump @98 if a1 != 0\n      : @94 (gas: 4)\n  4842: i32 s0 = s1 + 0\n  4844: a1 = 0x20\n  4847: a0 = s0\n  4849: ra = 70, jump @0\n      : @95 [@dyn 35] (gas: 41)\n  4854: u8 [a0 + 31] = 0xf\n  4858: u8 [a0 + 30] = 0\n  4861: u8 [a0 + 29] = 0\n  4864: u8 [a0 + 28] = 0\n  4867: u8 [a0 + 27] = 0\n  4870: u8 [a0 + 26] = 0\n  4873: u8 [a0 + 25] = 0\n  4876: u8 [a0 + 24] = 0\n  4879: u8 [a0 + 23] = 0\n  4882: u8 [a0 + 22] = 0\n  4885: u8 [a0 + 21] = 0\n  4888: u8 [a0 + 20] = 0\n  4891: u8 [a0 + 19] = 0\n  4894: u8 [a0 + 18] = 0\n  4897: u8 [a0 + 17] = 0\n  4900: u8 [a0 + 16] = 0\n  4903: u8 [a0 + 15] = 0\n  4906: u8 [a0 + 14] = 0\n  4909: u8 [a0 + 13] = 0\n  4912: u8 [a0 + 12] = 0\n  4915: u8 [a0 + 11] = 0\n  4918: u8 [a0 + 10] = 0\n  4921: u8 [a0 + 9] = 0\n  4924: u8 [a0 + 8] = 0\n  4927: u8 [a0 + 7] = 0\n  4930: u8 [a0 + 6] = 0\n  4933: u8 [a0 + 5] = 0\n  4936: u8 [a0 + 4] = 0\n  4939: u8 [a0 + 3] = 0\n  4942: u8 [a0 + 2] = 0\n  4945: u8 [a0 + 1] = 0\n  4948: a1 = u64 [sp + 0x20]\n  4951: a2 = u64 [sp + 0x38]\n  4954: a1 = a1 | a2\n  4957: a2 = 0xffffffe0\n  4967: a2 = s1 <u a2\n  4970: a3 = u64 [sp + 0x40]\n  4973: a2 = 0 if a3 != 0\n  4975: a2 = 0 if a1 != 0\n  4977: u8 [a0 + 0] = 0\n  4979: jump @98 if a2 == 0\n      : @96 (gas: 3)\n  4983: i32 a0 = s0 + 0x20\n  4986: a1 = 0x20\n  4989: ra = 72, jump @0\n      : @97 [@dyn 36] (gas: 54)\n  4994: u8 [a0 + 31] = 0\n  4997: u8 [a0 + 30] = 0\n  5000: u8 [a0 + 29] = 0\n  5003: u8 [a0 + 28] = 0\n  5006: u8 [a0 + 27] = 0\n  5009: u8 [a0 + 26] = 0\n  5012: u8 [a0 + 25] = 0\n  5015: u8 [a0 + 24] = 0\n  5018: u8 [a0 + 23] = 0\n  5021: u8 [a0 + 22] = 0\n  5024: u8 [a0 + 21] = 0\n  5027: u8 [a0 + 20] = 0\n  5030: u8 [a0 + 19] = 0\n  5033: u8 [a0 + 18] = 0\n  5036: u8 [a0 + 17] = 0\n  5039: u8 [a0 + 16] = 0\n  5042: u8 [a0 + 15] = 0\n  5045: u8 [a0 + 14] = 0x64\n  5049: u8 [a0 + 13] = 0x65\n  5053: u8 [a0 + 12] = 0x6c\n  5057: u8 [a0 + 11] = 0x69\n  5061: u8 [a0 + 10] = 0x61\n  5065: u8 [a0 + 9] = 0x66\n  5069: u8 [a0 + 8] = 0x20\n  5073: u8 [a0 + 7] = 0x72\n  5077: u8 [a0 + 6] = 0x65\n  5081: u8 [a0 + 5] = 0x66\n  5085: u8 [a0 + 4] = 0x73\n  5089: u8 [a0 + 3] = 0x6e\n  5093: u8 [a0 + 2] = 0x61\n  5097: u8 [a0 + 1] = 0x72\n  5101: u8 [a0 + 0] = 0x74\n  5104: a1 = u64 [sp]\n  5106: a0 = a1 + 0x60\n  5109: a1 = a0 <u a1\n  5112: a3 = u64 [sp + 0x8]\n  5115: a2 = a3 + a1\n  5118: a3 = a2 <u a3\n  5121: a3 = a1 if a1 == 0\n  5124: a1 = u64 [sp + 0x10]\n  5127: a3 = a3 + a1\n  5130: a1 = a3 <u a1\n  5133: a4 = u64 [sp + 0x18]\n  5136: a1 = a1 + a4\n  5139: a4 = u64 [sp + 0x28]\n  5142: u64 [a4] = a0\n  5144: u64 [a4 + 0x8] = a2\n  5147: u64 [a4 + 0x10] = a3\n  5150: u64 [a4 + 0x18] = a1\n  5153: ra = u64 [sp + 0x58]\n  5156: s0 = u64 [sp + 0x50]\n  5159: s1 = u64 [sp + 0x48]\n  5162: sp = sp + 0x60\n  5165: ret\n      : @98 (gas: 1)\n  5167: trap\n      : @99 [@dyn 37] (gas: 102)\n  5168: a1 = u8 [a0 + 0x11]\n  5171: a2 = u8 [a0 + 0x10]\n  5174: a3 = u8 [a0 + 0x12]\n  5177: a4 = u8 [a0 + 0x13]\n  5180: a1 = a1 << 0x8\n  5183: a1 = a1 | a2\n  5186: a3 = a3 << 0x10\n  5189: a4 = a4 << 0x18\n  5192: a3 = a3 | a4\n  5195: a1 = a1 | a3\n  5198: a2 = u8 [a0 + 0x15]\n  5201: a3 = u8 [a0 + 0x14]\n  5204: a4 = u8 [a0 + 0x16]\n  5207: a5 = u8 [a0 + 0x17]\n  5210: a2 = a2 << 0x8\n  5213: a2 = a2 | a3\n  5216: a4 = a4 << 0x10\n  5219: a5 = a5 << 0x18\n  5222: a4 = a4 | a5\n  5225: a2 = a2 | a4\n  5228: a2 = a2 << 0x20\n  5231: t0 = a2 | a1\n  5234: a2 = u8 [a0 + 0x1]\n  5237: a3 = u8 [a0]\n  5239: a4 = u8 [a0 + 0x2]\n  5242: a5 = u8 [a0 + 0x3]\n  5245: a2 = a2 << 0x8\n  5248: a2 = a2 | a3\n  5251: a4 = a4 << 0x10\n  5254: a5 = a5 << 0x18\n  5257: a4 = a4 | a5\n  5260: a2 = a2 | a4\n  5263: a3 = u8 [a0 + 0x5]\n  5266: a4 = u8 [a0 + 0x4]\n  5269: a5 = u8 [a0 + 0x6]\n  5272: s1 = u8 [a0 + 0x7]\n  5275: a3 = a3 << 0x8\n  5278: a3 = a3 | a4\n  5281: a5 = a5 << 0x10\n  5284: s1 = s1 << 0x18\n  5287: a5 = a5 | s1\n  5290: a3 = a3 | a5\n  5293: a3 = a3 << 0x20\n  5296: a2 = a2 | a3\n  5299: a3 = u8 [a0 + 0x19]\n  5302: a4 = u8 [a0 + 0x18]\n  5305: a5 = u8 [a0 + 0x1a]\n  5308: s1 = u8 [a0 + 0x1b]\n  5311: a3 = a3 << 0x8\n  5314: a3 = a3 | a4\n  5317: a5 = a5 << 0x10\n  5320: s1 = s1 << 0x18\n  5323: a5 = a5 | s1\n  5326: a3 = a3 | a5\n  5329: a4 = u8 [a0 + 0x1d]\n  5332: a5 = u8 [a0 + 0x1c]\n  5335: s1 = u8 [a0 + 0x1e]\n  5338: a1 = u8 [a0 + 0x1f]\n  5341: a4 = a4 << 0x8\n  5344: a4 = a4 | a5\n  5347: s1 = s1 << 0x10\n  5350: a1 = a1 << 0x18\n  5353: a1 = a1 | s1\n  5356: a1 = a1 | a4\n  5359: a1 = a1 << 0x20\n  5362: a3 = a3 | a1\n  5365: a1 = u8 [a0 + 0x9]\n  5368: a4 = u8 [a0 + 0x8]\n  5371: a5 = u8 [a0 + 0xa]\n  5374: s1 = u8 [a0 + 0xb]\n  5377: a1 = a1 << 0x8\n  5380: a1 = a1 | a4\n  5383: a5 = a5 << 0x10\n  5386: s1 = s1 << 0x18\n  5389: a5 = a5 | s1\n  5392: a1 = a1 | a5\n  5395: a4 = u8 [a0 + 0xd]\n  5398: a5 = u8 [a0 + 0xc]\n  5401: s1 = u8 [a0 + 0xe]\n  5404: a0 = u8 [a0 + 0xf]\n  5407: a4 = a4 << 0x8\n  5410: a4 = a4 | a5\n  5413: s1 = s1 << 0x10\n  5416: a0 = a0 << 0x18\n  5419: a0 = a0 | s1\n  5422: a0 = a0 | a4\n  5425: a0 = a0 << 0x20\n  5428: a0 = a0 | a1\n  5431: s1 = reverse a0\n  5433: a3 = reverse a3\n  5435: a1 = reverse a2\n  5437: a0 = reverse t0\n  5439: u64 [sp + 0x198] = a0\n  5443: u64 [sp + 0x180] = a1\n  5447: a0 = a0 | a1\n  5450: a1 = a3 | s1\n  5453: a1 = a1 | a0\n  5456: a1 = a1 >> 0x20\n  5459: a0 = a0 | s1\n  5462: a0 = a0 << 0x20\n  5465: a0 = a0 | a1\n  5468: jump @101 if a0 == 0\n      : @100 (gas: 1)\n  5471: jump @157\n      : @101 (gas: 5)\n  5474: i32 a0 = a3 + 0\n  5476: a1 = 0x20\n  5479: u64 [sp + 0x188] = a0\n  5483: u64 [sp + 0x190] = a3\n  5487: ra = 76, jump @0\n      : @102 [@dyn 38] (gas: 45)\n  5492: u8 [a0 + 31] = 0\n  5495: u8 [a0 + 30] = 0\n  5498: u8 [a0 + 29] = 0\n  5501: u8 [a0 + 28] = 0\n  5504: u8 [a0 + 27] = 0\n  5507: u8 [a0 + 26] = 0\n  5510: u8 [a0 + 25] = 0\n  5513: u8 [a0 + 24] = 0\n  5516: u8 [a0 + 23] = 0\n  5519: u8 [a0 + 22] = 0\n  5522: u8 [a0 + 21] = 0\n  5525: u8 [a0 + 20] = 0\n  5528: u8 [a0 + 19] = 0\n  5531: u8 [a0 + 18] = 0\n  5534: u8 [a0 + 17] = 0\n  5537: u8 [a0 + 16] = 0\n  5540: u8 [a0 + 15] = 0\n  5543: u8 [a0 + 14] = 0\n  5546: u8 [a0 + 13] = 0\n  5549: u8 [a0 + 12] = 0\n  5552: u8 [a0 + 11] = 0\n  5555: u8 [a0 + 10] = 0\n  5558: u8 [a0 + 9] = 0\n  5561: u8 [a0 + 8] = 0\n  5564: u8 [a0 + 7] = 0\n  5567: u8 [a0 + 6] = 0\n  5570: u8 [a0 + 5] = 0\n  5573: u8 [a0 + 3] = 0xdd\n  5578: u8 [a0 + 2] = 0x72\n  5582: u8 [a0 + 1] = 0xb8\n  5587: u8 [a0 + 0] = 0x23\n  5590: u64 [sp + 0x100] = s1\n  5594: a3 = u64 [sp + 0x180]\n  5598: a3 = a3 | s1\n  5601: a1 = 0x100000000\n  5611: u64 [sp + 0x120] = a1\n  5615: a1 = 0xfffffffc\n  5625: a2 = u64 [sp + 0x190]\n  5629: a1 = a2 <u a1\n  5632: a2 = u64 [sp + 0x198]\n  5636: a1 = 0 if a2 != 0\n  5638: u64 [sp + 0x178] = a3\n  5642: a1 = 0 if a3 != 0\n  5644: u8 [a0 + 4] = 0\n  5647: jump @104 if a1 != 0\n      : @103 (gas: 1)\n  5650: jump @157\n      : @104 (gas: 19)\n  5653: a0 = u64 [sp + 0x140]\n  5657: a0 = reverse a0\n  5659: a1 = a0 >> 0x20\n  5662: a2 = u64 [sp + 0x148]\n  5666: a2 = reverse a2\n  5668: a3 = a2 << 0x20\n  5671: a1 = a1 | a3\n  5674: u64 [sp + 0x148] = a1\n  5678: a0 = a0 << 0x20\n  5681: a1 = u64 [sp + 0x150]\n  5685: a1 = reverse a1\n  5687: a1 = a1 >> 0x20\n  5690: a0 = a0 | a1\n  5693: u64 [sp + 0x150] = a0\n  5697: s1 = a2 >> 0x20\n  5700: a0 = u64 [sp + 0x188]\n  5704: i32 a0 = a0 + 0x4\n  5707: a1 = 0x20\n  5710: ra = 78, jump @0\n      : @105 [@dyn 39] (gas: 64)\n  5715: a1 = reverse s1\n  5717: a2 = u64 [sp + 0x148]\n  5721: a2 = reverse a2\n  5723: a3 = u64 [sp + 0x150]\n  5727: a3 = reverse a3\n  5729: a4 = a3 >> 0x38\n  5732: u8 [a0 + 0x1f] = a4\n  5735: a4 = a3 >> 0x30\n  5738: u8 [a0 + 0x1e] = a4\n  5741: a4 = a3 >> 0x28\n  5744: u8 [a0 + 0x1d] = a4\n  5747: a4 = a3 >> 0x20\n  5750: u8 [a0 + 0x1c] = a4\n  5753: a4 = a3 >> 0x18\n  5756: u8 [a0 + 0x1b] = a4\n  5759: a4 = a3 >> 0x10\n  5762: u8 [a0 + 0x1a] = a4\n  5765: a4 = a3 >> 0x8\n  5768: u8 [a0 + 0x19] = a4\n  5771: u8 [a0 + 0x18] = a3\n  5774: u8 [a0 + 0x10] = a2\n  5777: u8 [a0 + 11] = 0\n  5780: u8 [a0 + 10] = 0\n  5783: u8 [a0 + 9] = 0\n  5786: u8 [a0 + 7] = 0\n  5789: u8 [a0 + 6] = 0\n  5792: u8 [a0 + 5] = 0\n  5795: u8 [a0 + 4] = 0\n  5798: u8 [a0 + 3] = 0\n  5801: u8 [a0 + 2] = 0\n  5804: u8 [a0 + 1] = 0\n  5807: u8 [a0 + 0] = 0\n  5809: a3 = a2 >> 0x38\n  5812: u8 [a0 + 0x17] = a3\n  5815: a3 = a2 >> 0x30\n  5818: u8 [a0 + 0x16] = a3\n  5821: a3 = a2 >> 0x28\n  5824: u8 [a0 + 0x15] = a3\n  5827: a3 = a2 >> 0x20\n  5830: u8 [a0 + 0x14] = a3\n  5833: a3 = a2 >> 0x18\n  5836: u8 [a0 + 0x13] = a3\n  5839: a3 = a2 >> 0x10\n  5842: u8 [a0 + 0x12] = a3\n  5845: a2 = a2 >> 0x8\n  5848: u8 [a0 + 0x11] = a2\n  5851: u8 [a0 + 0x8] = a1\n  5854: a2 = a1 >> 0x38\n  5857: u8 [a0 + 0xf] = a2\n  5860: a2 = a1 >> 0x30\n  5863: u8 [a0 + 0xe] = a2\n  5866: a2 = a1 >> 0x28\n  5869: u8 [a0 + 0xd] = a2\n  5872: a1 = a1 >> 0x20\n  5875: a2 = u64 [sp + 0x120]\n  5879: a2 = a2 + 0xffffffffffffffdc\n  5882: a3 = u64 [sp + 0x190]\n  5886: a2 = a3 <u a2\n  5889: a3 = u64 [sp + 0x198]\n  5893: a2 = 0 if a3 != 0\n  5895: a3 = u64 [sp + 0x178]\n  5899: a2 = 0 if a3 != 0\n  5901: u8 [a0 + 0xc] = a1\n  5904: jump @107 if a2 != 0\n      : @106 (gas: 1)\n  5907: jump @157\n      : @107 (gas: 19)\n  5910: a0 = u64 [sp + 0x128]\n  5914: a0 = reverse a0\n  5916: a1 = a0 >> 0x20\n  5919: a2 = u64 [sp + 0x130]\n  5923: a2 = reverse a2\n  5925: a3 = a2 << 0x20\n  5928: a1 = a1 | a3\n  5931: u64 [sp + 0x150] = a1\n  5935: a0 = a0 << 0x20\n  5938: a1 = u64 [sp + 0x138]\n  5942: a1 = reverse a1\n  5944: a1 = a1 >> 0x20\n  5947: a0 = a0 | a1\n  5950: u64 [sp + 0x148] = a0\n  5954: s1 = a2 >> 0x20\n  5957: a0 = u64 [sp + 0x188]\n  5961: i32 a0 = a0 + 0x24\n  5964: a1 = 0x20\n  5967: ra = 80, jump @0\n      : @108 [@dyn 40] (gas: 63)\n  5972: a1 = reverse s1\n  5974: a2 = u64 [sp + 0x150]\n  5978: a2 = reverse a2\n  5980: a3 = u64 [sp + 0x148]\n  5984: a3 = reverse a3\n  5986: a4 = a3 >> 0x38\n  5989: u8 [a0 + 0x1f] = a4\n  5992: a4 = a3 >> 0x30\n  5995: u8 [a0 + 0x1e] = a4\n  5998: a4 = a3 >> 0x28\n  6001: u8 [a0 + 0x1d] = a4\n  6004: a4 = a3 >> 0x20\n  6007: u8 [a0 + 0x1c] = a4\n  6010: a4 = a3 >> 0x18\n  6013: u8 [a0 + 0x1b] = a4\n  6016: a4 = a3 >> 0x10\n  6019: u8 [a0 + 0x1a] = a4\n  6022: a4 = a3 >> 0x8\n  6025: u8 [a0 + 0x19] = a4\n  6028: u8 [a0 + 0x18] = a3\n  6031: u8 [a0 + 0x10] = a2\n  6034: u8 [a0 + 11] = 0\n  6037: u8 [a0 + 10] = 0\n  6040: u8 [a0 + 9] = 0\n  6043: u8 [a0 + 7] = 0\n  6046: u8 [a0 + 6] = 0\n  6049: u8 [a0 + 5] = 0\n  6052: u8 [a0 + 4] = 0\n  6055: u8 [a0 + 3] = 0\n  6058: u8 [a0 + 2] = 0\n  6061: u8 [a0 + 1] = 0\n  6064: u8 [a0 + 0] = 0\n  6066: a3 = a2 >> 0x38\n  6069: u8 [a0 + 0x17] = a3\n  6072: a3 = a2 >> 0x30\n  6075: u8 [a0 + 0x16] = a3\n  6078: a3 = a2 >> 0x28\n  6081: u8 [a0 + 0x15] = a3\n  6084: a3 = a2 >> 0x20\n  6087: u8 [a0 + 0x14] = a3\n  6090: a3 = a2 >> 0x18\n  6093: u8 [a0 + 0x13] = a3\n  6096: a3 = a2 >> 0x10\n  6099: u8 [a0 + 0x12] = a3\n  6102: a2 = a2 >> 0x8\n  6105: u8 [a0 + 0x11] = a2\n  6108: u8 [a0 + 0x8] = a1\n  6111: a2 = a1 >> 0x38\n  6114: u8 [a0 + 0xf] = a2\n  6117: a2 = a1 >> 0x30\n  6120: u8 [a0 + 0xe] = a2\n  6123: a2 = a1 >> 0x28\n  6126: u8 [a0 + 0xd] = a2\n  6129: a2 = a1 >> 0x20\n  6132: a3 = 0xffffffbc\n  6142: a4 = u64 [sp + 0x190]\n  6146: a3 = a4 <u a3\n  6149: a4 = u64 [sp + 0x198]\n  6153: a3 = 0 if a4 != 0\n  6155: a4 = u64 [sp + 0x178]\n  6159: a3 = 0 if a4 != 0\n  6161: u8 [a0 + 0xc] = a2\n  6164: jump @110 if a3 != 0\n      : @109 (gas: 1)\n  6167: jump @157\n      : @110 (gas: 6)\n  6170: a1 = 0x800000000\n  6180: u64 [sp + 0x178] = a1\n  6184: s1 = u64 [sp + 0x188]\n  6188: i32 a0 = s1 + 0x44\n  6191: a1 = 0x20\n  6194: ra = 82, jump @0\n      : @111 [@dyn 41] (gas: 124)\n  6199: a1 = u64 [sp + 0x160]\n  6203: a3 = reverse a1\n  6205: a1 = u64 [sp + 0x158]\n  6209: a2 = reverse a1\n  6211: a1 = a2 >> 0x38\n  6214: u64 [sp + 0x140] = a1\n  6218: u8 [a0 + 0x1f] = a1\n  6221: a1 = a2 >> 0x30\n  6224: u64 [sp + 0x138] = a1\n  6228: u8 [a0 + 0x1e] = a1\n  6231: a1 = a2 >> 0x28\n  6234: u64 [sp + 0x130] = a1\n  6238: u8 [a0 + 0x1d] = a1\n  6241: a1 = a2 >> 0x20\n  6244: u64 [sp + 0x128] = a1\n  6248: u8 [a0 + 0x1c] = a1\n  6251: a1 = a2 >> 0x18\n  6254: u64 [sp + 0x120] = a1\n  6258: u8 [a0 + 0x1b] = a1\n  6261: a1 = a2 >> 0x10\n  6264: u64 [sp + 0xd8] = a1\n  6268: u8 [a0 + 0x1a] = a1\n  6271: a1 = a2 >> 0x8\n  6274: u64 [sp + 0xd0] = a1\n  6278: u8 [a0 + 0x19] = a1\n  6281: u64 [sp + 0xc8] = a2\n  6285: u8 [a0 + 0x18] = a2\n  6288: u8 [a0 + 0x10] = a3\n  6291: a1 = a3 >> 0x38\n  6294: u64 [sp + 0xb8] = a1\n  6298: u8 [a0 + 0x17] = a1\n  6301: a1 = a3 >> 0x30\n  6304: u64 [sp + 0xb0] = a1\n  6308: u8 [a0 + 0x16] = a1\n  6311: a1 = a3 >> 0x28\n  6314: u64 [sp + 0xa8] = a1\n  6318: u8 [a0 + 0x15] = a1\n  6321: a1 = a3 >> 0x20\n  6324: u64 [sp + 0xa0] = a1\n  6328: u8 [a0 + 0x14] = a1\n  6331: a1 = a3 >> 0x18\n  6334: u64 [sp + 0x98] = a1\n  6338: u8 [a0 + 0x13] = a1\n  6341: a1 = a3 >> 0x10\n  6344: u64 [sp + 0x90] = a1\n  6348: u8 [a0 + 0x12] = a1\n  6351: u64 [sp + 0xc0] = a3\n  6355: a3 = a3 >> 0x8\n  6358: u64 [sp + 0x88] = a3\n  6362: u8 [a0 + 0x11] = a3\n  6365: a1 = u64 [sp + 0x168]\n  6369: a1 = reverse a1\n  6371: u8 [a0 + 0x8] = a1\n  6374: a2 = a1 >> 0x38\n  6377: u64 [sp + 0x70] = a2\n  6380: u8 [a0 + 0xf] = a2\n  6383: a2 = a1 >> 0x30\n  6386: u64 [sp + 0x68] = a2\n  6389: u8 [a0 + 0xe] = a2\n  6392: a2 = a1 >> 0x28\n  6395: u64 [sp + 0x60] = a2\n  6398: u8 [a0 + 0xd] = a2\n  6401: a2 = a1 >> 0x20\n  6404: u64 [sp + 0x58] = a2\n  6407: u8 [a0 + 0xc] = a2\n  6410: a2 = a1 >> 0x18\n  6413: u64 [sp + 0x50] = a2\n  6416: u8 [a0 + 0xb] = a2\n  6419: a2 = a1 >> 0x10\n  6422: u64 [sp + 0x48] = a2\n  6425: u8 [a0 + 0xa] = a2\n  6428: u64 [sp + 0x80] = a1\n  6432: a1 = a1 >> 0x8\n  6435: u64 [sp + 0x40] = a1\n  6438: u8 [a0 + 0x9] = a1\n  6441: a1 = u64 [sp + 0x170]\n  6445: a1 = reverse a1\n  6447: u8 [a0] = a1\n  6449: a2 = a1 >> 0x38\n  6452: u64 [sp + 0x38] = a2\n  6455: u8 [a0 + 0x7] = a2\n  6458: a2 = a1 >> 0x30\n  6461: u64 [sp + 0x30] = a2\n  6464: u8 [a0 + 0x6] = a2\n  6467: a2 = a1 >> 0x28\n  6470: u64 [sp + 0x28] = a2\n  6473: u8 [a0 + 0x5] = a2\n  6476: a2 = a1 >> 0x20\n  6479: u64 [sp + 0x20] = a2\n  6482: u8 [a0 + 0x4] = a2\n  6485: a2 = a1 >> 0x18\n  6488: u64 [sp + 0x18] = a2\n  6491: u8 [a0 + 0x3] = a2\n  6494: a2 = a1 >> 0x10\n  6497: u64 [sp + 0x10] = a2\n  6500: u8 [a0 + 0x2] = a2\n  6503: u64 [sp + 0x78] = a1\n  6506: a1 = a1 >> 0x8\n  6509: u64 [sp + 0x8] = a1\n  6512: u8 [a0 + 0x1] = a1\n  6515: ecalli 6 // 'ref_time_left'\n  6517: a0 = u64 [sp + 0x108]\n  6521: a0 = reverse a0\n  6523: a1 = a0 << 0x20\n  6526: a2 = u64 [sp + 0x110]\n  6530: a2 = reverse a2\n  6532: a2 = a2 >> 0x20\n  6535: a1 = a1 | a2\n  6538: a2 = u64 [sp + 0x118]\n  6542: a2 = reverse a2\n  6544: a3 = a2 << 0x20\n  6547: a0 = a0 >> 0x20\n  6550: a0 = a0 | a3\n  6553: a2 = a2 >> 0x20\n  6556: u64 [sp + 0x2e8] = a0\n  6560: u64 [sp + 0x2e0] = a1\n  6564: u32 [sp + 0x2f0] = a2\n  6568: u64 [sp + 792] = 0\n  6572: u64 [sp + 784] = 0\n  6576: u64 [sp + 776] = 0\n  6580: u64 [sp + 768] = 0\n  6584: a1 = 0x64\n  6587: a0 = s1\n  6589: ra = 84, jump @0\n      : @112 [@dyn 42] (gas: 4)\n  6594: u64 [sp + 0x150] = a0\n  6598: a1 = 0x20\n  6601: a0 = s1\n  6603: ra = 86, jump @0\n      : @113 [@dyn 43] (gas: 31)\n  6608: u32 [sp + 800] = 0x20\n  6613: u64 [sp + 856] = 0xffffffffffffffff\n  6618: u64 [sp + 848] = 0xffffffffffffffff\n  6623: u64 [sp + 840] = 0xffffffffffffffff\n  6628: u64 [sp + 832] = 0xffffffffffffffff\n  6633: a1 = sp + 0x2e0\n  6637: a1 = a1 << 0x20\n  6640: a1 = a1 >> 0x20\n  6643: s1 = u64 [sp + 0x178]\n  6647: s1 = s1 | a1\n  6650: a1 = sp + 0x300\n  6654: a1 = a1 << 0x20\n  6657: a1 = a1 >> 0x20\n  6660: a2 = sp + 0x340\n  6664: a2 = a2 << 0x20\n  6667: a3 = a2 | a1\n  6670: a1 = u64 [sp + 0x150]\n  6674: a1 = a1 << 0x20\n  6677: a1 = a1 >> 0x20\n  6680: a2 = 0x6400000000\n  6690: a4 = a1 | a2\n  6693: a0 = a0 << 0x20\n  6696: a0 = a0 >> 0x20\n  6699: a1 = sp + 0x320\n  6703: a1 = a1 << 0x20\n  6706: a5 = a1 | a0\n  6709: a1 = 0xffffffffffffffff\n  6712: a2 = 0xffffffffffffffff\n  6715: a0 = s1\n  6717: ecalli 1 // 'call'\n  6719: fallthrough\n      : @114 (gas: 1)\n  6720: jump @145 if a0 != 0\n      : @115 (gas: 2)\n  6724: ecalli 8 // 'return_data_size'\n  6726: fallthrough\n      : @116 (gas: 2)\n  6727: a1 = 0x20\n  6730: jump @118 if a0 >=u a1\n      : @117 (gas: 3)\n  6733: ecalli 8 // 'return_data_size'\n  6735: a1 = a0\n  6737: fallthrough\n      : @118 (gas: 28)\n  6738: a4 = 0\n  6740: a3 = u64 [sp + 0x180]\n  6744: a2 = u64 [sp + 0x190]\n  6748: s1 = u64 [sp + 0x198]\n  6752: a0 = a1 + 0x1f\n  6755: u64 [sp + 0x190] = a1\n  6759: a1 = a0 <u a1\n  6762: u64 [sp + 408] = 0\n  6766: a1 = a1 & 0x1\n  6769: a0 = a0 & 0xffffffffffffffe0\n  6772: a2 = a2 + a0\n  6775: u64 [sp + 0x180] = a2\n  6779: a0 = a2 <u a0\n  6782: s1 = s1 + a1\n  6785: s1 = s1 + a0\n  6788: a2 = s1 ^ a1\n  6791: a1 = s1 <u a1\n  6794: a1 = a0 if a2 == 0\n  6797: a0 = u64 [sp + 0x100]\n  6801: a1 = a1 + a0\n  6804: a0 = a1 <u a0\n  6807: a0 = a0 + a3\n  6810: u64 [sp + 0x150] = a1\n  6814: u64 [sp + 0x148] = a0\n  6818: a0 = a0 | a1\n  6821: a1 = s1 <u 0x1\n  6824: a1 = 0 if a0 != 0\n  6826: jump @160 if a1 == 0\n      : @119 (gas: 3)\n  6830: a0 = 0x40\n  6833: a1 = 0x20\n  6836: ra = 88, jump @0\n      : @120 [@dyn 44] (gas: 79)\n  6841: a1 = u64 [sp + 0x148]\n  6845: a1 = reverse a1\n  6847: a2 = u64 [sp + 0x150]\n  6851: a2 = reverse a2\n  6853: a3 = reverse s1\n  6855: a4 = u64 [sp + 0x180]\n  6859: a4 = reverse a4\n  6861: u8 [a0 + 0x18] = a4\n  6864: a5 = a4 >> 0x38\n  6867: u8 [a0 + 0x1f] = a5\n  6870: a5 = a4 >> 0x30\n  6873: u8 [a0 + 0x1e] = a5\n  6876: a5 = a4 >> 0x28\n  6879: u8 [a0 + 0x1d] = a5\n  6882: a5 = a4 >> 0x20\n  6885: u8 [a0 + 0x1c] = a5\n  6888: a5 = a4 >> 0x18\n  6891: u8 [a0 + 0x1b] = a5\n  6894: a5 = a4 >> 0x10\n  6897: u8 [a0 + 0x1a] = a5\n  6900: a4 = a4 >> 0x8\n  6903: u8 [a0 + 0x19] = a4\n  6906: u8 [a0 + 0x10] = a3\n  6909: a4 = a3 >> 0x38\n  6912: u8 [a0 + 0x17] = a4\n  6915: a4 = a3 >> 0x30\n  6918: u8 [a0 + 0x16] = a4\n  6921: a4 = a3 >> 0x28\n  6924: u8 [a0 + 0x15] = a4\n  6927: a4 = a3 >> 0x20\n  6930: u8 [a0 + 0x14] = a4\n  6933: a4 = a3 >> 0x18\n  6936: u8 [a0 + 0x13] = a4\n  6939: a4 = a3 >> 0x10\n  6942: u8 [a0 + 0x12] = a4\n  6945: a3 = a3 >> 0x8\n  6948: u8 [a0 + 0x11] = a3\n  6951: u8 [a0 + 0x8] = a2\n  6954: a3 = a2 >> 0x38\n  6957: u8 [a0 + 0xf] = a3\n  6960: a3 = a2 >> 0x30\n  6963: u8 [a0 + 0xe] = a3\n  6966: a3 = a2 >> 0x28\n  6969: u8 [a0 + 0xd] = a3\n  6972: a3 = a2 >> 0x20\n  6975: u8 [a0 + 0xc] = a3\n  6978: a3 = a2 >> 0x18\n  6981: u8 [a0 + 0xb] = a3\n  6984: a3 = a2 >> 0x10\n  6987: u8 [a0 + 0xa] = a3\n  6990: a2 = a2 >> 0x8\n  6993: u8 [a0 + 0x9] = a2\n  6996: u8 [a0] = a1\n  6998: a2 = a1 >> 0x38\n  7001: u8 [a0 + 0x7] = a2\n  7004: a2 = a1 >> 0x30\n  7007: u8 [a0 + 0x6] = a2\n  7010: a2 = a1 >> 0x28\n  7013: u8 [a0 + 0x5] = a2\n  7016: a2 = a1 >> 0x20\n  7019: u8 [a0 + 0x4] = a2\n  7022: a2 = a1 >> 0x18\n  7025: u8 [a0 + 0x3] = a2\n  7028: a2 = a1 >> 0x10\n  7031: u8 [a0 + 0x2] = a2\n  7034: a1 = a1 >> 0x8\n  7037: a5 = u64 [sp + 0x198]\n  7041: a2 = a5 >u 0\n  7043: a3 = u64 [sp + 0x190]\n  7047: a3 = a3 <u 0x20\n  7050: a3 = a3 ^ 0x1\n  7053: a3 = a2 if a5 != 0\n  7056: a2 = a5 >u 0\n  7058: a4 = a5 >u 0\n  7060: a4 = a2 if a5 == 0\n  7063: a2 = a5 | a5\n  7066: a4 = a3 if a2 == 0\n  7069: u8 [a0 + 0x1] = a1\n  7072: jump @158 if a4 == 0\n      : @121 (gas: 3)\n  7076: a1 = 0x20\n  7079: a0 = u64 [sp + 0x188]\n  7083: ra = 90, jump @0\n      : @122 [@dyn 45] (gas: 96)\n  7088: a1 = u8 [a0 + 0x9]\n  7091: a2 = u8 [a0 + 0x8]\n  7094: a3 = u8 [a0 + 0xa]\n  7097: a4 = u8 [a0 + 0xb]\n  7100: a1 = a1 << 0x8\n  7103: a1 = a1 | a2\n  7106: a3 = a3 << 0x10\n  7109: a4 = a4 << 0x18\n  7112: a3 = a3 | a4\n  7115: a1 = a1 | a3\n  7118: a2 = u8 [a0 + 0xd]\n  7121: a3 = u8 [a0 + 0xc]\n  7124: a4 = u8 [a0 + 0xe]\n  7127: a5 = u8 [a0 + 0xf]\n  7130: a2 = a2 << 0x8\n  7133: a2 = a2 | a3\n  7136: a4 = a4 << 0x10\n  7139: a5 = a5 << 0x18\n  7142: a4 = a4 | a5\n  7145: a2 = a2 | a4\n  7148: a2 = a2 << 0x20\n  7151: t0 = a2 | a1\n  7154: a2 = u8 [a0 + 0x1]\n  7157: a3 = u8 [a0]\n  7159: a4 = u8 [a0 + 0x2]\n  7162: a5 = u8 [a0 + 0x3]\n  7165: a2 = a2 << 0x8\n  7168: a2 = a2 | a3\n  7171: a4 = a4 << 0x10\n  7174: a5 = a5 << 0x18\n  7177: a4 = a4 | a5\n  7180: a2 = a2 | a4\n  7183: a3 = u8 [a0 + 0x5]\n  7186: a4 = u8 [a0 + 0x4]\n  7189: a5 = u8 [a0 + 0x6]\n  7192: s1 = u8 [a0 + 0x7]\n  7195: a3 = a3 << 0x8\n  7198: a3 = a3 | a4\n  7201: a5 = a5 << 0x10\n  7204: s1 = s1 << 0x18\n  7207: a5 = a5 | s1\n  7210: a3 = a3 | a5\n  7213: a3 = a3 << 0x20\n  7216: a2 = a2 | a3\n  7219: a3 = u8 [a0 + 0x19]\n  7222: a4 = u8 [a0 + 0x18]\n  7225: a5 = u8 [a0 + 0x1a]\n  7228: s1 = u8 [a0 + 0x1b]\n  7231: a3 = a3 << 0x8\n  7234: a3 = a3 | a4\n  7237: a5 = a5 << 0x10\n  7240: s1 = s1 << 0x18\n  7243: a5 = a5 | s1\n  7246: a3 = a3 | a5\n  7249: a4 = u8 [a0 + 0x1d]\n  7252: a5 = u8 [a0 + 0x1c]\n  7255: s1 = u8 [a0 + 0x1e]\n  7258: a1 = u8 [a0 + 0x1f]\n  7261: a4 = a4 << 0x8\n  7264: a4 = a4 | a5\n  7267: s1 = s1 << 0x10\n  7270: a1 = a1 << 0x18\n  7273: a1 = a1 | s1\n  7276: a1 = a1 | a4\n  7279: a1 = a1 << 0x20\n  7282: a3 = a3 | a1\n  7285: a1 = u8 [a0 + 0x11]\n  7288: a4 = u8 [a0 + 0x10]\n  7291: a5 = u8 [a0 + 0x12]\n  7294: s1 = u8 [a0 + 0x13]\n  7297: a1 = a1 << 0x8\n  7300: a1 = a1 | a4\n  7303: a5 = a5 << 0x10\n  7306: s1 = s1 << 0x18\n  7309: a5 = a5 | s1\n  7312: a1 = a1 | a5\n  7315: a4 = u8 [a0 + 0x15]\n  7318: a5 = u8 [a0 + 0x14]\n  7321: s1 = u8 [a0 + 0x16]\n  7324: a0 = u8 [a0 + 0x17]\n  7327: a4 = a4 << 0x8\n  7330: a4 = a4 | a5\n  7333: s1 = s1 << 0x10\n  7336: a0 = a0 << 0x18\n  7339: a0 = a0 | s1\n  7342: a0 = a0 | a4\n  7345: a0 = a0 << 0x20\n  7348: a0 = a0 | a1\n  7351: a1 = reverse a0\n  7353: a4 = reverse a3\n  7355: a4 = a4 <u 0x2\n  7358: a4 = 0 if a1 != 0\n  7360: a1 = t0 | a2\n  7363: a1 = reverse a1\n  7365: a4 = 0 if a1 != 0\n  7367: jump @158 if a4 == 0\n      : @123 (gas: 4)\n  7371: a0 = a0 | a2\n  7374: a1 = t0 | a3\n  7377: a0 = a0 | a1\n  7380: jump @146 if a0 == 0\n      : @124 (gas: 11)\n  7384: i32 a0 = sp + 0x360\n  7388: ecalli 5 // 'caller'\n  7390: a0 = i32 [sp + 0x370]\n  7394: u64 [sp + 0x150] = a0\n  7398: a0 = u64 [sp + 0x360]\n  7402: u64 [sp + 0x148] = a0\n  7406: a0 = u64 [sp + 0x368]\n  7410: u64 [sp + 0x118] = a0\n  7414: a0 = 0x40\n  7417: a1 = 0x20\n  7420: ra = 92, jump @0\n      : @125 [@dyn 46] (gas: 102)\n  7425: a1 = u8 [a0 + 0x11]\n  7428: a2 = u8 [a0 + 0x10]\n  7431: a3 = u8 [a0 + 0x12]\n  7434: a4 = u8 [a0 + 0x13]\n  7437: a1 = a1 << 0x8\n  7440: a1 = a1 | a2\n  7443: a3 = a3 << 0x10\n  7446: a4 = a4 << 0x18\n  7449: a3 = a3 | a4\n  7452: a1 = a1 | a3\n  7455: a2 = u8 [a0 + 0x15]\n  7458: a3 = u8 [a0 + 0x14]\n  7461: a4 = u8 [a0 + 0x16]\n  7464: a5 = u8 [a0 + 0x17]\n  7467: a2 = a2 << 0x8\n  7470: a2 = a2 | a3\n  7473: a4 = a4 << 0x10\n  7476: a5 = a5 << 0x18\n  7479: a4 = a4 | a5\n  7482: a2 = a2 | a4\n  7485: a2 = a2 << 0x20\n  7488: t0 = a2 | a1\n  7491: a2 = u8 [a0 + 0x1]\n  7494: a3 = u8 [a0]\n  7496: a4 = u8 [a0 + 0x2]\n  7499: a5 = u8 [a0 + 0x3]\n  7502: a2 = a2 << 0x8\n  7505: a2 = a2 | a3\n  7508: a4 = a4 << 0x10\n  7511: a5 = a5 << 0x18\n  7514: a4 = a4 | a5\n  7517: a2 = a2 | a4\n  7520: a3 = u8 [a0 + 0x5]\n  7523: a4 = u8 [a0 + 0x4]\n  7526: a5 = u8 [a0 + 0x6]\n  7529: s1 = u8 [a0 + 0x7]\n  7532: a3 = a3 << 0x8\n  7535: a3 = a3 | a4\n  7538: a5 = a5 << 0x10\n  7541: s1 = s1 << 0x18\n  7544: a5 = a5 | s1\n  7547: a3 = a3 | a5\n  7550: a3 = a3 << 0x20\n  7553: a2 = a2 | a3\n  7556: a3 = u8 [a0 + 0x19]\n  7559: a4 = u8 [a0 + 0x18]\n  7562: a5 = u8 [a0 + 0x1a]\n  7565: s1 = u8 [a0 + 0x1b]\n  7568: a3 = a3 << 0x8\n  7571: a3 = a3 | a4\n  7574: a5 = a5 << 0x10\n  7577: s1 = s1 << 0x18\n  7580: a5 = a5 | s1\n  7583: a3 = a3 | a5\n  7586: a4 = u8 [a0 + 0x1d]\n  7589: a5 = u8 [a0 + 0x1c]\n  7592: s1 = u8 [a0 + 0x1e]\n  7595: a1 = u8 [a0 + 0x1f]\n  7598: a4 = a4 << 0x8\n  7601: a4 = a4 | a5\n  7604: s1 = s1 << 0x10\n  7607: a1 = a1 << 0x18\n  7610: a1 = a1 | s1\n  7613: a1 = a1 | a4\n  7616: a1 = a1 << 0x20\n  7619: a3 = a3 | a1\n  7622: a1 = u8 [a0 + 0x9]\n  7625: a4 = u8 [a0 + 0x8]\n  7628: a5 = u8 [a0 + 0xa]\n  7631: s1 = u8 [a0 + 0xb]\n  7634: a1 = a1 << 0x8\n  7637: a1 = a1 | a4\n  7640: a5 = a5 << 0x10\n  7643: s1 = s1 << 0x18\n  7646: a5 = a5 | s1\n  7649: a1 = a1 | a5\n  7652: a4 = u8 [a0 + 0xd]\n  7655: a5 = u8 [a0 + 0xc]\n  7658: s1 = u8 [a0 + 0xe]\n  7661: a0 = u8 [a0 + 0xf]\n  7664: a4 = a4 << 0x8\n  7667: a4 = a4 | a5\n  7670: s1 = s1 << 0x10\n  7673: a0 = a0 << 0x18\n  7676: a0 = a0 | s1\n  7679: a0 = a0 | a4\n  7682: a0 = a0 << 0x20\n  7685: a0 = a0 | a1\n  7688: s1 = reverse a0\n  7690: a3 = reverse a3\n  7692: a1 = reverse a2\n  7694: a0 = reverse t0\n  7696: u64 [sp + 0x198] = a0\n  7700: u64 [sp + 0x180] = a1\n  7704: a0 = a0 | a1\n  7707: a1 = a3 | s1\n  7710: a1 = a1 | a0\n  7713: a1 = a1 >> 0x20\n  7716: a0 = a0 | s1\n  7719: a0 = a0 << 0x20\n  7722: a0 = a0 | a1\n  7725: jump @157 if a0 != 0\n      : @126 (gas: 5)\n  7729: i32 a0 = a3 + 0\n  7731: a1 = 0x20\n  7734: u64 [sp + 0x188] = a0\n  7738: u64 [sp + 0x190] = a3\n  7742: ra = 94, jump @0\n      : @127 [@dyn 47] (gas: 45)\n  7747: u8 [a0 + 31] = 0\n  7750: u8 [a0 + 30] = 0\n  7753: u8 [a0 + 29] = 0\n  7756: u8 [a0 + 28] = 0\n  7759: u8 [a0 + 27] = 0\n  7762: u8 [a0 + 26] = 0\n  7765: u8 [a0 + 25] = 0\n  7768: u8 [a0 + 24] = 0\n  7771: u8 [a0 + 23] = 0\n  7774: u8 [a0 + 22] = 0\n  7777: u8 [a0 + 21] = 0\n  7780: u8 [a0 + 20] = 0\n  7783: u8 [a0 + 19] = 0\n  7786: u8 [a0 + 18] = 0\n  7789: u8 [a0 + 17] = 0\n  7792: u8 [a0 + 16] = 0\n  7795: u8 [a0 + 15] = 0\n  7798: u8 [a0 + 14] = 0\n  7801: u8 [a0 + 13] = 0\n  7804: u8 [a0 + 12] = 0\n  7807: u8 [a0 + 11] = 0\n  7810: u8 [a0 + 10] = 0\n  7813: u8 [a0 + 9] = 0\n  7816: u8 [a0 + 8] = 0\n  7819: u8 [a0 + 7] = 0\n  7822: u8 [a0 + 6] = 0\n  7825: u8 [a0 + 5] = 0\n  7828: u8 [a0 + 3] = 0xbb\n  7833: u8 [a0 + 2] = 0x9c\n  7838: u8 [a0 + 1] = 0x5\n  7842: u8 [a0 + 0] = 0xa9\n  7846: u64 [sp + 0x100] = s1\n  7850: a3 = u64 [sp + 0x180]\n  7854: a3 = a3 | s1\n  7857: a1 = 0x100000000\n  7867: u64 [sp + 0x108] = a1\n  7871: a1 = 0xfffffffc\n  7881: a2 = u64 [sp + 0x190]\n  7885: a1 = a2 <u a1\n  7888: a2 = u64 [sp + 0x198]\n  7892: a1 = 0 if a2 != 0\n  7894: u64 [sp + 0x110] = a3\n  7898: a1 = 0 if a3 != 0\n  7900: u8 [a0 + 4] = 0\n  7903: jump @157 if a1 == 0\n      : @128 (gas: 19)\n  7907: a0 = u64 [sp + 0x118]\n  7911: a0 = reverse a0\n  7913: a1 = a0 >> 0x20\n  7916: a2 = u64 [sp + 0x148]\n  7920: a2 = reverse a2\n  7922: a3 = a2 << 0x20\n  7925: a1 = a1 | a3\n  7928: u64 [sp + 0x148] = a1\n  7932: a0 = a0 << 0x20\n  7935: a1 = u64 [sp + 0x150]\n  7939: a1 = reverse a1\n  7941: a1 = a1 >> 0x20\n  7944: a0 = a0 | a1\n  7947: u64 [sp + 0x150] = a0\n  7951: s1 = a2 >> 0x20\n  7954: a0 = u64 [sp + 0x188]\n  7958: i32 a0 = a0 + 0x4\n  7961: a1 = 0x20\n  7964: ra = 96, jump @0\n      : @129 [@dyn 48] (gas: 64)\n  7969: a1 = reverse s1\n  7971: a2 = u64 [sp + 0x148]\n  7975: a2 = reverse a2\n  7977: a3 = u64 [sp + 0x150]\n  7981: a3 = reverse a3\n  7983: a4 = a3 >> 0x38\n  7986: u8 [a0 + 0x1f] = a4\n  7989: a4 = a3 >> 0x30\n  7992: u8 [a0 + 0x1e] = a4\n  7995: a4 = a3 >> 0x28\n  7998: u8 [a0 + 0x1d] = a4\n  8001: a4 = a3 >> 0x20\n  8004: u8 [a0 + 0x1c] = a4\n  8007: a4 = a3 >> 0x18\n  8010: u8 [a0 + 0x1b] = a4\n  8013: a4 = a3 >> 0x10\n  8016: u8 [a0 + 0x1a] = a4\n  8019: a4 = a3 >> 0x8\n  8022: u8 [a0 + 0x19] = a4\n  8025: u8 [a0 + 0x18] = a3\n  8028: u8 [a0 + 0x10] = a2\n  8031: u8 [a0 + 11] = 0\n  8034: u8 [a0 + 10] = 0\n  8037: u8 [a0 + 9] = 0\n  8040: u8 [a0 + 7] = 0\n  8043: u8 [a0 + 6] = 0\n  8046: u8 [a0 + 5] = 0\n  8049: u8 [a0 + 4] = 0\n  8052: u8 [a0 + 3] = 0\n  8055: u8 [a0 + 2] = 0\n  8058: u8 [a0 + 1] = 0\n  8061: u8 [a0 + 0] = 0\n  8063: a3 = a2 >> 0x38\n  8066: u8 [a0 + 0x17] = a3\n  8069: a3 = a2 >> 0x30\n  8072: u8 [a0 + 0x16] = a3\n  8075: a3 = a2 >> 0x28\n  8078: u8 [a0 + 0x15] = a3\n  8081: a3 = a2 >> 0x20\n  8084: u8 [a0 + 0x14] = a3\n  8087: a3 = a2 >> 0x18\n  8090: u8 [a0 + 0x13] = a3\n  8093: a3 = a2 >> 0x10\n  8096: u8 [a0 + 0x12] = a3\n  8099: a2 = a2 >> 0x8\n  8102: u8 [a0 + 0x11] = a2\n  8105: u8 [a0 + 0x8] = a1\n  8108: a2 = a1 >> 0x38\n  8111: u8 [a0 + 0xf] = a2\n  8114: a2 = a1 >> 0x30\n  8117: u8 [a0 + 0xe] = a2\n  8120: a2 = a1 >> 0x28\n  8123: u8 [a0 + 0xd] = a2\n  8126: a1 = a1 >> 0x20\n  8129: a2 = u64 [sp + 0x108]\n  8133: a2 = a2 + 0xffffffffffffffdc\n  8136: a3 = u64 [sp + 0x190]\n  8140: a2 = a3 <u a2\n  8143: a3 = u64 [sp + 0x198]\n  8147: a2 = 0 if a3 != 0\n  8149: a3 = u64 [sp + 0x110]\n  8153: a2 = 0 if a3 != 0\n  8155: u8 [a0 + 0xc] = a1\n  8158: jump @157 if a2 == 0\n      : @130 (gas: 4)\n  8162: s1 = u64 [sp + 0x188]\n  8166: i32 a0 = s1 + 0x24\n  8169: a1 = 0x20\n  8172: ra = 98, jump @0\n      : @131 [@dyn 49] (gas: 88)\n  8177: a1 = u64 [sp + 0xc0]\n  8181: u8 [a0 + 0x10] = a1\n  8184: a1 = u64 [sp + 0x70]\n  8187: u8 [a0 + 0xf] = a1\n  8190: a1 = u64 [sp + 0x68]\n  8193: u8 [a0 + 0xe] = a1\n  8196: a1 = u64 [sp + 0x60]\n  8199: u8 [a0 + 0xd] = a1\n  8202: a1 = u64 [sp + 0x58]\n  8205: u8 [a0 + 0xc] = a1\n  8208: a1 = u64 [sp + 0x50]\n  8211: u8 [a0 + 0xb] = a1\n  8214: a1 = u64 [sp + 0x48]\n  8217: u8 [a0 + 0xa] = a1\n  8220: a1 = u64 [sp + 0x40]\n  8223: u8 [a0 + 0x9] = a1\n  8226: a1 = u64 [sp + 0x80]\n  8230: u8 [a0 + 0x8] = a1\n  8233: a1 = u64 [sp + 0x38]\n  8236: u8 [a0 + 0x7] = a1\n  8239: a1 = u64 [sp + 0x30]\n  8242: u8 [a0 + 0x6] = a1\n  8245: a1 = u64 [sp + 0x28]\n  8248: u8 [a0 + 0x5] = a1\n  8251: a1 = u64 [sp + 0x20]\n  8254: u8 [a0 + 0x4] = a1\n  8257: a1 = u64 [sp + 0x18]\n  8260: u8 [a0 + 0x3] = a1\n  8263: a1 = u64 [sp + 0x10]\n  8266: u8 [a0 + 0x2] = a1\n  8269: a1 = u64 [sp + 0x8]\n  8272: u8 [a0 + 0x1] = a1\n  8275: a1 = u64 [sp + 0x78]\n  8278: u8 [a0] = a1\n  8280: a1 = u64 [sp + 0xc8]\n  8284: u8 [a0 + 0x18] = a1\n  8287: a1 = u64 [sp + 0xb8]\n  8291: u8 [a0 + 0x17] = a1\n  8294: a1 = u64 [sp + 0xb0]\n  8298: u8 [a0 + 0x16] = a1\n  8301: a1 = u64 [sp + 0xa8]\n  8305: u8 [a0 + 0x15] = a1\n  8308: a1 = u64 [sp + 0xa0]\n  8312: u8 [a0 + 0x14] = a1\n  8315: a1 = u64 [sp + 0x98]\n  8319: u8 [a0 + 0x13] = a1\n  8322: a1 = u64 [sp + 0x90]\n  8326: u8 [a0 + 0x12] = a1\n  8329: a1 = u64 [sp + 0x88]\n  8333: u8 [a0 + 0x11] = a1\n  8336: a1 = u64 [sp + 0x140]\n  8340: u8 [a0 + 0x1f] = a1\n  8343: a1 = u64 [sp + 0x138]\n  8347: u8 [a0 + 0x1e] = a1\n  8350: a1 = u64 [sp + 0x130]\n  8354: u8 [a0 + 0x1d] = a1\n  8357: a1 = u64 [sp + 0x128]\n  8361: u8 [a0 + 0x1c] = a1\n  8364: a1 = u64 [sp + 0x120]\n  8368: u8 [a0 + 0x1b] = a1\n  8371: a1 = u64 [sp + 0xd8]\n  8375: u8 [a0 + 0x1a] = a1\n  8378: a1 = u64 [sp + 0xd0]\n  8382: u8 [a0 + 0x19] = a1\n  8385: ecalli 6 // 'ref_time_left'\n  8387: a0 = u64 [sp + 0xe8]\n  8391: a0 = reverse a0\n  8393: a1 = a0 << 0x20\n  8396: a2 = u64 [sp + 0xf0]\n  8400: a2 = reverse a2\n  8402: a2 = a2 >> 0x20\n  8405: a1 = a1 | a2\n  8408: a2 = u64 [sp + 0xf8]\n  8412: a2 = reverse a2\n  8414: a3 = a2 << 0x20\n  8417: a0 = a0 >> 0x20\n  8420: a0 = a0 | a3\n  8423: a2 = a2 >> 0x20\n  8426: u64 [sp + 0x388] = a0\n  8430: u64 [sp + 0x380] = a1\n  8434: u32 [sp + 0x390] = a2\n  8438: u64 [sp + 952] = 0\n  8442: u64 [sp + 944] = 0\n  8446: u64 [sp + 936] = 0\n  8450: u64 [sp + 928] = 0\n  8454: a1 = 0x44\n  8457: a0 = s1\n  8459: ra = 100, jump @0\n      : @132 [@dyn 50] (gas: 4)\n  8464: u64 [sp + 0x150] = a0\n  8468: a1 = 0x20\n  8471: a0 = s1\n  8473: ra = 102, jump @0\n      : @133 [@dyn 51] (gas: 31)\n  8478: u32 [sp + 960] = 0x20\n  8483: u64 [sp + 1016] = 0xffffffffffffffff\n  8488: u64 [sp + 1008] = 0xffffffffffffffff\n  8493: u64 [sp + 1000] = 0xffffffffffffffff\n  8498: u64 [sp + 992] = 0xffffffffffffffff\n  8503: a1 = sp + 0x380\n  8507: a1 = a1 << 0x20\n  8510: a1 = a1 >> 0x20\n  8513: s1 = u64 [sp + 0x178]\n  8517: s1 = s1 | a1\n  8520: a1 = sp + 0x3a0\n  8524: a1 = a1 << 0x20\n  8527: a1 = a1 >> 0x20\n  8530: a2 = sp + 0x3e0\n  8534: a2 = a2 << 0x20\n  8537: a3 = a2 | a1\n  8540: a1 = u64 [sp + 0x150]\n  8544: a1 = a1 << 0x20\n  8547: a1 = a1 >> 0x20\n  8550: a2 = 0x4400000000\n  8560: a4 = a1 | a2\n  8563: a0 = a0 << 0x20\n  8566: a0 = a0 >> 0x20\n  8569: a1 = sp + 0x3c0\n  8573: a1 = a1 << 0x20\n  8576: a5 = a1 | a0\n  8579: a1 = 0xffffffffffffffff\n  8582: a2 = 0xffffffffffffffff\n  8585: a0 = s1\n  8587: ecalli 1 // 'call'\n  8589: fallthrough\n      : @134 (gas: 1)\n  8590: jump @145 if a0 != 0\n      : @135 (gas: 2)\n  8594: ecalli 8 // 'return_data_size'\n  8596: fallthrough\n      : @136 (gas: 2)\n  8597: a1 = 0x20\n  8600: jump @138 if a0 >=u a1\n      : @137 (gas: 3)\n  8603: ecalli 8 // 'return_data_size'\n  8605: a1 = a0\n  8607: fallthrough\n      : @138 (gas: 27)\n  8608: a3 = u64 [sp + 0x180]\n  8612: s1 = u64 [sp + 0x198]\n  8616: a0 = a1 + 0x1f\n  8619: u64 [sp + 0x180] = a1\n  8623: a1 = a0 <u a1\n  8626: u64 [sp + 408] = 0\n  8630: a1 = a1 & 0x1\n  8633: a0 = a0 & 0xffffffffffffffe0\n  8636: a2 = u64 [sp + 0x190]\n  8640: a2 = a2 + a0\n  8643: u64 [sp + 0x190] = a2\n  8647: a0 = a2 <u a0\n  8650: s1 = s1 + a1\n  8653: s1 = s1 + a0\n  8656: a2 = s1 ^ a1\n  8659: a1 = s1 <u a1\n  8662: a1 = a0 if a2 == 0\n  8665: a0 = u64 [sp + 0x100]\n  8669: a1 = a1 + a0\n  8672: a0 = a1 <u a0\n  8675: a0 = a0 + a3\n  8678: u64 [sp + 0x178] = a1\n  8682: u64 [sp + 0x150] = a0\n  8686: a0 = a0 | a1\n  8689: a1 = s1 <u 0x1\n  8692: a1 = 0 if a0 != 0\n  8694: jump @162 if a1 == 0\n      : @139 (gas: 3)\n  8698: a0 = 0x40\n  8701: a1 = 0x20\n  8704: ra = 104, jump @0\n      : @140 [@dyn 52] (gas: 79)\n  8709: a1 = u64 [sp + 0x150]\n  8713: a1 = reverse a1\n  8715: a2 = u64 [sp + 0x178]\n  8719: a2 = reverse a2\n  8721: a3 = reverse s1\n  8723: a4 = u64 [sp + 0x190]\n  8727: a4 = reverse a4\n  8729: u8 [a0 + 0x18] = a4\n  8732: a5 = a4 >> 0x38\n  8735: u8 [a0 + 0x1f] = a5\n  8738: a5 = a4 >> 0x30\n  8741: u8 [a0 + 0x1e] = a5\n  8744: a5 = a4 >> 0x28\n  8747: u8 [a0 + 0x1d] = a5\n  8750: a5 = a4 >> 0x20\n  8753: u8 [a0 + 0x1c] = a5\n  8756: a5 = a4 >> 0x18\n  8759: u8 [a0 + 0x1b] = a5\n  8762: a5 = a4 >> 0x10\n  8765: u8 [a0 + 0x1a] = a5\n  8768: a4 = a4 >> 0x8\n  8771: u8 [a0 + 0x19] = a4\n  8774: u8 [a0 + 0x10] = a3\n  8777: a4 = a3 >> 0x38\n  8780: u8 [a0 + 0x17] = a4\n  8783: a4 = a3 >> 0x30\n  8786: u8 [a0 + 0x16] = a4\n  8789: a4 = a3 >> 0x28\n  8792: u8 [a0 + 0x15] = a4\n  8795: a4 = a3 >> 0x20\n  8798: u8 [a0 + 0x14] = a4\n  8801: a4 = a3 >> 0x18\n  8804: u8 [a0 + 0x13] = a4\n  8807: a4 = a3 >> 0x10\n  8810: u8 [a0 + 0x12] = a4\n  8813: a3 = a3 >> 0x8\n  8816: u8 [a0 + 0x11] = a3\n  8819: u8 [a0 + 0x8] = a2\n  8822: a3 = a2 >> 0x38\n  8825: u8 [a0 + 0xf] = a3\n  8828: a3 = a2 >> 0x30\n  8831: u8 [a0 + 0xe] = a3\n  8834: a3 = a2 >> 0x28\n  8837: u8 [a0 + 0xd] = a3\n  8840: a3 = a2 >> 0x20\n  8843: u8 [a0 + 0xc] = a3\n  8846: a3 = a2 >> 0x18\n  8849: u8 [a0 + 0xb] = a3\n  8852: a3 = a2 >> 0x10\n  8855: u8 [a0 + 0xa] = a3\n  8858: a2 = a2 >> 0x8\n  8861: u8 [a0 + 0x9] = a2\n  8864: u8 [a0] = a1\n  8866: a2 = a1 >> 0x38\n  8869: u8 [a0 + 0x7] = a2\n  8872: a2 = a1 >> 0x30\n  8875: u8 [a0 + 0x6] = a2\n  8878: a2 = a1 >> 0x28\n  8881: u8 [a0 + 0x5] = a2\n  8884: a2 = a1 >> 0x20\n  8887: u8 [a0 + 0x4] = a2\n  8890: a2 = a1 >> 0x18\n  8893: u8 [a0 + 0x3] = a2\n  8896: a2 = a1 >> 0x10\n  8899: u8 [a0 + 0x2] = a2\n  8902: a1 = a1 >> 0x8\n  8905: a5 = u64 [sp + 0x198]\n  8909: a2 = a5 >u 0\n  8911: a3 = u64 [sp + 0x180]\n  8915: a3 = a3 <u 0x20\n  8918: a3 = a3 ^ 0x1\n  8921: a3 = a2 if a5 != 0\n  8924: a2 = a5 >u 0\n  8926: a4 = a5 >u 0\n  8928: a4 = a2 if a5 == 0\n  8931: a2 = a5 | a5\n  8934: a4 = a3 if a2 == 0\n  8937: u8 [a0 + 0x1] = a1\n  8940: jump @158 if a4 == 0\n      : @141 (gas: 3)\n  8944: a1 = 0x20\n  8947: a0 = u64 [sp + 0x188]\n  8951: ra = 106, jump @0\n      : @142 [@dyn 53] (gas: 96)\n  8956: a1 = u8 [a0 + 0x9]\n  8959: a2 = u8 [a0 + 0x8]\n  8962: a3 = u8 [a0 + 0xa]\n  8965: a4 = u8 [a0 + 0xb]\n  8968: a1 = a1 << 0x8\n  8971: a1 = a1 | a2\n  8974: a3 = a3 << 0x10\n  8977: a4 = a4 << 0x18\n  8980: a3 = a3 | a4\n  8983: a1 = a1 | a3\n  8986: a2 = u8 [a0 + 0xd]\n  8989: a3 = u8 [a0 + 0xc]\n  8992: a4 = u8 [a0 + 0xe]\n  8995: a5 = u8 [a0 + 0xf]\n  8998: a2 = a2 << 0x8\n  9001: a2 = a2 | a3\n  9004: a4 = a4 << 0x10\n  9007: a5 = a5 << 0x18\n  9010: a4 = a4 | a5\n  9013: a2 = a2 | a4\n  9016: a2 = a2 << 0x20\n  9019: t0 = a2 | a1\n  9022: a2 = u8 [a0 + 0x1]\n  9025: a3 = u8 [a0]\n  9027: a4 = u8 [a0 + 0x2]\n  9030: a5 = u8 [a0 + 0x3]\n  9033: a2 = a2 << 0x8\n  9036: a2 = a2 | a3\n  9039: a4 = a4 << 0x10\n  9042: a5 = a5 << 0x18\n  9045: a4 = a4 | a5\n  9048: a2 = a2 | a4\n  9051: a3 = u8 [a0 + 0x5]\n  9054: a4 = u8 [a0 + 0x4]\n  9057: a5 = u8 [a0 + 0x6]\n  9060: s1 = u8 [a0 + 0x7]\n  9063: a3 = a3 << 0x8\n  9066: a3 = a3 | a4\n  9069: a5 = a5 << 0x10\n  9072: s1 = s1 << 0x18\n  9075: a5 = a5 | s1\n  9078: a3 = a3 | a5\n  9081: a3 = a3 << 0x20\n  9084: a2 = a2 | a3\n  9087: a3 = u8 [a0 + 0x19]\n  9090: a4 = u8 [a0 + 0x18]\n  9093: a5 = u8 [a0 + 0x1a]\n  9096: s1 = u8 [a0 + 0x1b]\n  9099: a3 = a3 << 0x8\n  9102: a3 = a3 | a4\n  9105: a5 = a5 << 0x10\n  9108: s1 = s1 << 0x18\n  9111: a5 = a5 | s1\n  9114: a3 = a3 | a5\n  9117: a4 = u8 [a0 + 0x1d]\n  9120: a5 = u8 [a0 + 0x1c]\n  9123: s1 = u8 [a0 + 0x1e]\n  9126: a1 = u8 [a0 + 0x1f]\n  9129: a4 = a4 << 0x8\n  9132: a4 = a4 | a5\n  9135: s1 = s1 << 0x10\n  9138: a1 = a1 << 0x18\n  9141: a1 = a1 | s1\n  9144: a1 = a1 | a4\n  9147: a1 = a1 << 0x20\n  9150: a3 = a3 | a1\n  9153: a1 = u8 [a0 + 0x11]\n  9156: a4 = u8 [a0 + 0x10]\n  9159: a5 = u8 [a0 + 0x12]\n  9162: s1 = u8 [a0 + 0x13]\n  9165: a1 = a1 << 0x8\n  9168: a1 = a1 | a4\n  9171: a5 = a5 << 0x10\n  9174: s1 = s1 << 0x18\n  9177: a5 = a5 | s1\n  9180: a1 = a1 | a5\n  9183: a4 = u8 [a0 + 0x15]\n  9186: a5 = u8 [a0 + 0x14]\n  9189: s1 = u8 [a0 + 0x16]\n  9192: a0 = u8 [a0 + 0x17]\n  9195: a4 = a4 << 0x8\n  9198: a4 = a4 | a5\n  9201: s1 = s1 << 0x10\n  9204: a0 = a0 << 0x18\n  9207: a0 = a0 | s1\n  9210: a0 = a0 | a4\n  9213: a0 = a0 << 0x20\n  9216: a0 = a0 | a1\n  9219: a1 = reverse a0\n  9221: a4 = reverse a3\n  9223: a4 = a4 <u 0x2\n  9226: a4 = 0 if a1 != 0\n  9228: a1 = t0 | a2\n  9231: a1 = reverse a1\n  9233: a4 = 0 if a1 != 0\n  9235: jump @158 if a4 == 0\n      : @143 (gas: 4)\n  9239: a0 = a0 | a2\n  9242: a1 = t0 | a3\n  9245: a0 = a0 | a1\n  9248: jump @151 if a0 == 0\n      : @144 (gas: 15)\n  9252: a0 = u64 [sp + 0x158]\n  9256: a1 = u64 [sp + 0xe0]\n  9260: u64 [a1] = a0\n  9262: a0 = u64 [sp + 0x160]\n  9266: u64 [a1 + 0x8] = a0\n  9269: a0 = u64 [sp + 0x168]\n  9273: u64 [a1 + 0x10] = a0\n  9276: a0 = u64 [sp + 0x170]\n  9280: u64 [a1 + 0x18] = a0\n  9283: sp = s0 + 0xfffffffffffffbe0\n  9287: ra = u64 [sp + 0x418]\n  9291: s0 = u64 [sp + 0x410]\n  9295: s1 = u64 [sp + 0x408]\n  9299: sp = sp + 0x420\n  9303: ret\n      : @145 (gas: 11)\n  9305: ra = 0x6c\n  9308: sp = sp + 0xffffffffffffffc0\n  9311: u64 [sp + 0x38] = ra\n  9314: u64 [sp + 0x30] = s0\n  9317: u64 [sp + 0x28] = s1\n  9320: s0 = sp + 0x40\n  9323: sp = sp & 0xffffffffffffffe0\n  9326: a0 = 0x40\n  9329: a1 = 0x20\n  9332: ra = 0x34\n  9335: jump @0\n      : @146 [@dyn 54] (gas: 3)\n  9338: a0 = 0x40\n  9341: a1 = 0x20\n  9344: ra = 110, jump @0\n      : @147 [@dyn 55] (gas: 103)\n  9349: a1 = u8 [a0 + 0x11]\n  9352: a2 = u8 [a0 + 0x10]\n  9355: a3 = u8 [a0 + 0x12]\n  9358: a4 = u8 [a0 + 0x13]\n  9361: a1 = a1 << 0x8\n  9364: a1 = a1 | a2\n  9367: a3 = a3 << 0x10\n  9370: a4 = a4 << 0x18\n  9373: a3 = a3 | a4\n  9376: a1 = a1 | a3\n  9379: a2 = u8 [a0 + 0x15]\n  9382: a3 = u8 [a0 + 0x14]\n  9385: a4 = u8 [a0 + 0x16]\n  9388: a5 = u8 [a0 + 0x17]\n  9391: a2 = a2 << 0x8\n  9394: a2 = a2 | a3\n  9397: a4 = a4 << 0x10\n  9400: a5 = a5 << 0x18\n  9403: a4 = a4 | a5\n  9406: a2 = a2 | a4\n  9409: a2 = a2 << 0x20\n  9412: t0 = a2 | a1\n  9415: a2 = u8 [a0 + 0x1]\n  9418: a3 = u8 [a0]\n  9420: a4 = u8 [a0 + 0x2]\n  9423: a5 = u8 [a0 + 0x3]\n  9426: a2 = a2 << 0x8\n  9429: a2 = a2 | a3\n  9432: a4 = a4 << 0x10\n  9435: a5 = a5 << 0x18\n  9438: a4 = a4 | a5\n  9441: a2 = a2 | a4\n  9444: a3 = u8 [a0 + 0x5]\n  9447: a4 = u8 [a0 + 0x4]\n  9450: a5 = u8 [a0 + 0x6]\n  9453: s1 = u8 [a0 + 0x7]\n  9456: a3 = a3 << 0x8\n  9459: a3 = a3 | a4\n  9462: a5 = a5 << 0x10\n  9465: s1 = s1 << 0x18\n  9468: a5 = a5 | s1\n  9471: a3 = a3 | a5\n  9474: a3 = a3 << 0x20\n  9477: a2 = a2 | a3\n  9480: a3 = u8 [a0 + 0x19]\n  9483: a4 = u8 [a0 + 0x18]\n  9486: a5 = u8 [a0 + 0x1a]\n  9489: s1 = u8 [a0 + 0x1b]\n  9492: a3 = a3 << 0x8\n  9495: a3 = a3 | a4\n  9498: a5 = a5 << 0x10\n  9501: s1 = s1 << 0x18\n  9504: a5 = a5 | s1\n  9507: a3 = a3 | a5\n  9510: a4 = u8 [a0 + 0x1d]\n  9513: a5 = u8 [a0 + 0x1c]\n  9516: s1 = u8 [a0 + 0x1e]\n  9519: a1 = u8 [a0 + 0x1f]\n  9522: a4 = a4 << 0x8\n  9525: a4 = a4 | a5\n  9528: s1 = s1 << 0x10\n  9531: a1 = a1 << 0x18\n  9534: a1 = a1 | s1\n  9537: a1 = a1 | a4\n  9540: a1 = a1 << 0x20\n  9543: a3 = a3 | a1\n  9546: a1 = u8 [a0 + 0x9]\n  9549: a4 = u8 [a0 + 0x8]\n  9552: a5 = u8 [a0 + 0xa]\n  9555: s1 = u8 [a0 + 0xb]\n  9558: a1 = a1 << 0x8\n  9561: a1 = a1 | a4\n  9564: a5 = a5 << 0x10\n  9567: s1 = s1 << 0x18\n  9570: a5 = a5 | s1\n  9573: a1 = a1 | a5\n  9576: a4 = u8 [a0 + 0xd]\n  9579: a5 = u8 [a0 + 0xc]\n  9582: s1 = u8 [a0 + 0xe]\n  9585: a0 = u8 [a0 + 0xf]\n  9588: a4 = a4 << 0x8\n  9591: a4 = a4 | a5\n  9594: s1 = s1 << 0x10\n  9597: a0 = a0 << 0x18\n  9600: a0 = a0 | s1\n  9603: a0 = a0 | a4\n  9606: a0 = a0 << 0x20\n  9609: a0 = a0 | a1\n  9612: s1 = reverse a0\n  9614: a1 = reverse a3\n  9616: a2 = reverse a2\n  9618: a0 = reverse t0\n  9620: u64 [sp + 0x198] = a0\n  9624: u64 [sp + 0x190] = a2\n  9628: a0 = a0 | a2\n  9631: a2 = a1\n  9633: a1 = a1 | s1\n  9636: a1 = a1 | a0\n  9639: a1 = a1 >> 0x20\n  9642: a0 = a0 | s1\n  9645: a0 = a0 << 0x20\n  9648: a0 = a0 | a1\n  9651: jump @157 if a0 != 0\n      : @148 (gas: 5)\n  9655: u64 [sp + 0x188] = a2\n  9659: i32 a0 = a2 + 0\n  9661: a1 = 0x20\n  9664: u64 [sp + 0x180] = a0\n  9668: ra = 112, jump @0\n      : @149 [@dyn 56] (gas: 50)\n  9673: u8 [a0 + 31] = 0\n  9676: u8 [a0 + 30] = 0\n  9679: u8 [a0 + 29] = 0\n  9682: u8 [a0 + 28] = 0\n  9685: u8 [a0 + 27] = 0\n  9688: u8 [a0 + 26] = 0\n  9691: u8 [a0 + 25] = 0\n  9694: u8 [a0 + 24] = 0\n  9697: u8 [a0 + 23] = 0\n  9700: u8 [a0 + 22] = 0\n  9703: u8 [a0 + 21] = 0\n  9706: u8 [a0 + 20] = 0\n  9709: u8 [a0 + 19] = 0\n  9712: u8 [a0 + 18] = 0\n  9715: u8 [a0 + 17] = 0\n  9718: u8 [a0 + 16] = 0\n  9721: u8 [a0 + 15] = 0\n  9724: u8 [a0 + 14] = 0\n  9727: u8 [a0 + 13] = 0\n  9730: u8 [a0 + 12] = 0\n  9733: u8 [a0 + 11] = 0\n  9736: u8 [a0 + 10] = 0\n  9739: u8 [a0 + 9] = 0\n  9742: u8 [a0 + 8] = 0\n  9745: u8 [a0 + 7] = 0\n  9748: u8 [a0 + 6] = 0\n  9751: u8 [a0 + 5] = 0\n  9754: u8 [a0 + 4] = 0\n  9757: u8 [a0 + 3] = 0xa0\n  9762: u8 [a0 + 2] = 0x79\n  9766: u8 [a0 + 1] = 0xc3\n  9771: u8 [a0 + 0] = 0x8\n  9774: a1 = u64 [sp + 0x188]\n  9778: a0 = a1 + 0x4\n  9781: a1 = a0 <u a1\n  9784: a3 = u64 [sp + 0x198]\n  9788: a2 = a3 + a1\n  9791: a3 = a2 <u a3\n  9794: a3 = a1 if a1 == 0\n  9797: a3 = a3 + s1\n  9800: a1 = a3 <u s1\n  9803: a4 = u64 [sp + 0x190]\n  9807: a4 = a4 + a1\n  9810: u64 [sp + 0x1e8] = a2\n  9814: u64 [sp + 0x1e0] = a0\n  9818: u64 [sp + 0x1f0] = a3\n  9822: a0 = sp + 0x200\n  9826: a1 = sp + 0x1e0\n  9830: u64 [sp + 0x1f8] = a4\n  9834: ra = 114, jump @83\n      : @150 [@dyn 57] (gas: 5)\n  9839: a0 = u64 [sp + 0x208]\n  9843: t0 = u64 [sp + 0x218]\n  9847: t1 = u64 [sp + 0x200]\n  9851: a3 = u64 [sp + 0x210]\n  9855: jump @156\n      : @151 (gas: 3)\n  9858: a0 = 0x40\n  9861: a1 = 0x20\n  9864: ra = 116, jump @0\n      : @152 [@dyn 58] (gas: 103)\n  9869: a1 = u8 [a0 + 0x11]\n  9872: a2 = u8 [a0 + 0x10]\n  9875: a3 = u8 [a0 + 0x12]\n  9878: a4 = u8 [a0 + 0x13]\n  9881: a1 = a1 << 0x8\n  9884: a1 = a1 | a2\n  9887: a3 = a3 << 0x10\n  9890: a4 = a4 << 0x18\n  9893: a3 = a3 | a4\n  9896: a1 = a1 | a3\n  9899: a2 = u8 [a0 + 0x15]\n  9902: a3 = u8 [a0 + 0x14]\n  9905: a4 = u8 [a0 + 0x16]\n  9908: a5 = u8 [a0 + 0x17]\n  9911: a2 = a2 << 0x8\n  9914: a2 = a2 | a3\n  9917: a4 = a4 << 0x10\n  9920: a5 = a5 << 0x18\n  9923: a4 = a4 | a5\n  9926: a2 = a2 | a4\n  9929: a2 = a2 << 0x20\n  9932: t0 = a2 | a1\n  9935: a2 = u8 [a0 + 0x1]\n  9938: a3 = u8 [a0]\n  9940: a4 = u8 [a0 + 0x2]\n  9943: a5 = u8 [a0 + 0x3]\n  9946: a2 = a2 << 0x8\n  9949: a2 = a2 | a3\n  9952: a4 = a4 << 0x10\n  9955: a5 = a5 << 0x18\n  9958: a4 = a4 | a5\n  9961: a2 = a2 | a4\n  9964: a3 = u8 [a0 + 0x5]\n  9967: a4 = u8 [a0 + 0x4]\n  9970: a5 = u8 [a0 + 0x6]\n  9973: s1 = u8 [a0 + 0x7]\n  9976: a3 = a3 << 0x8\n  9979: a3 = a3 | a4\n  9982: a5 = a5 << 0x10\n  9985: s1 = s1 << 0x18\n  9988: a5 = a5 | s1\n  9991: a3 = a3 | a5\n  9994: a3 = a3 << 0x20\n  9997: a2 = a2 | a3\n 10000: a3 = u8 [a0 + 0x19]\n 10003: a4 = u8 [a0 + 0x18]\n 10006: a5 = u8 [a0 + 0x1a]\n 10009: s1 = u8 [a0 + 0x1b]\n 10012: a3 = a3 << 0x8\n 10015: a3 = a3 | a4\n 10018: a5 = a5 << 0x10\n 10021: s1 = s1 << 0x18\n 10024: a5 = a5 | s1\n 10027: a3 = a3 | a5\n 10030: a4 = u8 [a0 + 0x1d]\n 10033: a5 = u8 [a0 + 0x1c]\n 10036: s1 = u8 [a0 + 0x1e]\n 10039: a1 = u8 [a0 + 0x1f]\n 10042: a4 = a4 << 0x8\n 10045: a4 = a4 | a5\n 10048: s1 = s1 << 0x10\n 10051: a1 = a1 << 0x18\n 10054: a1 = a1 | s1\n 10057: a1 = a1 | a4\n 10060: a1 = a1 << 0x20\n 10063: a3 = a3 | a1\n 10066: a1 = u8 [a0 + 0x9]\n 10069: a4 = u8 [a0 + 0x8]\n 10072: a5 = u8 [a0 + 0xa]\n 10075: s1 = u8 [a0 + 0xb]\n 10078: a1 = a1 << 0x8\n 10081: a1 = a1 | a4\n 10084: a5 = a5 << 0x10\n 10087: s1 = s1 << 0x18\n 10090: a5 = a5 | s1\n 10093: a1 = a1 | a5\n 10096: a4 = u8 [a0 + 0xd]\n 10099: a5 = u8 [a0 + 0xc]\n 10102: s1 = u8 [a0 + 0xe]\n 10105: a0 = u8 [a0 + 0xf]\n 10108: a4 = a4 << 0x8\n 10111: a4 = a4 | a5\n 10114: s1 = s1 << 0x10\n 10117: a0 = a0 << 0x18\n 10120: a0 = a0 | s1\n 10123: a0 = a0 | a4\n 10126: a0 = a0 << 0x20\n 10129: a0 = a0 | a1\n 10132: s1 = reverse a0\n 10134: a1 = reverse a3\n 10136: a2 = reverse a2\n 10138: a0 = reverse t0\n 10140: u64 [sp + 0x198] = a0\n 10144: u64 [sp + 0x190] = a2\n 10148: a0 = a0 | a2\n 10151: a2 = a1\n 10153: a1 = a1 | s1\n 10156: a1 = a1 | a0\n 10159: a1 = a1 >> 0x20\n 10162: a0 = a0 | s1\n 10165: a0 = a0 << 0x20\n 10168: a0 = a0 | a1\n 10171: jump @157 if a0 != 0\n      : @153 (gas: 5)\n 10175: u64 [sp + 0x188] = a2\n 10179: i32 a0 = a2 + 0\n 10181: a1 = 0x20\n 10184: u64 [sp + 0x180] = a0\n 10188: ra = 118, jump @0\n      : @154 [@dyn 59] (gas: 50)\n 10193: u8 [a0 + 31] = 0\n 10196: u8 [a0 + 30] = 0\n 10199: u8 [a0 + 29] = 0\n 10202: u8 [a0 + 28] = 0\n 10205: u8 [a0 + 27] = 0\n 10208: u8 [a0 + 26] = 0\n 10211: u8 [a0 + 25] = 0\n 10214: u8 [a0 + 24] = 0\n 10217: u8 [a0 + 23] = 0\n 10220: u8 [a0 + 22] = 0\n 10223: u8 [a0 + 21] = 0\n 10226: u8 [a0 + 20] = 0\n 10229: u8 [a0 + 19] = 0\n 10232: u8 [a0 + 18] = 0\n 10235: u8 [a0 + 17] = 0\n 10238: u8 [a0 + 16] = 0\n 10241: u8 [a0 + 15] = 0\n 10244: u8 [a0 + 14] = 0\n 10247: u8 [a0 + 13] = 0\n 10250: u8 [a0 + 12] = 0\n 10253: u8 [a0 + 11] = 0\n 10256: u8 [a0 + 10] = 0\n 10259: u8 [a0 + 9] = 0\n 10262: u8 [a0 + 8] = 0\n 10265: u8 [a0 + 7] = 0\n 10268: u8 [a0 + 6] = 0\n 10271: u8 [a0 + 5] = 0\n 10274: u8 [a0 + 4] = 0\n 10277: u8 [a0 + 3] = 0xa0\n 10282: u8 [a0 + 2] = 0x79\n 10286: u8 [a0 + 1] = 0xc3\n 10291: u8 [a0 + 0] = 0x8\n 10294: a1 = u64 [sp + 0x188]\n 10298: a0 = a1 + 0x4\n 10301: a1 = a0 <u a1\n 10304: a3 = u64 [sp + 0x198]\n 10308: a2 = a3 + a1\n 10311: a3 = a2 <u a3\n 10314: a3 = a1 if a1 == 0\n 10317: a3 = a3 + s1\n 10320: a1 = a3 <u s1\n 10323: a4 = u64 [sp + 0x190]\n 10327: a4 = a4 + a1\n 10330: u64 [sp + 0x268] = a2\n 10334: u64 [sp + 0x260] = a0\n 10338: u64 [sp + 0x270] = a3\n 10342: a0 = sp + 0x280\n 10346: a1 = sp + 0x260\n 10350: u64 [sp + 0x278] = a4\n 10354: ra = 120, jump @91\n      : @155 [@dyn 60] (gas: 5)\n 10359: a0 = u64 [sp + 0x288]\n 10363: t0 = u64 [sp + 0x298]\n 10367: t1 = u64 [sp + 0x280]\n 10371: a3 = u64 [sp + 0x290]\n 10375: fallthrough\n      : @156 (gas: 26)\n 10376: a1 = u64 [sp + 0x198]\n 10380: a4 = a0 ^ a1\n 10383: a5 = a0 <u a1\n 10386: t2 = a1\n 10388: a2 = u64 [sp + 0x188]\n 10392: a1 = t1 <u a2\n 10395: a5 = a1 if a4 == 0\n 10398: a4 = a3 - s1\n 10401: a3 = a3 <u s1\n 10404: s1 = u64 [sp + 0x190]\n 10408: s1 = t0 - s1\n 10411: s1 = s1 - a3\n 10414: a3 = a4 <u a5\n 10417: s1 = s1 - a3\n 10420: a4 = a4 - a5\n 10423: a0 = a0 - t2\n 10426: a1 = a0 - a1\n 10429: a0 = t1 - a2\n 10432: a1 = a1 | s1\n 10435: a2 = a0 | a4\n 10438: a2 = a2 | a1\n 10441: a1 = a1 | a4\n 10444: a2 = a2 >> 0x20\n 10447: a1 = a1 << 0x20\n 10450: a1 = a1 | a2\n 10453: jump @166 if a1 == 0\n      : @157 (gas: 1)\n 10457: trap\n      : @158 (gas: 3)\n 10458: a0 = 0\n 10460: a1 = 0\n 10462: ra = 122, jump @0\n      : @159 [@dyn 61] (gas: 5)\n 10467: i32 a1 = a0 + 0\n 10469: a0 = 0x1\n 10472: a2 = 0\n 10474: ecalli 9 // 'seal_return'\n 10476: fallthrough\n      : @160 (gas: 8)\n 10477: u64 [sp + 464] = 0\n 10481: u64 [sp + 456] = 0\n 10485: u64 [sp + 448] = 0\n 10489: a0 = 0x4e487b7100000000\n 10499: a1 = sp + 0x1c0\n 10503: u64 [sp + 0x1d8] = a0\n 10507: a0 = 0\n 10509: ra = 124, jump @8\n      : @161 [@dyn 62] (gas: 8)\n 10514: u64 [sp + 440] = 0\n 10518: u64 [sp + 432] = 0\n 10522: u64 [sp + 416] = 0x41\n 10527: a0 = 0x4\n 10530: a1 = sp + 0x1a0\n 10534: u64 [sp + 424] = 0\n 10538: ra = 0x80\n 10542: jump @8\n      : @162 (gas: 8)\n 10545: u64 [sp + 592] = 0\n 10549: u64 [sp + 584] = 0\n 10553: u64 [sp + 576] = 0\n 10557: a0 = 0x4e487b7100000000\n 10567: a1 = sp + 0x240\n 10571: u64 [sp + 0x258] = a0\n 10575: a0 = 0\n 10577: ra = 126, jump @8\n      : @163 [@dyn 63] (gas: 7)\n 10582: u64 [sp + 568] = 0\n 10586: u64 [sp + 560] = 0\n 10590: u64 [sp + 544] = 0x41\n 10595: a0 = 0x4\n 10598: a1 = sp + 0x220\n 10602: u64 [sp + 552] = 0\n 10606: ra = 128, jump @8\n      : @164 [@dyn 64] (gas: 3)\n 10612: a1 = 0x24\n 10615: a0 = 0\n 10617: ra = 130, jump @0\n      : @165 [@dyn 65] (gas: 5)\n 10623: i32 a1 = a0 + 0\n 10625: a0 = 0x1\n 10628: a2 = 0x24\n 10631: ecalli 9 // 'seal_return'\n 10633: fallthrough\n      : @166 (gas: 4)\n 10634: i32 s1 = a0 + 0\n 10636: a0 = u64 [sp + 0x180]\n 10640: a1 = s1\n 10642: ra = 132, jump @0\n      : @167 [@dyn 66] (gas: 7)\n 10648: i32 a1 = a0 + 0\n 10650: a0 = 0x1\n 10653: a2 = s1\n 10655: ecalli 9 // 'seal_return'\n 10657: a0 = 0\n 10659: ra = 0x86\n 10663: jump @10\n      : @168 [export #0: 'call'] (gas: 2)\n 10666: a0 = 0\n 10668: ra = 134, jump @10\n      : @169 [@dyn 67] [export #1: 'deploy'] (gas: 2)\n 10674: a0 = 0x1\n 10677: ra = 136, jump @10\n      : @170 [@dyn 68] (gas: 9)\n 10683: sp = sp + 0xffffffffffffffc0\n 10686: u64 [sp + 0x38] = ra\n 10689: u64 [sp + 0x30] = s0\n 10692: u64 [sp + 0x28] = s1\n 10695: s0 = sp + 0x40\n 10698: sp = sp & 0xfffffffffffffff0\n 10701: s1 = a0\n 10703: a0 = sp\n 10705: ra = 138, jump @34\n      : @171 [@dyn 69] (gas: 14)\n 10711: a0 = u64 [sp + 0x10]\n 10714: a1 = u64 [sp + 0x18]\n 10717: a2 = u64 [sp]\n 10719: a3 = u64 [sp + 0x8]\n 10722: u64 [s1 + 0x10] = a0\n 10725: u64 [s1 + 0x18] = a1\n 10728: u64 [s1] = a2\n 10730: u64 [s1 + 0x8] = a3\n 10733: sp = s0 + 0xffffffffffffffc0\n 10736: ra = u64 [sp + 0x38]\n 10739: s0 = u64 [sp + 0x30]\n 10742: s1 = u64 [sp + 0x28]\n 10745: sp = sp + 0x40\n 10748: ret\n",
						"bytecode": {
							"object": ""
						},
						"deployedBytecode": {
							"object": ""
						},
						"methodIdentifiers": {
							"swapExactInput(address,address,uint256,uint256)": "bd028142"
						}
					},
					"irOptimized": "/// @use-src 1:\"contracts/v2/MockAssetConversion.sol\"\nobject \"MockAssetConversion_127\" {\n    code {\n        {\n            /// @src 1:196:840  \"contract MockAssetConversion {...\"\n            mstore(64, memoryguard(0x80))\n            if callvalue()\n            {\n                revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb()\n            }\n            let _1 := allocate_unbounded()\n            codecopy(_1, dataoffset(\"MockAssetConversion_127_deployed\"), datasize(\"MockAssetConversion_127_deployed\"))\n            return(_1, datasize(\"MockAssetConversion_127_deployed\"))\n        }\n        function allocate_unbounded() -> memPtr\n        { memPtr := mload(64) }\n        function revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb()\n        { revert(0, 0) }\n    }\n    /// @use-src 1:\"contracts/v2/MockAssetConversion.sol\"\n    object \"MockAssetConversion_127_deployed\" {\n        code {\n            {\n                /// @src 1:196:840  \"contract MockAssetConversion {...\"\n                mstore(64, memoryguard(0x80))\n                if iszero(lt(calldatasize(), 4))\n                {\n                    let selector := shift_right_unsigned(calldataload(0))\n                    switch selector\n                    case 0xbd028142 { external_fun_swapExactInput() }\n                    default { }\n                }\n                revert_error_42b3090547df1d2001c96683413b8cf91c1b902ef5e3cb8d9f6f304cf7446f74()\n            }\n            function shift_right_unsigned(value) -> newValue\n            { newValue := shr(224, value) }\n            function allocate_unbounded() -> memPtr\n            { memPtr := mload(64) }\n            function revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb()\n            { revert(0, 0) }\n            function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b()\n            { revert(0, 0) }\n            function cleanup_uint160(value) -> cleaned\n            {\n                cleaned := and(value, sub(shl(160, 1), 1))\n            }\n            function cleanup_address(value) -> cleaned\n            {\n                cleaned := cleanup_uint160(value)\n            }\n            function validator_revert_address(value)\n            {\n                if iszero(eq(value, cleanup_address(value))) { revert(0, 0) }\n            }\n            function abi_decode_address(offset, end) -> value\n            {\n                value := calldataload(offset)\n                validator_revert_address(value)\n            }\n            function cleanup_uint256(value) -> cleaned\n            { cleaned := value }\n            function validator_revert_uint256(value)\n            {\n                if iszero(eq(value, cleanup_uint256(value))) { revert(0, 0) }\n            }\n            function abi_decode_uint256(offset, end) -> value\n            {\n                value := calldataload(offset)\n                validator_revert_uint256(value)\n            }\n            function abi_decode_addresst_addresst_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2, value3\n            {\n                if slt(sub(dataEnd, headStart), 128)\n                {\n                    revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b()\n                }\n                let offset := 0\n                value0 := abi_decode_address(add(headStart, offset), dataEnd)\n                let offset_1 := 32\n                value1 := abi_decode_address(add(headStart, offset_1), dataEnd)\n                let offset_2 := 64\n                value2 := abi_decode_uint256(add(headStart, offset_2), dataEnd)\n                let offset_3 := 96\n                value3 := abi_decode_uint256(add(headStart, offset_3), dataEnd)\n            }\n            function abi_encode_uint256_to_uint256(value, pos)\n            {\n                mstore(pos, cleanup_uint256(value))\n            }\n            function abi_encode_uint256(headStart, value0) -> tail\n            {\n                tail := add(headStart, 32)\n                abi_encode_uint256_to_uint256(value0, add(headStart, 0))\n            }\n            function external_fun_swapExactInput()\n            {\n                if callvalue()\n                {\n                    revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb()\n                }\n                let param, param_1, param_2, param_3 := abi_decode_addresst_addresst_uint256t_uint256(4, calldatasize())\n                let ret := fun_swapExactInput(param, param_1, param_2, param_3)\n                let memPos := allocate_unbounded()\n                let memEnd := abi_encode_uint256(memPos, ret)\n                return(memPos, sub(memEnd, memPos))\n            }\n            function revert_error_42b3090547df1d2001c96683413b8cf91c1b902ef5e3cb8d9f6f304cf7446f74()\n            { revert(0, 0) }\n            function zero_value_for_split_uint256() -> ret\n            { ret := 0 }\n            function identity(value) -> ret\n            { ret := value }\n            function convert_uint160_to_uint160(value) -> converted\n            {\n                converted := cleanup_uint160(identity(cleanup_uint160(value)))\n            }\n            function convert_uint160_to_contract_IERC20(value) -> converted\n            {\n                converted := convert_uint160_to_uint160(value)\n            }\n            function convert_address_to_contract_IERC20(value) -> converted\n            {\n                converted := convert_uint160_to_contract_IERC20(value)\n            }\n            function convert_uint160_to_address(value) -> converted\n            {\n                converted := convert_uint160_to_uint160(value)\n            }\n            function convert_contract_IERC20_to_address(value) -> converted\n            {\n                converted := convert_uint160_to_address(value)\n            }\n            function convert_contract_MockAssetConversion_to_address(value) -> converted\n            {\n                converted := convert_uint160_to_address(value)\n            }\n            function round_up_to_mul_of(value) -> result\n            {\n                result := and(add(value, 31), not(31))\n            }\n            function panic_error_0x41()\n            {\n                mstore(0, shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(0, 0x24)\n            }\n            function finalize_allocation(memPtr, size)\n            {\n                let newFreePtr := add(memPtr, round_up_to_mul_of(size))\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n                mstore(64, newFreePtr)\n            }\n            function shift_left(value) -> newValue\n            { newValue := shl(224, value) }\n            function cleanup_bool(value) -> cleaned\n            {\n                cleaned := iszero(iszero(value))\n            }\n            function validator_revert_bool(value)\n            {\n                if iszero(eq(value, cleanup_bool(value))) { revert(0, 0) }\n            }\n            function abi_decode_t_bool_fromMemory(offset, end) -> value\n            {\n                value := mload(offset)\n                validator_revert_bool(value)\n            }\n            function abi_decode_bool_fromMemory(headStart, dataEnd) -> value0\n            {\n                if slt(sub(dataEnd, headStart), 32)\n                {\n                    revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b()\n                }\n                let offset := 0\n                value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n            }\n            function abi_encode_address(value, pos)\n            {\n                mstore(pos, cleanup_address(value))\n            }\n            function abi_encode_address_address_uint256(headStart, value0, value1, value2) -> tail\n            {\n                tail := add(headStart, 96)\n                abi_encode_address(value0, add(headStart, 0))\n                abi_encode_address(value1, add(headStart, 32))\n                abi_encode_uint256_to_uint256(value2, add(headStart, 64))\n            }\n            function revert_forward()\n            {\n                let pos := allocate_unbounded()\n                returndatacopy(pos, 0, returndatasize())\n                revert(pos, returndatasize())\n            }\n            function array_storeLengthForEncoding_string(pos, length) -> updated_pos\n            {\n                mstore(pos, length)\n                updated_pos := add(pos, 0x20)\n            }\n            function store_literal_in_memory_ab0f731885d207443b1e545c1c7e7ed7ac9b6ea503774981a1bcc8ac01b461c3(memPtr)\n            {\n                mstore(add(memPtr, 0), \"transferFrom failed\")\n            }\n            function abi_encode_stringliteral_ab0f731885d207443b1e545c1c7e7ed7ac9b6ea503774981a1bcc8ac01b461c3(pos) -> end\n            {\n                pos := array_storeLengthForEncoding_string(pos, 19)\n                store_literal_in_memory_ab0f731885d207443b1e545c1c7e7ed7ac9b6ea503774981a1bcc8ac01b461c3(pos)\n                end := add(pos, 32)\n            }\n            function abi_encode_stringliteral_ab0f(headStart) -> tail\n            {\n                tail := add(headStart, 32)\n                mstore(add(headStart, 0), sub(tail, headStart))\n                tail := abi_encode_stringliteral_ab0f731885d207443b1e545c1c7e7ed7ac9b6ea503774981a1bcc8ac01b461c3(tail)\n            }\n            function require_helper_stringliteral_ab0f(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := allocate_unbounded()\n                    mstore(memPtr, shl(229, 4594637))\n                    let end := abi_encode_stringliteral_ab0f(add(memPtr, 4))\n                    revert(memPtr, sub(end, memPtr))\n                }\n            }\n            function abi_encode_address_uint256(headStart, value0, value1) -> tail\n            {\n                tail := add(headStart, 64)\n                abi_encode_address(value0, add(headStart, 0))\n                abi_encode_uint256_to_uint256(value1, add(headStart, 32))\n            }\n            function store_literal_in_memory_df1797085e2da014ef9392ee25ab0802d6ce132451397172f17fd86110e2e02b(memPtr)\n            {\n                mstore(add(memPtr, 0), \"transfer failed\")\n            }\n            function abi_encode_stringliteral_df17(pos) -> end\n            {\n                pos := array_storeLengthForEncoding_string(pos, 15)\n                store_literal_in_memory_df1797085e2da014ef9392ee25ab0802d6ce132451397172f17fd86110e2e02b(pos)\n                end := add(pos, 32)\n            }\n            function abi_encode_tuple_stringliteral_df17(headStart) -> tail\n            {\n                tail := add(headStart, 32)\n                mstore(add(headStart, 0), sub(tail, headStart))\n                tail := abi_encode_stringliteral_df17(tail)\n            }\n            function require_helper_stringliteral_df17(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := allocate_unbounded()\n                    mstore(memPtr, shl(229, 4594637))\n                    let end := abi_encode_tuple_stringliteral_df17(add(memPtr, 4))\n                    revert(memPtr, sub(end, memPtr))\n                }\n            }\n            /// @ast-id 126 @src 1:322:838  \"function swapExactInput(...\"\n            function fun_swapExactInput(var_tokenIn, var_tokenOut, var_amountIn, var) -> var_amountOut\n            {\n                /// @src 1:483:500  \"uint256 amountOut\"\n                let zero_uint256 := zero_value_for_split_uint256()\n                var_amountOut := zero_uint256\n                /// @src 1:552:559  \"tokenIn\"\n                let _1 := var_tokenIn\n                let expr := _1\n                /// @src 1:545:560  \"IERC20(tokenIn)\"\n                let expr_98_address := convert_address_to_contract_IERC20(expr)\n                /// @src 1:545:573  \"IERC20(tokenIn).transferFrom\"\n                let expr_99_address := convert_contract_IERC20_to_address(expr_98_address)\n                let expr_99_functionSelector := 0x23b872dd\n                /// @src 1:574:584  \"msg.sender\"\n                let expr_1 := caller()\n                /// @src 1:594:598  \"this\"\n                let expr_104_address := address()\n                /// @src 1:586:599  \"address(this)\"\n                let expr_2 := convert_contract_MockAssetConversion_to_address(expr_104_address)\n                /// @src 1:601:609  \"amountIn\"\n                let _2 := var_amountIn\n                let expr_3 := _2\n                /// @src 1:545:610  \"IERC20(tokenIn).transferFrom(msg.sender, address(this), amountIn)\"\n                let _3 := allocate_unbounded()\n                mstore(_3, shift_left(expr_99_functionSelector))\n                let _4 := abi_encode_address_address_uint256(add(_3, 4), expr_1, expr_2, expr_3)\n                let _5 := call(gas(), expr_99_address, 0, _3, sub(_4, _3), _3, 32)\n                if iszero(_5) { revert_forward() }\n                let expr_4\n                if _5\n                {\n                    let _6 := 32\n                    if gt(_6, returndatasize()) { _6 := returndatasize() }\n                    finalize_allocation(_3, _6)\n                    expr_4 := abi_decode_bool_fromMemory(_3, add(_3, _6))\n                }\n                /// @src 1:537:655  \"require(IERC20(tokenIn).transferFrom(msg.sender, address(this), amountIn),...\"\n                require_helper_stringliteral_ab0f(expr_4)\n                /// @src 1:725:733  \"tokenOut\"\n                let _7 := var_tokenOut\n                let expr_5 := _7\n                /// @src 1:718:734  \"IERC20(tokenOut)\"\n                let expr_address := convert_address_to_contract_IERC20(expr_5)\n                /// @src 1:718:743  \"IERC20(tokenOut).transfer\"\n                let expr_115_address := convert_contract_IERC20_to_address(expr_address)\n                let expr_functionSelector := 0xa9059cbb\n                /// @src 1:744:754  \"msg.sender\"\n                let expr_6 := caller()\n                /// @src 1:756:764  \"amountIn\"\n                let _8 := var_amountIn\n                let expr_7 := _8\n                /// @src 1:718:765  \"IERC20(tokenOut).transfer(msg.sender, amountIn)\"\n                let _9 := allocate_unbounded()\n                mstore(_9, shift_left(expr_functionSelector))\n                let _10 := abi_encode_address_uint256(add(_9, 4), expr_6, expr_7)\n                let _11 := call(gas(), expr_115_address, 0, _9, sub(_10, _9), _9, 32)\n                if iszero(_11) { revert_forward() }\n                let expr_8\n                if _11\n                {\n                    let _12 := 32\n                    if gt(_12, returndatasize()) { _12 := returndatasize() }\n                    finalize_allocation(_9, _12)\n                    expr_8 := abi_decode_bool_fromMemory(_9, add(_9, _12))\n                }\n                /// @src 1:710:806  \"require(IERC20(tokenOut).transfer(msg.sender, amountIn),...\"\n                require_helper_stringliteral_df17(expr_8)\n                /// @src 1:823:831  \"amountIn\"\n                let _13 := var_amountIn\n                let expr_9 := _13\n                /// @src 1:816:831  \"return amountIn\"\n                var_amountOut := expr_9\n                leave\n            }\n        }\n        data \".metadata\" hex\"a264697066735822122058584a9c1f329b39fdfc127c53555764427767f8a5fcf5cc4c2537edb7ed422964736f6c634300081c0033\"\n    }\n}\n",
					"hash": "7ff6d8674d3a952b5f7c752f1ad21a96f592f4cd72fa8a7851522b7e456f6d65",
					"factoryDependencies": {}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"id": 0,
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						]
					},
					"id": 78,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:0",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 77,
							"linearizedBaseContracts": [
								77
							],
							"name": "IERC20",
							"nameLocation": "214:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 11,
									"name": "Transfer",
									"nameLocation": "396:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "405:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "427:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "447:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:0"
									},
									"src": "390:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 20,
									"name": "Approval",
									"nameLocation": "627:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "636:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "659:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 18,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "684:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 17,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:0"
									},
									"src": "621:78:0"
								},
								{
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:0",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "821:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 23,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:0"
									},
									"scope": 77,
									"src": "775:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:0",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 34,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "931:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "971:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:0"
									},
									"scope": 77,
									"src": "912:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:0",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1222:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1234:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1267:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:0"
									},
									"scope": 77,
									"src": "1204:69:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 54,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1567:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1582:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:0"
									},
									"returnParameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1622:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:0"
									},
									"scope": 77,
									"src": "1548:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:0",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 64,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2326:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2343:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2376:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 61,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:0"
									},
									"scope": 77,
									"src": "2309:73:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:0",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 76,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2712:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2726:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2738:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 70,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2771:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 73,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:0"
									},
									"scope": 77,
									"src": "2690:87:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 78,
							"src": "204:2575:0",
							"usedErrors": [],
							"usedEvents": [
								11,
								20
							]
						}
					],
					"src": "106:2674:0"
				}
			},
			"contracts/v2/MockAssetConversion.sol": {
				"id": 1,
				"ast": {
					"absolutePath": "contracts/v2/MockAssetConversion.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						],
						"MockAssetConversion": [
							127
						]
					},
					"id": 128,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 79,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".18"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 80,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 128,
							"sourceUnit": 78,
							"src": "58:56:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "MockAssetConversion",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 81,
								"nodeType": "StructuredDocumentation",
								"src": "116:80:1",
								"text": "@notice A 1:1 “swap” mock for fee‐asset → borrow‐asset conversion"
							},
							"fullyImplemented": true,
							"id": 127,
							"linearizedBaseContracts": [
								127
							],
							"name": "MockAssetConversion",
							"nameLocation": "205:19:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "502:336:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 100,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "574:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 101,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "578:6:1",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "574:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 104,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "594:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_MockAssetConversion_$127",
																				"typeString": "contract MockAssetConversion"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_MockAssetConversion_$127",
																				"typeString": "contract MockAssetConversion"
																			}
																		],
																		"id": 103,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "586:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 102,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "586:7:1",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 105,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "586:13:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 106,
																	"name": "amountIn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 88,
																	"src": "601:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"id": 97,
																			"name": "tokenIn",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 84,
																			"src": "552:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 96,
																		"name": "IERC20",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 77,
																		"src": "545:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
																			"typeString": "type(contract IERC20)"
																		}
																	},
																	"id": 98,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "545:15:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 99,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "561:12:1",
																"memberName": "transferFrom",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 76,
																"src": "545:28:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256) external returns (bool)"
																}
															},
															"id": 107,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "545:65:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "7472616e7366657246726f6d206661696c6564",
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "624:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ab0f731885d207443b1e545c1c7e7ed7ac9b6ea503774981a1bcc8ac01b461c3",
																"typeString": "literal_string \"transferFrom failed\""
															},
															"value": "transferFrom failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ab0f731885d207443b1e545c1c7e7ed7ac9b6ea503774981a1bcc8ac01b461c3",
																"typeString": "literal_string \"transferFrom failed\""
															}
														],
														"id": 95,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "537:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 109,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "537:118:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 110,
												"nodeType": "ExpressionStatement",
												"src": "537:118:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 116,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "744:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 117,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "748:6:1",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "744:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 118,
																	"name": "amountIn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 88,
																	"src": "756:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"id": 113,
																			"name": "tokenOut",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 86,
																			"src": "725:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 112,
																		"name": "IERC20",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 77,
																		"src": "718:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
																			"typeString": "type(contract IERC20)"
																		}
																	},
																	"id": 114,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "718:16:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 115,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "735:8:1",
																"memberName": "transfer",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 44,
																"src": "718:25:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,uint256) external returns (bool)"
																}
															},
															"id": 119,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "718:47:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "7472616e73666572206661696c6564",
															"id": 120,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "779:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_df1797085e2da014ef9392ee25ab0802d6ce132451397172f17fd86110e2e02b",
																"typeString": "literal_string \"transfer failed\""
															},
															"value": "transfer failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_df1797085e2da014ef9392ee25ab0802d6ce132451397172f17fd86110e2e02b",
																"typeString": "literal_string \"transfer failed\""
															}
														],
														"id": 111,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "710:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "710:96:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 122,
												"nodeType": "ExpressionStatement",
												"src": "710:96:1"
											},
											{
												"expression": {
													"id": 123,
													"name": "amountIn",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 88,
													"src": "823:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 94,
												"id": 124,
												"nodeType": "Return",
												"src": "816:15:1"
											}
										]
									},
									"documentation": {
										"id": 82,
										"nodeType": "StructuredDocumentation",
										"src": "231:86:1",
										"text": "@dev Swaps `amountIn` of tokenIn for tokenOut at 1:1, honoring `minAmountOut` stub"
									},
									"functionSelector": "bd028142",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactInput",
									"nameLocation": "331:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 91,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 84,
												"mutability": "mutable",
												"name": "tokenIn",
												"nameLocation": "363:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "355:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 83,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "355:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "tokenOut",
												"nameLocation": "388:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "380:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "380:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 88,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "414:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "406:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 87,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "406:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 90,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "432:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 89,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "432:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "345:119:1"
									},
									"returnParameters": {
										"id": 94,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "491:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "483:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 92,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "483:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "482:19:1"
									},
									"scope": 127,
									"src": "322:516:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 128,
							"src": "196:644:1",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:809:1"
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": null,
				"formattedMessage": "\nWarning: It looks like you are using '<address payable>.send/transfer(<X>)'.\nUsing '<address payable>.send/transfer(<X>)' is deprecated and strongly discouraged!\nThe resolc compiler uses a heuristic to detect '<address payable>.send/transfer(<X>)' calls,\nwhich disables call re-entrancy and supplies all remaining gas instead of the 2300 gas stipend.\nHowever, detection is not guaranteed. You are advised to carefully test this, employ\nre-entrancy guards or use the withdrawal pattern instead!\nLearn more on https://docs.soliditylang.org/en/latest/security-considerations.html#reentrancy\nand https://docs.soliditylang.org/en/latest/common-patterns.html#withdrawal-from-contracts\n\n--> contracts/v2/MockAssetConversion.sol\n",
				"message": "\nWarning: It looks like you are using '<address payable>.send/transfer(<X>)'.\nUsing '<address payable>.send/transfer(<X>)' is deprecated and strongly discouraged!\nThe resolc compiler uses a heuristic to detect '<address payable>.send/transfer(<X>)' calls,\nwhich disables call re-entrancy and supplies all remaining gas instead of the 2300 gas stipend.\nHowever, detection is not guaranteed. You are advised to carefully test this, employ\nre-entrancy guards or use the withdrawal pattern instead!\nLearn more on https://docs.soliditylang.org/en/latest/security-considerations.html#reentrancy\nand https://docs.soliditylang.org/en/latest/common-patterns.html#withdrawal-from-contracts\n",
				"severity": "warning",
				"sourceLocation": {
					"file": "1",
					"start": 718,
					"end": 765
				},
				"type": "Warning"
			}
		],
		"version": "0.8.28",
		"long_version": "0.8.28+commit.7893614a.Emscripten.clang",
		"revive_version": "0.1.0-dev.12+commit.66f9a4d.llvm-18.1.8"
	}
}
{
	"compiler": {
		"version": "0.8.28+commit.7893614a"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "contract IERC20",
						"name": "_collateral",
						"type": "address"
					},
					{
						"internalType": "contract IERC20",
						"name": "_borrowAsset",
						"type": "address"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "user",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "bytes32",
						"name": "destParaId",
						"type": "bytes32"
					}
				],
				"name": "CrossBorrowRequested",
				"type": "event"
			},
			{
				"inputs": [],
				"name": "COLLATERAL_FACTOR",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "borrow",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "borrowAsset",
				"outputs": [
					{
						"internalType": "contract IERC20",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "borrows",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "collateral",
				"outputs": [
					{
						"internalType": "contract IERC20",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					},
					{
						"internalType": "bytes32",
						"name": "destParaId",
						"type": "bytes32"
					}
				],
				"name": "crossBorrow",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "deposit",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "deposits",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "repay",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "withdraw",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"details": "Single‐collateral, fixed 50% collateral factor, no interest accrual",
			"kind": "dev",
			"methods": {
				"constructor": {
					"params": {
						"_borrowAsset": "ERC20 users can borrow",
						"_collateral": "ERC20 used as collateral"
					}
				}
			},
			"version": 1
		},
		"userdoc": {
			"events": {
				"CrossBorrowRequested(address,uint256,bytes32)": {
					"notice": "Emitted when a cross-chain borrow is requested"
				}
			},
			"kind": "user",
			"methods": {
				"borrow(uint256)": {
					"notice": "Borrow up to COLLATERAL_FACTOR% of your deposited value"
				},
				"crossBorrow(uint256,bytes32)": {
					"notice": "Stub function for off-chain relayer to capture and later XCM"
				},
				"deposit(uint256)": {
					"notice": "Deposit collateral into the pool"
				},
				"repay(uint256)": {
					"notice": "Repay borrowed tokens"
				},
				"withdraw(uint256)": {
					"notice": "Withdraw your collateral (only if fully repaid)"
				}
			},
			"notice": "Minimal hackathon‐style lending pool",
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/LendingPool.sol": "LendingPool"
		},
		"evmVersion": "cancun",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"details": {
				"constantOptimizer": false,
				"cse": false,
				"deduplicate": false,
				"inliner": false,
				"jumpdestRemover": false,
				"orderLiterals": false,
				"peephole": false,
				"simpleCounterForLoopUncheckedIncrement": true,
				"yul": false
			},
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
			"keccak256": "0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7",
			"license": "MIT",
			"urls": [
				"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db",
				"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9"
			]
		},
		"contracts/LendingPool.sol": {
			"keccak256": "0x336b800353ece8a0d890734b2593fc7815eed096ade0607a361fc34f3820059c",
			"license": "MIT",
			"urls": [
				"bzz-raw://864b8c601de0983cbb1b01acb61d21443f933c9c9205c48733b98721045851e4",
				"dweb:/ipfs/QmQVdQABYvxRxJwKTsNJpzZGiM2qdHEmzCK6Mgk9b4PfVG"
			]
		}
	},
	"version": 1
}
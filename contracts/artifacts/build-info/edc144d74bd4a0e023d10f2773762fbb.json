{
	"id": "edc144d74bd4a0e023d10f2773762fbb",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.28",
	"solcLongVersion": "0.8.28+commit.7893614a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/LendingPool.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.18;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\n\n/// @notice Minimal hackathon‐style lending pool\n/// @dev Single‐collateral, fixed 50% collateral factor, no interest accrual\ncontract LendingPool {\n    IERC20 public immutable collateral;\n    IERC20 public immutable borrowAsset;\n    uint256 public constant COLLATERAL_FACTOR = 50; // 50%\n\n    // user → deposited collateral amount\n    mapping(address => uint256) public deposits;\n    // user → borrowed amount\n    mapping(address => uint256) public borrows;\n\n    /// @param _collateral   ERC20 used as collateral\n    /// @param _borrowAsset  ERC20 users can borrow\n    constructor(IERC20 _collateral, IERC20 _borrowAsset) {\n        collateral  = _collateral;\n        borrowAsset = _borrowAsset;\n    }\n\n    /// @notice Deposit collateral into the pool\n    function deposit(uint256 amount) external {\n        deposits[msg.sender] += amount;\n        require(\n            collateral.transferFrom(msg.sender, address(this), amount),\n            \"Collateral transfer failed\"\n        );\n    }\n\n    /// @notice Borrow up to COLLATERAL_FACTOR% of your deposited value\n    function borrow(uint256 amount) external {\n        uint256 maxBorrow = (deposits[msg.sender] * COLLATERAL_FACTOR) / 100;\n        require(\n            borrows[msg.sender] + amount <= maxBorrow,\n            \"Exceeds collateral factor\"\n        );\n        borrows[msg.sender] += amount;\n        require(\n            borrowAsset.transfer(msg.sender, amount),\n            \"Borrow transfer failed\"\n        );\n    }\n\n    /// @notice Repay borrowed tokens\n    function repay(uint256 amount) external {\n        require(\n            borrows[msg.sender] >= amount,\n            \"Repay exceeds borrowed amount\"\n        );\n        borrows[msg.sender] -= amount;\n        require(\n            borrowAsset.transferFrom(msg.sender, address(this), amount),\n            \"Repay transfer failed\"\n        );\n    }\n\n    /// @notice Withdraw your collateral (only if fully repaid)\n    function withdraw(uint256 amount) external {\n        require(\n            borrows[msg.sender] == 0,\n            \"Outstanding borrow exists\"\n        );\n        require(\n            deposits[msg.sender] >= amount,\n            \"Withdraw exceeds deposit\"\n        );\n        deposits[msg.sender] -= amount;\n        require(\n            collateral.transfer(msg.sender, amount),\n            \"Withdraw transfer failed\"\n        );\n    }\n\n    // ─── Hackathon XCM Stub ──────────────────────────────────────────────────────\n\n    /// @notice Emitted when a cross-chain borrow is requested\n    event CrossBorrowRequested(\n        address indexed user,\n        uint256         amount,\n        bytes32         destParaId\n    );\n\n    /// @notice Stub function for off-chain relayer to capture and later XCM\n    function crossBorrow(\n        uint256 amount,\n        bytes32 destParaId\n    )\n        external\n    {\n        emit CrossBorrowRequested(msg.sender, amount, destParaId);\n    }\n    // ────────────────────────────────────────────────────────────────────────────\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.deployedBytecode",
						"evm.methodIdentifiers"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":false},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					},
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"evm": {
						"bytecode": {
							"object": ""
						},
						"deployedBytecode": {
							"object": ""
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"irOptimized": ""
				}
			},
			"contracts/LendingPool.sol": {
				"LendingPool": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "contract IERC20",
									"name": "_collateral",
									"type": "address"
								},
								{
									"internalType": "contract IERC20",
									"name": "_borrowAsset",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "destParaId",
									"type": "bytes32"
								}
							],
							"name": "CrossBorrowRequested",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "COLLATERAL_FACTOR",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "borrow",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "borrowAsset",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "borrows",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "collateral",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes32",
									"name": "destParaId",
									"type": "bytes32"
								}
							],
							"name": "crossBorrow",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "deposit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "deposits",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "repay",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"metadata": {
						"optimizer_settings": {
							"is_debug_logging_enabled": false,
							"is_fallback_to_size_enabled": false,
							"is_verify_each_enabled": false,
							"level_back_end": "Aggressive",
							"level_middle_end": "Aggressive",
							"level_middle_end_size": "Zero"
						},
						"revive_pallet_version": null,
						"revive_version": "0.1.0-dev.12+commit.66f9a4d.llvm-18.1.8",
						"solc_metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_collateral\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"_borrowAsset\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"destParaId\",\"type\":\"bytes32\"}],\"name\":\"CrossBorrowRequested\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"COLLATERAL_FACTOR\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"borrow\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"borrowAsset\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"borrows\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"collateral\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"destParaId\",\"type\":\"bytes32\"}],\"name\":\"crossBorrow\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"deposits\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"repay\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Single\\u2010collateral, fixed 50% collateral factor, no interest accrual\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"_borrowAsset\":\"ERC20 users can borrow\",\"_collateral\":\"ERC20 used as collateral\"}}},\"version\":1},\"userdoc\":{\"events\":{\"CrossBorrowRequested(address,uint256,bytes32)\":{\"notice\":\"Emitted when a cross-chain borrow is requested\"}},\"kind\":\"user\",\"methods\":{\"borrow(uint256)\":{\"notice\":\"Borrow up to COLLATERAL_FACTOR% of your deposited value\"},\"crossBorrow(uint256,bytes32)\":{\"notice\":\"Stub function for off-chain relayer to capture and later XCM\"},\"deposit(uint256)\":{\"notice\":\"Deposit collateral into the pool\"},\"repay(uint256)\":{\"notice\":\"Repay borrowed tokens\"},\"withdraw(uint256)\":{\"notice\":\"Withdraw your collateral (only if fully repaid)\"}},\"notice\":\"Minimal hackathon\\u2010style lending pool\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/LendingPool.sol\":\"LendingPool\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":false},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"contracts/LendingPool.sol\":{\"keccak256\":\"0x336b800353ece8a0d890734b2593fc7815eed096ade0607a361fc34f3820059c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864b8c601de0983cbb1b01acb61d21443f933c9c9205c48733b98721045851e4\",\"dweb:/ipfs/QmQVdQABYvxRxJwKTsNJpzZGiM2qdHEmzCK6Mgk9b4PfVG\"]}},\"version\":1}",
						"solc_version": "0.8.28+commit.7893614a.Emscripten.clang"
					},
					"devdoc": {
						"details": "Single‐collateral, fixed 50% collateral factor, no interest accrual",
						"kind": "dev",
						"methods": {
							"constructor": {
								"params": {
									"_borrowAsset": "ERC20 users can borrow",
									"_collateral": "ERC20 used as collateral"
								}
							}
						},
						"version": 1
					},
					"userdoc": {
						"events": {
							"CrossBorrowRequested(address,uint256,bytes32)": {
								"notice": "Emitted when a cross-chain borrow is requested"
							}
						},
						"kind": "user",
						"methods": {
							"borrow(uint256)": {
								"notice": "Borrow up to COLLATERAL_FACTOR% of your deposited value"
							},
							"crossBorrow(uint256,bytes32)": {
								"notice": "Stub function for off-chain relayer to capture and later XCM"
							},
							"deposit(uint256)": {
								"notice": "Deposit collateral into the pool"
							},
							"repay(uint256)": {
								"notice": "Repay borrowed tokens"
							},
							"withdraw(uint256)": {
								"notice": "Withdraw your collateral (only if fully repaid)"
							}
						},
						"notice": "Minimal hackathon‐style lending pool",
						"version": 1
					},
					"storageLayout": {
						"storage": [
							{
								"astId": 94,
								"contract": "contracts/LendingPool.sol:LendingPool",
								"label": "deposits",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 98,
								"contract": "contracts/LendingPool.sol:LendingPool",
								"label": "borrows",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"evm": {
						"assembly": "// RO data = 0/0 bytes\n// RW data = 36/65648 bytes\n// Stack size = 16384 bytes\n\n// Instructions = 13644\n// Code size = 42493 bytes\n\n      : @0 (gas: 2)\n     0: i32 a2 = a0 >> 0x10\n     3: jump @6 if a2 != 0\n      : @1 (gas: 2)\n     6: a2 = 0x10001\n    11: jump @6 if a1 >=u a2\n      : @2 (gas: 4)\n    14: a1 = a1 + a0\n    17: i32 a1 = a1 + 0x1f\n    20: a1 = a1 & 0xffffffffffffffe0\n    23: jump @7 if a1 >=u 65537\n      : @3 (gas: 2)\n    29: a3 = i32 [0x20024]\n    34: jump @5 if a3 >=u a1\n      : @4 (gas: 4)\n    37: u32 [0x20024] = a1\n    42: a1 = 0x20030\n    47: a0 = a0 + a1\n    50: ret\n      : @5 (gas: 3)\n    52: a1 = 0x20030\n    57: a0 = a0 + a1\n    60: ret\n      : @6 (gas: 1)\n    62: trap\n      : @7 (gas: 1)\n    63: trap\n      : @8 (gas: 13)\n    64: sp = sp + 0xffffffffffffffd8\n    67: u64 [sp + 0x20] = ra\n    70: u64 [sp + 0x18] = s0\n    73: u64 [sp + 0x10] = s1\n    76: a2 = u64 [a1]\n    78: u64 [sp + 0x8] = a2\n    81: a2 = u64 [a1 + 0x8]\n    84: u64 [sp] = a2\n    86: s0 = u64 [a1 + 0x10]\n    89: s1 = u64 [a1 + 0x18]\n    92: i32 a0 = a0 + 0\n    94: a1 = 0x20\n    97: ra = 2, jump @0\n      : @9 [@dyn 1] (gas: 71)\n   101: a1 = reverse s1\n   103: a2 = reverse s0\n   105: a3 = u64 [sp]\n   107: a3 = reverse a3\n   109: a4 = u64 [sp + 0x8]\n   112: a4 = reverse a4\n   114: u8 [a0 + 0x18] = a4\n   117: u8 [a0 + 0x10] = a3\n   120: u8 [a0 + 0x8] = a2\n   123: u8 [a0] = a1\n   125: a5 = a4 >> 0x38\n   128: u8 [a0 + 0x1f] = a5\n   131: a5 = a4 >> 0x30\n   134: u8 [a0 + 0x1e] = a5\n   137: a5 = a4 >> 0x28\n   140: u8 [a0 + 0x1d] = a5\n   143: a5 = a4 >> 0x20\n   146: u8 [a0 + 0x1c] = a5\n   149: a5 = a4 >> 0x18\n   152: u8 [a0 + 0x1b] = a5\n   155: a5 = a4 >> 0x10\n   158: u8 [a0 + 0x1a] = a5\n   161: a4 = a4 >> 0x8\n   164: u8 [a0 + 0x19] = a4\n   167: a4 = a3 >> 0x38\n   170: u8 [a0 + 0x17] = a4\n   173: a4 = a3 >> 0x30\n   176: u8 [a0 + 0x16] = a4\n   179: a4 = a3 >> 0x28\n   182: u8 [a0 + 0x15] = a4\n   185: a4 = a3 >> 0x20\n   188: u8 [a0 + 0x14] = a4\n   191: a4 = a3 >> 0x18\n   194: u8 [a0 + 0x13] = a4\n   197: a4 = a3 >> 0x10\n   200: u8 [a0 + 0x12] = a4\n   203: a3 = a3 >> 0x8\n   206: u8 [a0 + 0x11] = a3\n   209: a3 = a2 >> 0x38\n   212: u8 [a0 + 0xf] = a3\n   215: a3 = a2 >> 0x30\n   218: u8 [a0 + 0xe] = a3\n   221: a3 = a2 >> 0x28\n   224: u8 [a0 + 0xd] = a3\n   227: a3 = a2 >> 0x20\n   230: u8 [a0 + 0xc] = a3\n   233: a3 = a2 >> 0x18\n   236: u8 [a0 + 0xb] = a3\n   239: a3 = a2 >> 0x10\n   242: u8 [a0 + 0xa] = a3\n   245: a2 = a2 >> 0x8\n   248: u8 [a0 + 0x9] = a2\n   251: a2 = a1 >> 0x38\n   254: u8 [a0 + 0x7] = a2\n   257: a2 = a1 >> 0x30\n   260: u8 [a0 + 0x6] = a2\n   263: a2 = a1 >> 0x28\n   266: u8 [a0 + 0x5] = a2\n   269: a2 = a1 >> 0x20\n   272: u8 [a0 + 0x4] = a2\n   275: a2 = a1 >> 0x18\n   278: u8 [a0 + 0x3] = a2\n   281: a2 = a1 >> 0x10\n   284: u8 [a0 + 0x2] = a2\n   287: a1 = a1 >> 0x8\n   290: u8 [a0 + 0x1] = a1\n   293: ra = u64 [sp + 0x20]\n   296: s0 = u64 [sp + 0x18]\n   299: s1 = u64 [sp + 0x10]\n   302: sp = sp + 0x28\n   305: ret\n      : @10 (gas: 6)\n   307: sp = sp + 0xfffffffffffffff0\n   310: u64 [sp + 0x8] = ra\n   313: u64 [sp] = s0\n   315: s0 = a0 & 0x1\n   318: ecalli 4 // 'call_data_size'\n   320: fallthrough\n      : @11 (gas: 2)\n   321: u32 [0x20028] = a0\n   326: jump @13 if s0 == 0\n      : @12 (gas: 1)\n   329: ra = 4, jump @14\n      : @13 [@dyn 2] (gas: 1)\n   333: ra = 6, jump @35\n      : @14 [@dyn 3] (gas: 9)\n   338: sp = sp + 0xfffffffffffffec0\n   342: u64 [sp + 0x138] = ra\n   346: u64 [sp + 0x130] = s0\n   350: u64 [sp + 0x128] = s1\n   354: s0 = sp + 0x140\n   358: sp = sp & 0xffffffffffffffe0\n   361: a0 = 0x40\n   364: a1 = 0x20\n   367: ra = 8, jump @0\n      : @15 [@dyn 4] (gas: 39)\n   372: u8 [a0 + 31] = 0xc0\n   377: u8 [a0 + 30] = 0\n   380: u8 [a0 + 29] = 0\n   383: u8 [a0 + 28] = 0\n   386: u8 [a0 + 27] = 0\n   389: u8 [a0 + 26] = 0\n   392: u8 [a0 + 25] = 0\n   395: u8 [a0 + 24] = 0\n   398: u8 [a0 + 23] = 0\n   401: u8 [a0 + 22] = 0\n   404: u8 [a0 + 21] = 0\n   407: u8 [a0 + 20] = 0\n   410: u8 [a0 + 19] = 0\n   413: u8 [a0 + 18] = 0\n   416: u8 [a0 + 17] = 0\n   419: u8 [a0 + 16] = 0\n   422: u8 [a0 + 15] = 0\n   425: u8 [a0 + 14] = 0\n   428: u8 [a0 + 13] = 0\n   431: u8 [a0 + 12] = 0\n   434: u8 [a0 + 11] = 0\n   437: u8 [a0 + 10] = 0\n   440: u8 [a0 + 9] = 0\n   443: u8 [a0 + 8] = 0\n   446: u8 [a0 + 7] = 0\n   449: u8 [a0 + 6] = 0\n   452: u8 [a0 + 5] = 0\n   455: u8 [a0 + 4] = 0\n   458: u8 [a0 + 3] = 0\n   461: u8 [a0 + 2] = 0\n   464: u8 [a0 + 1] = 0\n   467: u8 [a0 + 0] = 0\n   469: u64 [sp + 280] = 0\n   473: u64 [sp + 256] = 0\n   477: u64 [sp + 264] = 0\n   481: u64 [sp + 272] = 0\n   485: i32 a0 = sp + 0x100\n   489: ecalli 16 // 'value_transferred'\n   491: fallthrough\n      : @16 (gas: 8)\n   492: a0 = u64 [sp + 0x110]\n   496: a1 = u64 [sp + 0x118]\n   500: a2 = u64 [sp + 0x108]\n   504: a3 = u64 [sp + 0x100]\n   508: a1 = a1 | a2\n   511: a0 = a0 | a3\n   514: a0 = a0 | a1\n   517: jump @26 if a0 != 0\n      : @17 (gas: 12)\n   521: a0 = i32 [0x20028]\n   526: u64 [sp + 0x38] = a0\n   529: a0 = a0 << 0x20\n   532: a2 = a0 >> 0x20\n   535: u64 [sp + 216] = 0\n   539: u64 [sp + 208] = 0\n   543: u64 [sp + 200] = 0\n   547: a0 = sp + 0xe0\n   551: a1 = sp + 0xc0\n   555: u64 [sp + 0x30] = a2\n   558: u64 [sp + 0xc0] = a2\n   562: ra = 10, jump @64\n      : @18 [@dyn 5] (gas: 12)\n   567: a4 = u64 [sp + 0xf8]\n   571: s1 = u64 [sp + 0xf0]\n   575: a3 = u64 [sp + 0xe8]\n   579: a2 = u64 [sp + 0xe0]\n   583: a0 = a3 | a4\n   586: a1 = a2 | s1\n   589: a1 = a1 | a0\n   592: a1 = a1 >> 0x20\n   595: a0 = a0 | s1\n   598: a0 = a0 << 0x20\n   601: a0 = a0 | a1\n   604: jump @25 if a0 != 0\n      : @19 (gas: 6)\n   608: i32 a0 = a2 + 0\n   610: a1 = u64 [sp + 0x38]\n   613: u64 [sp + 0x18] = a2\n   616: u64 [sp + 0x20] = a3\n   619: u64 [sp + 0x28] = a4\n   622: ra = 12, jump @0\n      : @20 [@dyn 6] (gas: 29)\n   627: i32 a0 = a0 + 0\n   629: a1 = u64 [sp + 0x38]\n   632: a2 = 0\n   634: ecalli 2 // 'call_data_copy'\n   636: a0 = u64 [sp + 0x30]\n   639: a2 = u64 [sp + 0x18]\n   642: a0 = a0 + a2\n   645: a1 = a0 <u a2\n   648: t1 = a2\n   650: a4 = u64 [sp + 0x20]\n   653: a2 = a4 + a1\n   656: a3 = a2 <u a4\n   659: a3 = a1 if a1 == 0\n   662: a3 = a3 + s1\n   665: a1 = a3 <u s1\n   668: a5 = u64 [sp + 0x28]\n   671: t0 = a5 + a1\n   674: u64 [sp + 0x48] = a2\n   677: u64 [sp + 0x40] = a0\n   680: u64 [sp + 0x78] = a5\n   683: u64 [sp + 0x70] = s1\n   686: u64 [sp + 0x68] = a4\n   689: u64 [sp + 0x60] = t1\n   692: u64 [sp + 0x50] = a3\n   695: a0 = sp + 0x80\n   699: a1 = sp + 0x60\n   702: a2 = sp + 0x40\n   705: u64 [sp + 0x58] = t0\n   708: ra = 14, jump @74\n      : @21 [@dyn 7] (gas: 18)\n   713: a0 = u64 [sp + 0xa0]\n   717: u64 [sp + 0x38] = a0\n   720: a0 = u64 [sp + 0xa8]\n   724: u64 [sp + 0x30] = a0\n   727: a0 = u64 [sp + 0xb0]\n   731: u64 [sp + 0x28] = a0\n   734: a0 = u64 [sp + 0xb8]\n   738: u64 [sp + 0x20] = a0\n   741: a0 = u64 [sp + 0x80]\n   745: u64 [sp + 0x18] = a0\n   748: a0 = u64 [sp + 0x88]\n   752: u64 [sp + 0x10] = a0\n   755: a0 = u64 [sp + 0x90]\n   759: u64 [sp + 0x8] = a0\n   762: s1 = u64 [sp + 0x98]\n   766: a0 = 0x80\n   770: a1 = 0x20\n   773: ra = 16, jump @0\n      : @22 [@dyn 8] (gas: 70)\n   778: a1 = reverse s1\n   780: a2 = u64 [sp + 0x8]\n   783: a2 = reverse a2\n   785: a3 = u64 [sp + 0x10]\n   788: a3 = reverse a3\n   790: a4 = u64 [sp + 0x18]\n   793: a4 = reverse a4\n   795: a5 = a4 >> 0x38\n   798: u8 [a0 + 0x1f] = a5\n   801: a5 = a4 >> 0x30\n   804: u8 [a0 + 0x1e] = a5\n   807: a5 = a4 >> 0x28\n   810: u8 [a0 + 0x1d] = a5\n   813: a5 = a4 >> 0x20\n   816: u8 [a0 + 0x1c] = a5\n   819: a5 = a4 >> 0x18\n   822: u8 [a0 + 0x1b] = a5\n   825: a5 = a4 >> 0x10\n   828: u8 [a0 + 0x1a] = a5\n   831: a5 = a4 >> 0x8\n   834: u8 [a0 + 0x19] = a5\n   837: u8 [a0 + 0x18] = a4\n   840: a4 = a3 >> 0x38\n   843: u8 [a0 + 0x17] = a4\n   846: a4 = a3 >> 0x30\n   849: u8 [a0 + 0x16] = a4\n   852: a4 = a3 >> 0x28\n   855: u8 [a0 + 0x15] = a4\n   858: a4 = a3 >> 0x20\n   861: u8 [a0 + 0x14] = a4\n   864: a4 = a3 >> 0x18\n   867: u8 [a0 + 0x13] = a4\n   870: a4 = a3 >> 0x10\n   873: u8 [a0 + 0x12] = a4\n   876: a4 = a3 >> 0x8\n   879: u8 [a0 + 0x11] = a4\n   882: u8 [a0 + 0x10] = a3\n   885: a3 = a2 >> 0x38\n   888: u8 [a0 + 0xf] = a3\n   891: a3 = a2 >> 0x30\n   894: u8 [a0 + 0xe] = a3\n   897: a3 = a2 >> 0x28\n   900: u8 [a0 + 0xd] = a3\n   903: a3 = a2 >> 0x20\n   906: u8 [a0 + 0xc] = a3\n   909: a3 = a2 >> 0x18\n   912: u8 [a0 + 0xb] = a3\n   915: a3 = a2 >> 0x10\n   918: u8 [a0 + 0xa] = a3\n   921: a3 = a2 >> 0x8\n   924: u8 [a0 + 0x9] = a3\n   927: u8 [a0 + 0x8] = a2\n   930: a2 = a1 >> 0x38\n   933: u8 [a0 + 0x7] = a2\n   936: a2 = a1 >> 0x30\n   939: u8 [a0 + 0x6] = a2\n   942: a2 = a1 >> 0x28\n   945: u8 [a0 + 0x5] = a2\n   948: a2 = a1 >> 0x20\n   951: u8 [a0 + 0x4] = a2\n   954: a2 = a1 >> 0x18\n   957: u8 [a0 + 0x3] = a2\n   960: a2 = a1 >> 0x10\n   963: u8 [a0 + 0x2] = a2\n   966: a2 = a1 >> 0x8\n   969: u8 [a0 + 0x1] = a2\n   972: u8 [a0] = a1\n   974: a0 = 0xa0\n   978: a1 = 0x20\n   981: ra = 18, jump @0\n      : @23 [@dyn 9] (gas: 71)\n   986: a1 = u64 [sp + 0x20]\n   989: a1 = reverse a1\n   991: a2 = u64 [sp + 0x28]\n   994: a2 = reverse a2\n   996: a3 = u64 [sp + 0x30]\n   999: a3 = reverse a3\n  1001: a4 = u64 [sp + 0x38]\n  1004: a4 = reverse a4\n  1006: a5 = a4 >> 0x38\n  1009: u8 [a0 + 0x1f] = a5\n  1012: a5 = a4 >> 0x30\n  1015: u8 [a0 + 0x1e] = a5\n  1018: a5 = a4 >> 0x28\n  1021: u8 [a0 + 0x1d] = a5\n  1024: a5 = a4 >> 0x20\n  1027: u8 [a0 + 0x1c] = a5\n  1030: a5 = a4 >> 0x18\n  1033: u8 [a0 + 0x1b] = a5\n  1036: a5 = a4 >> 0x10\n  1039: u8 [a0 + 0x1a] = a5\n  1042: a5 = a4 >> 0x8\n  1045: u8 [a0 + 0x19] = a5\n  1048: u8 [a0 + 0x18] = a4\n  1051: a4 = a3 >> 0x38\n  1054: u8 [a0 + 0x17] = a4\n  1057: a4 = a3 >> 0x30\n  1060: u8 [a0 + 0x16] = a4\n  1063: a4 = a3 >> 0x28\n  1066: u8 [a0 + 0x15] = a4\n  1069: a4 = a3 >> 0x20\n  1072: u8 [a0 + 0x14] = a4\n  1075: a4 = a3 >> 0x18\n  1078: u8 [a0 + 0x13] = a4\n  1081: a4 = a3 >> 0x10\n  1084: u8 [a0 + 0x12] = a4\n  1087: a4 = a3 >> 0x8\n  1090: u8 [a0 + 0x11] = a4\n  1093: u8 [a0 + 0x10] = a3\n  1096: a3 = a2 >> 0x38\n  1099: u8 [a0 + 0xf] = a3\n  1102: a3 = a2 >> 0x30\n  1105: u8 [a0 + 0xe] = a3\n  1108: a3 = a2 >> 0x28\n  1111: u8 [a0 + 0xd] = a3\n  1114: a3 = a2 >> 0x20\n  1117: u8 [a0 + 0xc] = a3\n  1120: a3 = a2 >> 0x18\n  1123: u8 [a0 + 0xb] = a3\n  1126: a3 = a2 >> 0x10\n  1129: u8 [a0 + 0xa] = a3\n  1132: a3 = a2 >> 0x8\n  1135: u8 [a0 + 0x9] = a3\n  1138: u8 [a0 + 0x8] = a2\n  1141: a2 = a1 >> 0x38\n  1144: u8 [a0 + 0x7] = a2\n  1147: a2 = a1 >> 0x30\n  1150: u8 [a0 + 0x6] = a2\n  1153: a2 = a1 >> 0x28\n  1156: u8 [a0 + 0x5] = a2\n  1159: a2 = a1 >> 0x20\n  1162: u8 [a0 + 0x4] = a2\n  1165: a2 = a1 >> 0x18\n  1168: u8 [a0 + 0x3] = a2\n  1171: a2 = a1 >> 0x10\n  1174: u8 [a0 + 0x2] = a2\n  1177: a2 = a1 >> 0x8\n  1180: u8 [a0 + 0x1] = a2\n  1183: u8 [a0] = a1\n  1185: a0 = 0x40\n  1188: a1 = 0x20\n  1191: ra = 20, jump @0\n      : @24 [@dyn 10] (gas: 100)\n  1196: a1 = u8 [a0 + 0x11]\n  1199: a2 = u8 [a0 + 0x10]\n  1202: a3 = u8 [a0 + 0x12]\n  1205: a4 = u8 [a0 + 0x13]\n  1208: a1 = a1 << 0x8\n  1211: a1 = a1 | a2\n  1214: a3 = a3 << 0x10\n  1217: a4 = a4 << 0x18\n  1220: a3 = a3 | a4\n  1223: a1 = a1 | a3\n  1226: a2 = u8 [a0 + 0x15]\n  1229: a3 = u8 [a0 + 0x14]\n  1232: a4 = u8 [a0 + 0x16]\n  1235: a5 = u8 [a0 + 0x17]\n  1238: a2 = a2 << 0x8\n  1241: a2 = a2 | a3\n  1244: a4 = a4 << 0x10\n  1247: a5 = a5 << 0x18\n  1250: a4 = a4 | a5\n  1253: a2 = a2 | a4\n  1256: a2 = a2 << 0x20\n  1259: t0 = a2 | a1\n  1262: a2 = u8 [a0 + 0x1]\n  1265: a3 = u8 [a0]\n  1267: a4 = u8 [a0 + 0x2]\n  1270: a5 = u8 [a0 + 0x3]\n  1273: a2 = a2 << 0x8\n  1276: a2 = a2 | a3\n  1279: a4 = a4 << 0x10\n  1282: a5 = a5 << 0x18\n  1285: a4 = a4 | a5\n  1288: a2 = a2 | a4\n  1291: a3 = u8 [a0 + 0x5]\n  1294: a4 = u8 [a0 + 0x4]\n  1297: a5 = u8 [a0 + 0x6]\n  1300: s1 = u8 [a0 + 0x7]\n  1303: a3 = a3 << 0x8\n  1306: a3 = a3 | a4\n  1309: a5 = a5 << 0x10\n  1312: s1 = s1 << 0x18\n  1315: a5 = a5 | s1\n  1318: a3 = a3 | a5\n  1321: a3 = a3 << 0x20\n  1324: a2 = a2 | a3\n  1327: a3 = u8 [a0 + 0x19]\n  1330: a4 = u8 [a0 + 0x18]\n  1333: a5 = u8 [a0 + 0x1a]\n  1336: s1 = u8 [a0 + 0x1b]\n  1339: a3 = a3 << 0x8\n  1342: a3 = a3 | a4\n  1345: a5 = a5 << 0x10\n  1348: s1 = s1 << 0x18\n  1351: a5 = a5 | s1\n  1354: a3 = a3 | a5\n  1357: a4 = u8 [a0 + 0x1d]\n  1360: a5 = u8 [a0 + 0x1c]\n  1363: s1 = u8 [a0 + 0x1e]\n  1366: a1 = u8 [a0 + 0x1f]\n  1369: a4 = a4 << 0x8\n  1372: a4 = a4 | a5\n  1375: s1 = s1 << 0x10\n  1378: a1 = a1 << 0x18\n  1381: a1 = a1 | s1\n  1384: a1 = a1 | a4\n  1387: a1 = a1 << 0x20\n  1390: a3 = a3 | a1\n  1393: a1 = u8 [a0 + 0x9]\n  1396: a4 = u8 [a0 + 0x8]\n  1399: a5 = u8 [a0 + 0xa]\n  1402: s1 = u8 [a0 + 0xb]\n  1405: a1 = a1 << 0x8\n  1408: a1 = a1 | a4\n  1411: a5 = a5 << 0x10\n  1414: s1 = s1 << 0x18\n  1417: a5 = a5 | s1\n  1420: a1 = a1 | a5\n  1423: a4 = u8 [a0 + 0xd]\n  1426: a5 = u8 [a0 + 0xc]\n  1429: s1 = u8 [a0 + 0xe]\n  1432: a0 = u8 [a0 + 0xf]\n  1435: a4 = a4 << 0x8\n  1438: a4 = a4 | a5\n  1441: s1 = s1 << 0x10\n  1444: a0 = a0 << 0x18\n  1447: a0 = a0 | s1\n  1450: a0 = a0 | a4\n  1453: a0 = a0 << 0x20\n  1456: a0 = a0 | a1\n  1459: a1 = reverse a0\n  1461: a0 = reverse a3\n  1463: a2 = reverse a2\n  1465: a3 = reverse t0\n  1467: a2 = a2 | a3\n  1470: a3 = a0 | a1\n  1473: a3 = a3 | a2\n  1476: a3 = a3 >> 0x20\n  1479: a1 = a1 | a2\n  1482: a1 = a1 << 0x20\n  1485: a1 = a1 | a3\n  1488: jump @28 if a1 == 0\n      : @25 (gas: 1)\n  1491: trap\n      : @26 (gas: 3)\n  1492: a0 = 0\n  1494: a1 = 0\n  1496: ra = 22, jump @0\n      : @27 [@dyn 11] (gas: 5)\n  1501: i32 a1 = a0 + 0\n  1503: a0 = 0x1\n  1506: a2 = 0\n  1508: ecalli 13 // 'seal_return'\n  1510: fallthrough\n      : @28 (gas: 3)\n  1511: i32 a0 = a0 + 0\n  1513: u64 [sp + 0x38] = a0\n  1516: ra = 24, jump @0\n      : @29 [@dyn 12] (gas: 7)\n  1521: i32 a0 = a0 + 0\n  1523: a1 = 0\n  1525: a2 = 0\n  1527: ecalli 2 // 'call_data_copy'\n  1529: a0 = 0x80\n  1533: a1 = 0x20\n  1536: ra = 26, jump @0\n      : @30 [@dyn 13] (gas: 100)\n  1541: a1 = u8 [a0 + 0x1]\n  1544: a2 = u8 [a0]\n  1546: a3 = u8 [a0 + 0x2]\n  1549: a4 = u8 [a0 + 0x3]\n  1552: a1 = a1 << 0x8\n  1555: a1 = a1 | a2\n  1558: a3 = a3 << 0x10\n  1561: a4 = a4 << 0x18\n  1564: a3 = a3 | a4\n  1567: a1 = a1 | a3\n  1570: a2 = u8 [a0 + 0x5]\n  1573: a3 = u8 [a0 + 0x4]\n  1576: a4 = u8 [a0 + 0x6]\n  1579: a5 = u8 [a0 + 0x7]\n  1582: a2 = a2 << 0x8\n  1585: a2 = a2 | a3\n  1588: a4 = a4 << 0x10\n  1591: a5 = a5 << 0x18\n  1594: a4 = a4 | a5\n  1597: a2 = a2 | a4\n  1600: a2 = a2 << 0x20\n  1603: t0 = a2 | a1\n  1606: a2 = u8 [a0 + 0x19]\n  1609: a3 = u8 [a0 + 0x18]\n  1612: a4 = u8 [a0 + 0x1a]\n  1615: a5 = u8 [a0 + 0x1b]\n  1618: a2 = a2 << 0x8\n  1621: a2 = a2 | a3\n  1624: a4 = a4 << 0x10\n  1627: a5 = a5 << 0x18\n  1630: a4 = a4 | a5\n  1633: a2 = a2 | a4\n  1636: a3 = u8 [a0 + 0x1d]\n  1639: a4 = u8 [a0 + 0x1c]\n  1642: a5 = u8 [a0 + 0x1e]\n  1645: s1 = u8 [a0 + 0x1f]\n  1648: a3 = a3 << 0x8\n  1651: a3 = a3 | a4\n  1654: a5 = a5 << 0x10\n  1657: s1 = s1 << 0x18\n  1660: a5 = a5 | s1\n  1663: a3 = a3 | a5\n  1666: a3 = a3 << 0x20\n  1669: a2 = a2 | a3\n  1672: a3 = u8 [a0 + 0x11]\n  1675: a4 = u8 [a0 + 0x10]\n  1678: a5 = u8 [a0 + 0x12]\n  1681: s1 = u8 [a0 + 0x13]\n  1684: a3 = a3 << 0x8\n  1687: a3 = a3 | a4\n  1690: a5 = a5 << 0x10\n  1693: s1 = s1 << 0x18\n  1696: a5 = a5 | s1\n  1699: a3 = a3 | a5\n  1702: a4 = u8 [a0 + 0x15]\n  1705: a5 = u8 [a0 + 0x14]\n  1708: s1 = u8 [a0 + 0x16]\n  1711: a1 = u8 [a0 + 0x17]\n  1714: a4 = a4 << 0x8\n  1717: a4 = a4 | a5\n  1720: s1 = s1 << 0x10\n  1723: a1 = a1 << 0x18\n  1726: a1 = a1 | s1\n  1729: a1 = a1 | a4\n  1732: a1 = a1 << 0x20\n  1735: a3 = a3 | a1\n  1738: a1 = u8 [a0 + 0x9]\n  1741: a4 = u8 [a0 + 0x8]\n  1744: a5 = u8 [a0 + 0xa]\n  1747: s1 = u8 [a0 + 0xb]\n  1750: a1 = a1 << 0x8\n  1753: a1 = a1 | a4\n  1756: a5 = a5 << 0x10\n  1759: s1 = s1 << 0x18\n  1762: a5 = a5 | s1\n  1765: a1 = a1 | a5\n  1768: a4 = u8 [a0 + 0xd]\n  1771: a5 = u8 [a0 + 0xc]\n  1774: s1 = u8 [a0 + 0xe]\n  1777: a0 = u8 [a0 + 0xf]\n  1780: a4 = a4 << 0x8\n  1783: a4 = a4 | a5\n  1786: s1 = s1 << 0x10\n  1789: a0 = a0 << 0x18\n  1792: a0 = a0 | s1\n  1795: a0 = a0 | a4\n  1798: a0 = a0 << 0x20\n  1801: a0 = a0 | a1\n  1804: a0 = reverse a0\n  1806: s1 = 0x30030\n  1811: a1 = reverse a3\n  1813: a2 = reverse a2\n  1815: a3 = reverse t0\n  1817: u64 [0x30048] = a3\n  1822: u64 [0x30030] = a2\n  1827: u64 [0x30038] = a1\n  1832: u64 [0x30040] = a0\n  1837: a0 = 0xa0\n  1841: a1 = 0x20\n  1844: ra = 28, jump @0\n      : @31 [@dyn 14] (gas: 98)\n  1849: a1 = u8 [a0 + 0x1]\n  1852: a2 = u8 [a0]\n  1854: a3 = u8 [a0 + 0x2]\n  1857: a4 = u8 [a0 + 0x3]\n  1860: a1 = a1 << 0x8\n  1863: a1 = a1 | a2\n  1866: a3 = a3 << 0x10\n  1869: a4 = a4 << 0x18\n  1872: a3 = a3 | a4\n  1875: a1 = a1 | a3\n  1878: a2 = u8 [a0 + 0x5]\n  1881: a3 = u8 [a0 + 0x4]\n  1884: a4 = u8 [a0 + 0x6]\n  1887: a5 = u8 [a0 + 0x7]\n  1890: a2 = a2 << 0x8\n  1893: a2 = a2 | a3\n  1896: a4 = a4 << 0x10\n  1899: a5 = a5 << 0x18\n  1902: a4 = a4 | a5\n  1905: a2 = a2 | a4\n  1908: a2 = a2 << 0x20\n  1911: t0 = a2 | a1\n  1914: a2 = u8 [a0 + 0x19]\n  1917: a3 = u8 [a0 + 0x18]\n  1920: a4 = u8 [a0 + 0x1a]\n  1923: a5 = u8 [a0 + 0x1b]\n  1926: a2 = a2 << 0x8\n  1929: a2 = a2 | a3\n  1932: a4 = a4 << 0x10\n  1935: a5 = a5 << 0x18\n  1938: a4 = a4 | a5\n  1941: a2 = a2 | a4\n  1944: a3 = u8 [a0 + 0x1d]\n  1947: a4 = u8 [a0 + 0x1c]\n  1950: a5 = u8 [a0 + 0x1e]\n  1953: a1 = u8 [a0 + 0x1f]\n  1956: a3 = a3 << 0x8\n  1959: a3 = a3 | a4\n  1962: a5 = a5 << 0x10\n  1965: a1 = a1 << 0x18\n  1968: a1 = a1 | a5\n  1971: a1 = a1 | a3\n  1974: a1 = a1 << 0x20\n  1977: t1 = a1 | a2\n  1980: a1 = u8 [a0 + 0x11]\n  1983: a3 = u8 [a0 + 0x10]\n  1986: a4 = u8 [a0 + 0x12]\n  1989: a5 = u8 [a0 + 0x13]\n  1992: a1 = a1 << 0x8\n  1995: a1 = a1 | a3\n  1998: a4 = a4 << 0x10\n  2001: a5 = a5 << 0x18\n  2004: a4 = a4 | a5\n  2007: a1 = a1 | a4\n  2010: a3 = u8 [a0 + 0x15]\n  2013: a4 = u8 [a0 + 0x14]\n  2016: a5 = u8 [a0 + 0x16]\n  2019: a2 = u8 [a0 + 0x17]\n  2022: a3 = a3 << 0x8\n  2025: a3 = a3 | a4\n  2028: a5 = a5 << 0x10\n  2031: a2 = a2 << 0x18\n  2034: a2 = a2 | a5\n  2037: a2 = a2 | a3\n  2040: a2 = a2 << 0x20\n  2043: a3 = a2 | a1\n  2046: a1 = u8 [a0 + 0x9]\n  2049: a2 = u8 [a0 + 0x8]\n  2052: a4 = u8 [a0 + 0xa]\n  2055: a5 = u8 [a0 + 0xb]\n  2058: a1 = a1 << 0x8\n  2061: a1 = a1 | a2\n  2064: a4 = a4 << 0x10\n  2067: a5 = a5 << 0x18\n  2070: a4 = a4 | a5\n  2073: a1 = a1 | a4\n  2076: a2 = u8 [a0 + 0xd]\n  2079: a4 = u8 [a0 + 0xc]\n  2082: a5 = u8 [a0 + 0xe]\n  2085: a0 = u8 [a0 + 0xf]\n  2088: a2 = a2 << 0x8\n  2091: a2 = a2 | a4\n  2094: a5 = a5 << 0x10\n  2097: a0 = a0 << 0x18\n  2100: a0 = a0 | a5\n  2103: a0 = a0 | a2\n  2106: a0 = a0 << 0x20\n  2109: a0 = a0 | a1\n  2112: a0 = reverse a0\n  2114: a2 = reverse a3\n  2116: a3 = reverse t1\n  2118: a4 = reverse t0\n  2120: a1 = i32 [0x20020]\n  2125: u64 [s1 + 0x38] = a4\n  2128: u64 [s1 + 0x20] = a3\n  2131: u64 [s1 + 0x28] = a2\n  2134: u64 [s1 + 0x30] = a0\n  2137: jump @33 if a1 == 0\n      : @32 (gas: 3)\n  2140: i32 a0 = s1 + 0\n  2142: ecalli 14 // 'set_immutable_data'\n  2144: fallthrough\n      : @33 (gas: 3)\n  2145: a0 = u64 [sp + 0x38]\n  2148: a1 = 0\n  2150: ra = 30, jump @0\n      : @34 [@dyn 15] (gas: 6)\n  2155: i32 a1 = a0 + 0\n  2157: a0 = 0\n  2159: a2 = 0\n  2161: ra = 0x20\n  2164: ecalli 13 // 'seal_return'\n  2166: fallthrough\n      : @35 [@dyn 16] (gas: 8)\n  2167: sp = sp + 0xffffffffffffffc0\n  2170: u64 [sp + 0x38] = ra\n  2173: u64 [sp + 0x30] = s0\n  2176: s0 = sp + 0x40\n  2179: sp = sp & 0xffffffffffffffe0\n  2182: a0 = 0x40\n  2185: a1 = 0x20\n  2188: ra = 34, jump @0\n      : @36 [@dyn 17] (gas: 34)\n  2193: u8 [a0 + 31] = 0x80\n  2198: u8 [a0 + 30] = 0\n  2201: u8 [a0 + 29] = 0\n  2204: u8 [a0 + 28] = 0\n  2207: u8 [a0 + 27] = 0\n  2210: u8 [a0 + 26] = 0\n  2213: u8 [a0 + 25] = 0\n  2216: u8 [a0 + 24] = 0\n  2219: u8 [a0 + 23] = 0\n  2222: u8 [a0 + 22] = 0\n  2225: u8 [a0 + 21] = 0\n  2228: u8 [a0 + 20] = 0\n  2231: u8 [a0 + 19] = 0\n  2234: u8 [a0 + 18] = 0\n  2237: u8 [a0 + 17] = 0\n  2240: u8 [a0 + 16] = 0\n  2243: u8 [a0 + 15] = 0\n  2246: u8 [a0 + 14] = 0\n  2249: u8 [a0 + 13] = 0\n  2252: u8 [a0 + 12] = 0\n  2255: u8 [a0 + 11] = 0\n  2258: u8 [a0 + 10] = 0\n  2261: u8 [a0 + 9] = 0\n  2264: u8 [a0 + 8] = 0\n  2267: u8 [a0 + 7] = 0\n  2270: u8 [a0 + 3] = 0\n  2273: u8 [a0 + 2] = 0\n  2276: u8 [a0 + 1] = 0\n  2279: u8 [a0 + 0] = 0\n  2281: a1 = i32 [0x20028]\n  2286: u8 [a0 + 6] = 0\n  2289: u8 [a0 + 5] = 0\n  2292: u8 [a0 + 4] = 0\n  2295: jump @55 if a1 <u 4\n      : @37 (gas: 4)\n  2300: i32 a0 = sp + 0\n  2302: a1 = 0\n  2304: ecalli 3 // 'call_data_load'\n  2306: fallthrough\n      : @38 (gas: 2)\n  2307: a0 = i32 [sp + 0x1c]\n  2310: jump @44 if a0 >s 773487948\n      : @39 (gas: 1)\n  2317: jump @49 if a0 <=s 3638553412\n      : @40 (gas: 1)\n  2325: jump @58 if a0 == 3638553413\n      : @41 (gas: 1)\n  2333: jump @60 if a0 == 4236126317\n      : @42 (gas: 1)\n  2341: jump @55 if a0 != 401907205\n      : @43 (gas: 14)\n  2349: ra = 0x24\n  2352: sp = sp + 0xffffffffffffffc0\n  2355: u64 [sp + 0x38] = ra\n  2358: u64 [sp + 0x30] = s0\n  2361: u64 [sp + 0x28] = s1\n  2364: s0 = sp + 0x40\n  2367: sp = sp & 0xffffffffffffffe0\n  2370: u64 [sp + 24] = 0\n  2373: u64 [sp + 16] = 0\n  2376: u64 [sp + 8] = 0\n  2379: u64 [sp + 0] = 0\n  2381: i32 a0 = sp + 0\n  2383: ecalli 16 // 'value_transferred'\n  2385: jump @92\n      : @44 [@dyn 18] (gas: 1)\n  2388: jump @52 if a0 <=s 1147426532\n      : @45 (gas: 1)\n  2395: jump @59 if a0 == 1147426533\n      : @46 (gas: 1)\n  2403: jump @61 if a0 == 1420128367\n      : @47 (gas: 1)\n  2411: jump @55 if a0 != 1470317526\n      : @48 (gas: 14)\n  2418: ra = 0x26\n  2421: sp = sp + 0xffffffffffffff40\n  2425: u64 [sp + 0xb8] = ra\n  2429: u64 [sp + 0xb0] = s0\n  2433: u64 [sp + 0xa8] = s1\n  2437: s0 = sp + 0xc0\n  2441: sp = sp & 0xffffffffffffffe0\n  2444: u64 [sp + 120] = 0\n  2447: u64 [sp + 112] = 0\n  2450: u64 [sp + 104] = 0\n  2453: u64 [sp + 96] = 0\n  2456: i32 a0 = sp + 0x60\n  2459: ecalli 16 // 'value_transferred'\n  2461: jump @182\n      : @49 [@dyn 19] (gas: 1)\n  2464: jump @56 if a0 == 3065339685\n      : @50 (gas: 1)\n  2471: jump @55 if a0 != 3320572652\n      : @51 (gas: 1)\n  2478: ra = 40, jump @203\n      : @52 [@dyn 20] (gas: 1)\n  2483: jump @57 if a0 == 773487949\n      : @53 (gas: 1)\n  2490: jump @55 if a0 != 924834022\n      : @54 (gas: 1)\n  2497: ra = 42, jump @113\n      : @55 [@dyn 21] (gas: 1)\n  2502: ra = 44, jump @252\n      : @56 [@dyn 22] (gas: 1)\n  2507: ra = 46, jump @192\n      : @57 [@dyn 23] (gas: 13)\n  2512: ra = 0x30\n  2515: sp = sp + 0xffffffffffffff80\n  2518: u64 [sp + 0x78] = ra\n  2521: u64 [sp + 0x70] = s0\n  2524: s0 = sp + 0x80\n  2528: sp = sp & 0xffffffffffffffe0\n  2531: u64 [sp + 56] = 0\n  2534: u64 [sp + 48] = 0\n  2537: u64 [sp + 40] = 0\n  2540: u64 [sp + 32] = 0\n  2543: i32 a0 = sp + 0x20\n  2546: ecalli 16 // 'value_transferred'\n  2548: jump @103\n      : @58 [@dyn 24] (gas: 14)\n  2551: ra = 0x32\n  2554: sp = sp + 0xffffffffffffffa0\n  2557: u64 [sp + 0x58] = ra\n  2560: u64 [sp + 0x50] = s0\n  2563: u64 [sp + 0x48] = s1\n  2566: s0 = sp + 0x60\n  2569: sp = sp & 0xffffffffffffffe0\n  2572: u64 [sp + 56] = 0\n  2575: u64 [sp + 48] = 0\n  2578: u64 [sp + 40] = 0\n  2581: u64 [sp + 32] = 0\n  2584: i32 a0 = sp + 0x20\n  2587: ecalli 16 // 'value_transferred'\n  2589: jump @219\n      : @59 [@dyn 25] (gas: 14)\n  2592: ra = 0x34\n  2595: sp = sp + 0xffffffffffffffa0\n  2598: u64 [sp + 0x58] = ra\n  2601: u64 [sp + 0x50] = s0\n  2604: u64 [sp + 0x48] = s1\n  2607: s0 = sp + 0x60\n  2610: sp = sp & 0xffffffffffffffe0\n  2613: u64 [sp + 56] = 0\n  2616: u64 [sp + 48] = 0\n  2619: u64 [sp + 40] = 0\n  2622: u64 [sp + 32] = 0\n  2625: i32 a0 = sp + 0x20\n  2628: ecalli 16 // 'value_transferred'\n  2630: jump @129\n      : @60 [@dyn 26] (gas: 14)\n  2633: ra = 0x36\n  2636: sp = sp + 0xffffffffffffff60\n  2640: u64 [sp + 0x98] = ra\n  2644: u64 [sp + 0x90] = s0\n  2648: u64 [sp + 0x88] = s1\n  2652: s0 = sp + 0xa0\n  2656: sp = sp & 0xffffffffffffffe0\n  2659: u64 [sp + 56] = 0\n  2662: u64 [sp + 48] = 0\n  2665: u64 [sp + 40] = 0\n  2668: u64 [sp + 32] = 0\n  2671: i32 a0 = sp + 0x20\n  2674: ecalli 16 // 'value_transferred'\n  2676: jump @236\n      : @61 [@dyn 27] (gas: 14)\n  2679: ra = 0x38\n  2682: sp = sp + 0xffffffffffffff60\n  2686: u64 [sp + 0x98] = ra\n  2690: u64 [sp + 0x90] = s0\n  2694: u64 [sp + 0x88] = s1\n  2698: s0 = sp + 0xa0\n  2702: sp = sp & 0xffffffffffffffe0\n  2705: u64 [sp + 56] = 0\n  2708: u64 [sp + 48] = 0\n  2711: u64 [sp + 40] = 0\n  2714: u64 [sp + 32] = 0\n  2717: i32 a0 = sp + 0x20\n  2720: ecalli 16 // 'value_transferred'\n  2722: jump @165\n      : @62 [@dyn 28] (gas: 7)\n  2725: sp = sp + 0xfffffffffffffff0\n  2728: u64 [sp + 0x8] = ra\n  2731: u64 [sp] = s0\n  2733: s0 = a0\n  2735: a0 = 0x40\n  2738: a1 = 0x20\n  2741: ra = 58, jump @0\n      : @63 [@dyn 29] (gas: 100)\n  2746: a1 = u8 [a0 + 0x1]\n  2749: a2 = u8 [a0]\n  2751: a3 = u8 [a0 + 0x2]\n  2754: a4 = u8 [a0 + 0x3]\n  2757: a1 = a1 << 0x8\n  2760: a1 = a1 | a2\n  2763: a3 = a3 << 0x10\n  2766: a4 = a4 << 0x18\n  2769: a3 = a3 | a4\n  2772: a1 = a1 | a3\n  2775: a2 = u8 [a0 + 0x5]\n  2778: a3 = u8 [a0 + 0x4]\n  2781: a4 = u8 [a0 + 0x6]\n  2784: a5 = u8 [a0 + 0x7]\n  2787: a2 = a2 << 0x8\n  2790: a2 = a2 | a3\n  2793: a4 = a4 << 0x10\n  2796: a5 = a5 << 0x18\n  2799: a4 = a4 | a5\n  2802: a2 = a2 | a4\n  2805: a2 = a2 << 0x20\n  2808: t0 = a2 | a1\n  2811: a2 = u8 [a0 + 0x9]\n  2814: a3 = u8 [a0 + 0x8]\n  2817: a4 = u8 [a0 + 0xa]\n  2820: a5 = u8 [a0 + 0xb]\n  2823: a2 = a2 << 0x8\n  2826: a2 = a2 | a3\n  2829: a4 = a4 << 0x10\n  2832: a5 = a5 << 0x18\n  2835: a4 = a4 | a5\n  2838: a2 = a2 | a4\n  2841: a3 = u8 [a0 + 0xd]\n  2844: a4 = u8 [a0 + 0xc]\n  2847: a5 = u8 [a0 + 0xe]\n  2850: a1 = u8 [a0 + 0xf]\n  2853: a3 = a3 << 0x8\n  2856: a3 = a3 | a4\n  2859: a5 = a5 << 0x10\n  2862: a1 = a1 << 0x18\n  2865: a1 = a1 | a5\n  2868: a1 = a1 | a3\n  2871: a1 = a1 << 0x20\n  2874: t1 = a1 | a2\n  2877: a1 = u8 [a0 + 0x11]\n  2880: a3 = u8 [a0 + 0x10]\n  2883: a4 = u8 [a0 + 0x12]\n  2886: a5 = u8 [a0 + 0x13]\n  2889: a1 = a1 << 0x8\n  2892: a1 = a1 | a3\n  2895: a4 = a4 << 0x10\n  2898: a5 = a5 << 0x18\n  2901: a4 = a4 | a5\n  2904: a1 = a1 | a4\n  2907: a3 = u8 [a0 + 0x15]\n  2910: a4 = u8 [a0 + 0x14]\n  2913: a5 = u8 [a0 + 0x16]\n  2916: a2 = u8 [a0 + 0x17]\n  2919: a3 = a3 << 0x8\n  2922: a3 = a3 | a4\n  2925: a5 = a5 << 0x10\n  2928: a2 = a2 << 0x18\n  2931: a2 = a2 | a5\n  2934: a2 = a2 | a3\n  2937: a2 = a2 << 0x20\n  2940: a3 = a2 | a1\n  2943: a1 = u8 [a0 + 0x19]\n  2946: a2 = u8 [a0 + 0x18]\n  2949: a4 = u8 [a0 + 0x1a]\n  2952: a5 = u8 [a0 + 0x1b]\n  2955: a1 = a1 << 0x8\n  2958: a1 = a1 | a2\n  2961: a4 = a4 << 0x10\n  2964: a5 = a5 << 0x18\n  2967: a4 = a4 | a5\n  2970: a1 = a1 | a4\n  2973: a2 = u8 [a0 + 0x1d]\n  2976: a4 = u8 [a0 + 0x1c]\n  2979: a5 = u8 [a0 + 0x1e]\n  2982: a0 = u8 [a0 + 0x1f]\n  2985: a2 = a2 << 0x8\n  2988: a2 = a2 | a4\n  2991: a5 = a5 << 0x10\n  2994: a0 = a0 << 0x18\n  2997: a0 = a0 | a5\n  3000: a0 = a0 | a2\n  3003: a0 = a0 << 0x20\n  3006: a0 = a0 | a1\n  3009: a0 = reverse a0\n  3011: a1 = reverse a3\n  3013: a2 = reverse t1\n  3015: a3 = reverse t0\n  3017: u64 [s0 + 0x18] = a3\n  3020: u64 [s0 + 0x10] = a2\n  3023: u64 [s0 + 0x8] = a1\n  3026: u64 [s0] = a0\n  3028: ra = u64 [sp + 0x8]\n  3031: s0 = u64 [sp]\n  3033: sp = sp + 0x10\n  3036: ret\n      : @64 (gas: 18)\n  3038: sp = sp + 0xffffffffffffff60\n  3042: u64 [sp + 0x98] = ra\n  3046: u64 [sp + 0x90] = s0\n  3050: u64 [sp + 0x88] = s1\n  3054: s0 = sp + 0xa0\n  3058: sp = sp & 0xfffffffffffffff0\n  3061: a2 = u64 [a1 + 0x18]\n  3064: u64 [sp + 0x30] = a2\n  3067: a2 = u64 [a1 + 0x10]\n  3070: u64 [sp + 0x28] = a2\n  3073: a2 = u64 [a1 + 0x8]\n  3076: u64 [sp + 0x20] = a2\n  3079: a1 = u64 [a1]\n  3081: u64 [sp + 0x18] = a1\n  3084: u64 [sp + 0x38] = a0\n  3087: a0 = 0x40\n  3090: a1 = 0x20\n  3093: ra = 60, jump @0\n      : @65 [@dyn 30] (gas: 130)\n  3098: a1 = u8 [a0 + 0x19]\n  3101: a2 = u8 [a0 + 0x18]\n  3104: a3 = u8 [a0 + 0x1a]\n  3107: a4 = u8 [a0 + 0x1b]\n  3110: a1 = a1 << 0x8\n  3113: a1 = a1 | a2\n  3116: a3 = a3 << 0x10\n  3119: a4 = a4 << 0x18\n  3122: a3 = a3 | a4\n  3125: a1 = a1 | a3\n  3128: a2 = u8 [a0 + 0x1d]\n  3131: a3 = u8 [a0 + 0x1c]\n  3134: a4 = u8 [a0 + 0x1e]\n  3137: a5 = u8 [a0 + 0x1f]\n  3140: a2 = a2 << 0x8\n  3143: a2 = a2 | a3\n  3146: a4 = a4 << 0x10\n  3149: a5 = a5 << 0x18\n  3152: a4 = a4 | a5\n  3155: a2 = a2 | a4\n  3158: a2 = a2 << 0x20\n  3161: t0 = a2 | a1\n  3164: a2 = u8 [a0 + 0x11]\n  3167: a3 = u8 [a0 + 0x10]\n  3170: a4 = u8 [a0 + 0x12]\n  3173: a5 = u8 [a0 + 0x13]\n  3176: a2 = a2 << 0x8\n  3179: a2 = a2 | a3\n  3182: a4 = a4 << 0x10\n  3185: a5 = a5 << 0x18\n  3188: a4 = a4 | a5\n  3191: a2 = a2 | a4\n  3194: a3 = u8 [a0 + 0x15]\n  3197: a4 = u8 [a0 + 0x14]\n  3200: a5 = u8 [a0 + 0x16]\n  3203: s1 = u8 [a0 + 0x17]\n  3206: a3 = a3 << 0x8\n  3209: a3 = a3 | a4\n  3212: a5 = a5 << 0x10\n  3215: s1 = s1 << 0x18\n  3218: a5 = a5 | s1\n  3221: a3 = a3 | a5\n  3224: a3 = a3 << 0x20\n  3227: a2 = a2 | a3\n  3230: a3 = u8 [a0 + 0x9]\n  3233: a4 = u8 [a0 + 0x8]\n  3236: a5 = u8 [a0 + 0xa]\n  3239: s1 = u8 [a0 + 0xb]\n  3242: a3 = a3 << 0x8\n  3245: a3 = a3 | a4\n  3248: a5 = a5 << 0x10\n  3251: s1 = s1 << 0x18\n  3254: a5 = a5 | s1\n  3257: a3 = a3 | a5\n  3260: a4 = u8 [a0 + 0xd]\n  3263: a5 = u8 [a0 + 0xc]\n  3266: s1 = u8 [a0 + 0xe]\n  3269: a1 = u8 [a0 + 0xf]\n  3272: a4 = a4 << 0x8\n  3275: a4 = a4 | a5\n  3278: s1 = s1 << 0x10\n  3281: a1 = a1 << 0x18\n  3284: a1 = a1 | s1\n  3287: a1 = a1 | a4\n  3290: a1 = a1 << 0x20\n  3293: a3 = a3 | a1\n  3296: a1 = u8 [a0 + 0x1]\n  3299: a4 = u8 [a0]\n  3301: a5 = u8 [a0 + 0x2]\n  3304: s1 = u8 [a0 + 0x3]\n  3307: a1 = a1 << 0x8\n  3310: a1 = a1 | a4\n  3313: a5 = a5 << 0x10\n  3316: s1 = s1 << 0x18\n  3319: a5 = a5 | s1\n  3322: a1 = a1 | a5\n  3325: a4 = u8 [a0 + 0x5]\n  3328: a5 = u8 [a0 + 0x4]\n  3331: s1 = u8 [a0 + 0x6]\n  3334: a0 = u8 [a0 + 0x7]\n  3337: a4 = a4 << 0x8\n  3340: a4 = a4 | a5\n  3343: s1 = s1 << 0x10\n  3346: a0 = a0 << 0x18\n  3349: a0 = a0 | s1\n  3352: a0 = a0 | a4\n  3355: a0 = a0 << 0x20\n  3358: a0 = a0 | a1\n  3361: t1 = reverse a0\n  3363: t2 = reverse a3\n  3365: s1 = reverse a2\n  3367: a5 = reverse t0\n  3369: a1 = u64 [sp + 0x18]\n  3372: a0 = a1 + 0x1f\n  3375: a1 = a0 <u a1\n  3378: a3 = u64 [sp + 0x20]\n  3381: a2 = a3 + a1\n  3384: a3 = a2 <u a3\n  3387: a3 = a1 if a1 == 0\n  3390: a1 = u64 [sp + 0x28]\n  3393: a3 = a3 + a1\n  3396: a1 = a3 <u a1\n  3399: a4 = u64 [sp + 0x30]\n  3402: a1 = a1 + a4\n  3405: a0 = a0 & 0xffffffffffffffe0\n  3408: a0 = a0 + a5\n  3411: u64 [sp + 0x28] = a5\n  3414: u64 [sp + 0x10] = a0\n  3417: a4 = a0 <u a5\n  3420: a2 = a2 + s1\n  3423: a5 = a2 + a4\n  3426: a2 = a5 ^ s1\n  3429: u64 [sp + 0x30] = s1\n  3432: a0 = a5 <u s1\n  3435: a0 = a4 if a2 == 0\n  3438: a3 = a3 + t2\n  3441: a4 = a3 + a0\n  3444: s1 = a4 <u a3\n  3447: a2 = a3 <u t2\n  3450: a1 = a1 + t1\n  3453: a1 = a1 + a2\n  3456: s1 = s1 + a1\n  3459: a1 = a4 >u 0\n  3461: a2 = s1 >u 0\n  3463: a2 = a1 if s1 == 0\n  3466: a1 = a4 | s1\n  3469: u64 [sp + 0x8] = a5\n  3472: a3 = a5 >u 0\n  3474: a3 = a2 if a1 != 0\n  3477: jump @69 if a3 != 0\n      : @66 (gas: 8)\n  3481: a1 = a4 <u t2\n  3484: a2 = s1 ^ t1\n  3487: a3 = s1 <u t1\n  3490: a3 = a1 if a2 == 0\n  3493: a1 = a4 ^ t2\n  3496: a1 = a1 | a2\n  3499: a0 = a3 if a1 != 0\n  3502: jump @69 if a0 != 0\n      : @67 (gas: 6)\n  3506: a0 = 0x40\n  3509: a1 = 0x20\n  3512: u64 [sp + 0x20] = t2\n  3515: u64 [sp + 0x18] = t1\n  3518: u64 [sp] = a4\n  3520: ra = 62, jump @0\n      : @68 [@dyn 31] (gas: 82)\n  3525: a1 = reverse s1\n  3527: a2 = u64 [sp]\n  3529: a2 = reverse a2\n  3531: a3 = u64 [sp + 0x8]\n  3534: a3 = reverse a3\n  3536: a4 = u64 [sp + 0x10]\n  3539: a4 = reverse a4\n  3541: u8 [a0 + 0x18] = a4\n  3544: a5 = a4 >> 0x38\n  3547: u8 [a0 + 0x1f] = a5\n  3550: a5 = a4 >> 0x30\n  3553: u8 [a0 + 0x1e] = a5\n  3556: a5 = a4 >> 0x28\n  3559: u8 [a0 + 0x1d] = a5\n  3562: a5 = a4 >> 0x20\n  3565: u8 [a0 + 0x1c] = a5\n  3568: a5 = a4 >> 0x18\n  3571: u8 [a0 + 0x1b] = a5\n  3574: a5 = a4 >> 0x10\n  3577: u8 [a0 + 0x1a] = a5\n  3580: a4 = a4 >> 0x8\n  3583: u8 [a0 + 0x19] = a4\n  3586: u8 [a0 + 0x10] = a3\n  3589: a4 = a3 >> 0x38\n  3592: u8 [a0 + 0x17] = a4\n  3595: a4 = a3 >> 0x30\n  3598: u8 [a0 + 0x16] = a4\n  3601: a4 = a3 >> 0x28\n  3604: u8 [a0 + 0x15] = a4\n  3607: a4 = a3 >> 0x20\n  3610: u8 [a0 + 0x14] = a4\n  3613: a4 = a3 >> 0x18\n  3616: u8 [a0 + 0x13] = a4\n  3619: a4 = a3 >> 0x10\n  3622: u8 [a0 + 0x12] = a4\n  3625: a3 = a3 >> 0x8\n  3628: u8 [a0 + 0x11] = a3\n  3631: u8 [a0 + 0x8] = a2\n  3634: a3 = a2 >> 0x38\n  3637: u8 [a0 + 0xf] = a3\n  3640: a3 = a2 >> 0x30\n  3643: u8 [a0 + 0xe] = a3\n  3646: a3 = a2 >> 0x28\n  3649: u8 [a0 + 0xd] = a3\n  3652: a3 = a2 >> 0x20\n  3655: u8 [a0 + 0xc] = a3\n  3658: a3 = a2 >> 0x18\n  3661: u8 [a0 + 0xb] = a3\n  3664: a3 = a2 >> 0x10\n  3667: u8 [a0 + 0xa] = a3\n  3670: a2 = a2 >> 0x8\n  3673: u8 [a0 + 0x9] = a2\n  3676: u8 [a0] = a1\n  3678: a2 = a1 >> 0x38\n  3681: u8 [a0 + 0x7] = a2\n  3684: a2 = a1 >> 0x30\n  3687: u8 [a0 + 0x6] = a2\n  3690: a2 = a1 >> 0x28\n  3693: u8 [a0 + 0x5] = a2\n  3696: a2 = a1 >> 0x20\n  3699: u8 [a0 + 0x4] = a2\n  3702: a2 = a1 >> 0x18\n  3705: u8 [a0 + 0x3] = a2\n  3708: a2 = a1 >> 0x10\n  3711: u8 [a0 + 0x2] = a2\n  3714: a1 = a1 >> 0x8\n  3717: u8 [a0 + 0x1] = a1\n  3720: a0 = u64 [sp + 0x38]\n  3723: a1 = u64 [sp + 0x28]\n  3726: u64 [a0] = a1\n  3728: a1 = u64 [sp + 0x18]\n  3731: u64 [a0 + 0x18] = a1\n  3734: a1 = u64 [sp + 0x30]\n  3737: u64 [a0 + 0x8] = a1\n  3740: a1 = u64 [sp + 0x20]\n  3743: u64 [a0 + 0x10] = a1\n  3746: sp = s0 + 0xffffffffffffff60\n  3750: ra = u64 [sp + 0x98]\n  3754: s0 = u64 [sp + 0x90]\n  3758: s1 = u64 [sp + 0x88]\n  3762: sp = sp + 0xa0\n  3766: ret\n      : @69 (gas: 8)\n  3768: u64 [sp + 112] = 0\n  3771: u64 [sp + 104] = 0\n  3774: u64 [sp + 96] = 0\n  3777: a0 = 0x4e487b7100000000\n  3787: a1 = sp + 0x60\n  3790: u64 [sp + 0x78] = a0\n  3793: a0 = 0\n  3795: ra = 64, jump @8\n      : @70 [@dyn 32] (gas: 7)\n  3800: u64 [sp + 88] = 0\n  3803: u64 [sp + 80] = 0\n  3806: u64 [sp + 64] = 0x41\n  3810: a0 = 0x4\n  3813: a1 = sp + 0x40\n  3816: u64 [sp + 72] = 0\n  3819: ra = 66, jump @8\n      : @71 [@dyn 33] (gas: 3)\n  3824: a1 = 0x24\n  3827: a0 = 0\n  3829: ra = 68, jump @0\n      : @72 [@dyn 34] (gas: 6)\n  3834: i32 a1 = a0 + 0\n  3836: a0 = 0x1\n  3839: a2 = 0x24\n  3842: ra = 0x46\n  3845: ecalli 13 // 'seal_return'\n  3847: fallthrough\n      : @73 [@dyn 35] (gas: 8)\n  3848: a2 = u32 [a1 + 0x10]\n  3851: a3 = u64 [a1 + 0x8]\n  3854: a1 = u64 [a1]\n  3856: u64 [a0 + 24] = 0\n  3859: u64 [a0 + 0x10] = a2\n  3862: u64 [a0 + 0x8] = a3\n  3865: u64 [a0] = a1\n  3867: ret\n      : @74 (gas: 38)\n  3869: sp = sp + 0xffffffffffffff50\n  3873: u64 [sp + 0xa8] = ra\n  3877: u64 [sp + 0xa0] = s0\n  3881: u64 [sp + 0x98] = s1\n  3885: t1 = u64 [a1 + 0x18]\n  3888: a3 = u64 [a2 + 0x18]\n  3891: u64 [sp + 0x90] = a3\n  3895: ra = u64 [a1 + 0x10]\n  3898: s0 = u64 [a1 + 0x8]\n  3901: a4 = u64 [a2 + 0x8]\n  3904: t0 = u64 [a1]\n  3906: a1 = u64 [a2]\n  3908: a2 = u64 [a2 + 0x10]\n  3911: a5 = a4 ^ s0\n  3914: s1 = a4 <u s0\n  3917: a3 = a1 <u t0\n  3920: s1 = a3 if a5 == 0\n  3923: a5 = a2 - ra\n  3926: t2 = a5 - s1\n  3929: a5 = a5 <u s1\n  3932: a2 = a2 <u ra\n  3935: s1 = u64 [sp + 0x90]\n  3939: s1 = s1 - t1\n  3942: s1 = s1 - a2\n  3945: s1 = s1 - a5\n  3948: a2 = a4 - s0\n  3951: a2 = a2 - a3\n  3954: a1 = a1 - t0\n  3957: a4 = a2 >u 0\n  3959: a1 = a1 <u 0x40\n  3962: a1 = a1 ^ 0x1\n  3965: a1 = a4 if a2 != 0\n  3968: a2 = s1 >s 0\n  3970: a4 = t2 >u 0\n  3972: a4 = a2 if s1 != 0\n  3975: a3 = t2 | s1\n  3978: a1 = a4 if a3 != 0\n  3981: jump @84 if a1 == 0\n      : @75 (gas: 12)\n  3985: u64 [sp + 0x78] = a0\n  3988: a0 = t0 | ra\n  3991: u64 [sp + 0x88] = t1\n  3995: u64 [sp + 0x90] = s0\n  3999: a1 = s0 | t1\n  4002: a0 = a0 | a1\n  4005: a0 = a0 >> 0x20\n  4008: u64 [sp + 0x80] = ra\n  4012: a1 = a1 | ra\n  4015: a1 = a1 << 0x20\n  4018: a0 = a0 | a1\n  4021: jump @82 if a0 != 0\n      : @76 (gas: 5)\n  4025: s0 = t0\n  4027: i32 a0 = t0 + 0\n  4029: a1 = 0x20\n  4032: u64 [sp + 0x60] = a0\n  4035: ra = 72, jump @0\n      : @77 [@dyn 36] (gas: 54)\n  4040: a1 = u8 [a0 + 0x9]\n  4043: a2 = u8 [a0 + 0x8]\n  4046: a3 = u8 [a0 + 0xa]\n  4049: a4 = u8 [a0 + 0xb]\n  4052: a1 = a1 << 0x8\n  4055: a1 = a1 | a2\n  4058: a3 = a3 << 0x10\n  4061: a4 = a4 << 0x18\n  4064: a3 = a3 | a4\n  4067: a1 = a1 | a3\n  4070: a2 = u8 [a0 + 0xd]\n  4073: a3 = u8 [a0 + 0xc]\n  4076: a4 = u8 [a0 + 0xe]\n  4079: a5 = u8 [a0 + 0xf]\n  4082: a2 = a2 << 0x8\n  4085: a2 = a2 | a3\n  4088: a4 = a4 << 0x10\n  4091: a5 = a5 << 0x18\n  4094: a4 = a4 | a5\n  4097: a2 = a2 | a4\n  4100: a2 = a2 << 0x20\n  4103: a1 = a1 | a2\n  4106: a2 = u8 [a0 + 0x1]\n  4109: a3 = u8 [a0]\n  4111: a4 = u8 [a0 + 0x2]\n  4114: a5 = u8 [a0 + 0x3]\n  4117: a2 = a2 << 0x8\n  4120: a2 = a2 | a3\n  4123: a4 = a4 << 0x10\n  4126: a5 = a5 << 0x18\n  4129: a4 = a4 | a5\n  4132: a2 = a2 | a4\n  4135: a3 = u8 [a0 + 0x5]\n  4138: a4 = u8 [a0 + 0x4]\n  4141: a5 = u8 [a0 + 0x6]\n  4144: s1 = u8 [a0 + 0x7]\n  4147: a3 = a3 << 0x8\n  4150: a3 = a3 | a4\n  4153: a5 = a5 << 0x10\n  4156: s1 = s1 << 0x18\n  4159: a5 = a5 | s1\n  4162: a3 = a3 | a5\n  4165: a3 = a3 << 0x20\n  4168: a2 = a2 | a3\n  4171: a4 = reverse a2\n  4173: a5 = reverse a1\n  4175: a1 = 0x100000000\n  4185: a2 = a5 ^ a1\n  4188: a2 = a2 | a4\n  4191: a3 = a5 >> 0x20\n  4194: a3 = a3 <u 0x1\n  4197: a3 = 0 if a4 != 0\n  4199: a3 = 0 if a2 == 0\n  4201: jump @83 if a3 == 0\n      : @78 (gas: 11)\n  4205: u64 [sp + 0x68] = a5\n  4208: u64 [sp + 0x70] = a4\n  4211: a2 = u64 [sp + 0x88]\n  4215: a3 = u64 [sp + 0x80]\n  4219: a2 = a2 | a3\n  4222: a1 = 0xffffffe0\n  4232: a1 = s0 <u a1\n  4235: a3 = u64 [sp + 0x90]\n  4239: a1 = 0 if a3 != 0\n  4241: a1 = 0 if a2 != 0\n  4243: jump @82 if a1 == 0\n      : @79 (gas: 35)\n  4247: a1 = u8 [a0 + 0x18]\n  4250: u64 [sp + 0x18] = a1\n  4253: s0 = u8 [a0 + 0x19]\n  4256: a1 = u8 [a0 + 0x1a]\n  4259: u64 [sp + 0x8] = a1\n  4262: a1 = u8 [a0 + 0x1b]\n  4265: u64 [sp] = a1\n  4267: a1 = u8 [a0 + 0x1c]\n  4270: u64 [sp + 0x30] = a1\n  4273: a1 = u8 [a0 + 0x1d]\n  4276: u64 [sp + 0x10] = a1\n  4279: a1 = u8 [a0 + 0x1e]\n  4282: u64 [sp + 0x28] = a1\n  4285: a1 = u8 [a0 + 0x1f]\n  4288: u64 [sp + 0x20] = a1\n  4291: a1 = u8 [a0 + 0x10]\n  4294: u64 [sp + 0x58] = a1\n  4297: a1 = u8 [a0 + 0x11]\n  4300: u64 [sp + 0x38] = a1\n  4303: a1 = u8 [a0 + 0x12]\n  4306: u64 [sp + 0x48] = a1\n  4309: a1 = u8 [a0 + 0x13]\n  4312: u64 [sp + 0x40] = a1\n  4315: a1 = u8 [a0 + 0x14]\n  4318: u64 [sp + 0x90] = a1\n  4322: a1 = u8 [a0 + 0x15]\n  4325: u64 [sp + 0x50] = a1\n  4328: a1 = u8 [a0 + 0x16]\n  4331: u64 [sp + 0x88] = a1\n  4335: a0 = u8 [a0 + 0x17]\n  4338: u64 [sp + 0x80] = a0\n  4342: a0 = u64 [sp + 0x60]\n  4345: i32 a0 = a0 + 0x20\n  4348: a1 = 0x20\n  4351: ra = 74, jump @0\n      : @80 [@dyn 37] (gas: 54)\n  4356: a1 = u8 [a0 + 0x9]\n  4359: a2 = u8 [a0 + 0x8]\n  4362: a3 = u8 [a0 + 0xa]\n  4365: a4 = u8 [a0 + 0xb]\n  4368: a1 = a1 << 0x8\n  4371: a1 = a1 | a2\n  4374: a3 = a3 << 0x10\n  4377: a4 = a4 << 0x18\n  4380: a3 = a3 | a4\n  4383: a1 = a1 | a3\n  4386: a2 = u8 [a0 + 0xd]\n  4389: a3 = u8 [a0 + 0xc]\n  4392: a4 = u8 [a0 + 0xe]\n  4395: a5 = u8 [a0 + 0xf]\n  4398: a2 = a2 << 0x8\n  4401: a2 = a2 | a3\n  4404: a4 = a4 << 0x10\n  4407: a5 = a5 << 0x18\n  4410: a4 = a4 | a5\n  4413: a2 = a2 | a4\n  4416: a2 = a2 << 0x20\n  4419: a2 = a2 | a1\n  4422: a1 = u8 [a0 + 0x1]\n  4425: a3 = u8 [a0]\n  4427: a4 = u8 [a0 + 0x2]\n  4430: a5 = u8 [a0 + 0x3]\n  4433: a1 = a1 << 0x8\n  4436: a1 = a1 | a3\n  4439: a4 = a4 << 0x10\n  4442: a5 = a5 << 0x18\n  4445: a4 = a4 | a5\n  4448: a1 = a1 | a4\n  4451: a3 = u8 [a0 + 0x5]\n  4454: a4 = u8 [a0 + 0x4]\n  4457: a5 = u8 [a0 + 0x6]\n  4460: s1 = u8 [a0 + 0x7]\n  4463: a3 = a3 << 0x8\n  4466: a3 = a3 | a4\n  4469: a5 = a5 << 0x10\n  4472: s1 = s1 << 0x18\n  4475: a5 = a5 | s1\n  4478: a3 = a3 | a5\n  4481: a3 = a3 << 0x20\n  4484: a1 = a1 | a3\n  4487: a1 = reverse a1\n  4489: a2 = reverse a2\n  4491: a3 = 0x100000000\n  4501: a3 = a3 ^ a2\n  4504: a3 = a3 | a1\n  4507: a4 = a2 >> 0x20\n  4510: a4 = a4 <u 0x1\n  4513: a4 = 0 if a1 != 0\n  4515: a4 = 0 if a3 == 0\n  4517: jump @83 if a4 == 0\n      : @81 (gas: 107)\n  4521: s0 = s0 << 0x8\n  4524: a3 = u64 [sp + 0x18]\n  4527: a3 = a3 | s0\n  4530: a4 = u64 [sp + 0x8]\n  4533: a4 = a4 << 0x10\n  4536: a5 = u64 [sp]\n  4538: a5 = a5 << 0x18\n  4541: a4 = a4 | a5\n  4544: a3 = a3 | a4\n  4547: a4 = u64 [sp + 0x10]\n  4550: a4 = a4 << 0x8\n  4553: a5 = u64 [sp + 0x30]\n  4556: a4 = a4 | a5\n  4559: a5 = u64 [sp + 0x28]\n  4562: a5 = a5 << 0x10\n  4565: s1 = u64 [sp + 0x20]\n  4568: s1 = s1 << 0x18\n  4571: a5 = a5 | s1\n  4574: a4 = a4 | a5\n  4577: a4 = a4 << 0x20\n  4580: t0 = a4 | a3\n  4583: a4 = u64 [sp + 0x38]\n  4586: a4 = a4 << 0x8\n  4589: a3 = u64 [sp + 0x58]\n  4592: a4 = a4 | a3\n  4595: a5 = u64 [sp + 0x48]\n  4598: a5 = a5 << 0x10\n  4601: s1 = u64 [sp + 0x40]\n  4604: s1 = s1 << 0x18\n  4607: a5 = a5 | s1\n  4610: a4 = a4 | a5\n  4613: a5 = u64 [sp + 0x50]\n  4616: a5 = a5 << 0x8\n  4619: a3 = u64 [sp + 0x90]\n  4623: a5 = a5 | a3\n  4626: s1 = u64 [sp + 0x88]\n  4630: s1 = s1 << 0x10\n  4633: s0 = u64 [sp + 0x80]\n  4637: s0 = s0 << 0x18\n  4640: s0 = s0 | s1\n  4643: a5 = a5 | s0\n  4646: a5 = a5 << 0x20\n  4649: t1 = a5 | a4\n  4652: a5 = u8 [a0 + 0x19]\n  4655: s1 = u8 [a0 + 0x18]\n  4658: s0 = u8 [a0 + 0x1a]\n  4661: a3 = u8 [a0 + 0x1b]\n  4664: a5 = a5 << 0x8\n  4667: a5 = a5 | s1\n  4670: s0 = s0 << 0x10\n  4673: a3 = a3 << 0x18\n  4676: a3 = a3 | s0\n  4679: a3 = a3 | a5\n  4682: a5 = u8 [a0 + 0x1d]\n  4685: s1 = u8 [a0 + 0x1c]\n  4688: s0 = u8 [a0 + 0x1e]\n  4691: a4 = u8 [a0 + 0x1f]\n  4694: a5 = a5 << 0x8\n  4697: a5 = a5 | s1\n  4700: s0 = s0 << 0x10\n  4703: a4 = a4 << 0x18\n  4706: a4 = a4 | s0\n  4709: a4 = a4 | a5\n  4712: a4 = a4 << 0x20\n  4715: a5 = a4 | a3\n  4718: a3 = u8 [a0 + 0x11]\n  4721: a4 = u8 [a0 + 0x10]\n  4724: s1 = u8 [a0 + 0x12]\n  4727: s0 = u8 [a0 + 0x13]\n  4730: a3 = a3 << 0x8\n  4733: a3 = a3 | a4\n  4736: s1 = s1 << 0x10\n  4739: s0 = s0 << 0x18\n  4742: s0 = s0 | s1\n  4745: a3 = a3 | s0\n  4748: a4 = u8 [a0 + 0x15]\n  4751: s1 = u8 [a0 + 0x14]\n  4754: s0 = u8 [a0 + 0x16]\n  4757: a0 = u8 [a0 + 0x17]\n  4760: a4 = a4 << 0x8\n  4763: a4 = a4 | s1\n  4766: s0 = s0 << 0x10\n  4769: a0 = a0 << 0x18\n  4772: a0 = a0 | s0\n  4775: a0 = a0 | a4\n  4778: a0 = a0 << 0x20\n  4781: a0 = a0 | a3\n  4784: a3 = reverse a5\n  4786: a4 = u64 [sp + 0x78]\n  4789: u64 [a4 + 0x20] = a3\n  4792: a3 = reverse t0\n  4794: u64 [a4] = a3\n  4796: a0 = reverse a0\n  4798: u64 [a4 + 0x28] = a0\n  4801: a0 = reverse t1\n  4803: u64 [a4 + 0x8] = a0\n  4806: u64 [a4 + 0x30] = a2\n  4809: a0 = u64 [sp + 0x68]\n  4812: u64 [a4 + 0x10] = a0\n  4815: u64 [a4 + 0x38] = a1\n  4818: a0 = u64 [sp + 0x70]\n  4821: u64 [a4 + 0x18] = a0\n  4824: ra = u64 [sp + 0xa8]\n  4828: s0 = u64 [sp + 0xa0]\n  4832: s1 = u64 [sp + 0x98]\n  4836: sp = sp + 0xb0\n  4840: ret\n      : @82 (gas: 1)\n  4842: trap\n      : @83 (gas: 4)\n  4843: a0 = 0\n  4845: a1 = 0\n  4847: ra = 0x4c\n  4850: jump @0\n      : @84 (gas: 2)\n  4853: a0 = 0\n  4855: ra = 76, jump @0\n      : @85 [@dyn 38] (gas: 6)\n  4860: i32 a1 = a0 + 0\n  4862: a0 = 0x1\n  4865: a2 = 0\n  4867: ra = 0x4e\n  4870: ecalli 13 // 'seal_return'\n  4872: fallthrough\n      : @86 [@dyn 39] (gas: 19)\n  4873: sp = sp + 0xfffffffffffffef0\n  4877: u64 [sp + 0x108] = ra\n  4881: u64 [sp + 0x100] = s0\n  4885: u64 [sp + 0xf8] = s1\n  4889: s0 = sp + 0x110\n  4893: sp = sp & 0xfffffffffffffff0\n  4896: a1 = i32 [0x20028]\n  4901: u64 [sp + 0x28] = a0\n  4904: s1 = a1\n  4906: a0 = a1 << 0x20\n  4909: a2 = a0 >> 0x20\n  4912: u64 [sp + 200] = 0\n  4916: u64 [sp + 192] = 0\n  4920: u64 [sp + 184] = 0\n  4924: a0 = sp + 0xd0\n  4928: a1 = sp + 0xb0\n  4932: u64 [sp + 0x20] = a2\n  4935: u64 [sp + 0xb0] = a2\n  4939: ra = 80, jump @64\n      : @87 [@dyn 40] (gas: 15)\n  4944: a1 = u64 [sp + 0xe8]\n  4948: a3 = u64 [sp + 0xe0]\n  4952: a0 = u64 [sp + 0xd8]\n  4956: a2 = u64 [sp + 0xd0]\n  4960: u64 [sp + 0x18] = a0\n  4963: u64 [sp + 0x8] = a1\n  4966: a0 = a0 | a1\n  4969: a1 = a2 | a3\n  4972: a1 = a1 | a0\n  4975: a1 = a1 >> 0x20\n  4978: u64 [sp + 0x10] = a3\n  4981: a0 = a0 | a3\n  4984: a0 = a0 << 0x20\n  4987: a0 = a0 | a1\n  4990: jump @91 if a0 != 0\n      : @88 (gas: 4)\n  4994: i32 a0 = a2 + 0\n  4996: a1 = s1\n  4998: u64 [sp] = a2\n  5000: ra = 82, jump @0\n      : @89 [@dyn 41] (gas: 30)\n  5005: i32 a0 = a0 + 0\n  5007: a1 = s1\n  5009: a2 = 0\n  5011: ecalli 2 // 'call_data_copy'\n  5013: a0 = u64 [sp + 0x20]\n  5016: a2 = u64 [sp]\n  5018: a0 = a0 + a2\n  5021: a1 = a0 <u a2\n  5024: t1 = a2\n  5026: a5 = u64 [sp + 0x18]\n  5029: a2 = a5 + a1\n  5032: a3 = a2 <u a5\n  5035: a3 = a1 if a1 == 0\n  5038: s1 = u64 [sp + 0x10]\n  5041: a3 = a3 + s1\n  5044: a1 = a3 <u s1\n  5047: a4 = u64 [sp + 0x8]\n  5050: t0 = a4 + a1\n  5053: u64 [sp + 0x38] = a2\n  5056: u64 [sp + 0x30] = a0\n  5059: u64 [sp + 0x68] = a4\n  5062: u64 [sp + 0x60] = s1\n  5065: u64 [sp + 0x58] = a5\n  5068: u64 [sp + 0x50] = t1\n  5071: u64 [sp + 0x40] = a3\n  5074: a0 = sp + 0x70\n  5077: a1 = sp + 0x50\n  5080: a2 = sp + 0x30\n  5083: u64 [sp + 0x48] = t0\n  5086: ra = 84, jump @74\n      : @90 [@dyn 42] (gas: 23)\n  5091: t0 = u64 [sp + 0x78]\n  5094: t1 = u64 [sp + 0x70]\n  5097: a2 = u64 [sp + 0x88]\n  5101: a3 = u64 [sp + 0x80]\n  5105: a4 = u64 [sp + 0xa0]\n  5109: a5 = u64 [sp + 0xa8]\n  5113: s1 = u64 [sp + 0x90]\n  5117: a0 = u64 [sp + 0x98]\n  5121: a1 = u64 [sp + 0x28]\n  5124: u64 [a1 + 0x30] = a4\n  5127: u64 [a1 + 0x38] = a5\n  5130: u64 [a1 + 0x20] = s1\n  5133: u64 [a1 + 0x28] = a0\n  5136: u64 [a1 + 0x10] = a3\n  5139: u64 [a1 + 0x18] = a2\n  5142: u64 [a1] = t1\n  5144: u64 [a1 + 0x8] = t0\n  5147: sp = s0 + 0xfffffffffffffef0\n  5151: ra = u64 [sp + 0x108]\n  5155: s0 = u64 [sp + 0x100]\n  5159: s1 = u64 [sp + 0xf8]\n  5163: sp = sp + 0x110\n  5167: ret\n      : @91 (gas: 1)\n  5169: trap\n      : @92 (gas: 8)\n  5170: a0 = u64 [sp + 0x10]\n  5173: a1 = u64 [sp + 0x18]\n  5176: a2 = u64 [sp + 0x8]\n  5179: a3 = u64 [sp]\n  5181: a1 = a1 | a2\n  5184: a0 = a0 | a3\n  5187: a0 = a0 | a1\n  5190: jump @97 if a0 != 0\n      : @93 (gas: 2)\n  5194: a0 = i32 [0x20028]\n  5199: jump @97 if a0 <=u 3\n      : @94 (gas: 3)\n  5204: a0 = 0x40\n  5207: a1 = 0x20\n  5210: ra = 86, jump @0\n      : @95 [@dyn 43] (gas: 100)\n  5215: a1 = u8 [a0 + 0x11]\n  5218: a2 = u8 [a0 + 0x10]\n  5221: a3 = u8 [a0 + 0x12]\n  5224: a4 = u8 [a0 + 0x13]\n  5227: a1 = a1 << 0x8\n  5230: a1 = a1 | a2\n  5233: a3 = a3 << 0x10\n  5236: a4 = a4 << 0x18\n  5239: a3 = a3 | a4\n  5242: a1 = a1 | a3\n  5245: a2 = u8 [a0 + 0x15]\n  5248: a3 = u8 [a0 + 0x14]\n  5251: a4 = u8 [a0 + 0x16]\n  5254: a5 = u8 [a0 + 0x17]\n  5257: a2 = a2 << 0x8\n  5260: a2 = a2 | a3\n  5263: a4 = a4 << 0x10\n  5266: a5 = a5 << 0x18\n  5269: a4 = a4 | a5\n  5272: a2 = a2 | a4\n  5275: a2 = a2 << 0x20\n  5278: t0 = a2 | a1\n  5281: a2 = u8 [a0 + 0x1]\n  5284: a3 = u8 [a0]\n  5286: a4 = u8 [a0 + 0x2]\n  5289: a5 = u8 [a0 + 0x3]\n  5292: a2 = a2 << 0x8\n  5295: a2 = a2 | a3\n  5298: a4 = a4 << 0x10\n  5301: a5 = a5 << 0x18\n  5304: a4 = a4 | a5\n  5307: a2 = a2 | a4\n  5310: a3 = u8 [a0 + 0x5]\n  5313: a4 = u8 [a0 + 0x4]\n  5316: a5 = u8 [a0 + 0x6]\n  5319: s1 = u8 [a0 + 0x7]\n  5322: a3 = a3 << 0x8\n  5325: a3 = a3 | a4\n  5328: a5 = a5 << 0x10\n  5331: s1 = s1 << 0x18\n  5334: a5 = a5 | s1\n  5337: a3 = a3 | a5\n  5340: a3 = a3 << 0x20\n  5343: a2 = a2 | a3\n  5346: a3 = u8 [a0 + 0x19]\n  5349: a4 = u8 [a0 + 0x18]\n  5352: a5 = u8 [a0 + 0x1a]\n  5355: s1 = u8 [a0 + 0x1b]\n  5358: a3 = a3 << 0x8\n  5361: a3 = a3 | a4\n  5364: a5 = a5 << 0x10\n  5367: s1 = s1 << 0x18\n  5370: a5 = a5 | s1\n  5373: a3 = a3 | a5\n  5376: a4 = u8 [a0 + 0x1d]\n  5379: a5 = u8 [a0 + 0x1c]\n  5382: s1 = u8 [a0 + 0x1e]\n  5385: a1 = u8 [a0 + 0x1f]\n  5388: a4 = a4 << 0x8\n  5391: a4 = a4 | a5\n  5394: s1 = s1 << 0x10\n  5397: a1 = a1 << 0x18\n  5400: a1 = a1 | s1\n  5403: a1 = a1 | a4\n  5406: a1 = a1 << 0x20\n  5409: a3 = a3 | a1\n  5412: a1 = u8 [a0 + 0x9]\n  5415: a4 = u8 [a0 + 0x8]\n  5418: a5 = u8 [a0 + 0xa]\n  5421: s1 = u8 [a0 + 0xb]\n  5424: a1 = a1 << 0x8\n  5427: a1 = a1 | a4\n  5430: a5 = a5 << 0x10\n  5433: s1 = s1 << 0x18\n  5436: a5 = a5 | s1\n  5439: a1 = a1 | a5\n  5442: a4 = u8 [a0 + 0xd]\n  5445: a5 = u8 [a0 + 0xc]\n  5448: s1 = u8 [a0 + 0xe]\n  5451: a0 = u8 [a0 + 0xf]\n  5454: a4 = a4 << 0x8\n  5457: a4 = a4 | a5\n  5460: s1 = s1 << 0x10\n  5463: a0 = a0 << 0x18\n  5466: a0 = a0 | s1\n  5469: a0 = a0 | a4\n  5472: a0 = a0 << 0x20\n  5475: a0 = a0 | a1\n  5478: a0 = reverse a0\n  5480: s1 = reverse a3\n  5482: a1 = reverse a2\n  5484: a2 = reverse t0\n  5486: a1 = a1 | a2\n  5489: a2 = s1 | a0\n  5492: a2 = a2 | a1\n  5495: a2 = a2 >> 0x20\n  5498: a0 = a0 | a1\n  5501: a0 = a0 << 0x20\n  5504: a0 = a0 | a2\n  5507: jump @99 if a0 == 0\n      : @96 (gas: 1)\n  5510: trap\n      : @97 (gas: 3)\n  5511: a0 = 0\n  5513: a1 = 0\n  5515: ra = 88, jump @0\n      : @98 [@dyn 44] (gas: 5)\n  5520: i32 a1 = a0 + 0\n  5522: a0 = 0x1\n  5525: a2 = 0\n  5527: ecalli 13 // 'seal_return'\n  5529: fallthrough\n      : @99 (gas: 4)\n  5530: i32 s1 = s1 + 0\n  5532: a1 = 0x20\n  5535: a0 = s1\n  5537: ra = 90, jump @0\n      : @100 [@dyn 45] (gas: 35)\n  5542: u8 [a0 + 31] = 0x32\n  5546: u8 [a0 + 30] = 0\n  5549: u8 [a0 + 29] = 0\n  5552: u8 [a0 + 28] = 0\n  5555: u8 [a0 + 27] = 0\n  5558: u8 [a0 + 26] = 0\n  5561: u8 [a0 + 25] = 0\n  5564: u8 [a0 + 24] = 0\n  5567: u8 [a0 + 23] = 0\n  5570: u8 [a0 + 22] = 0\n  5573: u8 [a0 + 21] = 0\n  5576: u8 [a0 + 20] = 0\n  5579: u8 [a0 + 19] = 0\n  5582: u8 [a0 + 18] = 0\n  5585: u8 [a0 + 17] = 0\n  5588: u8 [a0 + 16] = 0\n  5591: u8 [a0 + 15] = 0\n  5594: u8 [a0 + 14] = 0\n  5597: u8 [a0 + 13] = 0\n  5600: u8 [a0 + 12] = 0\n  5603: u8 [a0 + 11] = 0\n  5606: u8 [a0 + 10] = 0\n  5609: u8 [a0 + 9] = 0\n  5612: u8 [a0 + 8] = 0\n  5615: u8 [a0 + 7] = 0\n  5618: u8 [a0 + 6] = 0\n  5621: u8 [a0 + 5] = 0\n  5624: u8 [a0 + 4] = 0\n  5627: u8 [a0 + 3] = 0\n  5630: u8 [a0 + 2] = 0\n  5633: u8 [a0 + 1] = 0\n  5636: u8 [a0 + 0] = 0\n  5638: a1 = 0x20\n  5641: a0 = s1\n  5643: ra = 92, jump @0\n      : @101 [@dyn 46] (gas: 6)\n  5648: i32 a1 = a0 + 0\n  5650: a2 = 0x20\n  5653: a0 = 0\n  5655: ra = 0x5e\n  5658: ecalli 13 // 'seal_return'\n  5660: fallthrough\n      : @102 [@dyn 47] (gas: 1)\n  5661: ret\n      : @103 (gas: 8)\n  5663: a0 = u64 [sp + 0x30]\n  5666: a1 = u64 [sp + 0x38]\n  5669: a2 = u64 [sp + 0x28]\n  5672: a3 = u64 [sp + 0x20]\n  5675: a1 = a1 | a2\n  5678: a0 = a0 | a3\n  5681: a0 = a0 | a1\n  5684: jump @109 if a0 != 0\n      : @104 (gas: 2)\n  5688: a0 = i32 [0x20028]\n  5693: jump @109 if a0 <=u 35\n      : @105 (gas: 47)\n  5698: i32 a0 = sp + 0x40\n  5701: a1 = 0x4\n  5704: ecalli 3 // 'call_data_load'\n  5706: a1 = u64 [sp + 0x40]\n  5709: a0 = u64 [sp + 0x48]\n  5712: a2 = u64 [sp + 0x50]\n  5715: a3 = u64 [sp + 0x58]\n  5718: u64 [sp + 0x18] = a3\n  5721: u64 [sp + 0x10] = a2\n  5724: u64 [sp + 0x8] = a0\n  5727: a0 = sp\n  5729: u64 [sp] = a1\n  5731: ra = 0x60\n  5734: sp = sp + 0xfffffffffffffca0\n  5738: u64 [sp + 0x358] = ra\n  5742: u64 [sp + 0x350] = s0\n  5746: u64 [sp + 0x348] = s1\n  5750: s0 = sp + 0x360\n  5754: sp = sp & 0xffffffffffffffe0\n  5757: a1 = u64 [a0 + 0x18]\n  5760: u64 [sp + 0x88] = a1\n  5764: a1 = u64 [a0 + 0x10]\n  5767: u64 [sp + 0x80] = a1\n  5771: a1 = u64 [a0 + 0x8]\n  5774: u64 [sp + 0x90] = a1\n  5778: a0 = u64 [a0]\n  5780: u64 [sp + 0x98] = a0\n  5784: i32 a0 = sp + 0x1e0\n  5788: ecalli 5 // 'caller'\n  5790: a0 = u64 [sp + 0x1e8]\n  5794: a1 = i32 [sp + 0x1f0]\n  5798: s1 = u64 [sp + 0x1e0]\n  5802: a0 = reverse a0\n  5804: a2 = a0 << 0x20\n  5807: a1 = reverse a1\n  5809: a1 = a1 >> 0x20\n  5812: a1 = a1 | a2\n  5815: u64 [sp + 0x78] = a1\n  5818: a0 = a0 >> 0x20\n  5821: a1 = reverse s1\n  5823: a1 = a1 << 0x20\n  5826: a0 = a0 | a1\n  5829: u64 [sp + 0x70] = a0\n  5832: a1 = 0x20\n  5835: a0 = 0\n  5837: ra = 0x100\n  5841: jump @0\n      : @106 [@dyn 48] (gas: 3)\n  5844: a0 = 0x40\n  5847: a1 = 0x20\n  5850: ra = 98, jump @0\n      : @107 [@dyn 49] (gas: 100)\n  5855: a1 = u8 [a0 + 0x11]\n  5858: a2 = u8 [a0 + 0x10]\n  5861: a3 = u8 [a0 + 0x12]\n  5864: a4 = u8 [a0 + 0x13]\n  5867: a1 = a1 << 0x8\n  5870: a1 = a1 | a2\n  5873: a3 = a3 << 0x10\n  5876: a4 = a4 << 0x18\n  5879: a3 = a3 | a4\n  5882: a1 = a1 | a3\n  5885: a2 = u8 [a0 + 0x15]\n  5888: a3 = u8 [a0 + 0x14]\n  5891: a4 = u8 [a0 + 0x16]\n  5894: a5 = u8 [a0 + 0x17]\n  5897: a2 = a2 << 0x8\n  5900: a2 = a2 | a3\n  5903: a4 = a4 << 0x10\n  5906: a5 = a5 << 0x18\n  5909: a4 = a4 | a5\n  5912: a2 = a2 | a4\n  5915: a2 = a2 << 0x20\n  5918: t0 = a2 | a1\n  5921: a2 = u8 [a0 + 0x1]\n  5924: a3 = u8 [a0]\n  5926: a4 = u8 [a0 + 0x2]\n  5929: a5 = u8 [a0 + 0x3]\n  5932: a2 = a2 << 0x8\n  5935: a2 = a2 | a3\n  5938: a4 = a4 << 0x10\n  5941: a5 = a5 << 0x18\n  5944: a4 = a4 | a5\n  5947: a2 = a2 | a4\n  5950: a3 = u8 [a0 + 0x5]\n  5953: a4 = u8 [a0 + 0x4]\n  5956: a5 = u8 [a0 + 0x6]\n  5959: a1 = u8 [a0 + 0x7]\n  5962: a3 = a3 << 0x8\n  5965: a3 = a3 | a4\n  5968: a5 = a5 << 0x10\n  5971: a1 = a1 << 0x18\n  5974: a1 = a1 | a5\n  5977: a1 = a1 | a3\n  5980: a1 = a1 << 0x20\n  5983: t1 = a1 | a2\n  5986: a1 = u8 [a0 + 0x19]\n  5989: a3 = u8 [a0 + 0x18]\n  5992: a4 = u8 [a0 + 0x1a]\n  5995: a5 = u8 [a0 + 0x1b]\n  5998: a1 = a1 << 0x8\n  6001: a1 = a1 | a3\n  6004: a4 = a4 << 0x10\n  6007: a5 = a5 << 0x18\n  6010: a4 = a4 | a5\n  6013: a1 = a1 | a4\n  6016: a3 = u8 [a0 + 0x1d]\n  6019: a4 = u8 [a0 + 0x1c]\n  6022: a5 = u8 [a0 + 0x1e]\n  6025: a2 = u8 [a0 + 0x1f]\n  6028: a3 = a3 << 0x8\n  6031: a3 = a3 | a4\n  6034: a5 = a5 << 0x10\n  6037: a2 = a2 << 0x18\n  6040: a2 = a2 | a5\n  6043: a2 = a2 | a3\n  6046: a2 = a2 << 0x20\n  6049: a3 = a2 | a1\n  6052: a1 = u8 [a0 + 0x9]\n  6055: a2 = u8 [a0 + 0x8]\n  6058: a4 = u8 [a0 + 0xa]\n  6061: a5 = u8 [a0 + 0xb]\n  6064: a1 = a1 << 0x8\n  6067: a1 = a1 | a2\n  6070: a4 = a4 << 0x10\n  6073: a5 = a5 << 0x18\n  6076: a4 = a4 | a5\n  6079: a1 = a1 | a4\n  6082: a2 = u8 [a0 + 0xd]\n  6085: a4 = u8 [a0 + 0xc]\n  6088: a5 = u8 [a0 + 0xe]\n  6091: a0 = u8 [a0 + 0xf]\n  6094: a2 = a2 << 0x8\n  6097: a2 = a2 | a4\n  6100: a5 = a5 << 0x10\n  6103: a0 = a0 << 0x18\n  6106: a0 = a0 | a5\n  6109: a0 = a0 | a2\n  6112: a0 = a0 << 0x20\n  6115: a0 = a0 | a1\n  6118: a1 = reverse a0\n  6120: a0 = reverse a3\n  6122: a2 = reverse t1\n  6124: a3 = reverse t0\n  6126: a2 = a2 | a3\n  6129: a3 = a0 | a1\n  6132: a3 = a3 | a2\n  6135: a3 = a3 >> 0x20\n  6138: a1 = a1 | a2\n  6141: a1 = a1 << 0x20\n  6144: a1 = a1 | a3\n  6147: jump @111 if a1 == 0\n      : @108 (gas: 1)\n  6150: trap\n      : @109 (gas: 3)\n  6151: a0 = 0\n  6153: a1 = 0\n  6155: ra = 100, jump @0\n      : @110 [@dyn 50] (gas: 7)\n  6160: i32 a1 = a0 + 0\n  6162: a0 = 0x1\n  6165: a2 = 0\n  6167: ecalli 13 // 'seal_return'\n  6169: i32 a0 = a0 + 0\n  6171: ra = 0x66\n  6174: jump @0\n      : @111 (gas: 2)\n  6177: i32 a0 = a0 + 0\n  6179: ra = 102, jump @0\n      : @112 [@dyn 51] (gas: 6)\n  6184: i32 a1 = a0 + 0\n  6186: a0 = 0\n  6188: a2 = 0\n  6190: ra = 0x68\n  6193: ecalli 13 // 'seal_return'\n  6195: fallthrough\n      : @113 [@dyn 52] (gas: 12)\n  6196: sp = sp + 0xffffffffffffff80\n  6199: u64 [sp + 0x78] = ra\n  6202: u64 [sp + 0x70] = s0\n  6205: s0 = sp + 0x80\n  6209: sp = sp & 0xffffffffffffffe0\n  6212: u64 [sp + 56] = 0\n  6215: u64 [sp + 48] = 0\n  6218: u64 [sp + 40] = 0\n  6221: u64 [sp + 32] = 0\n  6224: i32 a0 = sp + 0x20\n  6227: ecalli 16 // 'value_transferred'\n  6229: fallthrough\n      : @114 (gas: 8)\n  6230: a0 = u64 [sp + 0x30]\n  6233: a1 = u64 [sp + 0x38]\n  6236: a2 = u64 [sp + 0x28]\n  6239: a3 = u64 [sp + 0x20]\n  6242: a1 = a1 | a2\n  6245: a0 = a0 | a3\n  6248: a0 = a0 | a1\n  6251: jump @120 if a0 != 0\n      : @115 (gas: 2)\n  6255: a0 = i32 [0x20028]\n  6260: jump @120 if a0 <=u 35\n      : @116 (gas: 47)\n  6265: i32 a0 = sp + 0x40\n  6268: a1 = 0x4\n  6271: ecalli 3 // 'call_data_load'\n  6273: a1 = u64 [sp + 0x40]\n  6276: a0 = u64 [sp + 0x48]\n  6279: a2 = u64 [sp + 0x50]\n  6282: a3 = u64 [sp + 0x58]\n  6285: u64 [sp + 0x18] = a3\n  6288: u64 [sp + 0x10] = a2\n  6291: u64 [sp + 0x8] = a0\n  6294: a0 = sp\n  6296: u64 [sp] = a1\n  6298: ra = 0x6a\n  6301: sp = sp + 0xfffffffffffffce0\n  6305: u64 [sp + 0x318] = ra\n  6309: u64 [sp + 0x310] = s0\n  6313: u64 [sp + 0x308] = s1\n  6317: s0 = sp + 0x320\n  6321: sp = sp & 0xffffffffffffffe0\n  6324: a1 = u64 [a0]\n  6326: u64 [sp + 0x98] = a1\n  6330: a1 = u64 [a0 + 0x8]\n  6333: u64 [sp + 0x90] = a1\n  6337: a1 = u64 [a0 + 0x10]\n  6340: u64 [sp + 0x68] = a1\n  6343: a0 = u64 [a0 + 0x18]\n  6346: u64 [sp + 0x88] = a0\n  6350: i32 a0 = sp + 0x1a0\n  6354: ecalli 5 // 'caller'\n  6356: a0 = u64 [sp + 0x1a8]\n  6360: a1 = i32 [sp + 0x1b0]\n  6364: s1 = u64 [sp + 0x1a0]\n  6368: a0 = reverse a0\n  6370: a2 = a0 << 0x20\n  6373: a1 = reverse a1\n  6375: a1 = a1 >> 0x20\n  6378: a1 = a1 | a2\n  6381: u64 [sp + 0x80] = a1\n  6385: a0 = a0 >> 0x20\n  6388: a1 = reverse s1\n  6390: a1 = a1 << 0x20\n  6393: a0 = a0 | a1\n  6396: u64 [sp + 0x78] = a0\n  6399: a1 = 0x20\n  6402: a0 = 0\n  6404: ra = 0x152\n  6408: jump @0\n      : @117 [@dyn 53] (gas: 3)\n  6411: a0 = 0x40\n  6414: a1 = 0x20\n  6417: ra = 108, jump @0\n      : @118 [@dyn 54] (gas: 100)\n  6422: a1 = u8 [a0 + 0x11]\n  6425: a2 = u8 [a0 + 0x10]\n  6428: a3 = u8 [a0 + 0x12]\n  6431: a4 = u8 [a0 + 0x13]\n  6434: a1 = a1 << 0x8\n  6437: a1 = a1 | a2\n  6440: a3 = a3 << 0x10\n  6443: a4 = a4 << 0x18\n  6446: a3 = a3 | a4\n  6449: a1 = a1 | a3\n  6452: a2 = u8 [a0 + 0x15]\n  6455: a3 = u8 [a0 + 0x14]\n  6458: a4 = u8 [a0 + 0x16]\n  6461: a5 = u8 [a0 + 0x17]\n  6464: a2 = a2 << 0x8\n  6467: a2 = a2 | a3\n  6470: a4 = a4 << 0x10\n  6473: a5 = a5 << 0x18\n  6476: a4 = a4 | a5\n  6479: a2 = a2 | a4\n  6482: a2 = a2 << 0x20\n  6485: t0 = a2 | a1\n  6488: a2 = u8 [a0 + 0x1]\n  6491: a3 = u8 [a0]\n  6493: a4 = u8 [a0 + 0x2]\n  6496: a5 = u8 [a0 + 0x3]\n  6499: a2 = a2 << 0x8\n  6502: a2 = a2 | a3\n  6505: a4 = a4 << 0x10\n  6508: a5 = a5 << 0x18\n  6511: a4 = a4 | a5\n  6514: a2 = a2 | a4\n  6517: a3 = u8 [a0 + 0x5]\n  6520: a4 = u8 [a0 + 0x4]\n  6523: a5 = u8 [a0 + 0x6]\n  6526: a1 = u8 [a0 + 0x7]\n  6529: a3 = a3 << 0x8\n  6532: a3 = a3 | a4\n  6535: a5 = a5 << 0x10\n  6538: a1 = a1 << 0x18\n  6541: a1 = a1 | a5\n  6544: a1 = a1 | a3\n  6547: a1 = a1 << 0x20\n  6550: t1 = a1 | a2\n  6553: a1 = u8 [a0 + 0x19]\n  6556: a3 = u8 [a0 + 0x18]\n  6559: a4 = u8 [a0 + 0x1a]\n  6562: a5 = u8 [a0 + 0x1b]\n  6565: a1 = a1 << 0x8\n  6568: a1 = a1 | a3\n  6571: a4 = a4 << 0x10\n  6574: a5 = a5 << 0x18\n  6577: a4 = a4 | a5\n  6580: a1 = a1 | a4\n  6583: a3 = u8 [a0 + 0x1d]\n  6586: a4 = u8 [a0 + 0x1c]\n  6589: a5 = u8 [a0 + 0x1e]\n  6592: a2 = u8 [a0 + 0x1f]\n  6595: a3 = a3 << 0x8\n  6598: a3 = a3 | a4\n  6601: a5 = a5 << 0x10\n  6604: a2 = a2 << 0x18\n  6607: a2 = a2 | a5\n  6610: a2 = a2 | a3\n  6613: a2 = a2 << 0x20\n  6616: a3 = a2 | a1\n  6619: a1 = u8 [a0 + 0x9]\n  6622: a2 = u8 [a0 + 0x8]\n  6625: a4 = u8 [a0 + 0xa]\n  6628: a5 = u8 [a0 + 0xb]\n  6631: a1 = a1 << 0x8\n  6634: a1 = a1 | a2\n  6637: a4 = a4 << 0x10\n  6640: a5 = a5 << 0x18\n  6643: a4 = a4 | a5\n  6646: a1 = a1 | a4\n  6649: a2 = u8 [a0 + 0xd]\n  6652: a4 = u8 [a0 + 0xc]\n  6655: a5 = u8 [a0 + 0xe]\n  6658: a0 = u8 [a0 + 0xf]\n  6661: a2 = a2 << 0x8\n  6664: a2 = a2 | a4\n  6667: a5 = a5 << 0x10\n  6670: a0 = a0 << 0x18\n  6673: a0 = a0 | a5\n  6676: a0 = a0 | a2\n  6679: a0 = a0 << 0x20\n  6682: a0 = a0 | a1\n  6685: a1 = reverse a0\n  6687: a0 = reverse a3\n  6689: a2 = reverse t1\n  6691: a3 = reverse t0\n  6693: a2 = a2 | a3\n  6696: a3 = a0 | a1\n  6699: a3 = a3 | a2\n  6702: a3 = a3 >> 0x20\n  6705: a1 = a1 | a2\n  6708: a1 = a1 << 0x20\n  6711: a1 = a1 | a3\n  6714: jump @122 if a1 == 0\n      : @119 (gas: 1)\n  6717: trap\n      : @120 (gas: 3)\n  6718: a0 = 0\n  6720: a1 = 0\n  6722: ra = 110, jump @0\n      : @121 [@dyn 55] (gas: 7)\n  6727: i32 a1 = a0 + 0\n  6729: a0 = 0x1\n  6732: a2 = 0\n  6734: ecalli 13 // 'seal_return'\n  6736: i32 a0 = a0 + 0\n  6738: ra = 0x70\n  6741: jump @0\n      : @122 (gas: 2)\n  6744: i32 a0 = a0 + 0\n  6746: ra = 112, jump @0\n      : @123 [@dyn 56] (gas: 6)\n  6751: i32 a1 = a0 + 0\n  6753: a0 = 0\n  6755: a2 = 0\n  6757: ra = 0x72\n  6760: ecalli 13 // 'seal_return'\n  6762: fallthrough\n      : @124 [@dyn 57] (gas: 8)\n  6763: sp = sp + 0xffffffffffffffe0\n  6766: u64 [sp + 0x18] = ra\n  6769: u64 [sp + 0x10] = s0\n  6772: u64 [sp + 0x8] = s1\n  6775: s1 = 0x20020\n  6780: a1 = i32 [0x20020]\n  6785: s0 = a0\n  6787: jump @127 if a1 == 0\n      : @125 (gas: 6)\n  6790: a0 = 0x30030\n  6795: i32 a0 = a0 + 0\n  6797: u64 [sp] = a1\n  6799: i32 a1 = s1 + 0\n  6801: ecalli 7 // 'get_immutable_data'\n  6803: fallthrough\n      : @126 (gas: 4)\n  6804: a0 = i32 [0x20020]\n  6809: u32 [0x20020] = 0\n  6814: a1 = u64 [sp]\n  6816: jump @128 if a0 <u a1\n      : @127 (gas: 13)\n  6819: a1 = u64 [0x30068]\n  6824: a2 = u64 [0x30060]\n  6829: a3 = u64 [0x30058]\n  6834: a0 = u64 [0x30050]\n  6839: u64 [s0 + 0x18] = a1\n  6842: u64 [s0 + 0x10] = a2\n  6845: u64 [s0 + 0x8] = a3\n  6848: u64 [s0] = a0\n  6850: ra = u64 [sp + 0x18]\n  6853: s0 = u64 [sp + 0x10]\n  6856: s1 = u64 [sp + 0x8]\n  6859: sp = sp + 0x20\n  6862: ret\n      : @128 (gas: 1)\n  6864: trap\n      : @129 (gas: 8)\n  6865: a0 = u64 [sp + 0x30]\n  6868: a1 = u64 [sp + 0x38]\n  6871: a2 = u64 [sp + 0x28]\n  6874: a3 = u64 [sp + 0x20]\n  6877: a1 = a1 | a2\n  6880: a0 = a0 | a3\n  6883: a0 = a0 | a1\n  6886: jump @137 if a0 != 0\n      : @130 (gas: 2)\n  6890: a0 = i32 [0x20028]\n  6895: jump @137 if a0 <=u 3\n      : @131 (gas: 3)\n  6900: s1 = 0x20020\n  6905: a0 = i32 [0x20020]\n  6910: jump @134 if a0 == 0\n      : @132 (gas: 6)\n  6913: u64 [sp + 0x18] = a0\n  6916: a0 = 0x30030\n  6921: i32 a0 = a0 + 0\n  6923: i32 a1 = s1 + 0\n  6925: ecalli 7 // 'get_immutable_data'\n  6927: fallthrough\n      : @133 (gas: 4)\n  6928: a0 = i32 [0x20020]\n  6933: u32 [0x20020] = 0\n  6938: a1 = u64 [sp + 0x18]\n  6941: jump @136 if a0 <u a1\n      : @134 (gas: 9)\n  6945: a1 = u64 [0x30060]\n  6950: u64 [sp + 0x8] = a1\n  6953: a1 = u64 [0x30058]\n  6958: u64 [sp + 0x10] = a1\n  6961: a0 = u64 [0x30050]\n  6966: u64 [sp + 0x18] = a0\n  6969: a0 = 0x40\n  6972: a1 = 0x20\n  6975: ra = 116, jump @0\n      : @135 [@dyn 58] (gas: 100)\n  6980: a1 = u8 [a0 + 0x11]\n  6983: a2 = u8 [a0 + 0x10]\n  6986: a3 = u8 [a0 + 0x12]\n  6989: a4 = u8 [a0 + 0x13]\n  6992: a1 = a1 << 0x8\n  6995: a1 = a1 | a2\n  6998: a3 = a3 << 0x10\n  7001: a4 = a4 << 0x18\n  7004: a3 = a3 | a4\n  7007: a1 = a1 | a3\n  7010: a2 = u8 [a0 + 0x15]\n  7013: a3 = u8 [a0 + 0x14]\n  7016: a4 = u8 [a0 + 0x16]\n  7019: a5 = u8 [a0 + 0x17]\n  7022: a2 = a2 << 0x8\n  7025: a2 = a2 | a3\n  7028: a4 = a4 << 0x10\n  7031: a5 = a5 << 0x18\n  7034: a4 = a4 | a5\n  7037: a2 = a2 | a4\n  7040: a2 = a2 << 0x20\n  7043: t0 = a2 | a1\n  7046: a2 = u8 [a0 + 0x1]\n  7049: a3 = u8 [a0]\n  7051: a4 = u8 [a0 + 0x2]\n  7054: a5 = u8 [a0 + 0x3]\n  7057: a2 = a2 << 0x8\n  7060: a2 = a2 | a3\n  7063: a4 = a4 << 0x10\n  7066: a5 = a5 << 0x18\n  7069: a4 = a4 | a5\n  7072: a2 = a2 | a4\n  7075: a3 = u8 [a0 + 0x5]\n  7078: a4 = u8 [a0 + 0x4]\n  7081: a5 = u8 [a0 + 0x6]\n  7084: s1 = u8 [a0 + 0x7]\n  7087: a3 = a3 << 0x8\n  7090: a3 = a3 | a4\n  7093: a5 = a5 << 0x10\n  7096: s1 = s1 << 0x18\n  7099: a5 = a5 | s1\n  7102: a3 = a3 | a5\n  7105: a3 = a3 << 0x20\n  7108: a2 = a2 | a3\n  7111: a3 = u8 [a0 + 0x19]\n  7114: a4 = u8 [a0 + 0x18]\n  7117: a5 = u8 [a0 + 0x1a]\n  7120: s1 = u8 [a0 + 0x1b]\n  7123: a3 = a3 << 0x8\n  7126: a3 = a3 | a4\n  7129: a5 = a5 << 0x10\n  7132: s1 = s1 << 0x18\n  7135: a5 = a5 | s1\n  7138: a3 = a3 | a5\n  7141: a4 = u8 [a0 + 0x1d]\n  7144: a5 = u8 [a0 + 0x1c]\n  7147: s1 = u8 [a0 + 0x1e]\n  7150: a1 = u8 [a0 + 0x1f]\n  7153: a4 = a4 << 0x8\n  7156: a4 = a4 | a5\n  7159: s1 = s1 << 0x10\n  7162: a1 = a1 << 0x18\n  7165: a1 = a1 | s1\n  7168: a1 = a1 | a4\n  7171: a1 = a1 << 0x20\n  7174: a3 = a3 | a1\n  7177: a1 = u8 [a0 + 0x9]\n  7180: a4 = u8 [a0 + 0x8]\n  7183: a5 = u8 [a0 + 0xa]\n  7186: s1 = u8 [a0 + 0xb]\n  7189: a1 = a1 << 0x8\n  7192: a1 = a1 | a4\n  7195: a5 = a5 << 0x10\n  7198: s1 = s1 << 0x18\n  7201: a5 = a5 | s1\n  7204: a1 = a1 | a5\n  7207: a4 = u8 [a0 + 0xd]\n  7210: a5 = u8 [a0 + 0xc]\n  7213: s1 = u8 [a0 + 0xe]\n  7216: a0 = u8 [a0 + 0xf]\n  7219: a4 = a4 << 0x8\n  7222: a4 = a4 | a5\n  7225: s1 = s1 << 0x10\n  7228: a0 = a0 << 0x18\n  7231: a0 = a0 | s1\n  7234: a0 = a0 | a4\n  7237: a0 = a0 << 0x20\n  7240: a0 = a0 | a1\n  7243: a1 = reverse a0\n  7245: a0 = reverse a3\n  7247: a2 = reverse a2\n  7249: a3 = reverse t0\n  7251: a2 = a2 | a3\n  7254: a3 = a0 | a1\n  7257: a3 = a3 | a2\n  7260: a3 = a3 >> 0x20\n  7263: a1 = a1 | a2\n  7266: a1 = a1 << 0x20\n  7269: a1 = a1 | a3\n  7272: jump @139 if a1 == 0\n      : @136 (gas: 1)\n  7275: trap\n      : @137 (gas: 3)\n  7276: a0 = 0\n  7278: a1 = 0\n  7280: ra = 118, jump @0\n      : @138 [@dyn 59] (gas: 5)\n  7285: i32 a1 = a0 + 0\n  7287: a0 = 0x1\n  7290: a2 = 0\n  7292: ecalli 13 // 'seal_return'\n  7294: fallthrough\n      : @139 (gas: 7)\n  7295: a1 = u64 [sp + 0x8]\n  7298: a1 = a1 << 0x20\n  7301: s1 = a1 >> 0x20\n  7304: i32 a0 = a0 + 0\n  7306: u64 [sp + 0x8] = a0\n  7309: a1 = 0x20\n  7312: ra = 120, jump @0\n      : @140 [@dyn 60] (gas: 58)\n  7317: a1 = reverse s1\n  7319: a2 = u64 [sp + 0x10]\n  7322: a2 = reverse a2\n  7324: a3 = u64 [sp + 0x18]\n  7327: a3 = reverse a3\n  7329: a4 = a3 >> 0x38\n  7332: u8 [a0 + 0x1f] = a4\n  7335: a4 = a3 >> 0x30\n  7338: u8 [a0 + 0x1e] = a4\n  7341: a4 = a3 >> 0x28\n  7344: u8 [a0 + 0x1d] = a4\n  7347: a4 = a3 >> 0x20\n  7350: u8 [a0 + 0x1c] = a4\n  7353: a4 = a3 >> 0x18\n  7356: u8 [a0 + 0x1b] = a4\n  7359: a4 = a3 >> 0x10\n  7362: u8 [a0 + 0x1a] = a4\n  7365: a4 = a3 >> 0x8\n  7368: u8 [a0 + 0x19] = a4\n  7371: u8 [a0 + 0x18] = a3\n  7374: u8 [a0 + 0x10] = a2\n  7377: u8 [a0 + 11] = 0\n  7380: u8 [a0 + 10] = 0\n  7383: u8 [a0 + 9] = 0\n  7386: u8 [a0 + 7] = 0\n  7389: u8 [a0 + 6] = 0\n  7392: u8 [a0 + 5] = 0\n  7395: u8 [a0 + 4] = 0\n  7398: u8 [a0 + 3] = 0\n  7401: u8 [a0 + 2] = 0\n  7404: u8 [a0 + 1] = 0\n  7407: u8 [a0 + 0] = 0\n  7409: a3 = a2 >> 0x38\n  7412: u8 [a0 + 0x17] = a3\n  7415: a3 = a2 >> 0x30\n  7418: u8 [a0 + 0x16] = a3\n  7421: a3 = a2 >> 0x28\n  7424: u8 [a0 + 0x15] = a3\n  7427: a3 = a2 >> 0x20\n  7430: u8 [a0 + 0x14] = a3\n  7433: a3 = a2 >> 0x18\n  7436: u8 [a0 + 0x13] = a3\n  7439: a3 = a2 >> 0x10\n  7442: u8 [a0 + 0x12] = a3\n  7445: a2 = a2 >> 0x8\n  7448: u8 [a0 + 0x11] = a2\n  7451: u8 [a0 + 0x8] = a1\n  7454: a2 = a1 >> 0x38\n  7457: u8 [a0 + 0xf] = a2\n  7460: a2 = a1 >> 0x30\n  7463: u8 [a0 + 0xe] = a2\n  7466: a2 = a1 >> 0x28\n  7469: u8 [a0 + 0xd] = a2\n  7472: a1 = a1 >> 0x20\n  7475: u8 [a0 + 0xc] = a1\n  7478: a1 = 0x20\n  7481: a0 = u64 [sp + 0x8]\n  7484: ra = 122, jump @0\n      : @141 [@dyn 61] (gas: 6)\n  7489: i32 a1 = a0 + 0\n  7491: a2 = 0x20\n  7494: a0 = 0\n  7496: ra = 0x7c\n  7499: ecalli 13 // 'seal_return'\n  7501: fallthrough\n      : @142 [@dyn 62] (gas: 10)\n  7502: a1 = u64 [a0 + 0x10]\n  7505: a0 = u64 [a0 + 0x18]\n  7508: a2 = 0x100000000\n  7518: a2 = a2 ^ a1\n  7521: a2 = a2 | a0\n  7524: a1 = a1 >> 0x20\n  7527: a1 = a1 <u 0x1\n  7530: a1 = 0 if a0 != 0\n  7532: a1 = 0 if a2 == 0\n  7534: jump @144 if a1 == 0\n      : @143 (gas: 1)\n  7537: ret\n      : @144 (gas: 4)\n  7539: sp = sp + 0xfffffffffffffff8\n  7542: u64 [sp] = ra\n  7544: a0 = 0\n  7546: ra = 126, jump @0\n      : @145 [@dyn 63] (gas: 6)\n  7551: i32 a1 = a0 + 0\n  7553: a0 = 0x1\n  7556: a2 = 0\n  7558: ra = 0x80\n  7562: ecalli 13 // 'seal_return'\n  7564: fallthrough\n      : @146 [@dyn 64] (gas: 18)\n  7565: sp = sp + 0xffffffffffffffc0\n  7568: u64 [sp + 0x38] = ra\n  7571: u64 [sp + 0x30] = s0\n  7574: u64 [sp + 0x28] = s1\n  7577: s0 = sp + 0x40\n  7580: sp = sp & 0xffffffffffffffe0\n  7583: a2 = u64 [a1 + 0x10]\n  7586: a3 = u64 [a1 + 0x18]\n  7589: a4 = u64 [a1 + 0x8]\n  7592: a1 = u64 [a1]\n  7594: a3 = a3 | a4\n  7597: a4 = a1 | a2\n  7600: a4 = a4 | a3\n  7603: a4 = a4 >> 0x20\n  7606: a2 = a2 | a3\n  7609: a2 = a2 << 0x20\n  7612: a2 = a2 | a4\n  7615: jump @150 if a2 != 0\n      : @147 (gas: 5)\n  7618: s1 = a0\n  7620: i32 a1 = a1 + 0\n  7622: i32 a0 = sp + 0\n  7624: ecalli 3 // 'call_data_load'\n  7626: fallthrough\n      : @148 (gas: 10)\n  7627: a0 = u64 [sp + 0x10]\n  7630: a1 = u64 [sp + 0x18]\n  7633: a2 = 0x100000000\n  7643: a2 = a2 ^ a0\n  7646: a2 = a2 | a1\n  7649: a3 = a0 >> 0x20\n  7652: a3 = a3 <u 0x1\n  7655: a3 = 0 if a1 != 0\n  7657: a3 = 0 if a2 == 0\n  7659: jump @151 if a3 == 0\n      : @149 (gas: 12)\n  7662: a2 = u64 [sp]\n  7664: a3 = u64 [sp + 0x8]\n  7667: u64 [s1] = a2\n  7669: u64 [s1 + 0x8] = a3\n  7672: u64 [s1 + 0x10] = a0\n  7675: u64 [s1 + 0x18] = a1\n  7678: sp = s0 + 0xffffffffffffffc0\n  7681: ra = u64 [sp + 0x38]\n  7684: s0 = u64 [sp + 0x30]\n  7687: s1 = u64 [sp + 0x28]\n  7690: sp = sp + 0x40\n  7693: ret\n      : @150 (gas: 1)\n  7695: trap\n      : @151 (gas: 3)\n  7696: a0 = 0\n  7698: a1 = 0\n  7700: ra = 130, jump @0\n      : @152 [@dyn 65] (gas: 6)\n  7706: i32 a1 = a0 + 0\n  7708: a0 = 0x1\n  7711: a2 = 0\n  7713: ra = 0x84\n  7717: ecalli 13 // 'seal_return'\n  7719: fallthrough\n      : @153 [@dyn 66] (gas: 52)\n  7720: sp = sp + 0xffffffffffffff80\n  7723: u64 [sp + 0x78] = ra\n  7726: u64 [sp + 0x70] = s0\n  7729: u64 [sp + 0x68] = s1\n  7732: s0 = sp + 0x80\n  7736: sp = sp & 0xffffffffffffffe0\n  7739: t2 = u64 [a1 + 0x10]\n  7742: a5 = u64 [a1 + 0x8]\n  7745: t0 = u64 [a2 + 0x8]\n  7748: s1 = u64 [a1]\n  7750: u64 [sp + 0x10] = s1\n  7753: a4 = u64 [a2]\n  7755: u64 [sp + 0x18] = a4\n  7758: ra = u64 [a2 + 0x10]\n  7761: a3 = t0 ^ a5\n  7764: u64 [sp + 0x38] = a3\n  7767: a3 = t0 <u a5\n  7770: a4 = a4 <u s1\n  7773: t1 = u64 [sp + 0x38]\n  7776: a3 = a4 if t1 == 0\n  7779: t1 = a4\n  7781: a1 = u64 [a1 + 0x18]\n  7784: u64 [sp + 0x38] = a1\n  7787: a1 = u64 [a2 + 0x18]\n  7790: u64 [sp + 0x20] = a1\n  7793: a1 = ra - t2\n  7796: a2 = a1 - a3\n  7799: u64 [sp + 0x28] = a2\n  7802: a2 = a1 <u a3\n  7805: u64 [sp + 0x30] = t2\n  7808: a3 = ra <u t2\n  7811: a1 = u64 [sp + 0x38]\n  7814: a4 = u64 [sp + 0x20]\n  7817: a1 = a4 - a1\n  7820: a1 = a1 - a3\n  7823: t2 = a1 - a2\n  7826: s1 = t0 - a5\n  7829: a2 = s1 - t1\n  7832: t0 = u64 [sp + 0x10]\n  7835: a1 = u64 [sp + 0x18]\n  7838: a3 = a1 - t0\n  7841: a4 = a2 >u 0\n  7843: a3 = a3 <u 0x20\n  7846: a3 = a3 ^ 0x1\n  7849: a3 = a4 if a2 != 0\n  7852: a2 = t2 >s 0\n  7854: a1 = u64 [sp + 0x28]\n  7857: a4 = a1 >u 0\n  7859: a4 = a2 if t2 != 0\n  7862: a1 = a1 | t2\n  7865: a3 = a4 if a1 != 0\n  7868: jump @159 if a3 == 0\n      : @154 (gas: 11)\n  7871: s1 = a0\n  7873: a2 = u64 [sp + 0x30]\n  7876: a0 = t0 | a2\n  7879: a1 = u64 [sp + 0x38]\n  7882: a1 = a1 | a5\n  7885: a0 = a0 | a1\n  7888: a0 = a0 >> 0x20\n  7891: a1 = a1 | a2\n  7894: a1 = a1 << 0x20\n  7897: a0 = a0 | a1\n  7900: jump @158 if a0 != 0\n      : @155 (gas: 4)\n  7903: i32 a1 = t0 + 0\n  7905: i32 a0 = sp + 0x40\n  7908: ecalli 3 // 'call_data_load'\n  7910: fallthrough\n      : @156 (gas: 10)\n  7911: a0 = u64 [sp + 0x50]\n  7914: a1 = u64 [sp + 0x58]\n  7917: a2 = 0x100000000\n  7927: a2 = a2 ^ a0\n  7930: a2 = a2 | a1\n  7933: a3 = a0 >> 0x20\n  7936: a3 = a3 <u 0x1\n  7939: a3 = 0 if a1 != 0\n  7941: a3 = 0 if a2 == 0\n  7943: jump @159 if a3 == 0\n      : @157 (gas: 12)\n  7946: a2 = u64 [sp + 0x48]\n  7949: a3 = u64 [sp + 0x40]\n  7952: u64 [s1 + 0x8] = a2\n  7955: u64 [s1] = a3\n  7957: u64 [s1 + 0x10] = a0\n  7960: u64 [s1 + 0x18] = a1\n  7963: sp = s0 + 0xffffffffffffff80\n  7966: ra = u64 [sp + 0x78]\n  7969: s0 = u64 [sp + 0x70]\n  7972: s1 = u64 [sp + 0x68]\n  7975: sp = sp + 0x80\n  7979: ret\n      : @158 (gas: 1)\n  7981: trap\n      : @159 (gas: 3)\n  7982: a0 = 0\n  7984: a1 = 0\n  7986: ra = 134, jump @0\n      : @160 [@dyn 67] (gas: 6)\n  7992: i32 a1 = a0 + 0\n  7994: a0 = 0x1\n  7997: a2 = 0\n  7999: ra = 0x88\n  8003: ecalli 13 // 'seal_return'\n  8005: fallthrough\n      : @161 [@dyn 68] (gas: 23)\n  8006: sp = sp + 0xffffffffffffff80\n  8009: u64 [sp + 0x78] = ra\n  8012: u64 [sp + 0x70] = s0\n  8015: u64 [sp + 0x68] = s1\n  8018: s0 = sp + 0x80\n  8022: sp = sp & 0xffffffffffffffe0\n  8025: a3 = u64 [a1]\n  8027: u64 [sp + 0x30] = a3\n  8030: a3 = u64 [a1 + 0x8]\n  8033: u64 [sp + 0x28] = a3\n  8036: a3 = u64 [a1 + 0x10]\n  8039: u64 [sp + 0x20] = a3\n  8042: a1 = u64 [a1 + 0x18]\n  8045: u64 [sp + 0x18] = a1\n  8048: a1 = u64 [a2]\n  8050: u64 [sp + 0x10] = a1\n  8053: a1 = u64 [a2 + 0x8]\n  8056: u64 [sp + 0x8] = a1\n  8059: s1 = u32 [a2 + 0x10]\n  8062: u64 [sp + 0x38] = a0\n  8065: a1 = 0x20\n  8068: a0 = 0\n  8070: ra = 138, jump @0\n      : @162 [@dyn 69] (gas: 58)\n  8076: a1 = reverse s1\n  8078: a2 = u64 [sp + 0x8]\n  8081: a2 = reverse a2\n  8083: a3 = u64 [sp + 0x10]\n  8086: a3 = reverse a3\n  8088: a4 = a3 >> 0x38\n  8091: u8 [a0 + 0x1f] = a4\n  8094: a4 = a3 >> 0x30\n  8097: u8 [a0 + 0x1e] = a4\n  8100: a4 = a3 >> 0x28\n  8103: u8 [a0 + 0x1d] = a4\n  8106: a4 = a3 >> 0x20\n  8109: u8 [a0 + 0x1c] = a4\n  8112: a4 = a3 >> 0x18\n  8115: u8 [a0 + 0x1b] = a4\n  8118: a4 = a3 >> 0x10\n  8121: u8 [a0 + 0x1a] = a4\n  8124: a4 = a3 >> 0x8\n  8127: u8 [a0 + 0x19] = a4\n  8130: u8 [a0 + 0x18] = a3\n  8133: a3 = a2 >> 0x38\n  8136: u8 [a0 + 0x17] = a3\n  8139: a3 = a2 >> 0x30\n  8142: u8 [a0 + 0x16] = a3\n  8145: a3 = a2 >> 0x28\n  8148: u8 [a0 + 0x15] = a3\n  8151: a3 = a2 >> 0x20\n  8154: u8 [a0 + 0x14] = a3\n  8157: a3 = a2 >> 0x18\n  8160: u8 [a0 + 0x13] = a3\n  8163: a3 = a2 >> 0x10\n  8166: u8 [a0 + 0x12] = a3\n  8169: a3 = a2 >> 0x8\n  8172: u8 [a0 + 0x11] = a3\n  8175: u8 [a0 + 0x10] = a2\n  8178: a2 = a1 >> 0x38\n  8181: u8 [a0 + 0xf] = a2\n  8184: a2 = a1 >> 0x30\n  8187: u8 [a0 + 0xe] = a2\n  8190: a2 = a1 >> 0x28\n  8193: u8 [a0 + 0xd] = a2\n  8196: a2 = a1 >> 0x20\n  8199: u8 [a0 + 0xc] = a2\n  8202: u8 [a0 + 11] = 0\n  8205: u8 [a0 + 10] = 0\n  8208: u8 [a0 + 9] = 0\n  8211: u8 [a0 + 0x8] = a1\n  8214: u8 [a0 + 7] = 0\n  8217: u8 [a0 + 6] = 0\n  8220: u8 [a0 + 5] = 0\n  8223: u8 [a0 + 4] = 0\n  8226: u8 [a0 + 3] = 0\n  8229: u8 [a0 + 2] = 0\n  8232: u8 [a0 + 1] = 0\n  8235: u8 [a0 + 0] = 0\n  8237: a0 = 0x20\n  8240: a1 = 0x20\n  8243: ra = 140, jump @0\n      : @163 [@dyn 70] (gas: 71)\n  8249: a1 = u64 [sp + 0x18]\n  8252: a1 = reverse a1\n  8254: a2 = u64 [sp + 0x20]\n  8257: a2 = reverse a2\n  8259: a3 = u64 [sp + 0x28]\n  8262: a3 = reverse a3\n  8264: a4 = u64 [sp + 0x30]\n  8267: a4 = reverse a4\n  8269: a5 = a4 >> 0x38\n  8272: u8 [a0 + 0x1f] = a5\n  8275: a5 = a4 >> 0x30\n  8278: u8 [a0 + 0x1e] = a5\n  8281: a5 = a4 >> 0x28\n  8284: u8 [a0 + 0x1d] = a5\n  8287: a5 = a4 >> 0x20\n  8290: u8 [a0 + 0x1c] = a5\n  8293: a5 = a4 >> 0x18\n  8296: u8 [a0 + 0x1b] = a5\n  8299: a5 = a4 >> 0x10\n  8302: u8 [a0 + 0x1a] = a5\n  8305: a5 = a4 >> 0x8\n  8308: u8 [a0 + 0x19] = a5\n  8311: u8 [a0 + 0x18] = a4\n  8314: a4 = a3 >> 0x38\n  8317: u8 [a0 + 0x17] = a4\n  8320: a4 = a3 >> 0x30\n  8323: u8 [a0 + 0x16] = a4\n  8326: a4 = a3 >> 0x28\n  8329: u8 [a0 + 0x15] = a4\n  8332: a4 = a3 >> 0x20\n  8335: u8 [a0 + 0x14] = a4\n  8338: a4 = a3 >> 0x18\n  8341: u8 [a0 + 0x13] = a4\n  8344: a4 = a3 >> 0x10\n  8347: u8 [a0 + 0x12] = a4\n  8350: a4 = a3 >> 0x8\n  8353: u8 [a0 + 0x11] = a4\n  8356: u8 [a0 + 0x10] = a3\n  8359: a3 = a2 >> 0x38\n  8362: u8 [a0 + 0xf] = a3\n  8365: a3 = a2 >> 0x30\n  8368: u8 [a0 + 0xe] = a3\n  8371: a3 = a2 >> 0x28\n  8374: u8 [a0 + 0xd] = a3\n  8377: a3 = a2 >> 0x20\n  8380: u8 [a0 + 0xc] = a3\n  8383: a3 = a2 >> 0x18\n  8386: u8 [a0 + 0xb] = a3\n  8389: a3 = a2 >> 0x10\n  8392: u8 [a0 + 0xa] = a3\n  8395: a3 = a2 >> 0x8\n  8398: u8 [a0 + 0x9] = a3\n  8401: u8 [a0 + 0x8] = a2\n  8404: a2 = a1 >> 0x38\n  8407: u8 [a0 + 0x7] = a2\n  8410: a2 = a1 >> 0x30\n  8413: u8 [a0 + 0x6] = a2\n  8416: a2 = a1 >> 0x28\n  8419: u8 [a0 + 0x5] = a2\n  8422: a2 = a1 >> 0x20\n  8425: u8 [a0 + 0x4] = a2\n  8428: a2 = a1 >> 0x18\n  8431: u8 [a0 + 0x3] = a2\n  8434: a2 = a1 >> 0x10\n  8437: u8 [a0 + 0x2] = a2\n  8440: a2 = a1 >> 0x8\n  8443: u8 [a0 + 0x1] = a2\n  8446: u8 [a0] = a1\n  8448: a1 = 0x40\n  8451: a0 = 0\n  8453: ra = 142, jump @0\n      : @164 [@dyn 71] (gas: 23)\n  8459: i32 a0 = a0 + 0\n  8461: i32 a2 = sp + 0x40\n  8464: a1 = 0x40\n  8467: ecalli 9 // 'hash_keccak_256'\n  8469: a0 = u64 [sp + 0x58]\n  8472: a1 = u64 [sp + 0x50]\n  8475: a2 = u64 [sp + 0x48]\n  8478: a3 = u64 [sp + 0x40]\n  8481: a0 = reverse a0\n  8483: a1 = reverse a1\n  8485: a2 = reverse a2\n  8487: a3 = reverse a3\n  8489: a4 = u64 [sp + 0x38]\n  8492: u64 [a4 + 0x18] = a3\n  8495: u64 [a4 + 0x10] = a2\n  8498: u64 [a4 + 0x8] = a1\n  8501: u64 [a4] = a0\n  8503: sp = s0 + 0xffffffffffffff80\n  8506: ra = u64 [sp + 0x78]\n  8509: s0 = u64 [sp + 0x70]\n  8512: s1 = u64 [sp + 0x68]\n  8515: sp = sp + 0x80\n  8519: ret\n      : @165 (gas: 8)\n  8521: a0 = u64 [sp + 0x30]\n  8524: a1 = u64 [sp + 0x38]\n  8527: a2 = u64 [sp + 0x28]\n  8530: a3 = u64 [sp + 0x20]\n  8533: a1 = a1 | a2\n  8536: a0 = a0 | a3\n  8539: a0 = a0 | a1\n  8542: jump @175 if a0 != 0\n      : @166 (gas: 2)\n  8546: a0 = i32 [0x20028]\n  8551: jump @175 if a0 <=u 35\n      : @167 (gas: 4)\n  8556: i32 a0 = sp + 0x60\n  8559: a1 = 0x4\n  8562: ecalli 3 // 'call_data_load'\n  8564: fallthrough\n      : @168 (gas: 11)\n  8565: a1 = u64 [sp + 0x70]\n  8568: s1 = u64 [sp + 0x78]\n  8571: a0 = 0x100000000\n  8581: a0 = a0 ^ a1\n  8584: a0 = a0 | s1\n  8587: u64 [sp + 0x18] = a1\n  8590: a1 = a1 >> 0x20\n  8593: a1 = a1 <u 0x1\n  8596: a1 = 0 if s1 != 0\n  8598: a1 = 0 if a0 == 0\n  8600: jump @176 if a1 == 0\n      : @169 (gas: 7)\n  8604: a0 = u64 [sp + 0x68]\n  8607: u64 [sp + 0x8] = a0\n  8610: a0 = u64 [sp + 0x60]\n  8613: u64 [sp + 0x10] = a0\n  8616: a1 = 0x20\n  8619: a0 = 0\n  8621: ra = 144, jump @0\n      : @170 [@dyn 72] (gas: 70)\n  8627: a1 = reverse s1\n  8629: a2 = u64 [sp + 0x18]\n  8632: a2 = reverse a2\n  8634: a3 = u64 [sp + 0x8]\n  8637: a3 = reverse a3\n  8639: a4 = u64 [sp + 0x10]\n  8642: a4 = reverse a4\n  8644: a5 = a4 >> 0x38\n  8647: u8 [a0 + 0x1f] = a5\n  8650: a5 = a4 >> 0x30\n  8653: u8 [a0 + 0x1e] = a5\n  8656: a5 = a4 >> 0x28\n  8659: u8 [a0 + 0x1d] = a5\n  8662: a5 = a4 >> 0x20\n  8665: u8 [a0 + 0x1c] = a5\n  8668: a5 = a4 >> 0x18\n  8671: u8 [a0 + 0x1b] = a5\n  8674: a5 = a4 >> 0x10\n  8677: u8 [a0 + 0x1a] = a5\n  8680: a5 = a4 >> 0x8\n  8683: u8 [a0 + 0x19] = a5\n  8686: u8 [a0 + 0x18] = a4\n  8689: a4 = a3 >> 0x38\n  8692: u8 [a0 + 0x17] = a4\n  8695: a4 = a3 >> 0x30\n  8698: u8 [a0 + 0x16] = a4\n  8701: a4 = a3 >> 0x28\n  8704: u8 [a0 + 0x15] = a4\n  8707: a4 = a3 >> 0x20\n  8710: u8 [a0 + 0x14] = a4\n  8713: a4 = a3 >> 0x18\n  8716: u8 [a0 + 0x13] = a4\n  8719: a4 = a3 >> 0x10\n  8722: u8 [a0 + 0x12] = a4\n  8725: a4 = a3 >> 0x8\n  8728: u8 [a0 + 0x11] = a4\n  8731: u8 [a0 + 0x10] = a3\n  8734: u8 [a0 + 0x8] = a2\n  8737: a3 = a2 >> 0x38\n  8740: u8 [a0 + 0xf] = a3\n  8743: a3 = a2 >> 0x30\n  8746: u8 [a0 + 0xe] = a3\n  8749: a3 = a2 >> 0x28\n  8752: u8 [a0 + 0xd] = a3\n  8755: a3 = a2 >> 0x20\n  8758: u8 [a0 + 0xc] = a3\n  8761: a3 = a2 >> 0x18\n  8764: u8 [a0 + 0xb] = a3\n  8767: a3 = a2 >> 0x10\n  8770: u8 [a0 + 0xa] = a3\n  8773: a2 = a2 >> 0x8\n  8776: u8 [a0 + 0x9] = a2\n  8779: u8 [a0] = a1\n  8781: a2 = a1 >> 0x38\n  8784: u8 [a0 + 0x7] = a2\n  8787: a2 = a1 >> 0x30\n  8790: u8 [a0 + 0x6] = a2\n  8793: a2 = a1 >> 0x28\n  8796: u8 [a0 + 0x5] = a2\n  8799: a2 = a1 >> 0x20\n  8802: u8 [a0 + 0x4] = a2\n  8805: a2 = a1 >> 0x18\n  8808: u8 [a0 + 0x3] = a2\n  8811: a2 = a1 >> 0x10\n  8814: u8 [a0 + 0x2] = a2\n  8817: a1 = a1 >> 0x8\n  8820: u8 [a0 + 0x1] = a1\n  8823: a0 = 0x20\n  8826: a1 = 0x20\n  8829: ra = 146, jump @0\n      : @171 [@dyn 73] (gas: 35)\n  8835: u8 [a0 + 31] = 0x1\n  8839: u8 [a0 + 30] = 0\n  8842: u8 [a0 + 29] = 0\n  8845: u8 [a0 + 28] = 0\n  8848: u8 [a0 + 27] = 0\n  8851: u8 [a0 + 26] = 0\n  8854: u8 [a0 + 25] = 0\n  8857: u8 [a0 + 24] = 0\n  8860: u8 [a0 + 23] = 0\n  8863: u8 [a0 + 22] = 0\n  8866: u8 [a0 + 21] = 0\n  8869: u8 [a0 + 20] = 0\n  8872: u8 [a0 + 19] = 0\n  8875: u8 [a0 + 18] = 0\n  8878: u8 [a0 + 17] = 0\n  8881: u8 [a0 + 16] = 0\n  8884: u8 [a0 + 15] = 0\n  8887: u8 [a0 + 14] = 0\n  8890: u8 [a0 + 13] = 0\n  8893: u8 [a0 + 12] = 0\n  8896: u8 [a0 + 11] = 0\n  8899: u8 [a0 + 10] = 0\n  8902: u8 [a0 + 9] = 0\n  8905: u8 [a0 + 8] = 0\n  8908: u8 [a0 + 7] = 0\n  8911: u8 [a0 + 6] = 0\n  8914: u8 [a0 + 5] = 0\n  8917: u8 [a0 + 4] = 0\n  8920: u8 [a0 + 3] = 0\n  8923: u8 [a0 + 2] = 0\n  8926: u8 [a0 + 1] = 0\n  8929: u8 [a0 + 0] = 0\n  8931: a1 = 0x40\n  8934: a0 = 0\n  8936: ra = 148, jump @0\n      : @172 [@dyn 74] (gas: 38)\n  8942: i32 a0 = a0 + 0\n  8944: i32 a2 = sp + 0x60\n  8947: a1 = 0x40\n  8950: ecalli 9 // 'hash_keccak_256'\n  8952: a0 = u64 [sp + 0x78]\n  8955: a1 = u64 [sp + 0x70]\n  8958: a2 = u64 [sp + 0x68]\n  8961: a3 = u64 [sp + 0x60]\n  8964: a0 = reverse a0\n  8966: a1 = reverse a1\n  8968: a2 = reverse a2\n  8970: a3 = reverse a3\n  8972: u64 [sp + 0x58] = a3\n  8975: u64 [sp + 0x50] = a2\n  8978: u64 [sp + 0x48] = a1\n  8981: u64 [sp + 0x40] = a0\n  8984: u64 [sp + 120] = 0\n  8987: u64 [sp + 112] = 0\n  8990: u64 [sp + 104] = 0\n  8993: u64 [sp + 96] = 0\n  8996: u32 [sp + 128] = 0x20\n  9001: i32 a1 = sp + 0x40\n  9004: i32 a3 = sp + 0x60\n  9007: i32 a4 = sp + 0x80\n  9011: a2 = 0xffffffffffffffff\n  9014: a0 = 0\n  9016: ecalli 8 // 'get_storage'\n  9018: a0 = u64 [sp + 0x78]\n  9021: u64 [sp] = a0\n  9023: a0 = u64 [sp + 0x70]\n  9026: u64 [sp + 0x8] = a0\n  9029: a0 = u64 [sp + 0x68]\n  9032: u64 [sp + 0x10] = a0\n  9035: a0 = u64 [sp + 0x60]\n  9038: u64 [sp + 0x18] = a0\n  9041: a0 = 0x40\n  9044: a1 = 0x20\n  9047: ra = 150, jump @0\n      : @173 [@dyn 75] (gas: 100)\n  9053: a1 = u8 [a0 + 0x11]\n  9056: a2 = u8 [a0 + 0x10]\n  9059: a3 = u8 [a0 + 0x12]\n  9062: a4 = u8 [a0 + 0x13]\n  9065: a1 = a1 << 0x8\n  9068: a1 = a1 | a2\n  9071: a3 = a3 << 0x10\n  9074: a4 = a4 << 0x18\n  9077: a3 = a3 | a4\n  9080: a1 = a1 | a3\n  9083: a2 = u8 [a0 + 0x15]\n  9086: a3 = u8 [a0 + 0x14]\n  9089: a4 = u8 [a0 + 0x16]\n  9092: a5 = u8 [a0 + 0x17]\n  9095: a2 = a2 << 0x8\n  9098: a2 = a2 | a3\n  9101: a4 = a4 << 0x10\n  9104: a5 = a5 << 0x18\n  9107: a4 = a4 | a5\n  9110: a2 = a2 | a4\n  9113: a2 = a2 << 0x20\n  9116: t0 = a2 | a1\n  9119: a2 = u8 [a0 + 0x1]\n  9122: a3 = u8 [a0]\n  9124: a4 = u8 [a0 + 0x2]\n  9127: a5 = u8 [a0 + 0x3]\n  9130: a2 = a2 << 0x8\n  9133: a2 = a2 | a3\n  9136: a4 = a4 << 0x10\n  9139: a5 = a5 << 0x18\n  9142: a4 = a4 | a5\n  9145: a2 = a2 | a4\n  9148: a3 = u8 [a0 + 0x5]\n  9151: a4 = u8 [a0 + 0x4]\n  9154: a5 = u8 [a0 + 0x6]\n  9157: s1 = u8 [a0 + 0x7]\n  9160: a3 = a3 << 0x8\n  9163: a3 = a3 | a4\n  9166: a5 = a5 << 0x10\n  9169: s1 = s1 << 0x18\n  9172: a5 = a5 | s1\n  9175: a3 = a3 | a5\n  9178: a3 = a3 << 0x20\n  9181: a2 = a2 | a3\n  9184: a3 = u8 [a0 + 0x19]\n  9187: a4 = u8 [a0 + 0x18]\n  9190: a5 = u8 [a0 + 0x1a]\n  9193: s1 = u8 [a0 + 0x1b]\n  9196: a3 = a3 << 0x8\n  9199: a3 = a3 | a4\n  9202: a5 = a5 << 0x10\n  9205: s1 = s1 << 0x18\n  9208: a5 = a5 | s1\n  9211: a3 = a3 | a5\n  9214: a4 = u8 [a0 + 0x1d]\n  9217: a5 = u8 [a0 + 0x1c]\n  9220: s1 = u8 [a0 + 0x1e]\n  9223: a1 = u8 [a0 + 0x1f]\n  9226: a4 = a4 << 0x8\n  9229: a4 = a4 | a5\n  9232: s1 = s1 << 0x10\n  9235: a1 = a1 << 0x18\n  9238: a1 = a1 | s1\n  9241: a1 = a1 | a4\n  9244: a1 = a1 << 0x20\n  9247: a3 = a3 | a1\n  9250: a1 = u8 [a0 + 0x9]\n  9253: a4 = u8 [a0 + 0x8]\n  9256: a5 = u8 [a0 + 0xa]\n  9259: s1 = u8 [a0 + 0xb]\n  9262: a1 = a1 << 0x8\n  9265: a1 = a1 | a4\n  9268: a5 = a5 << 0x10\n  9271: s1 = s1 << 0x18\n  9274: a5 = a5 | s1\n  9277: a1 = a1 | a5\n  9280: a4 = u8 [a0 + 0xd]\n  9283: a5 = u8 [a0 + 0xc]\n  9286: s1 = u8 [a0 + 0xe]\n  9289: a0 = u8 [a0 + 0xf]\n  9292: a4 = a4 << 0x8\n  9295: a4 = a4 | a5\n  9298: s1 = s1 << 0x10\n  9301: a0 = a0 << 0x18\n  9304: a0 = a0 | s1\n  9307: a0 = a0 | a4\n  9310: a0 = a0 << 0x20\n  9313: a0 = a0 | a1\n  9316: a1 = reverse a0\n  9318: a0 = reverse a3\n  9320: a2 = reverse a2\n  9322: a3 = reverse t0\n  9324: a2 = a2 | a3\n  9327: a3 = a0 | a1\n  9330: a3 = a3 | a2\n  9333: a3 = a3 >> 0x20\n  9336: a1 = a1 | a2\n  9339: a1 = a1 << 0x20\n  9342: a1 = a1 | a3\n  9345: jump @178 if a1 == 0\n      : @174 (gas: 1)\n  9348: trap\n      : @175 (gas: 4)\n  9349: a0 = 0\n  9351: a1 = 0\n  9353: ra = 0x98\n  9357: jump @0\n      : @176 (gas: 2)\n  9360: a0 = 0\n  9362: ra = 152, jump @0\n      : @177 [@dyn 76] (gas: 5)\n  9368: i32 a1 = a0 + 0\n  9370: a0 = 0x1\n  9373: a2 = 0\n  9375: ecalli 13 // 'seal_return'\n  9377: fallthrough\n      : @178 (gas: 4)\n  9378: i32 s1 = a0 + 0\n  9380: a1 = 0x20\n  9383: a0 = s1\n  9385: ra = 154, jump @0\n      : @179 [@dyn 77] (gas: 71)\n  9391: a1 = u64 [sp]\n  9393: a1 = reverse a1\n  9395: a2 = u64 [sp + 0x8]\n  9398: a2 = reverse a2\n  9400: a3 = u64 [sp + 0x10]\n  9403: a3 = reverse a3\n  9405: a4 = u64 [sp + 0x18]\n  9408: a4 = reverse a4\n  9410: a5 = a4 >> 0x38\n  9413: u8 [a0 + 0x1f] = a5\n  9416: a5 = a4 >> 0x30\n  9419: u8 [a0 + 0x1e] = a5\n  9422: a5 = a4 >> 0x28\n  9425: u8 [a0 + 0x1d] = a5\n  9428: a5 = a4 >> 0x20\n  9431: u8 [a0 + 0x1c] = a5\n  9434: a5 = a4 >> 0x18\n  9437: u8 [a0 + 0x1b] = a5\n  9440: a5 = a4 >> 0x10\n  9443: u8 [a0 + 0x1a] = a5\n  9446: a5 = a4 >> 0x8\n  9449: u8 [a0 + 0x19] = a5\n  9452: u8 [a0 + 0x18] = a4\n  9455: u8 [a0 + 0x10] = a3\n  9458: a4 = a3 >> 0x38\n  9461: u8 [a0 + 0x17] = a4\n  9464: a4 = a3 >> 0x30\n  9467: u8 [a0 + 0x16] = a4\n  9470: a4 = a3 >> 0x28\n  9473: u8 [a0 + 0x15] = a4\n  9476: a4 = a3 >> 0x20\n  9479: u8 [a0 + 0x14] = a4\n  9482: a4 = a3 >> 0x18\n  9485: u8 [a0 + 0x13] = a4\n  9488: a4 = a3 >> 0x10\n  9491: u8 [a0 + 0x12] = a4\n  9494: a3 = a3 >> 0x8\n  9497: u8 [a0 + 0x11] = a3\n  9500: u8 [a0 + 0x8] = a2\n  9503: a3 = a2 >> 0x38\n  9506: u8 [a0 + 0xf] = a3\n  9509: a3 = a2 >> 0x30\n  9512: u8 [a0 + 0xe] = a3\n  9515: a3 = a2 >> 0x28\n  9518: u8 [a0 + 0xd] = a3\n  9521: a3 = a2 >> 0x20\n  9524: u8 [a0 + 0xc] = a3\n  9527: a3 = a2 >> 0x18\n  9530: u8 [a0 + 0xb] = a3\n  9533: a3 = a2 >> 0x10\n  9536: u8 [a0 + 0xa] = a3\n  9539: a2 = a2 >> 0x8\n  9542: u8 [a0 + 0x9] = a2\n  9545: u8 [a0] = a1\n  9547: a2 = a1 >> 0x38\n  9550: u8 [a0 + 0x7] = a2\n  9553: a2 = a1 >> 0x30\n  9556: u8 [a0 + 0x6] = a2\n  9559: a2 = a1 >> 0x28\n  9562: u8 [a0 + 0x5] = a2\n  9565: a2 = a1 >> 0x20\n  9568: u8 [a0 + 0x4] = a2\n  9571: a2 = a1 >> 0x18\n  9574: u8 [a0 + 0x3] = a2\n  9577: a2 = a1 >> 0x10\n  9580: u8 [a0 + 0x2] = a2\n  9583: a1 = a1 >> 0x8\n  9586: u8 [a0 + 0x1] = a1\n  9589: a1 = 0x20\n  9592: a0 = s1\n  9594: ra = 156, jump @0\n      : @180 [@dyn 78] (gas: 6)\n  9600: i32 a1 = a0 + 0\n  9602: a2 = 0x20\n  9605: a0 = 0\n  9607: ra = 0x9e\n  9611: ecalli 13 // 'seal_return'\n  9613: fallthrough\n      : @181 [@dyn 79] (gas: 9)\n  9614: a2 = u64 [a1 + 0x18]\n  9617: a3 = u64 [a1 + 0x10]\n  9620: a4 = u64 [a1 + 0x8]\n  9623: a1 = u64 [a1]\n  9625: u64 [a0 + 0x18] = a2\n  9628: u64 [a0 + 0x10] = a3\n  9631: u64 [a0 + 0x8] = a4\n  9634: u64 [a0] = a1\n  9636: ret\n      : @182 (gas: 8)\n  9638: a0 = u64 [sp + 0x70]\n  9641: a1 = u64 [sp + 0x78]\n  9644: a2 = u64 [sp + 0x68]\n  9647: a3 = u64 [sp + 0x60]\n  9650: a1 = a1 | a2\n  9653: a0 = a0 | a3\n  9656: a0 = a0 | a1\n  9659: jump @188 if a0 != 0\n      : @183 (gas: 2)\n  9663: a0 = i32 [0x20028]\n  9668: jump @188 if a0 <=u 67\n      : @184 (gas: 65)\n  9673: i32 a0 = sp + 0x80\n  9677: a1 = 0x4\n  9680: ecalli 3 // 'call_data_load'\n  9682: a0 = u64 [sp + 0x80]\n  9686: u64 [sp + 0x18] = a0\n  9689: a0 = u64 [sp + 0x88]\n  9693: u64 [sp + 0x10] = a0\n  9696: a0 = u64 [sp + 0x90]\n  9700: u64 [sp + 0x8] = a0\n  9703: s1 = u64 [sp + 0x98]\n  9707: i32 a0 = sp + 0x80\n  9711: a1 = 0x24\n  9714: ecalli 3 // 'call_data_load'\n  9716: a0 = u64 [sp + 0x80]\n  9720: a1 = u64 [sp + 0x88]\n  9724: a2 = u64 [sp + 0x90]\n  9728: a3 = u64 [sp + 0x98]\n  9732: u64 [sp + 0x38] = a3\n  9735: u64 [sp + 0x30] = a2\n  9738: u64 [sp + 0x28] = a1\n  9741: u64 [sp + 0x20] = a0\n  9744: u64 [sp + 0x58] = s1\n  9747: a0 = u64 [sp + 0x8]\n  9750: u64 [sp + 0x50] = a0\n  9753: a0 = u64 [sp + 0x10]\n  9756: u64 [sp + 0x48] = a0\n  9759: a0 = sp + 0x40\n  9762: a1 = sp + 0x20\n  9765: a2 = u64 [sp + 0x18]\n  9768: u64 [sp + 0x40] = a2\n  9771: ra = 0xa0\n  9775: sp = sp + 0xffffffffffffff00\n  9779: u64 [sp + 0xf8] = ra\n  9783: u64 [sp + 0xf0] = s0\n  9787: u64 [sp + 0xe8] = s1\n  9791: s0 = sp + 0x100\n  9795: sp = sp & 0xffffffffffffffe0\n  9798: a2 = u64 [a1 + 0x18]\n  9801: u64 [sp + 0x28] = a2\n  9804: a2 = u64 [a1 + 0x10]\n  9807: u64 [sp + 0x30] = a2\n  9810: a2 = u64 [a1 + 0x8]\n  9813: u64 [sp + 0x38] = a2\n  9816: a1 = u64 [a1]\n  9818: u64 [sp + 0x40] = a1\n  9821: a1 = u64 [a0 + 0x18]\n  9824: u64 [sp + 0x58] = a1\n  9827: a1 = u64 [a0 + 0x10]\n  9830: u64 [sp + 0x60] = a1\n  9833: a1 = u64 [a0 + 0x8]\n  9836: u64 [sp + 0x68] = a1\n  9839: a0 = u64 [a0]\n  9841: u64 [sp + 0x70] = a0\n  9844: i32 a0 = sp + 0x80\n  9848: ecalli 5 // 'caller'\n  9850: a0 = u32 [sp + 0x90]\n  9854: u64 [sp + 0x20] = a0\n  9857: a0 = u64 [sp + 0x88]\n  9861: u64 [sp + 0x18] = a0\n  9864: a0 = u64 [sp + 0x80]\n  9868: u64 [sp + 0x78] = a0\n  9871: a0 = 0x40\n  9874: a1 = 0x20\n  9877: ra = 0x18e\n  9881: jump @0\n      : @185 [@dyn 80] (gas: 3)\n  9884: a0 = 0x40\n  9887: a1 = 0x20\n  9890: ra = 162, jump @0\n      : @186 [@dyn 81] (gas: 100)\n  9896: a1 = u8 [a0 + 0x11]\n  9899: a2 = u8 [a0 + 0x10]\n  9902: a3 = u8 [a0 + 0x12]\n  9905: a4 = u8 [a0 + 0x13]\n  9908: a1 = a1 << 0x8\n  9911: a1 = a1 | a2\n  9914: a3 = a3 << 0x10\n  9917: a4 = a4 << 0x18\n  9920: a3 = a3 | a4\n  9923: a1 = a1 | a3\n  9926: a2 = u8 [a0 + 0x15]\n  9929: a3 = u8 [a0 + 0x14]\n  9932: a4 = u8 [a0 + 0x16]\n  9935: a5 = u8 [a0 + 0x17]\n  9938: a2 = a2 << 0x8\n  9941: a2 = a2 | a3\n  9944: a4 = a4 << 0x10\n  9947: a5 = a5 << 0x18\n  9950: a4 = a4 | a5\n  9953: a2 = a2 | a4\n  9956: a2 = a2 << 0x20\n  9959: t0 = a2 | a1\n  9962: a2 = u8 [a0 + 0x1]\n  9965: a3 = u8 [a0]\n  9967: a4 = u8 [a0 + 0x2]\n  9970: a5 = u8 [a0 + 0x3]\n  9973: a2 = a2 << 0x8\n  9976: a2 = a2 | a3\n  9979: a4 = a4 << 0x10\n  9982: a5 = a5 << 0x18\n  9985: a4 = a4 | a5\n  9988: a2 = a2 | a4\n  9991: a3 = u8 [a0 + 0x5]\n  9994: a4 = u8 [a0 + 0x4]\n  9997: a5 = u8 [a0 + 0x6]\n 10000: s1 = u8 [a0 + 0x7]\n 10003: a3 = a3 << 0x8\n 10006: a3 = a3 | a4\n 10009: a5 = a5 << 0x10\n 10012: s1 = s1 << 0x18\n 10015: a5 = a5 | s1\n 10018: a3 = a3 | a5\n 10021: a3 = a3 << 0x20\n 10024: a2 = a2 | a3\n 10027: a3 = u8 [a0 + 0x19]\n 10030: a4 = u8 [a0 + 0x18]\n 10033: a5 = u8 [a0 + 0x1a]\n 10036: s1 = u8 [a0 + 0x1b]\n 10039: a3 = a3 << 0x8\n 10042: a3 = a3 | a4\n 10045: a5 = a5 << 0x10\n 10048: s1 = s1 << 0x18\n 10051: a5 = a5 | s1\n 10054: a3 = a3 | a5\n 10057: a4 = u8 [a0 + 0x1d]\n 10060: a5 = u8 [a0 + 0x1c]\n 10063: s1 = u8 [a0 + 0x1e]\n 10066: a1 = u8 [a0 + 0x1f]\n 10069: a4 = a4 << 0x8\n 10072: a4 = a4 | a5\n 10075: s1 = s1 << 0x10\n 10078: a1 = a1 << 0x18\n 10081: a1 = a1 | s1\n 10084: a1 = a1 | a4\n 10087: a1 = a1 << 0x20\n 10090: a3 = a3 | a1\n 10093: a1 = u8 [a0 + 0x9]\n 10096: a4 = u8 [a0 + 0x8]\n 10099: a5 = u8 [a0 + 0xa]\n 10102: s1 = u8 [a0 + 0xb]\n 10105: a1 = a1 << 0x8\n 10108: a1 = a1 | a4\n 10111: a5 = a5 << 0x10\n 10114: s1 = s1 << 0x18\n 10117: a5 = a5 | s1\n 10120: a1 = a1 | a5\n 10123: a4 = u8 [a0 + 0xd]\n 10126: a5 = u8 [a0 + 0xc]\n 10129: s1 = u8 [a0 + 0xe]\n 10132: a0 = u8 [a0 + 0xf]\n 10135: a4 = a4 << 0x8\n 10138: a4 = a4 | a5\n 10141: s1 = s1 << 0x10\n 10144: a0 = a0 << 0x18\n 10147: a0 = a0 | s1\n 10150: a0 = a0 | a4\n 10153: a0 = a0 << 0x20\n 10156: a0 = a0 | a1\n 10159: a1 = reverse a0\n 10161: a0 = reverse a3\n 10163: a2 = reverse a2\n 10165: a3 = reverse t0\n 10167: a2 = a2 | a3\n 10170: a3 = a0 | a1\n 10173: a3 = a3 | a2\n 10176: a3 = a3 >> 0x20\n 10179: a1 = a1 | a2\n 10182: a1 = a1 << 0x20\n 10185: a1 = a1 | a3\n 10188: jump @190 if a1 == 0\n      : @187 (gas: 1)\n 10191: trap\n      : @188 (gas: 3)\n 10192: a0 = 0\n 10194: a1 = 0\n 10196: ra = 164, jump @0\n      : @189 [@dyn 82] (gas: 7)\n 10202: i32 a1 = a0 + 0\n 10204: a0 = 0x1\n 10207: a2 = 0\n 10209: ecalli 13 // 'seal_return'\n 10211: i32 a0 = a0 + 0\n 10213: ra = 0xa6\n 10217: jump @0\n      : @190 (gas: 2)\n 10220: i32 a0 = a0 + 0\n 10222: ra = 166, jump @0\n      : @191 [@dyn 83] (gas: 6)\n 10228: i32 a1 = a0 + 0\n 10230: a0 = 0\n 10232: a2 = 0\n 10234: ra = 0xa8\n 10238: ecalli 13 // 'seal_return'\n 10240: fallthrough\n      : @192 [@dyn 84] (gas: 12)\n 10241: sp = sp + 0xffffffffffffff80\n 10244: u64 [sp + 0x78] = ra\n 10247: u64 [sp + 0x70] = s0\n 10250: s0 = sp + 0x80\n 10254: sp = sp & 0xffffffffffffffe0\n 10257: u64 [sp + 56] = 0\n 10260: u64 [sp + 48] = 0\n 10263: u64 [sp + 40] = 0\n 10266: u64 [sp + 32] = 0\n 10269: i32 a0 = sp + 0x20\n 10272: ecalli 16 // 'value_transferred'\n 10274: fallthrough\n      : @193 (gas: 8)\n 10275: a0 = u64 [sp + 0x30]\n 10278: a1 = u64 [sp + 0x38]\n 10281: a2 = u64 [sp + 0x28]\n 10284: a3 = u64 [sp + 0x20]\n 10287: a1 = a1 | a2\n 10290: a0 = a0 | a3\n 10293: a0 = a0 | a1\n 10296: jump @199 if a0 != 0\n      : @194 (gas: 2)\n 10300: a0 = i32 [0x20028]\n 10305: jump @199 if a0 <=u 35\n      : @195 (gas: 47)\n 10310: i32 a0 = sp + 0x40\n 10313: a1 = 0x4\n 10316: ecalli 3 // 'call_data_load'\n 10318: a1 = u64 [sp + 0x40]\n 10321: a0 = u64 [sp + 0x48]\n 10324: a2 = u64 [sp + 0x50]\n 10327: a3 = u64 [sp + 0x58]\n 10330: u64 [sp + 0x18] = a3\n 10333: u64 [sp + 0x10] = a2\n 10336: u64 [sp + 0x8] = a0\n 10339: a0 = sp\n 10341: u64 [sp] = a1\n 10343: ra = 0xaa\n 10347: sp = sp + 0xfffffffffffffd40\n 10351: u64 [sp + 0x2b8] = ra\n 10355: u64 [sp + 0x2b0] = s0\n 10359: u64 [sp + 0x2a8] = s1\n 10363: s0 = sp + 0x2c0\n 10367: sp = sp & 0xffffffffffffffe0\n 10370: a1 = u64 [a0 + 0x18]\n 10373: u64 [sp + 0x70] = a1\n 10376: a1 = u64 [a0 + 0x10]\n 10379: u64 [sp + 0x78] = a1\n 10382: a1 = u64 [a0]\n 10384: u64 [sp + 0x80] = a1\n 10388: a0 = u64 [a0 + 0x8]\n 10391: u64 [sp + 0x68] = a0\n 10394: i32 a0 = sp + 0x160\n 10398: ecalli 5 // 'caller'\n 10400: a0 = u64 [sp + 0x168]\n 10404: a1 = i32 [sp + 0x170]\n 10408: s1 = u64 [sp + 0x160]\n 10412: a0 = reverse a0\n 10414: a2 = a0 << 0x20\n 10417: a1 = reverse a1\n 10419: a1 = a1 >> 0x20\n 10422: a1 = a1 | a2\n 10425: u64 [sp + 0x98] = a1\n 10429: a0 = a0 >> 0x20\n 10432: a1 = reverse s1\n 10434: a1 = a1 << 0x20\n 10437: a0 = a0 | a1\n 10440: u64 [sp + 0x90] = a0\n 10444: a1 = 0x20\n 10447: a0 = 0\n 10449: ra = 0x19c\n 10453: jump @0\n      : @196 [@dyn 85] (gas: 3)\n 10456: a0 = 0x40\n 10459: a1 = 0x20\n 10462: ra = 172, jump @0\n      : @197 [@dyn 86] (gas: 100)\n 10468: a1 = u8 [a0 + 0x11]\n 10471: a2 = u8 [a0 + 0x10]\n 10474: a3 = u8 [a0 + 0x12]\n 10477: a4 = u8 [a0 + 0x13]\n 10480: a1 = a1 << 0x8\n 10483: a1 = a1 | a2\n 10486: a3 = a3 << 0x10\n 10489: a4 = a4 << 0x18\n 10492: a3 = a3 | a4\n 10495: a1 = a1 | a3\n 10498: a2 = u8 [a0 + 0x15]\n 10501: a3 = u8 [a0 + 0x14]\n 10504: a4 = u8 [a0 + 0x16]\n 10507: a5 = u8 [a0 + 0x17]\n 10510: a2 = a2 << 0x8\n 10513: a2 = a2 | a3\n 10516: a4 = a4 << 0x10\n 10519: a5 = a5 << 0x18\n 10522: a4 = a4 | a5\n 10525: a2 = a2 | a4\n 10528: a2 = a2 << 0x20\n 10531: t0 = a2 | a1\n 10534: a2 = u8 [a0 + 0x1]\n 10537: a3 = u8 [a0]\n 10539: a4 = u8 [a0 + 0x2]\n 10542: a5 = u8 [a0 + 0x3]\n 10545: a2 = a2 << 0x8\n 10548: a2 = a2 | a3\n 10551: a4 = a4 << 0x10\n 10554: a5 = a5 << 0x18\n 10557: a4 = a4 | a5\n 10560: a2 = a2 | a4\n 10563: a3 = u8 [a0 + 0x5]\n 10566: a4 = u8 [a0 + 0x4]\n 10569: a5 = u8 [a0 + 0x6]\n 10572: a1 = u8 [a0 + 0x7]\n 10575: a3 = a3 << 0x8\n 10578: a3 = a3 | a4\n 10581: a5 = a5 << 0x10\n 10584: a1 = a1 << 0x18\n 10587: a1 = a1 | a5\n 10590: a1 = a1 | a3\n 10593: a1 = a1 << 0x20\n 10596: t1 = a1 | a2\n 10599: a1 = u8 [a0 + 0x19]\n 10602: a3 = u8 [a0 + 0x18]\n 10605: a4 = u8 [a0 + 0x1a]\n 10608: a5 = u8 [a0 + 0x1b]\n 10611: a1 = a1 << 0x8\n 10614: a1 = a1 | a3\n 10617: a4 = a4 << 0x10\n 10620: a5 = a5 << 0x18\n 10623: a4 = a4 | a5\n 10626: a1 = a1 | a4\n 10629: a3 = u8 [a0 + 0x1d]\n 10632: a4 = u8 [a0 + 0x1c]\n 10635: a5 = u8 [a0 + 0x1e]\n 10638: a2 = u8 [a0 + 0x1f]\n 10641: a3 = a3 << 0x8\n 10644: a3 = a3 | a4\n 10647: a5 = a5 << 0x10\n 10650: a2 = a2 << 0x18\n 10653: a2 = a2 | a5\n 10656: a2 = a2 | a3\n 10659: a2 = a2 << 0x20\n 10662: a3 = a2 | a1\n 10665: a1 = u8 [a0 + 0x9]\n 10668: a2 = u8 [a0 + 0x8]\n 10671: a4 = u8 [a0 + 0xa]\n 10674: a5 = u8 [a0 + 0xb]\n 10677: a1 = a1 << 0x8\n 10680: a1 = a1 | a2\n 10683: a4 = a4 << 0x10\n 10686: a5 = a5 << 0x18\n 10689: a4 = a4 | a5\n 10692: a1 = a1 | a4\n 10695: a2 = u8 [a0 + 0xd]\n 10698: a4 = u8 [a0 + 0xc]\n 10701: a5 = u8 [a0 + 0xe]\n 10704: a0 = u8 [a0 + 0xf]\n 10707: a2 = a2 << 0x8\n 10710: a2 = a2 | a4\n 10713: a5 = a5 << 0x10\n 10716: a0 = a0 << 0x18\n 10719: a0 = a0 | a5\n 10722: a0 = a0 | a2\n 10725: a0 = a0 << 0x20\n 10728: a0 = a0 | a1\n 10731: a1 = reverse a0\n 10733: a0 = reverse a3\n 10735: a2 = reverse t1\n 10737: a3 = reverse t0\n 10739: a2 = a2 | a3\n 10742: a3 = a0 | a1\n 10745: a3 = a3 | a2\n 10748: a3 = a3 >> 0x20\n 10751: a1 = a1 | a2\n 10754: a1 = a1 << 0x20\n 10757: a1 = a1 | a3\n 10760: jump @201 if a1 == 0\n      : @198 (gas: 1)\n 10763: trap\n      : @199 (gas: 3)\n 10764: a0 = 0\n 10766: a1 = 0\n 10768: ra = 174, jump @0\n      : @200 [@dyn 87] (gas: 7)\n 10774: i32 a1 = a0 + 0\n 10776: a0 = 0x1\n 10779: a2 = 0\n 10781: ecalli 13 // 'seal_return'\n 10783: i32 a0 = a0 + 0\n 10785: ra = 0xb0\n 10789: jump @0\n      : @201 (gas: 2)\n 10792: i32 a0 = a0 + 0\n 10794: ra = 176, jump @0\n      : @202 [@dyn 88] (gas: 6)\n 10800: i32 a1 = a0 + 0\n 10802: a0 = 0\n 10804: a2 = 0\n 10806: ra = 0xb2\n 10810: ecalli 13 // 'seal_return'\n 10812: fallthrough\n      : @203 [@dyn 89] (gas: 12)\n 10813: sp = sp + 0xffffffffffffff80\n 10816: u64 [sp + 0x78] = ra\n 10819: u64 [sp + 0x70] = s0\n 10822: s0 = sp + 0x80\n 10826: sp = sp & 0xffffffffffffffe0\n 10829: u64 [sp + 56] = 0\n 10832: u64 [sp + 48] = 0\n 10835: u64 [sp + 40] = 0\n 10838: u64 [sp + 32] = 0\n 10841: i32 a0 = sp + 0x20\n 10844: ecalli 16 // 'value_transferred'\n 10846: fallthrough\n      : @204 (gas: 8)\n 10847: a0 = u64 [sp + 0x30]\n 10850: a1 = u64 [sp + 0x38]\n 10853: a2 = u64 [sp + 0x28]\n 10856: a3 = u64 [sp + 0x20]\n 10859: a1 = a1 | a2\n 10862: a0 = a0 | a3\n 10865: a0 = a0 | a1\n 10868: jump @210 if a0 != 0\n      : @205 (gas: 2)\n 10872: a0 = i32 [0x20028]\n 10877: jump @210 if a0 <=u 35\n      : @206 (gas: 47)\n 10882: i32 a0 = sp + 0x40\n 10885: a1 = 0x4\n 10888: ecalli 3 // 'call_data_load'\n 10890: a1 = u64 [sp + 0x40]\n 10893: a0 = u64 [sp + 0x48]\n 10896: a2 = u64 [sp + 0x50]\n 10899: a3 = u64 [sp + 0x58]\n 10902: u64 [sp + 0x18] = a3\n 10905: u64 [sp + 0x10] = a2\n 10908: u64 [sp + 0x8] = a0\n 10911: a0 = sp\n 10913: u64 [sp] = a1\n 10915: ra = 0xb4\n 10919: sp = sp + 0xfffffffffffffae0\n 10923: u64 [sp + 0x518] = ra\n 10927: u64 [sp + 0x510] = s0\n 10931: u64 [sp + 0x508] = s1\n 10935: s0 = sp + 0x520\n 10939: sp = sp & 0xffffffffffffffe0\n 10942: a1 = u64 [a0 + 0x18]\n 10945: u64 [sp + 0x100] = a1\n 10949: a1 = u64 [a0 + 0x10]\n 10952: u64 [sp + 0x108] = a1\n 10956: a1 = u64 [a0 + 0x8]\n 10959: u64 [sp + 0x110] = a1\n 10963: a0 = u64 [a0]\n 10965: u64 [sp + 0x118] = a0\n 10969: i32 a0 = sp + 0x3a0\n 10973: ecalli 5 // 'caller'\n 10975: a0 = u64 [sp + 0x3a8]\n 10979: a1 = i32 [sp + 0x3b0]\n 10983: s1 = u64 [sp + 0x3a0]\n 10987: a0 = reverse a0\n 10989: a2 = a0 << 0x20\n 10992: a1 = reverse a1\n 10994: a1 = a1 >> 0x20\n 10997: a1 = a1 | a2\n 11000: u64 [sp + 0x198] = a1\n 11004: a0 = a0 >> 0x20\n 11007: a1 = reverse s1\n 11009: a1 = a1 << 0x20\n 11012: a0 = a0 | a1\n 11015: u64 [sp + 0x190] = a0\n 11019: a1 = 0x20\n 11022: a0 = 0\n 11024: ra = 0x1de\n 11028: jump @0\n      : @207 [@dyn 90] (gas: 3)\n 11031: a0 = 0x40\n 11034: a1 = 0x20\n 11037: ra = 182, jump @0\n      : @208 [@dyn 91] (gas: 100)\n 11043: a1 = u8 [a0 + 0x11]\n 11046: a2 = u8 [a0 + 0x10]\n 11049: a3 = u8 [a0 + 0x12]\n 11052: a4 = u8 [a0 + 0x13]\n 11055: a1 = a1 << 0x8\n 11058: a1 = a1 | a2\n 11061: a3 = a3 << 0x10\n 11064: a4 = a4 << 0x18\n 11067: a3 = a3 | a4\n 11070: a1 = a1 | a3\n 11073: a2 = u8 [a0 + 0x15]\n 11076: a3 = u8 [a0 + 0x14]\n 11079: a4 = u8 [a0 + 0x16]\n 11082: a5 = u8 [a0 + 0x17]\n 11085: a2 = a2 << 0x8\n 11088: a2 = a2 | a3\n 11091: a4 = a4 << 0x10\n 11094: a5 = a5 << 0x18\n 11097: a4 = a4 | a5\n 11100: a2 = a2 | a4\n 11103: a2 = a2 << 0x20\n 11106: t0 = a2 | a1\n 11109: a2 = u8 [a0 + 0x1]\n 11112: a3 = u8 [a0]\n 11114: a4 = u8 [a0 + 0x2]\n 11117: a5 = u8 [a0 + 0x3]\n 11120: a2 = a2 << 0x8\n 11123: a2 = a2 | a3\n 11126: a4 = a4 << 0x10\n 11129: a5 = a5 << 0x18\n 11132: a4 = a4 | a5\n 11135: a2 = a2 | a4\n 11138: a3 = u8 [a0 + 0x5]\n 11141: a4 = u8 [a0 + 0x4]\n 11144: a5 = u8 [a0 + 0x6]\n 11147: a1 = u8 [a0 + 0x7]\n 11150: a3 = a3 << 0x8\n 11153: a3 = a3 | a4\n 11156: a5 = a5 << 0x10\n 11159: a1 = a1 << 0x18\n 11162: a1 = a1 | a5\n 11165: a1 = a1 | a3\n 11168: a1 = a1 << 0x20\n 11171: t1 = a1 | a2\n 11174: a1 = u8 [a0 + 0x19]\n 11177: a3 = u8 [a0 + 0x18]\n 11180: a4 = u8 [a0 + 0x1a]\n 11183: a5 = u8 [a0 + 0x1b]\n 11186: a1 = a1 << 0x8\n 11189: a1 = a1 | a3\n 11192: a4 = a4 << 0x10\n 11195: a5 = a5 << 0x18\n 11198: a4 = a4 | a5\n 11201: a1 = a1 | a4\n 11204: a3 = u8 [a0 + 0x1d]\n 11207: a4 = u8 [a0 + 0x1c]\n 11210: a5 = u8 [a0 + 0x1e]\n 11213: a2 = u8 [a0 + 0x1f]\n 11216: a3 = a3 << 0x8\n 11219: a3 = a3 | a4\n 11222: a5 = a5 << 0x10\n 11225: a2 = a2 << 0x18\n 11228: a2 = a2 | a5\n 11231: a2 = a2 | a3\n 11234: a2 = a2 << 0x20\n 11237: a3 = a2 | a1\n 11240: a1 = u8 [a0 + 0x9]\n 11243: a2 = u8 [a0 + 0x8]\n 11246: a4 = u8 [a0 + 0xa]\n 11249: a5 = u8 [a0 + 0xb]\n 11252: a1 = a1 << 0x8\n 11255: a1 = a1 | a2\n 11258: a4 = a4 << 0x10\n 11261: a5 = a5 << 0x18\n 11264: a4 = a4 | a5\n 11267: a1 = a1 | a4\n 11270: a2 = u8 [a0 + 0xd]\n 11273: a4 = u8 [a0 + 0xc]\n 11276: a5 = u8 [a0 + 0xe]\n 11279: a0 = u8 [a0 + 0xf]\n 11282: a2 = a2 << 0x8\n 11285: a2 = a2 | a4\n 11288: a5 = a5 << 0x10\n 11291: a0 = a0 << 0x18\n 11294: a0 = a0 | a5\n 11297: a0 = a0 | a2\n 11300: a0 = a0 << 0x20\n 11303: a0 = a0 | a1\n 11306: a1 = reverse a0\n 11308: a0 = reverse a3\n 11310: a2 = reverse t1\n 11312: a3 = reverse t0\n 11314: a2 = a2 | a3\n 11317: a3 = a0 | a1\n 11320: a3 = a3 | a2\n 11323: a3 = a3 >> 0x20\n 11326: a1 = a1 | a2\n 11329: a1 = a1 << 0x20\n 11332: a1 = a1 | a3\n 11335: jump @212 if a1 == 0\n      : @209 (gas: 1)\n 11338: trap\n      : @210 (gas: 3)\n 11339: a0 = 0\n 11341: a1 = 0\n 11343: ra = 184, jump @0\n      : @211 [@dyn 92] (gas: 7)\n 11349: i32 a1 = a0 + 0\n 11351: a0 = 0x1\n 11354: a2 = 0\n 11356: ecalli 13 // 'seal_return'\n 11358: i32 a0 = a0 + 0\n 11360: ra = 0xba\n 11364: jump @0\n      : @212 (gas: 2)\n 11367: i32 a0 = a0 + 0\n 11369: ra = 186, jump @0\n      : @213 [@dyn 93] (gas: 6)\n 11375: i32 a1 = a0 + 0\n 11377: a0 = 0\n 11379: a2 = 0\n 11381: ra = 0xbc\n 11385: ecalli 13 // 'seal_return'\n 11387: fallthrough\n      : @214 [@dyn 94] (gas: 8)\n 11388: sp = sp + 0xffffffffffffffe0\n 11391: u64 [sp + 0x18] = ra\n 11394: u64 [sp + 0x10] = s0\n 11397: u64 [sp + 0x8] = s1\n 11400: s1 = 0x20020\n 11405: a1 = i32 [0x20020]\n 11410: s0 = a0\n 11412: jump @217 if a1 == 0\n      : @215 (gas: 6)\n 11415: a0 = 0x30030\n 11420: i32 a0 = a0 + 0\n 11422: u64 [sp] = a1\n 11424: i32 a1 = s1 + 0\n 11426: ecalli 7 // 'get_immutable_data'\n 11428: fallthrough\n      : @216 (gas: 4)\n 11429: a0 = i32 [0x20020]\n 11434: u32 [0x20020] = 0\n 11439: a1 = u64 [sp]\n 11441: jump @218 if a0 <u a1\n      : @217 (gas: 13)\n 11444: a1 = u64 [0x30048]\n 11449: a2 = u64 [0x30040]\n 11454: a3 = u64 [0x30038]\n 11459: a0 = u64 [0x30030]\n 11464: u64 [s0 + 0x18] = a1\n 11467: u64 [s0 + 0x10] = a2\n 11470: u64 [s0 + 0x8] = a3\n 11473: u64 [s0] = a0\n 11475: ra = u64 [sp + 0x18]\n 11478: s0 = u64 [sp + 0x10]\n 11481: s1 = u64 [sp + 0x8]\n 11484: sp = sp + 0x20\n 11487: ret\n      : @218 (gas: 1)\n 11489: trap\n      : @219 (gas: 8)\n 11490: a0 = u64 [sp + 0x30]\n 11493: a1 = u64 [sp + 0x38]\n 11496: a2 = u64 [sp + 0x28]\n 11499: a3 = u64 [sp + 0x20]\n 11502: a1 = a1 | a2\n 11505: a0 = a0 | a3\n 11508: a0 = a0 | a1\n 11511: jump @227 if a0 != 0\n      : @220 (gas: 2)\n 11515: a0 = i32 [0x20028]\n 11520: jump @227 if a0 <=u 3\n      : @221 (gas: 3)\n 11525: s1 = 0x20020\n 11530: a0 = i32 [0x20020]\n 11535: jump @224 if a0 == 0\n      : @222 (gas: 6)\n 11538: u64 [sp + 0x18] = a0\n 11541: a0 = 0x30030\n 11546: i32 a0 = a0 + 0\n 11548: i32 a1 = s1 + 0\n 11550: ecalli 7 // 'get_immutable_data'\n 11552: fallthrough\n      : @223 (gas: 4)\n 11553: a0 = i32 [0x20020]\n 11558: u32 [0x20020] = 0\n 11563: a1 = u64 [sp + 0x18]\n 11566: jump @226 if a0 <u a1\n      : @224 (gas: 9)\n 11570: a1 = u64 [0x30040]\n 11575: u64 [sp + 0x8] = a1\n 11578: a1 = u64 [0x30038]\n 11583: u64 [sp + 0x10] = a1\n 11586: a0 = u64 [0x30030]\n 11591: u64 [sp + 0x18] = a0\n 11594: a0 = 0x40\n 11597: a1 = 0x20\n 11600: ra = 190, jump @0\n      : @225 [@dyn 95] (gas: 100)\n 11606: a1 = u8 [a0 + 0x11]\n 11609: a2 = u8 [a0 + 0x10]\n 11612: a3 = u8 [a0 + 0x12]\n 11615: a4 = u8 [a0 + 0x13]\n 11618: a1 = a1 << 0x8\n 11621: a1 = a1 | a2\n 11624: a3 = a3 << 0x10\n 11627: a4 = a4 << 0x18\n 11630: a3 = a3 | a4\n 11633: a1 = a1 | a3\n 11636: a2 = u8 [a0 + 0x15]\n 11639: a3 = u8 [a0 + 0x14]\n 11642: a4 = u8 [a0 + 0x16]\n 11645: a5 = u8 [a0 + 0x17]\n 11648: a2 = a2 << 0x8\n 11651: a2 = a2 | a3\n 11654: a4 = a4 << 0x10\n 11657: a5 = a5 << 0x18\n 11660: a4 = a4 | a5\n 11663: a2 = a2 | a4\n 11666: a2 = a2 << 0x20\n 11669: t0 = a2 | a1\n 11672: a2 = u8 [a0 + 0x1]\n 11675: a3 = u8 [a0]\n 11677: a4 = u8 [a0 + 0x2]\n 11680: a5 = u8 [a0 + 0x3]\n 11683: a2 = a2 << 0x8\n 11686: a2 = a2 | a3\n 11689: a4 = a4 << 0x10\n 11692: a5 = a5 << 0x18\n 11695: a4 = a4 | a5\n 11698: a2 = a2 | a4\n 11701: a3 = u8 [a0 + 0x5]\n 11704: a4 = u8 [a0 + 0x4]\n 11707: a5 = u8 [a0 + 0x6]\n 11710: s1 = u8 [a0 + 0x7]\n 11713: a3 = a3 << 0x8\n 11716: a3 = a3 | a4\n 11719: a5 = a5 << 0x10\n 11722: s1 = s1 << 0x18\n 11725: a5 = a5 | s1\n 11728: a3 = a3 | a5\n 11731: a3 = a3 << 0x20\n 11734: a2 = a2 | a3\n 11737: a3 = u8 [a0 + 0x19]\n 11740: a4 = u8 [a0 + 0x18]\n 11743: a5 = u8 [a0 + 0x1a]\n 11746: s1 = u8 [a0 + 0x1b]\n 11749: a3 = a3 << 0x8\n 11752: a3 = a3 | a4\n 11755: a5 = a5 << 0x10\n 11758: s1 = s1 << 0x18\n 11761: a5 = a5 | s1\n 11764: a3 = a3 | a5\n 11767: a4 = u8 [a0 + 0x1d]\n 11770: a5 = u8 [a0 + 0x1c]\n 11773: s1 = u8 [a0 + 0x1e]\n 11776: a1 = u8 [a0 + 0x1f]\n 11779: a4 = a4 << 0x8\n 11782: a4 = a4 | a5\n 11785: s1 = s1 << 0x10\n 11788: a1 = a1 << 0x18\n 11791: a1 = a1 | s1\n 11794: a1 = a1 | a4\n 11797: a1 = a1 << 0x20\n 11800: a3 = a3 | a1\n 11803: a1 = u8 [a0 + 0x9]\n 11806: a4 = u8 [a0 + 0x8]\n 11809: a5 = u8 [a0 + 0xa]\n 11812: s1 = u8 [a0 + 0xb]\n 11815: a1 = a1 << 0x8\n 11818: a1 = a1 | a4\n 11821: a5 = a5 << 0x10\n 11824: s1 = s1 << 0x18\n 11827: a5 = a5 | s1\n 11830: a1 = a1 | a5\n 11833: a4 = u8 [a0 + 0xd]\n 11836: a5 = u8 [a0 + 0xc]\n 11839: s1 = u8 [a0 + 0xe]\n 11842: a0 = u8 [a0 + 0xf]\n 11845: a4 = a4 << 0x8\n 11848: a4 = a4 | a5\n 11851: s1 = s1 << 0x10\n 11854: a0 = a0 << 0x18\n 11857: a0 = a0 | s1\n 11860: a0 = a0 | a4\n 11863: a0 = a0 << 0x20\n 11866: a0 = a0 | a1\n 11869: a1 = reverse a0\n 11871: a0 = reverse a3\n 11873: a2 = reverse a2\n 11875: a3 = reverse t0\n 11877: a2 = a2 | a3\n 11880: a3 = a0 | a1\n 11883: a3 = a3 | a2\n 11886: a3 = a3 >> 0x20\n 11889: a1 = a1 | a2\n 11892: a1 = a1 << 0x20\n 11895: a1 = a1 | a3\n 11898: jump @229 if a1 == 0\n      : @226 (gas: 1)\n 11901: trap\n      : @227 (gas: 3)\n 11902: a0 = 0\n 11904: a1 = 0\n 11906: ra = 192, jump @0\n      : @228 [@dyn 96] (gas: 5)\n 11912: i32 a1 = a0 + 0\n 11914: a0 = 0x1\n 11917: a2 = 0\n 11919: ecalli 13 // 'seal_return'\n 11921: fallthrough\n      : @229 (gas: 7)\n 11922: a1 = u64 [sp + 0x8]\n 11925: a1 = a1 << 0x20\n 11928: s1 = a1 >> 0x20\n 11931: i32 a0 = a0 + 0\n 11933: u64 [sp + 0x8] = a0\n 11936: a1 = 0x20\n 11939: ra = 194, jump @0\n      : @230 [@dyn 97] (gas: 58)\n 11945: a1 = reverse s1\n 11947: a2 = u64 [sp + 0x10]\n 11950: a2 = reverse a2\n 11952: a3 = u64 [sp + 0x18]\n 11955: a3 = reverse a3\n 11957: a4 = a3 >> 0x38\n 11960: u8 [a0 + 0x1f] = a4\n 11963: a4 = a3 >> 0x30\n 11966: u8 [a0 + 0x1e] = a4\n 11969: a4 = a3 >> 0x28\n 11972: u8 [a0 + 0x1d] = a4\n 11975: a4 = a3 >> 0x20\n 11978: u8 [a0 + 0x1c] = a4\n 11981: a4 = a3 >> 0x18\n 11984: u8 [a0 + 0x1b] = a4\n 11987: a4 = a3 >> 0x10\n 11990: u8 [a0 + 0x1a] = a4\n 11993: a4 = a3 >> 0x8\n 11996: u8 [a0 + 0x19] = a4\n 11999: u8 [a0 + 0x18] = a3\n 12002: u8 [a0 + 0x10] = a2\n 12005: u8 [a0 + 11] = 0\n 12008: u8 [a0 + 10] = 0\n 12011: u8 [a0 + 9] = 0\n 12014: u8 [a0 + 7] = 0\n 12017: u8 [a0 + 6] = 0\n 12020: u8 [a0 + 5] = 0\n 12023: u8 [a0 + 4] = 0\n 12026: u8 [a0 + 3] = 0\n 12029: u8 [a0 + 2] = 0\n 12032: u8 [a0 + 1] = 0\n 12035: u8 [a0 + 0] = 0\n 12037: a3 = a2 >> 0x38\n 12040: u8 [a0 + 0x17] = a3\n 12043: a3 = a2 >> 0x30\n 12046: u8 [a0 + 0x16] = a3\n 12049: a3 = a2 >> 0x28\n 12052: u8 [a0 + 0x15] = a3\n 12055: a3 = a2 >> 0x20\n 12058: u8 [a0 + 0x14] = a3\n 12061: a3 = a2 >> 0x18\n 12064: u8 [a0 + 0x13] = a3\n 12067: a3 = a2 >> 0x10\n 12070: u8 [a0 + 0x12] = a3\n 12073: a2 = a2 >> 0x8\n 12076: u8 [a0 + 0x11] = a2\n 12079: u8 [a0 + 0x8] = a1\n 12082: a2 = a1 >> 0x38\n 12085: u8 [a0 + 0xf] = a2\n 12088: a2 = a1 >> 0x30\n 12091: u8 [a0 + 0xe] = a2\n 12094: a2 = a1 >> 0x28\n 12097: u8 [a0 + 0xd] = a2\n 12100: a1 = a1 >> 0x20\n 12103: u8 [a0 + 0xc] = a1\n 12106: a1 = 0x20\n 12109: a0 = u64 [sp + 0x8]\n 12112: ra = 196, jump @0\n      : @231 [@dyn 98] (gas: 6)\n 12118: i32 a1 = a0 + 0\n 12120: a2 = 0x20\n 12123: a0 = 0\n 12125: ra = 0xc6\n 12129: ecalli 13 // 'seal_return'\n 12131: fallthrough\n      : @232 [@dyn 99] (gas: 15)\n 12132: sp = sp + 0xffffffffffffff80\n 12135: u64 [sp + 0x78] = ra\n 12138: u64 [sp + 0x70] = s0\n 12141: u64 [sp + 0x68] = s1\n 12144: s0 = sp + 0x80\n 12148: sp = sp & 0xffffffffffffffe0\n 12151: a2 = u64 [a1]\n 12153: u64 [sp + 0x10] = a2\n 12156: a2 = u64 [a1 + 0x8]\n 12159: u64 [sp + 0x8] = a2\n 12162: s1 = u32 [a1 + 0x10]\n 12165: u64 [sp + 0x18] = a0\n 12168: a1 = 0x20\n 12171: a0 = 0\n 12173: ra = 200, jump @0\n      : @233 [@dyn 100] (gas: 58)\n 12179: a1 = reverse s1\n 12181: a2 = u64 [sp + 0x8]\n 12184: a2 = reverse a2\n 12186: a3 = u64 [sp + 0x10]\n 12189: a3 = reverse a3\n 12191: a4 = a3 >> 0x38\n 12194: u8 [a0 + 0x1f] = a4\n 12197: a4 = a3 >> 0x30\n 12200: u8 [a0 + 0x1e] = a4\n 12203: a4 = a3 >> 0x28\n 12206: u8 [a0 + 0x1d] = a4\n 12209: a4 = a3 >> 0x20\n 12212: u8 [a0 + 0x1c] = a4\n 12215: a4 = a3 >> 0x18\n 12218: u8 [a0 + 0x1b] = a4\n 12221: a4 = a3 >> 0x10\n 12224: u8 [a0 + 0x1a] = a4\n 12227: a4 = a3 >> 0x8\n 12230: u8 [a0 + 0x19] = a4\n 12233: u8 [a0 + 0x18] = a3\n 12236: a3 = a2 >> 0x38\n 12239: u8 [a0 + 0x17] = a3\n 12242: a3 = a2 >> 0x30\n 12245: u8 [a0 + 0x16] = a3\n 12248: a3 = a2 >> 0x28\n 12251: u8 [a0 + 0x15] = a3\n 12254: a3 = a2 >> 0x20\n 12257: u8 [a0 + 0x14] = a3\n 12260: a3 = a2 >> 0x18\n 12263: u8 [a0 + 0x13] = a3\n 12266: a3 = a2 >> 0x10\n 12269: u8 [a0 + 0x12] = a3\n 12272: a3 = a2 >> 0x8\n 12275: u8 [a0 + 0x11] = a3\n 12278: u8 [a0 + 0x10] = a2\n 12281: a2 = a1 >> 0x38\n 12284: u8 [a0 + 0xf] = a2\n 12287: a2 = a1 >> 0x30\n 12290: u8 [a0 + 0xe] = a2\n 12293: a2 = a1 >> 0x28\n 12296: u8 [a0 + 0xd] = a2\n 12299: a2 = a1 >> 0x20\n 12302: u8 [a0 + 0xc] = a2\n 12305: u8 [a0 + 11] = 0\n 12308: u8 [a0 + 10] = 0\n 12311: u8 [a0 + 9] = 0\n 12314: u8 [a0 + 0x8] = a1\n 12317: u8 [a0 + 7] = 0\n 12320: u8 [a0 + 6] = 0\n 12323: u8 [a0 + 5] = 0\n 12326: u8 [a0 + 4] = 0\n 12329: u8 [a0 + 3] = 0\n 12332: u8 [a0 + 2] = 0\n 12335: u8 [a0 + 1] = 0\n 12338: u8 [a0 + 0] = 0\n 12340: a0 = 0x20\n 12343: a1 = 0x20\n 12346: ra = 202, jump @0\n      : @234 [@dyn 101] (gas: 35)\n 12352: u8 [a0 + 31] = 0\n 12355: u8 [a0 + 30] = 0\n 12358: u8 [a0 + 29] = 0\n 12361: u8 [a0 + 28] = 0\n 12364: u8 [a0 + 27] = 0\n 12367: u8 [a0 + 26] = 0\n 12370: u8 [a0 + 25] = 0\n 12373: u8 [a0 + 24] = 0\n 12376: u8 [a0 + 23] = 0\n 12379: u8 [a0 + 22] = 0\n 12382: u8 [a0 + 21] = 0\n 12385: u8 [a0 + 20] = 0\n 12388: u8 [a0 + 19] = 0\n 12391: u8 [a0 + 18] = 0\n 12394: u8 [a0 + 17] = 0\n 12397: u8 [a0 + 16] = 0\n 12400: u8 [a0 + 15] = 0\n 12403: u8 [a0 + 14] = 0\n 12406: u8 [a0 + 13] = 0\n 12409: u8 [a0 + 12] = 0\n 12412: u8 [a0 + 11] = 0\n 12415: u8 [a0 + 10] = 0\n 12418: u8 [a0 + 9] = 0\n 12421: u8 [a0 + 8] = 0\n 12424: u8 [a0 + 7] = 0\n 12427: u8 [a0 + 6] = 0\n 12430: u8 [a0 + 5] = 0\n 12433: u8 [a0 + 4] = 0\n 12436: u8 [a0 + 3] = 0\n 12439: u8 [a0 + 2] = 0\n 12442: u8 [a0 + 1] = 0\n 12445: u8 [a0 + 0] = 0\n 12447: a1 = 0x40\n 12450: a0 = 0\n 12452: ra = 204, jump @0\n      : @235 [@dyn 102] (gas: 42)\n 12458: i32 a0 = a0 + 0\n 12460: i32 a2 = sp + 0x40\n 12463: a1 = 0x40\n 12466: ecalli 9 // 'hash_keccak_256'\n 12468: a0 = u64 [sp + 0x58]\n 12471: a1 = u64 [sp + 0x50]\n 12474: a2 = u64 [sp + 0x48]\n 12477: a3 = u64 [sp + 0x40]\n 12480: a0 = reverse a0\n 12482: a1 = reverse a1\n 12484: a2 = reverse a2\n 12486: a3 = reverse a3\n 12488: u64 [sp + 0x38] = a3\n 12491: u64 [sp + 0x30] = a2\n 12494: u64 [sp + 0x28] = a1\n 12497: u64 [sp + 0x20] = a0\n 12500: u64 [sp + 88] = 0\n 12503: u64 [sp + 80] = 0\n 12506: u64 [sp + 72] = 0\n 12509: u64 [sp + 64] = 0\n 12512: u32 [sp + 96] = 0x20\n 12516: i32 a1 = sp + 0x20\n 12519: i32 a3 = sp + 0x40\n 12522: i32 a4 = sp + 0x60\n 12525: a2 = 0xffffffffffffffff\n 12528: a0 = 0\n 12530: ecalli 8 // 'get_storage'\n 12532: a0 = u64 [sp + 0x58]\n 12535: a1 = u64 [sp + 0x50]\n 12538: a2 = u64 [sp + 0x48]\n 12541: a3 = u64 [sp + 0x40]\n 12544: a4 = u64 [sp + 0x18]\n 12547: u64 [a4 + 0x18] = a0\n 12550: u64 [a4 + 0x10] = a1\n 12553: u64 [a4 + 0x8] = a2\n 12556: u64 [a4] = a3\n 12558: sp = s0 + 0xffffffffffffff80\n 12561: ra = u64 [sp + 0x78]\n 12564: s0 = u64 [sp + 0x70]\n 12567: s1 = u64 [sp + 0x68]\n 12570: sp = sp + 0x80\n 12574: ret\n      : @236 (gas: 8)\n 12576: a0 = u64 [sp + 0x30]\n 12579: a1 = u64 [sp + 0x38]\n 12582: a2 = u64 [sp + 0x28]\n 12585: a3 = u64 [sp + 0x20]\n 12588: a1 = a1 | a2\n 12591: a0 = a0 | a3\n 12594: a0 = a0 | a1\n 12597: jump @246 if a0 != 0\n      : @237 (gas: 2)\n 12601: a0 = i32 [0x20028]\n 12606: jump @246 if a0 <=u 35\n      : @238 (gas: 4)\n 12611: i32 a0 = sp + 0x60\n 12614: a1 = 0x4\n 12617: ecalli 3 // 'call_data_load'\n 12619: fallthrough\n      : @239 (gas: 11)\n 12620: a1 = u64 [sp + 0x70]\n 12623: s1 = u64 [sp + 0x78]\n 12626: a0 = 0x100000000\n 12636: a0 = a0 ^ a1\n 12639: a0 = a0 | s1\n 12642: u64 [sp + 0x18] = a1\n 12645: a1 = a1 >> 0x20\n 12648: a1 = a1 <u 0x1\n 12651: a1 = 0 if s1 != 0\n 12653: a1 = 0 if a0 == 0\n 12655: jump @247 if a1 == 0\n      : @240 (gas: 7)\n 12659: a0 = u64 [sp + 0x68]\n 12662: u64 [sp + 0x8] = a0\n 12665: a0 = u64 [sp + 0x60]\n 12668: u64 [sp + 0x10] = a0\n 12671: a1 = 0x20\n 12674: a0 = 0\n 12676: ra = 206, jump @0\n      : @241 [@dyn 103] (gas: 70)\n 12682: a1 = reverse s1\n 12684: a2 = u64 [sp + 0x18]\n 12687: a2 = reverse a2\n 12689: a3 = u64 [sp + 0x8]\n 12692: a3 = reverse a3\n 12694: a4 = u64 [sp + 0x10]\n 12697: a4 = reverse a4\n 12699: a5 = a4 >> 0x38\n 12702: u8 [a0 + 0x1f] = a5\n 12705: a5 = a4 >> 0x30\n 12708: u8 [a0 + 0x1e] = a5\n 12711: a5 = a4 >> 0x28\n 12714: u8 [a0 + 0x1d] = a5\n 12717: a5 = a4 >> 0x20\n 12720: u8 [a0 + 0x1c] = a5\n 12723: a5 = a4 >> 0x18\n 12726: u8 [a0 + 0x1b] = a5\n 12729: a5 = a4 >> 0x10\n 12732: u8 [a0 + 0x1a] = a5\n 12735: a5 = a4 >> 0x8\n 12738: u8 [a0 + 0x19] = a5\n 12741: u8 [a0 + 0x18] = a4\n 12744: a4 = a3 >> 0x38\n 12747: u8 [a0 + 0x17] = a4\n 12750: a4 = a3 >> 0x30\n 12753: u8 [a0 + 0x16] = a4\n 12756: a4 = a3 >> 0x28\n 12759: u8 [a0 + 0x15] = a4\n 12762: a4 = a3 >> 0x20\n 12765: u8 [a0 + 0x14] = a4\n 12768: a4 = a3 >> 0x18\n 12771: u8 [a0 + 0x13] = a4\n 12774: a4 = a3 >> 0x10\n 12777: u8 [a0 + 0x12] = a4\n 12780: a4 = a3 >> 0x8\n 12783: u8 [a0 + 0x11] = a4\n 12786: u8 [a0 + 0x10] = a3\n 12789: u8 [a0 + 0x8] = a2\n 12792: a3 = a2 >> 0x38\n 12795: u8 [a0 + 0xf] = a3\n 12798: a3 = a2 >> 0x30\n 12801: u8 [a0 + 0xe] = a3\n 12804: a3 = a2 >> 0x28\n 12807: u8 [a0 + 0xd] = a3\n 12810: a3 = a2 >> 0x20\n 12813: u8 [a0 + 0xc] = a3\n 12816: a3 = a2 >> 0x18\n 12819: u8 [a0 + 0xb] = a3\n 12822: a3 = a2 >> 0x10\n 12825: u8 [a0 + 0xa] = a3\n 12828: a2 = a2 >> 0x8\n 12831: u8 [a0 + 0x9] = a2\n 12834: u8 [a0] = a1\n 12836: a2 = a1 >> 0x38\n 12839: u8 [a0 + 0x7] = a2\n 12842: a2 = a1 >> 0x30\n 12845: u8 [a0 + 0x6] = a2\n 12848: a2 = a1 >> 0x28\n 12851: u8 [a0 + 0x5] = a2\n 12854: a2 = a1 >> 0x20\n 12857: u8 [a0 + 0x4] = a2\n 12860: a2 = a1 >> 0x18\n 12863: u8 [a0 + 0x3] = a2\n 12866: a2 = a1 >> 0x10\n 12869: u8 [a0 + 0x2] = a2\n 12872: a1 = a1 >> 0x8\n 12875: u8 [a0 + 0x1] = a1\n 12878: a0 = 0x20\n 12881: a1 = 0x20\n 12884: ra = 208, jump @0\n      : @242 [@dyn 104] (gas: 35)\n 12890: u8 [a0 + 31] = 0\n 12893: u8 [a0 + 30] = 0\n 12896: u8 [a0 + 29] = 0\n 12899: u8 [a0 + 28] = 0\n 12902: u8 [a0 + 27] = 0\n 12905: u8 [a0 + 26] = 0\n 12908: u8 [a0 + 25] = 0\n 12911: u8 [a0 + 24] = 0\n 12914: u8 [a0 + 23] = 0\n 12917: u8 [a0 + 22] = 0\n 12920: u8 [a0 + 21] = 0\n 12923: u8 [a0 + 20] = 0\n 12926: u8 [a0 + 19] = 0\n 12929: u8 [a0 + 18] = 0\n 12932: u8 [a0 + 17] = 0\n 12935: u8 [a0 + 16] = 0\n 12938: u8 [a0 + 15] = 0\n 12941: u8 [a0 + 14] = 0\n 12944: u8 [a0 + 13] = 0\n 12947: u8 [a0 + 12] = 0\n 12950: u8 [a0 + 11] = 0\n 12953: u8 [a0 + 10] = 0\n 12956: u8 [a0 + 9] = 0\n 12959: u8 [a0 + 8] = 0\n 12962: u8 [a0 + 7] = 0\n 12965: u8 [a0 + 6] = 0\n 12968: u8 [a0 + 5] = 0\n 12971: u8 [a0 + 4] = 0\n 12974: u8 [a0 + 3] = 0\n 12977: u8 [a0 + 2] = 0\n 12980: u8 [a0 + 1] = 0\n 12983: u8 [a0 + 0] = 0\n 12985: a1 = 0x40\n 12988: a0 = 0\n 12990: ra = 210, jump @0\n      : @243 [@dyn 105] (gas: 38)\n 12996: i32 a0 = a0 + 0\n 12998: i32 a2 = sp + 0x60\n 13001: a1 = 0x40\n 13004: ecalli 9 // 'hash_keccak_256'\n 13006: a0 = u64 [sp + 0x78]\n 13009: a1 = u64 [sp + 0x70]\n 13012: a2 = u64 [sp + 0x68]\n 13015: a3 = u64 [sp + 0x60]\n 13018: a0 = reverse a0\n 13020: a1 = reverse a1\n 13022: a2 = reverse a2\n 13024: a3 = reverse a3\n 13026: u64 [sp + 0x58] = a3\n 13029: u64 [sp + 0x50] = a2\n 13032: u64 [sp + 0x48] = a1\n 13035: u64 [sp + 0x40] = a0\n 13038: u64 [sp + 120] = 0\n 13041: u64 [sp + 112] = 0\n 13044: u64 [sp + 104] = 0\n 13047: u64 [sp + 96] = 0\n 13050: u32 [sp + 128] = 0x20\n 13055: i32 a1 = sp + 0x40\n 13058: i32 a3 = sp + 0x60\n 13061: i32 a4 = sp + 0x80\n 13065: a2 = 0xffffffffffffffff\n 13068: a0 = 0\n 13070: ecalli 8 // 'get_storage'\n 13072: a0 = u64 [sp + 0x78]\n 13075: u64 [sp] = a0\n 13077: a0 = u64 [sp + 0x70]\n 13080: u64 [sp + 0x8] = a0\n 13083: a0 = u64 [sp + 0x68]\n 13086: u64 [sp + 0x10] = a0\n 13089: a0 = u64 [sp + 0x60]\n 13092: u64 [sp + 0x18] = a0\n 13095: a0 = 0x40\n 13098: a1 = 0x20\n 13101: ra = 212, jump @0\n      : @244 [@dyn 106] (gas: 100)\n 13107: a1 = u8 [a0 + 0x11]\n 13110: a2 = u8 [a0 + 0x10]\n 13113: a3 = u8 [a0 + 0x12]\n 13116: a4 = u8 [a0 + 0x13]\n 13119: a1 = a1 << 0x8\n 13122: a1 = a1 | a2\n 13125: a3 = a3 << 0x10\n 13128: a4 = a4 << 0x18\n 13131: a3 = a3 | a4\n 13134: a1 = a1 | a3\n 13137: a2 = u8 [a0 + 0x15]\n 13140: a3 = u8 [a0 + 0x14]\n 13143: a4 = u8 [a0 + 0x16]\n 13146: a5 = u8 [a0 + 0x17]\n 13149: a2 = a2 << 0x8\n 13152: a2 = a2 | a3\n 13155: a4 = a4 << 0x10\n 13158: a5 = a5 << 0x18\n 13161: a4 = a4 | a5\n 13164: a2 = a2 | a4\n 13167: a2 = a2 << 0x20\n 13170: t0 = a2 | a1\n 13173: a2 = u8 [a0 + 0x1]\n 13176: a3 = u8 [a0]\n 13178: a4 = u8 [a0 + 0x2]\n 13181: a5 = u8 [a0 + 0x3]\n 13184: a2 = a2 << 0x8\n 13187: a2 = a2 | a3\n 13190: a4 = a4 << 0x10\n 13193: a5 = a5 << 0x18\n 13196: a4 = a4 | a5\n 13199: a2 = a2 | a4\n 13202: a3 = u8 [a0 + 0x5]\n 13205: a4 = u8 [a0 + 0x4]\n 13208: a5 = u8 [a0 + 0x6]\n 13211: s1 = u8 [a0 + 0x7]\n 13214: a3 = a3 << 0x8\n 13217: a3 = a3 | a4\n 13220: a5 = a5 << 0x10\n 13223: s1 = s1 << 0x18\n 13226: a5 = a5 | s1\n 13229: a3 = a3 | a5\n 13232: a3 = a3 << 0x20\n 13235: a2 = a2 | a3\n 13238: a3 = u8 [a0 + 0x19]\n 13241: a4 = u8 [a0 + 0x18]\n 13244: a5 = u8 [a0 + 0x1a]\n 13247: s1 = u8 [a0 + 0x1b]\n 13250: a3 = a3 << 0x8\n 13253: a3 = a3 | a4\n 13256: a5 = a5 << 0x10\n 13259: s1 = s1 << 0x18\n 13262: a5 = a5 | s1\n 13265: a3 = a3 | a5\n 13268: a4 = u8 [a0 + 0x1d]\n 13271: a5 = u8 [a0 + 0x1c]\n 13274: s1 = u8 [a0 + 0x1e]\n 13277: a1 = u8 [a0 + 0x1f]\n 13280: a4 = a4 << 0x8\n 13283: a4 = a4 | a5\n 13286: s1 = s1 << 0x10\n 13289: a1 = a1 << 0x18\n 13292: a1 = a1 | s1\n 13295: a1 = a1 | a4\n 13298: a1 = a1 << 0x20\n 13301: a3 = a3 | a1\n 13304: a1 = u8 [a0 + 0x9]\n 13307: a4 = u8 [a0 + 0x8]\n 13310: a5 = u8 [a0 + 0xa]\n 13313: s1 = u8 [a0 + 0xb]\n 13316: a1 = a1 << 0x8\n 13319: a1 = a1 | a4\n 13322: a5 = a5 << 0x10\n 13325: s1 = s1 << 0x18\n 13328: a5 = a5 | s1\n 13331: a1 = a1 | a5\n 13334: a4 = u8 [a0 + 0xd]\n 13337: a5 = u8 [a0 + 0xc]\n 13340: s1 = u8 [a0 + 0xe]\n 13343: a0 = u8 [a0 + 0xf]\n 13346: a4 = a4 << 0x8\n 13349: a4 = a4 | a5\n 13352: s1 = s1 << 0x10\n 13355: a0 = a0 << 0x18\n 13358: a0 = a0 | s1\n 13361: a0 = a0 | a4\n 13364: a0 = a0 << 0x20\n 13367: a0 = a0 | a1\n 13370: a1 = reverse a0\n 13372: a0 = reverse a3\n 13374: a2 = reverse a2\n 13376: a3 = reverse t0\n 13378: a2 = a2 | a3\n 13381: a3 = a0 | a1\n 13384: a3 = a3 | a2\n 13387: a3 = a3 >> 0x20\n 13390: a1 = a1 | a2\n 13393: a1 = a1 << 0x20\n 13396: a1 = a1 | a3\n 13399: jump @249 if a1 == 0\n      : @245 (gas: 1)\n 13402: trap\n      : @246 (gas: 4)\n 13403: a0 = 0\n 13405: a1 = 0\n 13407: ra = 0xd6\n 13411: jump @0\n      : @247 (gas: 2)\n 13414: a0 = 0\n 13416: ra = 214, jump @0\n      : @248 [@dyn 107] (gas: 5)\n 13422: i32 a1 = a0 + 0\n 13424: a0 = 0x1\n 13427: a2 = 0\n 13429: ecalli 13 // 'seal_return'\n 13431: fallthrough\n      : @249 (gas: 4)\n 13432: i32 s1 = a0 + 0\n 13434: a1 = 0x20\n 13437: a0 = s1\n 13439: ra = 216, jump @0\n      : @250 [@dyn 108] (gas: 71)\n 13445: a1 = u64 [sp]\n 13447: a1 = reverse a1\n 13449: a2 = u64 [sp + 0x8]\n 13452: a2 = reverse a2\n 13454: a3 = u64 [sp + 0x10]\n 13457: a3 = reverse a3\n 13459: a4 = u64 [sp + 0x18]\n 13462: a4 = reverse a4\n 13464: a5 = a4 >> 0x38\n 13467: u8 [a0 + 0x1f] = a5\n 13470: a5 = a4 >> 0x30\n 13473: u8 [a0 + 0x1e] = a5\n 13476: a5 = a4 >> 0x28\n 13479: u8 [a0 + 0x1d] = a5\n 13482: a5 = a4 >> 0x20\n 13485: u8 [a0 + 0x1c] = a5\n 13488: a5 = a4 >> 0x18\n 13491: u8 [a0 + 0x1b] = a5\n 13494: a5 = a4 >> 0x10\n 13497: u8 [a0 + 0x1a] = a5\n 13500: a5 = a4 >> 0x8\n 13503: u8 [a0 + 0x19] = a5\n 13506: u8 [a0 + 0x18] = a4\n 13509: u8 [a0 + 0x10] = a3\n 13512: a4 = a3 >> 0x38\n 13515: u8 [a0 + 0x17] = a4\n 13518: a4 = a3 >> 0x30\n 13521: u8 [a0 + 0x16] = a4\n 13524: a4 = a3 >> 0x28\n 13527: u8 [a0 + 0x15] = a4\n 13530: a4 = a3 >> 0x20\n 13533: u8 [a0 + 0x14] = a4\n 13536: a4 = a3 >> 0x18\n 13539: u8 [a0 + 0x13] = a4\n 13542: a4 = a3 >> 0x10\n 13545: u8 [a0 + 0x12] = a4\n 13548: a3 = a3 >> 0x8\n 13551: u8 [a0 + 0x11] = a3\n 13554: u8 [a0 + 0x8] = a2\n 13557: a3 = a2 >> 0x38\n 13560: u8 [a0 + 0xf] = a3\n 13563: a3 = a2 >> 0x30\n 13566: u8 [a0 + 0xe] = a3\n 13569: a3 = a2 >> 0x28\n 13572: u8 [a0 + 0xd] = a3\n 13575: a3 = a2 >> 0x20\n 13578: u8 [a0 + 0xc] = a3\n 13581: a3 = a2 >> 0x18\n 13584: u8 [a0 + 0xb] = a3\n 13587: a3 = a2 >> 0x10\n 13590: u8 [a0 + 0xa] = a3\n 13593: a2 = a2 >> 0x8\n 13596: u8 [a0 + 0x9] = a2\n 13599: u8 [a0] = a1\n 13601: a2 = a1 >> 0x38\n 13604: u8 [a0 + 0x7] = a2\n 13607: a2 = a1 >> 0x30\n 13610: u8 [a0 + 0x6] = a2\n 13613: a2 = a1 >> 0x28\n 13616: u8 [a0 + 0x5] = a2\n 13619: a2 = a1 >> 0x20\n 13622: u8 [a0 + 0x4] = a2\n 13625: a2 = a1 >> 0x18\n 13628: u8 [a0 + 0x3] = a2\n 13631: a2 = a1 >> 0x10\n 13634: u8 [a0 + 0x2] = a2\n 13637: a1 = a1 >> 0x8\n 13640: u8 [a0 + 0x1] = a1\n 13643: a1 = 0x20\n 13646: a0 = s1\n 13648: ra = 218, jump @0\n      : @251 [@dyn 109] (gas: 6)\n 13654: i32 a1 = a0 + 0\n 13656: a2 = 0x20\n 13659: a0 = 0\n 13661: ra = 0xdc\n 13665: ecalli 13 // 'seal_return'\n 13667: fallthrough\n      : @252 [@dyn 110] (gas: 5)\n 13668: sp = sp + 0xfffffffffffffff8\n 13671: u64 [sp] = ra\n 13673: a0 = 0\n 13675: a1 = 0\n 13677: ra = 222, jump @0\n      : @253 [@dyn 111] (gas: 6)\n 13683: i32 a1 = a0 + 0\n 13685: a0 = 0x1\n 13688: a2 = 0\n 13690: ra = 0xe0\n 13694: ecalli 13 // 'seal_return'\n 13696: fallthrough\n      : @254 [@dyn 112] (gas: 9)\n 13697: a2 = u64 [a1 + 0x18]\n 13700: a3 = u64 [a1 + 0x10]\n 13703: a4 = u64 [a1 + 0x8]\n 13706: a1 = u64 [a1]\n 13708: u64 [a0 + 0x18] = a2\n 13711: u64 [a0 + 0x10] = a3\n 13714: u64 [a0 + 0x8] = a4\n 13717: u64 [a0] = a1\n 13719: ret\n      : @255 (gas: 17)\n 13721: sp = sp + 0xffffffffffffffa0\n 13724: u64 [sp + 0x58] = ra\n 13727: u64 [sp + 0x50] = s0\n 13730: u64 [sp + 0x48] = s1\n 13733: a3 = u64 [a1 + 0x18]\n 13736: a4 = u64 [a1 + 0x10]\n 13739: a5 = u64 [a1 + 0x8]\n 13742: s1 = u64 [a1]\n 13744: a1 = a5 | a3\n 13747: a2 = s1 | a4\n 13750: a2 = a2 | a1\n 13753: a2 = a2 >> 0x20\n 13756: a1 = a1 | a4\n 13759: a1 = a1 << 0x20\n 13762: a1 = a1 | a2\n 13765: u64 [sp + 0x28] = a0\n 13768: jump @262 if a1 != 0\n      : @256 (gas: 19)\n 13772: a0 = s1 + 0x20\n 13775: u64 [sp + 0x30] = a0\n 13778: a0 = a0 <u s1\n 13781: a1 = a5 + a0\n 13784: u64 [sp + 0x40] = a1\n 13787: u64 [sp + 0x8] = a5\n 13790: s0 = a1 <u a5\n 13793: s0 = a0 if a0 == 0\n 13796: s0 = s0 + a4\n 13799: u64 [sp + 0x10] = a4\n 13802: a0 = s0 <u a4\n 13805: u64 [sp + 0x18] = a3\n 13808: a0 = a0 + a3\n 13811: u64 [sp + 0x38] = a0\n 13814: u64 [sp] = s1\n 13816: i32 a0 = s1 + 0\n 13818: a1 = 0x20\n 13821: s1 = 0x20\n 13824: ra = 226, jump @0\n      : @257 [@dyn 113] (gas: 45)\n 13830: u8 [a0 + 0x1f] = s1\n 13833: a1 = u64 [sp + 0x30]\n 13836: s1 = a1\n 13838: a1 = a1 | s0\n 13841: a2 = u64 [sp + 0x40]\n 13844: a4 = u64 [sp + 0x38]\n 13847: a2 = a2 | a4\n 13850: a1 = a1 | a2\n 13853: a1 = a1 >> 0x20\n 13856: u64 [sp + 0x20] = s0\n 13859: a2 = a2 | s0\n 13862: a2 = a2 << 0x20\n 13865: a1 = a1 | a2\n 13868: u8 [a0 + 30] = 0\n 13871: u8 [a0 + 29] = 0\n 13874: u8 [a0 + 28] = 0\n 13877: u8 [a0 + 27] = 0\n 13880: u8 [a0 + 26] = 0\n 13883: u8 [a0 + 25] = 0\n 13886: u8 [a0 + 24] = 0\n 13889: u8 [a0 + 23] = 0\n 13892: u8 [a0 + 22] = 0\n 13895: u8 [a0 + 21] = 0\n 13898: u8 [a0 + 20] = 0\n 13901: u8 [a0 + 19] = 0\n 13904: u8 [a0 + 18] = 0\n 13907: u8 [a0 + 17] = 0\n 13910: u8 [a0 + 16] = 0\n 13913: u8 [a0 + 15] = 0\n 13916: u8 [a0 + 14] = 0\n 13919: u8 [a0 + 13] = 0\n 13922: u8 [a0 + 12] = 0\n 13925: u8 [a0 + 11] = 0\n 13928: u8 [a0 + 10] = 0\n 13931: u8 [a0 + 9] = 0\n 13934: u8 [a0 + 8] = 0\n 13937: u8 [a0 + 7] = 0\n 13940: u8 [a0 + 6] = 0\n 13943: u8 [a0 + 5] = 0\n 13946: u8 [a0 + 4] = 0\n 13949: u8 [a0 + 3] = 0\n 13952: u8 [a0 + 2] = 0\n 13955: u8 [a0 + 1] = 0\n 13958: u8 [a0 + 0] = 0\n 13960: jump @262 if a1 != 0\n      : @258 (gas: 4)\n 13964: i32 s0 = s1 + 0\n 13966: a1 = 0x20\n 13969: a0 = s0\n 13971: ra = 228, jump @0\n      : @259 [@dyn 114] (gas: 41)\n 13977: u8 [a0 + 31] = 0x19\n 13981: u8 [a0 + 30] = 0\n 13984: u8 [a0 + 29] = 0\n 13987: u8 [a0 + 28] = 0\n 13990: u8 [a0 + 27] = 0\n 13993: u8 [a0 + 26] = 0\n 13996: u8 [a0 + 25] = 0\n 13999: u8 [a0 + 24] = 0\n 14002: u8 [a0 + 23] = 0\n 14005: u8 [a0 + 22] = 0\n 14008: u8 [a0 + 21] = 0\n 14011: u8 [a0 + 20] = 0\n 14014: u8 [a0 + 19] = 0\n 14017: u8 [a0 + 18] = 0\n 14020: u8 [a0 + 17] = 0\n 14023: u8 [a0 + 16] = 0\n 14026: u8 [a0 + 15] = 0\n 14029: u8 [a0 + 14] = 0\n 14032: u8 [a0 + 13] = 0\n 14035: u8 [a0 + 12] = 0\n 14038: u8 [a0 + 11] = 0\n 14041: u8 [a0 + 10] = 0\n 14044: u8 [a0 + 9] = 0\n 14047: u8 [a0 + 8] = 0\n 14050: u8 [a0 + 7] = 0\n 14053: u8 [a0 + 6] = 0\n 14056: u8 [a0 + 5] = 0\n 14059: u8 [a0 + 4] = 0\n 14062: u8 [a0 + 3] = 0\n 14065: u8 [a0 + 2] = 0\n 14068: u8 [a0 + 1] = 0\n 14071: a1 = u64 [sp + 0x20]\n 14074: a2 = u64 [sp + 0x38]\n 14077: a1 = a1 | a2\n 14080: a2 = 0xffffffe0\n 14090: a2 = s1 <u a2\n 14093: a3 = u64 [sp + 0x40]\n 14096: a2 = 0 if a3 != 0\n 14098: a2 = 0 if a1 != 0\n 14100: u8 [a0 + 0] = 0\n 14102: jump @262 if a2 == 0\n      : @260 (gas: 3)\n 14106: i32 a0 = s0 + 0x20\n 14109: a1 = 0x20\n 14112: ra = 230, jump @0\n      : @261 [@dyn 115] (gas: 55)\n 14118: u8 [a0 + 31] = 0\n 14121: u8 [a0 + 30] = 0\n 14124: u8 [a0 + 29] = 0\n 14127: u8 [a0 + 28] = 0\n 14130: u8 [a0 + 27] = 0\n 14133: u8 [a0 + 26] = 0\n 14136: u8 [a0 + 25] = 0\n 14139: u8 [a0 + 24] = 0x73\n 14143: u8 [a0 + 23] = 0x74\n 14147: u8 [a0 + 22] = 0x73\n 14151: u8 [a0 + 21] = 0x69\n 14155: u8 [a0 + 20] = 0x78\n 14159: u8 [a0 + 19] = 0x65\n 14163: u8 [a0 + 18] = 0x20\n 14167: u8 [a0 + 17] = 0x77\n 14171: u8 [a0 + 16] = 0x6f\n 14175: a5 = 0x72\n 14178: u8 [a0 + 0xf] = a5\n 14181: u8 [a0 + 0xe] = a5\n 14184: u8 [a0 + 13] = 0x6f\n 14188: u8 [a0 + 12] = 0x62\n 14192: u8 [a0 + 11] = 0x20\n 14196: u8 [a0 + 10] = 0x67\n 14200: u8 [a0 + 9] = 0x6e\n 14204: u8 [a0 + 8] = 0x69\n 14208: u8 [a0 + 7] = 0x64\n 14212: u8 [a0 + 6] = 0x6e\n 14216: u8 [a0 + 5] = 0x61\n 14220: u8 [a0 + 4] = 0x74\n 14224: u8 [a0 + 3] = 0x73\n 14228: u8 [a0 + 2] = 0x74\n 14232: u8 [a0 + 1] = 0x75\n 14236: u8 [a0 + 0] = 0x4f\n 14239: a1 = u64 [sp]\n 14241: a0 = a1 + 0x60\n 14244: a1 = a0 <u a1\n 14247: a3 = u64 [sp + 0x8]\n 14250: a2 = a3 + a1\n 14253: a3 = a2 <u a3\n 14256: a3 = a1 if a1 == 0\n 14259: a1 = u64 [sp + 0x10]\n 14262: a3 = a3 + a1\n 14265: a1 = a3 <u a1\n 14268: a4 = u64 [sp + 0x18]\n 14271: a1 = a1 + a4\n 14274: a4 = u64 [sp + 0x28]\n 14277: u64 [a4] = a0\n 14279: u64 [a4 + 0x8] = a2\n 14282: u64 [a4 + 0x10] = a3\n 14285: u64 [a4 + 0x18] = a1\n 14288: ra = u64 [sp + 0x58]\n 14291: s0 = u64 [sp + 0x50]\n 14294: s1 = u64 [sp + 0x48]\n 14297: sp = sp + 0x60\n 14300: ret\n      : @262 (gas: 1)\n 14302: trap\n      : @263 (gas: 17)\n 14303: sp = sp + 0xffffffffffffffa0\n 14306: u64 [sp + 0x58] = ra\n 14309: u64 [sp + 0x50] = s0\n 14312: u64 [sp + 0x48] = s1\n 14315: a3 = u64 [a1 + 0x18]\n 14318: a4 = u64 [a1 + 0x10]\n 14321: a5 = u64 [a1 + 0x8]\n 14324: s1 = u64 [a1]\n 14326: a1 = a5 | a3\n 14329: a2 = s1 | a4\n 14332: a2 = a2 | a1\n 14335: a2 = a2 >> 0x20\n 14338: a1 = a1 | a4\n 14341: a1 = a1 << 0x20\n 14344: a1 = a1 | a2\n 14347: u64 [sp + 0x28] = a0\n 14350: jump @270 if a1 != 0\n      : @264 (gas: 19)\n 14354: a0 = s1 + 0x20\n 14357: u64 [sp + 0x30] = a0\n 14360: a0 = a0 <u s1\n 14363: a1 = a5 + a0\n 14366: u64 [sp + 0x40] = a1\n 14369: u64 [sp + 0x8] = a5\n 14372: s0 = a1 <u a5\n 14375: s0 = a0 if a0 == 0\n 14378: s0 = s0 + a4\n 14381: u64 [sp + 0x10] = a4\n 14384: a0 = s0 <u a4\n 14387: u64 [sp + 0x18] = a3\n 14390: a0 = a0 + a3\n 14393: u64 [sp + 0x38] = a0\n 14396: u64 [sp] = s1\n 14398: i32 a0 = s1 + 0\n 14400: a1 = 0x20\n 14403: s1 = 0x20\n 14406: ra = 232, jump @0\n      : @265 [@dyn 116] (gas: 45)\n 14412: u8 [a0 + 0x1f] = s1\n 14415: a1 = u64 [sp + 0x30]\n 14418: s1 = a1\n 14420: a1 = a1 | s0\n 14423: a2 = u64 [sp + 0x40]\n 14426: a4 = u64 [sp + 0x38]\n 14429: a2 = a2 | a4\n 14432: a1 = a1 | a2\n 14435: a1 = a1 >> 0x20\n 14438: u64 [sp + 0x20] = s0\n 14441: a2 = a2 | s0\n 14444: a2 = a2 << 0x20\n 14447: a1 = a1 | a2\n 14450: u8 [a0 + 30] = 0\n 14453: u8 [a0 + 29] = 0\n 14456: u8 [a0 + 28] = 0\n 14459: u8 [a0 + 27] = 0\n 14462: u8 [a0 + 26] = 0\n 14465: u8 [a0 + 25] = 0\n 14468: u8 [a0 + 24] = 0\n 14471: u8 [a0 + 23] = 0\n 14474: u8 [a0 + 22] = 0\n 14477: u8 [a0 + 21] = 0\n 14480: u8 [a0 + 20] = 0\n 14483: u8 [a0 + 19] = 0\n 14486: u8 [a0 + 18] = 0\n 14489: u8 [a0 + 17] = 0\n 14492: u8 [a0 + 16] = 0\n 14495: u8 [a0 + 15] = 0\n 14498: u8 [a0 + 14] = 0\n 14501: u8 [a0 + 13] = 0\n 14504: u8 [a0 + 12] = 0\n 14507: u8 [a0 + 11] = 0\n 14510: u8 [a0 + 10] = 0\n 14513: u8 [a0 + 9] = 0\n 14516: u8 [a0 + 8] = 0\n 14519: u8 [a0 + 7] = 0\n 14522: u8 [a0 + 6] = 0\n 14525: u8 [a0 + 5] = 0\n 14528: u8 [a0 + 4] = 0\n 14531: u8 [a0 + 3] = 0\n 14534: u8 [a0 + 2] = 0\n 14537: u8 [a0 + 1] = 0\n 14540: u8 [a0 + 0] = 0\n 14542: jump @270 if a1 != 0\n      : @266 (gas: 4)\n 14546: i32 s0 = s1 + 0\n 14548: a1 = 0x20\n 14551: a0 = s0\n 14553: ra = 234, jump @0\n      : @267 [@dyn 117] (gas: 41)\n 14559: u8 [a0 + 31] = 0x18\n 14563: u8 [a0 + 30] = 0\n 14566: u8 [a0 + 29] = 0\n 14569: u8 [a0 + 28] = 0\n 14572: u8 [a0 + 27] = 0\n 14575: u8 [a0 + 26] = 0\n 14578: u8 [a0 + 25] = 0\n 14581: u8 [a0 + 24] = 0\n 14584: u8 [a0 + 23] = 0\n 14587: u8 [a0 + 22] = 0\n 14590: u8 [a0 + 21] = 0\n 14593: u8 [a0 + 20] = 0\n 14596: u8 [a0 + 19] = 0\n 14599: u8 [a0 + 18] = 0\n 14602: u8 [a0 + 17] = 0\n 14605: u8 [a0 + 16] = 0\n 14608: u8 [a0 + 15] = 0\n 14611: u8 [a0 + 14] = 0\n 14614: u8 [a0 + 13] = 0\n 14617: u8 [a0 + 12] = 0\n 14620: u8 [a0 + 11] = 0\n 14623: u8 [a0 + 10] = 0\n 14626: u8 [a0 + 9] = 0\n 14629: u8 [a0 + 8] = 0\n 14632: u8 [a0 + 7] = 0\n 14635: u8 [a0 + 6] = 0\n 14638: u8 [a0 + 5] = 0\n 14641: u8 [a0 + 4] = 0\n 14644: u8 [a0 + 3] = 0\n 14647: u8 [a0 + 2] = 0\n 14650: u8 [a0 + 1] = 0\n 14653: a1 = u64 [sp + 0x20]\n 14656: a2 = u64 [sp + 0x38]\n 14659: a1 = a1 | a2\n 14662: a2 = 0xffffffe0\n 14672: a2 = s1 <u a2\n 14675: a3 = u64 [sp + 0x40]\n 14678: a2 = 0 if a3 != 0\n 14680: a2 = 0 if a1 != 0\n 14682: u8 [a0 + 0] = 0\n 14684: jump @270 if a2 == 0\n      : @268 (gas: 3)\n 14688: i32 a0 = s0 + 0x20\n 14691: a1 = 0x20\n 14694: ra = 236, jump @0\n      : @269 [@dyn 118] (gas: 55)\n 14700: u8 [a0 + 31] = 0\n 14703: u8 [a0 + 30] = 0\n 14706: u8 [a0 + 29] = 0\n 14709: u8 [a0 + 28] = 0\n 14712: u8 [a0 + 27] = 0\n 14715: u8 [a0 + 26] = 0\n 14718: u8 [a0 + 25] = 0\n 14721: u8 [a0 + 24] = 0\n 14724: u8 [a0 + 23] = 0x74\n 14728: u8 [a0 + 22] = 0x69\n 14732: u8 [a0 + 21] = 0x73\n 14736: u8 [a0 + 20] = 0x6f\n 14740: u8 [a0 + 19] = 0x70\n 14744: u8 [a0 + 18] = 0x65\n 14748: a5 = 0x64\n 14751: u8 [a0 + 0x11] = a5\n 14754: u8 [a0 + 16] = 0x20\n 14758: u8 [a0 + 15] = 0x73\n 14762: u8 [a0 + 0xe] = a5\n 14765: u8 [a0 + 13] = 0x65\n 14769: u8 [a0 + 12] = 0x65\n 14773: u8 [a0 + 11] = 0x63\n 14777: u8 [a0 + 10] = 0x78\n 14781: u8 [a0 + 9] = 0x65\n 14785: u8 [a0 + 8] = 0x20\n 14789: u8 [a0 + 7] = 0x77\n 14793: u8 [a0 + 6] = 0x61\n 14797: u8 [a0 + 5] = 0x72\n 14801: u8 [a0 + 0x4] = a5\n 14804: u8 [a0 + 3] = 0x68\n 14808: u8 [a0 + 2] = 0x74\n 14812: u8 [a0 + 1] = 0x69\n 14816: u8 [a0 + 0] = 0x57\n 14819: a1 = u64 [sp]\n 14821: a0 = a1 + 0x60\n 14824: a1 = a0 <u a1\n 14827: a3 = u64 [sp + 0x8]\n 14830: a2 = a3 + a1\n 14833: a3 = a2 <u a3\n 14836: a3 = a1 if a1 == 0\n 14839: a1 = u64 [sp + 0x10]\n 14842: a3 = a3 + a1\n 14845: a1 = a3 <u a1\n 14848: a4 = u64 [sp + 0x18]\n 14851: a1 = a1 + a4\n 14854: a4 = u64 [sp + 0x28]\n 14857: u64 [a4] = a0\n 14859: u64 [a4 + 0x8] = a2\n 14862: u64 [a4 + 0x10] = a3\n 14865: u64 [a4 + 0x18] = a1\n 14868: ra = u64 [sp + 0x58]\n 14871: s0 = u64 [sp + 0x50]\n 14874: s1 = u64 [sp + 0x48]\n 14877: sp = sp + 0x60\n 14880: ret\n      : @270 (gas: 1)\n 14882: trap\n      : @271 (gas: 12)\n 14883: a2 = u64 [a1 + 0x10]\n 14886: a3 = u64 [a1 + 0x18]\n 14889: a4 = u64 [a1 + 0x8]\n 14892: a1 = u64 [a1]\n 14894: a3 = a3 | a4\n 14897: a4 = a1 | a2\n 14900: a4 = a4 | a3\n 14903: a4 = a4 >> 0x20\n 14906: a2 = a2 | a3\n 14909: a2 = a2 << 0x20\n 14912: a2 = a2 | a4\n 14915: jump @274 if a2 != 0\n      : @272 (gas: 13)\n 14919: sp = sp + 0xffffffffffffffe0\n 14922: u64 [sp + 0x18] = ra\n 14925: u64 [sp + 0x10] = s0\n 14928: u64 [sp + 0x8] = s1\n 14931: a2 = u64 [a0 + 0x10]\n 14934: a3 = u64 [a0 + 0x8]\n 14937: u64 [sp] = a3\n 14939: s1 = u64 [a0]\n 14941: a2 = a2 << 0x20\n 14944: s0 = a2 >> 0x20\n 14947: i32 a0 = a1 + 0\n 14949: a1 = 0x20\n 14952: ra = 238, jump @0\n      : @273 [@dyn 119] (gas: 59)\n 14958: a1 = reverse s0\n 14960: a2 = u64 [sp]\n 14962: a2 = reverse a2\n 14964: a3 = reverse s1\n 14966: a4 = a3 >> 0x38\n 14969: u8 [a0 + 0x1f] = a4\n 14972: a4 = a3 >> 0x30\n 14975: u8 [a0 + 0x1e] = a4\n 14978: a4 = a3 >> 0x28\n 14981: u8 [a0 + 0x1d] = a4\n 14984: a4 = a3 >> 0x20\n 14987: u8 [a0 + 0x1c] = a4\n 14990: a4 = a3 >> 0x18\n 14993: u8 [a0 + 0x1b] = a4\n 14996: a4 = a3 >> 0x10\n 14999: u8 [a0 + 0x1a] = a4\n 15002: a4 = a3 >> 0x8\n 15005: u8 [a0 + 0x19] = a4\n 15008: u8 [a0 + 0x18] = a3\n 15011: u8 [a0 + 0x10] = a2\n 15014: u8 [a0 + 11] = 0\n 15017: u8 [a0 + 10] = 0\n 15020: u8 [a0 + 9] = 0\n 15023: u8 [a0 + 7] = 0\n 15026: u8 [a0 + 6] = 0\n 15029: u8 [a0 + 5] = 0\n 15032: u8 [a0 + 4] = 0\n 15035: u8 [a0 + 3] = 0\n 15038: u8 [a0 + 2] = 0\n 15041: u8 [a0 + 1] = 0\n 15044: u8 [a0 + 0] = 0\n 15046: a3 = a2 >> 0x38\n 15049: u8 [a0 + 0x17] = a3\n 15052: a3 = a2 >> 0x30\n 15055: u8 [a0 + 0x16] = a3\n 15058: a3 = a2 >> 0x28\n 15061: u8 [a0 + 0x15] = a3\n 15064: a3 = a2 >> 0x20\n 15067: u8 [a0 + 0x14] = a3\n 15070: a3 = a2 >> 0x18\n 15073: u8 [a0 + 0x13] = a3\n 15076: a3 = a2 >> 0x10\n 15079: u8 [a0 + 0x12] = a3\n 15082: a2 = a2 >> 0x8\n 15085: u8 [a0 + 0x11] = a2\n 15088: u8 [a0 + 0x8] = a1\n 15091: a2 = a1 >> 0x38\n 15094: u8 [a0 + 0xf] = a2\n 15097: a2 = a1 >> 0x30\n 15100: u8 [a0 + 0xe] = a2\n 15103: a2 = a1 >> 0x28\n 15106: u8 [a0 + 0xd] = a2\n 15109: a1 = a1 >> 0x20\n 15112: u8 [a0 + 0xc] = a1\n 15115: ra = u64 [sp + 0x18]\n 15118: s0 = u64 [sp + 0x10]\n 15121: s1 = u64 [sp + 0x8]\n 15124: sp = sp + 0x20\n 15127: ret\n      : @274 (gas: 1)\n 15129: trap\n      : @275 (gas: 9)\n 15130: sp = sp + 0xffffffffffffffc0\n 15133: u64 [sp + 0x38] = ra\n 15136: u64 [sp + 0x30] = s0\n 15139: u64 [sp + 0x28] = s1\n 15142: s0 = sp + 0x40\n 15145: sp = sp & 0xffffffffffffffe0\n 15148: a0 = 0x40\n 15151: a1 = 0x20\n 15154: ra = 240, jump @0\n      : @276 [@dyn 120] (gas: 97)\n 15160: a1 = u8 [a0 + 0x11]\n 15163: a2 = u8 [a0 + 0x10]\n 15166: a3 = u8 [a0 + 0x12]\n 15169: a4 = u8 [a0 + 0x13]\n 15172: a1 = a1 << 0x8\n 15175: a1 = a1 | a2\n 15178: a3 = a3 << 0x10\n 15181: a4 = a4 << 0x18\n 15184: a3 = a3 | a4\n 15187: a1 = a1 | a3\n 15190: a2 = u8 [a0 + 0x15]\n 15193: a3 = u8 [a0 + 0x14]\n 15196: a4 = u8 [a0 + 0x16]\n 15199: a5 = u8 [a0 + 0x17]\n 15202: a2 = a2 << 0x8\n 15205: a2 = a2 | a3\n 15208: a4 = a4 << 0x10\n 15211: a5 = a5 << 0x18\n 15214: a4 = a4 | a5\n 15217: a2 = a2 | a4\n 15220: a2 = a2 << 0x20\n 15223: t0 = a2 | a1\n 15226: a2 = u8 [a0 + 0x1]\n 15229: a3 = u8 [a0]\n 15231: a4 = u8 [a0 + 0x2]\n 15234: a5 = u8 [a0 + 0x3]\n 15237: a2 = a2 << 0x8\n 15240: a2 = a2 | a3\n 15243: a4 = a4 << 0x10\n 15246: a5 = a5 << 0x18\n 15249: a4 = a4 | a5\n 15252: a2 = a2 | a4\n 15255: a3 = u8 [a0 + 0x5]\n 15258: a4 = u8 [a0 + 0x4]\n 15261: a5 = u8 [a0 + 0x6]\n 15264: s1 = u8 [a0 + 0x7]\n 15267: a3 = a3 << 0x8\n 15270: a3 = a3 | a4\n 15273: a5 = a5 << 0x10\n 15276: s1 = s1 << 0x18\n 15279: a5 = a5 | s1\n 15282: a3 = a3 | a5\n 15285: a3 = a3 << 0x20\n 15288: a2 = a2 | a3\n 15291: a3 = u8 [a0 + 0x19]\n 15294: a4 = u8 [a0 + 0x18]\n 15297: a5 = u8 [a0 + 0x1a]\n 15300: s1 = u8 [a0 + 0x1b]\n 15303: a3 = a3 << 0x8\n 15306: a3 = a3 | a4\n 15309: a5 = a5 << 0x10\n 15312: s1 = s1 << 0x18\n 15315: a5 = a5 | s1\n 15318: a3 = a3 | a5\n 15321: a4 = u8 [a0 + 0x1d]\n 15324: a5 = u8 [a0 + 0x1c]\n 15327: s1 = u8 [a0 + 0x1e]\n 15330: a1 = u8 [a0 + 0x1f]\n 15333: a4 = a4 << 0x8\n 15336: a4 = a4 | a5\n 15339: s1 = s1 << 0x10\n 15342: a1 = a1 << 0x18\n 15345: a1 = a1 | s1\n 15348: a1 = a1 | a4\n 15351: a1 = a1 << 0x20\n 15354: a3 = a3 | a1\n 15357: a1 = u8 [a0 + 0x9]\n 15360: a4 = u8 [a0 + 0x8]\n 15363: a5 = u8 [a0 + 0xa]\n 15366: s1 = u8 [a0 + 0xb]\n 15369: a1 = a1 << 0x8\n 15372: a1 = a1 | a4\n 15375: a5 = a5 << 0x10\n 15378: s1 = s1 << 0x18\n 15381: a5 = a5 | s1\n 15384: a1 = a1 | a5\n 15387: a4 = u8 [a0 + 0xd]\n 15390: a5 = u8 [a0 + 0xc]\n 15393: s1 = u8 [a0 + 0xe]\n 15396: a0 = u8 [a0 + 0xf]\n 15399: a4 = a4 << 0x8\n 15402: a4 = a4 | a5\n 15405: s1 = s1 << 0x10\n 15408: a0 = a0 << 0x18\n 15411: a0 = a0 | s1\n 15414: a0 = a0 | a4\n 15417: a0 = a0 << 0x20\n 15420: a0 = a0 | a1\n 15423: s1 = reverse a0\n 15425: a0 = reverse a3\n 15427: u64 [sp + 0x8] = a0\n 15430: a0 = reverse a2\n 15432: u64 [sp + 0x18] = a0\n 15435: a0 = reverse t0\n 15437: u64 [sp + 0x10] = a0\n 15440: ecalli 12 // 'return_data_size'\n 15442: fallthrough\n      : @277 (gas: 11)\n 15443: a3 = u64 [sp + 0x8]\n 15446: a1 = u64 [sp + 0x18]\n 15449: a2 = u64 [sp + 0x10]\n 15452: a1 = a1 | a2\n 15455: a2 = a3 | s1\n 15458: a2 = a2 | a1\n 15461: a2 = a2 >> 0x20\n 15464: a1 = a1 | s1\n 15467: a1 = a1 << 0x20\n 15470: a1 = a1 | a2\n 15473: jump @284 if a1 != 0\n      : @278 (gas: 3)\n 15476: s1 = a0\n 15478: a0 = a0 >> 0x20\n 15481: jump @284 if a0 != 0\n      : @279 (gas: 5)\n 15484: i32 a0 = a3 + 0\n 15486: i32 a1 = s1 + 0\n 15488: u64 [sp + 0x18] = a1\n 15491: u64 [sp + 0x10] = a0\n 15494: ra = 242, jump @0\n      : @280 [@dyn 121] (gas: 6)\n 15500: u32 [sp + 0x20] = s1\n 15503: i32 a0 = a0 + 0\n 15505: i32 a1 = sp + 0x20\n 15508: a2 = 0\n 15510: ecalli 11 // 'return_data_copy'\n 15512: fallthrough\n      : @281 (gas: 3)\n 15513: a0 = i32 [sp + 0x20]\n 15516: a1 = u64 [sp + 0x18]\n 15519: jump @284 if a0 <u a1\n      : @282 (gas: 2)\n 15522: ecalli 12 // 'return_data_size'\n 15524: fallthrough\n      : @283 (gas: 2)\n 15525: a1 = a0 >> 0x20\n 15528: jump @285 if a1 == 0\n      : @284 (gas: 1)\n 15531: trap\n      : @285 (gas: 4)\n 15532: i32 s1 = a0 + 0\n 15534: a0 = u64 [sp + 0x10]\n 15537: a1 = s1\n 15539: ra = 244, jump @0\n      : @286 [@dyn 122] (gas: 6)\n 15545: i32 a1 = a0 + 0\n 15547: a0 = 0x1\n 15550: a2 = s1\n 15552: ra = 0xf6\n 15556: ecalli 13 // 'seal_return'\n 15558: fallthrough\n      : @287 [@dyn 123] (gas: 12)\n 15559: a1 = u64 [a0 + 0x10]\n 15562: a2 = u64 [a0 + 0x18]\n 15565: a3 = u64 [a0 + 0x8]\n 15568: a0 = u64 [a0]\n 15570: a2 = a2 | a3\n 15573: a3 = a0 | a1\n 15576: a3 = a3 | a2\n 15579: a3 = a3 >> 0x20\n 15582: a1 = a1 | a2\n 15585: a1 = a1 << 0x20\n 15588: a1 = a1 | a3\n 15591: jump @290 if a1 != 0\n      : @288 (gas: 8)\n 15595: sp = sp + 0xffffffffffffffe8\n 15598: u64 [sp + 0x10] = ra\n 15601: u64 [sp + 0x8] = s0\n 15604: u64 [sp] = s1\n 15606: i32 a0 = a0 + 0\n 15608: a1 = 0x20\n 15611: s1 = 0x20\n 15614: ra = 248, jump @0\n      : @289 [@dyn 124] (gas: 42)\n 15620: u8 [a0 + 31] = 0\n 15623: u8 [a0 + 30] = 0\n 15626: u8 [a0 + 29] = 0\n 15629: u8 [a0 + 28] = 0\n 15632: u8 [a0 + 27] = 0\n 15635: u8 [a0 + 26] = 0\n 15638: u8 [a0 + 25] = 0\n 15641: u8 [a0 + 24] = 0\n 15644: u8 [a0 + 23] = 0x64\n 15648: u8 [a0 + 22] = 0x65\n 15652: u8 [a0 + 21] = 0x6c\n 15656: a2 = 0x69\n 15659: u8 [a0 + 0x14] = a2\n 15662: a4 = 0x61\n 15665: u8 [a0 + 0x13] = a4\n 15668: u8 [a0 + 18] = 0x66\n 15672: u8 [a0 + 0x11] = s1\n 15675: u8 [a0 + 16] = 0x72\n 15679: u8 [a0 + 15] = 0x65\n 15683: u8 [a0 + 14] = 0x66\n 15687: u8 [a0 + 13] = 0x73\n 15691: u8 [a0 + 12] = 0x6e\n 15695: u8 [a0 + 0xb] = a4\n 15698: u8 [a0 + 10] = 0x72\n 15702: a3 = 0x74\n 15705: u8 [a0 + 0x9] = a3\n 15708: u8 [a0 + 0x8] = s1\n 15711: a5 = 0x77\n 15714: u8 [a0 + 0x7] = a5\n 15717: u8 [a0 + 0x6] = a4\n 15720: u8 [a0 + 5] = 0x72\n 15724: u8 [a0 + 4] = 0x64\n 15728: u8 [a0 + 3] = 0x68\n 15732: u8 [a0 + 0x2] = a3\n 15735: u8 [a0 + 0x1] = a2\n 15738: a1 = 0x57\n 15741: u8 [a0] = a1\n 15743: ra = u64 [sp + 0x10]\n 15746: s0 = u64 [sp + 0x8]\n 15749: s1 = u64 [sp]\n 15751: sp = sp + 0x18\n 15754: ret\n      : @290 (gas: 1)\n 15756: trap\n      : @291 (gas: 17)\n 15757: sp = sp + 0xffffffffffffffa0\n 15760: u64 [sp + 0x58] = ra\n 15763: u64 [sp + 0x50] = s0\n 15766: u64 [sp + 0x48] = s1\n 15769: a3 = u64 [a1 + 0x18]\n 15772: a4 = u64 [a1 + 0x10]\n 15775: a5 = u64 [a1 + 0x8]\n 15778: s1 = u64 [a1]\n 15780: a1 = a5 | a3\n 15783: a2 = s1 | a4\n 15786: a2 = a2 | a1\n 15789: a2 = a2 >> 0x20\n 15792: a1 = a1 | a4\n 15795: a1 = a1 << 0x20\n 15798: a1 = a1 | a2\n 15801: u64 [sp + 0x28] = a0\n 15804: jump @298 if a1 != 0\n      : @292 (gas: 19)\n 15808: a0 = s1 + 0x20\n 15811: u64 [sp + 0x30] = a0\n 15814: a0 = a0 <u s1\n 15817: a1 = a5 + a0\n 15820: u64 [sp + 0x40] = a1\n 15823: u64 [sp + 0x8] = a5\n 15826: s0 = a1 <u a5\n 15829: s0 = a0 if a0 == 0\n 15832: s0 = s0 + a4\n 15835: u64 [sp + 0x10] = a4\n 15838: a0 = s0 <u a4\n 15841: u64 [sp + 0x18] = a3\n 15844: a0 = a0 + a3\n 15847: u64 [sp + 0x38] = a0\n 15850: u64 [sp] = s1\n 15852: i32 a0 = s1 + 0\n 15854: a1 = 0x20\n 15857: s1 = 0x20\n 15860: ra = 250, jump @0\n      : @293 [@dyn 125] (gas: 45)\n 15866: u8 [a0 + 0x1f] = s1\n 15869: a1 = u64 [sp + 0x30]\n 15872: s1 = a1\n 15874: a1 = a1 | s0\n 15877: a2 = u64 [sp + 0x40]\n 15880: a4 = u64 [sp + 0x38]\n 15883: a2 = a2 | a4\n 15886: a1 = a1 | a2\n 15889: a1 = a1 >> 0x20\n 15892: u64 [sp + 0x20] = s0\n 15895: a2 = a2 | s0\n 15898: a2 = a2 << 0x20\n 15901: a1 = a1 | a2\n 15904: u8 [a0 + 30] = 0\n 15907: u8 [a0 + 29] = 0\n 15910: u8 [a0 + 28] = 0\n 15913: u8 [a0 + 27] = 0\n 15916: u8 [a0 + 26] = 0\n 15919: u8 [a0 + 25] = 0\n 15922: u8 [a0 + 24] = 0\n 15925: u8 [a0 + 23] = 0\n 15928: u8 [a0 + 22] = 0\n 15931: u8 [a0 + 21] = 0\n 15934: u8 [a0 + 20] = 0\n 15937: u8 [a0 + 19] = 0\n 15940: u8 [a0 + 18] = 0\n 15943: u8 [a0 + 17] = 0\n 15946: u8 [a0 + 16] = 0\n 15949: u8 [a0 + 15] = 0\n 15952: u8 [a0 + 14] = 0\n 15955: u8 [a0 + 13] = 0\n 15958: u8 [a0 + 12] = 0\n 15961: u8 [a0 + 11] = 0\n 15964: u8 [a0 + 10] = 0\n 15967: u8 [a0 + 9] = 0\n 15970: u8 [a0 + 8] = 0\n 15973: u8 [a0 + 7] = 0\n 15976: u8 [a0 + 6] = 0\n 15979: u8 [a0 + 5] = 0\n 15982: u8 [a0 + 4] = 0\n 15985: u8 [a0 + 3] = 0\n 15988: u8 [a0 + 2] = 0\n 15991: u8 [a0 + 1] = 0\n 15994: u8 [a0 + 0] = 0\n 15996: jump @298 if a1 != 0\n      : @294 (gas: 4)\n 16000: i32 s0 = s1 + 0\n 16002: a1 = 0x20\n 16005: a0 = s0\n 16007: ra = 252, jump @0\n      : @295 [@dyn 126] (gas: 41)\n 16013: u8 [a0 + 31] = 0x18\n 16017: u8 [a0 + 30] = 0\n 16020: u8 [a0 + 29] = 0\n 16023: u8 [a0 + 28] = 0\n 16026: u8 [a0 + 27] = 0\n 16029: u8 [a0 + 26] = 0\n 16032: u8 [a0 + 25] = 0\n 16035: u8 [a0 + 24] = 0\n 16038: u8 [a0 + 23] = 0\n 16041: u8 [a0 + 22] = 0\n 16044: u8 [a0 + 21] = 0\n 16047: u8 [a0 + 20] = 0\n 16050: u8 [a0 + 19] = 0\n 16053: u8 [a0 + 18] = 0\n 16056: u8 [a0 + 17] = 0\n 16059: u8 [a0 + 16] = 0\n 16062: u8 [a0 + 15] = 0\n 16065: u8 [a0 + 14] = 0\n 16068: u8 [a0 + 13] = 0\n 16071: u8 [a0 + 12] = 0\n 16074: u8 [a0 + 11] = 0\n 16077: u8 [a0 + 10] = 0\n 16080: u8 [a0 + 9] = 0\n 16083: u8 [a0 + 8] = 0\n 16086: u8 [a0 + 7] = 0\n 16089: u8 [a0 + 6] = 0\n 16092: u8 [a0 + 5] = 0\n 16095: u8 [a0 + 4] = 0\n 16098: u8 [a0 + 3] = 0\n 16101: u8 [a0 + 2] = 0\n 16104: u8 [a0 + 1] = 0\n 16107: a1 = u64 [sp + 0x20]\n 16110: a2 = u64 [sp + 0x38]\n 16113: a1 = a1 | a2\n 16116: a2 = 0xffffffe0\n 16126: a2 = s1 <u a2\n 16129: a3 = u64 [sp + 0x40]\n 16132: a2 = 0 if a3 != 0\n 16134: a2 = 0 if a1 != 0\n 16136: u8 [a0 + 0] = 0\n 16138: jump @298 if a2 == 0\n      : @296 (gas: 3)\n 16142: i32 a0 = s0 + 0x20\n 16145: a1 = 0x20\n 16148: ra = 254, jump @0\n      : @297 [@dyn 127] (gas: 54)\n 16154: u8 [a0 + 21] = 0x6c\n 16158: u8 [a0 + 22] = 0x65\n 16162: u8 [a0 + 15] = 0x65\n 16166: u8 [a0 + 18] = 0x66\n 16170: u8 [a0 + 14] = 0x66\n 16174: u8 [a0 + 13] = 0x73\n 16178: u8 [a0 + 12] = 0x6e\n 16182: u8 [a0 + 31] = 0\n 16185: u8 [a0 + 30] = 0\n 16188: u8 [a0 + 29] = 0\n 16191: u8 [a0 + 28] = 0\n 16194: u8 [a0 + 27] = 0\n 16197: u8 [a0 + 26] = 0\n 16200: u8 [a0 + 25] = 0\n 16203: u8 [a0 + 24] = 0\n 16206: u8 [a0 + 17] = 0x20\n 16210: u8 [a0 + 8] = 0x20\n 16214: u8 [a0 + 7] = 0x77\n 16218: u8 [a0 + 19] = 0x61\n 16222: u8 [a0 + 11] = 0x61\n 16226: u8 [a0 + 6] = 0x61\n 16230: u8 [a0 + 16] = 0x72\n 16234: u8 [a0 + 10] = 0x72\n 16238: u8 [a0 + 5] = 0x72\n 16242: u8 [a0 + 23] = 0x64\n 16246: u8 [a0 + 4] = 0x64\n 16250: u8 [a0 + 3] = 0x68\n 16254: u8 [a0 + 9] = 0x74\n 16258: u8 [a0 + 2] = 0x74\n 16262: u8 [a0 + 20] = 0x69\n 16266: u8 [a0 + 1] = 0x69\n 16270: u8 [a0 + 0] = 0x57\n 16273: a1 = u64 [sp]\n 16275: a0 = a1 + 0x60\n 16278: a1 = a0 <u a1\n 16281: a3 = u64 [sp + 0x8]\n 16284: a2 = a3 + a1\n 16287: a3 = a2 <u a3\n 16290: a3 = a1 if a1 == 0\n 16293: a1 = u64 [sp + 0x10]\n 16296: a3 = a3 + a1\n 16299: a1 = a3 <u a1\n 16302: a4 = u64 [sp + 0x18]\n 16305: a1 = a1 + a4\n 16308: a4 = u64 [sp + 0x28]\n 16311: u64 [a4] = a0\n 16313: u64 [a4 + 0x8] = a2\n 16316: u64 [a4 + 0x10] = a3\n 16319: u64 [a4 + 0x18] = a1\n 16322: ra = u64 [sp + 0x58]\n 16325: s0 = u64 [sp + 0x50]\n 16328: s1 = u64 [sp + 0x48]\n 16331: sp = sp + 0x60\n 16334: ret\n      : @298 (gas: 1)\n 16336: trap\n      : @299 [@dyn 128] (gas: 56)\n 16337: a1 = u64 [sp + 0x70]\n 16340: a1 = reverse a1\n 16342: a2 = u64 [sp + 0x78]\n 16345: a2 = reverse a2\n 16347: a3 = s1 >> 0x18\n 16350: u8 [a0 + 0xf] = a3\n 16353: a3 = s1 >> 0x10\n 16356: u8 [a0 + 0xe] = a3\n 16359: a3 = s1 >> 0x8\n 16362: u8 [a0 + 0xd] = a3\n 16365: u8 [a0 + 0xc] = s1\n 16368: u8 [a0 + 11] = 0\n 16371: u8 [a0 + 10] = 0\n 16374: u8 [a0 + 9] = 0\n 16377: u8 [a0 + 8] = 0\n 16380: u8 [a0 + 7] = 0\n 16383: u8 [a0 + 6] = 0\n 16386: u8 [a0 + 5] = 0\n 16389: u8 [a0 + 4] = 0\n 16392: u8 [a0 + 3] = 0\n 16395: u8 [a0 + 2] = 0\n 16398: u8 [a0 + 1] = 0\n 16401: u8 [a0 + 0] = 0\n 16403: u8 [a0 + 0x18] = a2\n 16406: u8 [a0 + 0x10] = a1\n 16409: a3 = a2 >> 0x38\n 16412: u8 [a0 + 0x1f] = a3\n 16415: a3 = a2 >> 0x30\n 16418: u8 [a0 + 0x1e] = a3\n 16421: a3 = a2 >> 0x28\n 16424: u8 [a0 + 0x1d] = a3\n 16427: a3 = a2 >> 0x20\n 16430: u8 [a0 + 0x1c] = a3\n 16433: a3 = a2 >> 0x18\n 16436: u8 [a0 + 0x1b] = a3\n 16439: a3 = a2 >> 0x10\n 16442: u8 [a0 + 0x1a] = a3\n 16445: a2 = a2 >> 0x8\n 16448: u8 [a0 + 0x19] = a2\n 16451: a2 = a1 >> 0x38\n 16454: u8 [a0 + 0x17] = a2\n 16457: a2 = a1 >> 0x30\n 16460: u8 [a0 + 0x16] = a2\n 16463: a2 = a1 >> 0x28\n 16466: u8 [a0 + 0x15] = a2\n 16469: a2 = a1 >> 0x20\n 16472: u8 [a0 + 0x14] = a2\n 16475: a2 = a1 >> 0x18\n 16478: u8 [a0 + 0x13] = a2\n 16481: a2 = a1 >> 0x10\n 16484: u8 [a0 + 0x12] = a2\n 16487: a1 = a1 >> 0x8\n 16490: u8 [a0 + 0x11] = a1\n 16493: a0 = 0x20\n 16496: a1 = 0x20\n 16499: ra = 258, jump @0\n      : @300 [@dyn 129] (gas: 35)\n 16505: u8 [a0 + 31] = 0x1\n 16509: u8 [a0 + 30] = 0\n 16512: u8 [a0 + 29] = 0\n 16515: u8 [a0 + 28] = 0\n 16518: u8 [a0 + 27] = 0\n 16521: u8 [a0 + 26] = 0\n 16524: u8 [a0 + 25] = 0\n 16527: u8 [a0 + 24] = 0\n 16530: u8 [a0 + 23] = 0\n 16533: u8 [a0 + 22] = 0\n 16536: u8 [a0 + 21] = 0\n 16539: u8 [a0 + 20] = 0\n 16542: u8 [a0 + 19] = 0\n 16545: u8 [a0 + 18] = 0\n 16548: u8 [a0 + 17] = 0\n 16551: u8 [a0 + 16] = 0\n 16554: u8 [a0 + 15] = 0\n 16557: u8 [a0 + 14] = 0\n 16560: u8 [a0 + 13] = 0\n 16563: u8 [a0 + 12] = 0\n 16566: u8 [a0 + 11] = 0\n 16569: u8 [a0 + 10] = 0\n 16572: u8 [a0 + 9] = 0\n 16575: u8 [a0 + 8] = 0\n 16578: u8 [a0 + 7] = 0\n 16581: u8 [a0 + 6] = 0\n 16584: u8 [a0 + 5] = 0\n 16587: u8 [a0 + 4] = 0\n 16590: u8 [a0 + 3] = 0\n 16593: u8 [a0 + 2] = 0\n 16596: u8 [a0 + 1] = 0\n 16599: u8 [a0 + 0] = 0\n 16601: a1 = 0x40\n 16604: a0 = 0\n 16606: ra = 260, jump @0\n      : @301 [@dyn 130] (gas: 28)\n 16612: i32 a0 = a0 + 0\n 16614: i32 a2 = sp + 0x320\n 16618: a1 = 0x40\n 16621: ecalli 9 // 'hash_keccak_256'\n 16623: a0 = u64 [sp + 0x338]\n 16627: a1 = u64 [sp + 0x330]\n 16631: a2 = u64 [sp + 0x328]\n 16635: a3 = u64 [sp + 0x320]\n 16639: a0 = reverse a0\n 16641: a1 = reverse a1\n 16643: a2 = reverse a2\n 16645: a3 = reverse a3\n 16647: u64 [sp + 0x318] = a3\n 16651: u64 [sp + 0x310] = a2\n 16655: u64 [sp + 0x308] = a1\n 16659: u64 [sp + 0x300] = a0\n 16663: u64 [sp + 824] = 0\n 16667: u64 [sp + 816] = 0\n 16671: u64 [sp + 808] = 0\n 16675: u64 [sp + 800] = 0\n 16679: u32 [sp + 736] = 0x20\n 16684: i32 a1 = sp + 0x300\n 16688: i32 a3 = sp + 0x320\n 16692: i32 a4 = sp + 0x2e0\n 16696: a2 = 0xffffffffffffffff\n 16699: a0 = 0\n 16701: ecalli 8 // 'get_storage'\n 16703: fallthrough\n      : @302 (gas: 8)\n 16704: a0 = u64 [sp + 0x330]\n 16708: a1 = u64 [sp + 0x338]\n 16712: a2 = u64 [sp + 0x328]\n 16716: a3 = u64 [sp + 0x320]\n 16720: a1 = a1 | a2\n 16723: a0 = a0 | a3\n 16726: a0 = a0 | a1\n 16729: jump @338 if a0 != 0\n      : @303 (gas: 19)\n 16733: i32 a0 = sp + 0x200\n 16737: ecalli 5 // 'caller'\n 16739: a0 = u64 [sp + 0x208]\n 16743: a1 = i32 [sp + 0x210]\n 16747: s1 = u64 [sp + 0x200]\n 16751: a0 = reverse a0\n 16753: a2 = a0 << 0x20\n 16756: a1 = reverse a1\n 16758: a1 = a1 >> 0x20\n 16761: a1 = a1 | a2\n 16764: u64 [sp + 0x78] = a1\n 16767: a0 = a0 >> 0x20\n 16770: a1 = reverse s1\n 16772: a1 = a1 << 0x20\n 16775: a0 = a0 | a1\n 16778: u64 [sp + 0x70] = a0\n 16781: a1 = 0x20\n 16784: a0 = 0\n 16786: ra = 262, jump @0\n      : @304 [@dyn 131] (gas: 56)\n 16792: a1 = u64 [sp + 0x70]\n 16795: a1 = reverse a1\n 16797: a2 = u64 [sp + 0x78]\n 16800: a2 = reverse a2\n 16802: a3 = s1 >> 0x18\n 16805: u8 [a0 + 0xf] = a3\n 16808: a3 = s1 >> 0x10\n 16811: u8 [a0 + 0xe] = a3\n 16814: a3 = s1 >> 0x8\n 16817: u8 [a0 + 0xd] = a3\n 16820: u8 [a0 + 0xc] = s1\n 16823: u8 [a0 + 11] = 0\n 16826: u8 [a0 + 10] = 0\n 16829: u8 [a0 + 9] = 0\n 16832: u8 [a0 + 8] = 0\n 16835: u8 [a0 + 7] = 0\n 16838: u8 [a0 + 6] = 0\n 16841: u8 [a0 + 5] = 0\n 16844: u8 [a0 + 4] = 0\n 16847: u8 [a0 + 3] = 0\n 16850: u8 [a0 + 2] = 0\n 16853: u8 [a0 + 1] = 0\n 16856: u8 [a0 + 0] = 0\n 16858: u8 [a0 + 0x18] = a2\n 16861: u8 [a0 + 0x10] = a1\n 16864: a3 = a2 >> 0x38\n 16867: u8 [a0 + 0x1f] = a3\n 16870: a3 = a2 >> 0x30\n 16873: u8 [a0 + 0x1e] = a3\n 16876: a3 = a2 >> 0x28\n 16879: u8 [a0 + 0x1d] = a3\n 16882: a3 = a2 >> 0x20\n 16885: u8 [a0 + 0x1c] = a3\n 16888: a3 = a2 >> 0x18\n 16891: u8 [a0 + 0x1b] = a3\n 16894: a3 = a2 >> 0x10\n 16897: u8 [a0 + 0x1a] = a3\n 16900: a2 = a2 >> 0x8\n 16903: u8 [a0 + 0x19] = a2\n 16906: a2 = a1 >> 0x38\n 16909: u8 [a0 + 0x17] = a2\n 16912: a2 = a1 >> 0x30\n 16915: u8 [a0 + 0x16] = a2\n 16918: a2 = a1 >> 0x28\n 16921: u8 [a0 + 0x15] = a2\n 16924: a2 = a1 >> 0x20\n 16927: u8 [a0 + 0x14] = a2\n 16930: a2 = a1 >> 0x18\n 16933: u8 [a0 + 0x13] = a2\n 16936: a2 = a1 >> 0x10\n 16939: u8 [a0 + 0x12] = a2\n 16942: a1 = a1 >> 0x8\n 16945: u8 [a0 + 0x11] = a1\n 16948: a0 = 0x20\n 16951: a1 = 0x20\n 16954: ra = 264, jump @0\n      : @305 [@dyn 132] (gas: 35)\n 16960: u8 [a0 + 31] = 0\n 16963: u8 [a0 + 30] = 0\n 16966: u8 [a0 + 29] = 0\n 16969: u8 [a0 + 28] = 0\n 16972: u8 [a0 + 27] = 0\n 16975: u8 [a0 + 26] = 0\n 16978: u8 [a0 + 25] = 0\n 16981: u8 [a0 + 24] = 0\n 16984: u8 [a0 + 23] = 0\n 16987: u8 [a0 + 22] = 0\n 16990: u8 [a0 + 21] = 0\n 16993: u8 [a0 + 20] = 0\n 16996: u8 [a0 + 19] = 0\n 16999: u8 [a0 + 18] = 0\n 17002: u8 [a0 + 17] = 0\n 17005: u8 [a0 + 16] = 0\n 17008: u8 [a0 + 15] = 0\n 17011: u8 [a0 + 14] = 0\n 17014: u8 [a0 + 13] = 0\n 17017: u8 [a0 + 12] = 0\n 17020: u8 [a0 + 11] = 0\n 17023: u8 [a0 + 10] = 0\n 17026: u8 [a0 + 9] = 0\n 17029: u8 [a0 + 8] = 0\n 17032: u8 [a0 + 7] = 0\n 17035: u8 [a0 + 6] = 0\n 17038: u8 [a0 + 5] = 0\n 17041: u8 [a0 + 4] = 0\n 17044: u8 [a0 + 3] = 0\n 17047: u8 [a0 + 2] = 0\n 17050: u8 [a0 + 1] = 0\n 17053: u8 [a0 + 0] = 0\n 17055: a1 = 0x40\n 17058: a0 = 0\n 17060: ra = 266, jump @0\n      : @306 [@dyn 133] (gas: 28)\n 17066: i32 a0 = a0 + 0\n 17068: i32 a2 = sp + 0x320\n 17072: a1 = 0x40\n 17075: ecalli 9 // 'hash_keccak_256'\n 17077: a0 = u64 [sp + 0x338]\n 17081: a1 = u64 [sp + 0x330]\n 17085: a2 = u64 [sp + 0x328]\n 17089: a3 = u64 [sp + 0x320]\n 17093: a0 = reverse a0\n 17095: a1 = reverse a1\n 17097: a2 = reverse a2\n 17099: a3 = reverse a3\n 17101: u64 [sp + 0x318] = a3\n 17105: u64 [sp + 0x310] = a2\n 17109: u64 [sp + 0x308] = a1\n 17113: u64 [sp + 0x300] = a0\n 17117: u64 [sp + 824] = 0\n 17121: u64 [sp + 816] = 0\n 17125: u64 [sp + 808] = 0\n 17129: u64 [sp + 800] = 0\n 17133: u32 [sp + 736] = 0x20\n 17138: i32 a1 = sp + 0x300\n 17142: i32 a3 = sp + 0x320\n 17146: i32 a4 = sp + 0x2e0\n 17150: a2 = 0xffffffffffffffff\n 17153: a0 = 0\n 17155: ecalli 8 // 'get_storage'\n 17157: fallthrough\n      : @307 (gas: 20)\n 17158: a0 = u64 [sp + 0x338]\n 17162: a1 = u64 [sp + 0x320]\n 17166: t1 = u64 [sp + 0x330]\n 17170: a3 = u64 [sp + 0x328]\n 17174: a5 = u64 [sp + 0x88]\n 17178: a4 = a0 ^ a5\n 17181: a0 = a0 <u a5\n 17184: a2 = u64 [sp + 0x80]\n 17188: a5 = t1 <u a2\n 17191: a5 = a0 if a4 != 0\n 17194: a0 = u64 [sp + 0x90]\n 17198: t0 = a3 ^ a0\n 17201: a3 = a3 <u a0\n 17204: s1 = u64 [sp + 0x98]\n 17208: a1 = a1 <u s1\n 17211: a1 = a3 if t0 != 0\n 17214: a0 = t1 ^ a2\n 17217: a0 = a0 | a4\n 17220: a1 = a5 if a0 != 0\n 17223: jump @343 if a1 != 0\n      : @308 (gas: 19)\n 17227: i32 a0 = sp + 0x220\n 17231: ecalli 5 // 'caller'\n 17233: a0 = u64 [sp + 0x228]\n 17237: a1 = i32 [sp + 0x230]\n 17241: s1 = u64 [sp + 0x220]\n 17245: a0 = reverse a0\n 17247: a2 = a0 << 0x20\n 17250: a1 = reverse a1\n 17252: a1 = a1 >> 0x20\n 17255: a1 = a1 | a2\n 17258: u64 [sp + 0x78] = a1\n 17261: a0 = a0 >> 0x20\n 17264: a1 = reverse s1\n 17266: a1 = a1 << 0x20\n 17269: a0 = a0 | a1\n 17272: u64 [sp + 0x70] = a0\n 17275: a1 = 0x20\n 17278: a0 = 0\n 17280: ra = 268, jump @0\n      : @309 [@dyn 134] (gas: 56)\n 17286: a1 = u64 [sp + 0x70]\n 17289: a1 = reverse a1\n 17291: a2 = u64 [sp + 0x78]\n 17294: a2 = reverse a2\n 17296: a3 = s1 >> 0x18\n 17299: u8 [a0 + 0xf] = a3\n 17302: a3 = s1 >> 0x10\n 17305: u8 [a0 + 0xe] = a3\n 17308: a3 = s1 >> 0x8\n 17311: u8 [a0 + 0xd] = a3\n 17314: u8 [a0 + 0xc] = s1\n 17317: u8 [a0 + 11] = 0\n 17320: u8 [a0 + 10] = 0\n 17323: u8 [a0 + 9] = 0\n 17326: u8 [a0 + 8] = 0\n 17329: u8 [a0 + 7] = 0\n 17332: u8 [a0 + 6] = 0\n 17335: u8 [a0 + 5] = 0\n 17338: u8 [a0 + 4] = 0\n 17341: u8 [a0 + 3] = 0\n 17344: u8 [a0 + 2] = 0\n 17347: u8 [a0 + 1] = 0\n 17350: u8 [a0 + 0] = 0\n 17352: u8 [a0 + 0x18] = a2\n 17355: u8 [a0 + 0x10] = a1\n 17358: a3 = a2 >> 0x38\n 17361: u8 [a0 + 0x1f] = a3\n 17364: a3 = a2 >> 0x30\n 17367: u8 [a0 + 0x1e] = a3\n 17370: a3 = a2 >> 0x28\n 17373: u8 [a0 + 0x1d] = a3\n 17376: a3 = a2 >> 0x20\n 17379: u8 [a0 + 0x1c] = a3\n 17382: a3 = a2 >> 0x18\n 17385: u8 [a0 + 0x1b] = a3\n 17388: a3 = a2 >> 0x10\n 17391: u8 [a0 + 0x1a] = a3\n 17394: a2 = a2 >> 0x8\n 17397: u8 [a0 + 0x19] = a2\n 17400: a2 = a1 >> 0x38\n 17403: u8 [a0 + 0x17] = a2\n 17406: a2 = a1 >> 0x30\n 17409: u8 [a0 + 0x16] = a2\n 17412: a2 = a1 >> 0x28\n 17415: u8 [a0 + 0x15] = a2\n 17418: a2 = a1 >> 0x20\n 17421: u8 [a0 + 0x14] = a2\n 17424: a2 = a1 >> 0x18\n 17427: u8 [a0 + 0x13] = a2\n 17430: a2 = a1 >> 0x10\n 17433: u8 [a0 + 0x12] = a2\n 17436: a1 = a1 >> 0x8\n 17439: u8 [a0 + 0x11] = a1\n 17442: a0 = 0x20\n 17445: a1 = 0x20\n 17448: ra = 270, jump @0\n      : @310 [@dyn 135] (gas: 35)\n 17454: u8 [a0 + 31] = 0\n 17457: u8 [a0 + 30] = 0\n 17460: u8 [a0 + 29] = 0\n 17463: u8 [a0 + 28] = 0\n 17466: u8 [a0 + 27] = 0\n 17469: u8 [a0 + 26] = 0\n 17472: u8 [a0 + 25] = 0\n 17475: u8 [a0 + 24] = 0\n 17478: u8 [a0 + 23] = 0\n 17481: u8 [a0 + 22] = 0\n 17484: u8 [a0 + 21] = 0\n 17487: u8 [a0 + 20] = 0\n 17490: u8 [a0 + 19] = 0\n 17493: u8 [a0 + 18] = 0\n 17496: u8 [a0 + 17] = 0\n 17499: u8 [a0 + 16] = 0\n 17502: u8 [a0 + 15] = 0\n 17505: u8 [a0 + 14] = 0\n 17508: u8 [a0 + 13] = 0\n 17511: u8 [a0 + 12] = 0\n 17514: u8 [a0 + 11] = 0\n 17517: u8 [a0 + 10] = 0\n 17520: u8 [a0 + 9] = 0\n 17523: u8 [a0 + 8] = 0\n 17526: u8 [a0 + 7] = 0\n 17529: u8 [a0 + 6] = 0\n 17532: u8 [a0 + 5] = 0\n 17535: u8 [a0 + 4] = 0\n 17538: u8 [a0 + 3] = 0\n 17541: u8 [a0 + 2] = 0\n 17544: u8 [a0 + 1] = 0\n 17547: u8 [a0 + 0] = 0\n 17549: a1 = 0x40\n 17552: a0 = 0\n 17554: ra = 272, jump @0\n      : @311 [@dyn 136] (gas: 32)\n 17560: i32 a0 = a0 + 0\n 17562: i32 a2 = sp + 0x320\n 17566: a1 = 0x40\n 17569: ecalli 9 // 'hash_keccak_256'\n 17571: a0 = u64 [sp + 0x338]\n 17575: a1 = u64 [sp + 0x330]\n 17579: a2 = u64 [sp + 0x328]\n 17583: a3 = u64 [sp + 0x320]\n 17587: a0 = reverse a0\n 17589: a1 = reverse a1\n 17591: a2 = reverse a2\n 17593: a3 = reverse a3\n 17595: u64 [sp + 0x60] = a3\n 17598: u64 [sp + 0x318] = a3\n 17602: u64 [sp + 0x68] = a2\n 17605: u64 [sp + 0x310] = a2\n 17609: u64 [sp + 0x70] = a1\n 17612: u64 [sp + 0x308] = a1\n 17616: u64 [sp + 0x78] = a0\n 17619: u64 [sp + 0x300] = a0\n 17623: u64 [sp + 824] = 0\n 17627: u64 [sp + 816] = 0\n 17631: u64 [sp + 808] = 0\n 17635: u64 [sp + 800] = 0\n 17639: u32 [sp + 736] = 0x20\n 17644: i32 a1 = sp + 0x300\n 17648: i32 a3 = sp + 0x320\n 17652: i32 a4 = sp + 0x2e0\n 17656: a2 = 0xffffffffffffffff\n 17659: a0 = 0\n 17661: ecalli 8 // 'get_storage'\n 17663: fallthrough\n      : @312 (gas: 22)\n 17664: a2 = u64 [sp + 0x338]\n 17668: a3 = u64 [sp + 0x330]\n 17672: t1 = u64 [sp + 0x328]\n 17676: a1 = u64 [sp + 0x320]\n 17680: a4 = u64 [sp + 0x88]\n 17684: a0 = a2 ^ a4\n 17687: a4 = a2 <u a4\n 17690: t0 = u64 [sp + 0x80]\n 17694: a5 = a3 <u t0\n 17697: u64 [sp + 0x50] = a5\n 17700: a4 = a5 if a0 == 0\n 17703: a5 = u64 [sp + 0x90]\n 17707: t2 = t1 ^ a5\n 17710: s1 = t1 <u a5\n 17713: a5 = u64 [sp + 0x98]\n 17717: u64 [sp + 0x40] = a1\n 17720: ra = a1 <u a5\n 17723: s1 = ra if t2 == 0\n 17726: a5 = a3 ^ t0\n 17729: a0 = a0 | a5\n 17732: a4 = s1 if a0 == 0\n 17735: jump @358 if a4 != 0\n      : @313 (gas: 59)\n 17739: a0 = a3 - t0\n 17742: a3 = a0 - s1\n 17745: u64 [sp + 0x58] = a3\n 17748: a0 = a0 <u s1\n 17751: a3 = u64 [sp + 0x88]\n 17755: a2 = a2 - a3\n 17758: a1 = u64 [sp + 0x50]\n 17761: a2 = a2 - a1\n 17764: a2 = a2 - a0\n 17767: u64 [sp + 0x50] = a2\n 17770: a0 = u64 [sp + 0x90]\n 17774: a0 = t1 - a0\n 17777: a0 = a0 - ra\n 17780: u64 [sp + 0x48] = a0\n 17783: u32 [sp + 736] = 0x20\n 17788: a0 = u64 [sp + 0x98]\n 17792: a1 = u64 [sp + 0x40]\n 17795: a1 = a1 - a0\n 17798: u64 [sp + 0x40] = a1\n 17801: a0 = u64 [sp + 0x68]\n 17804: u64 [sp + 0x310] = a0\n 17808: a0 = u64 [sp + 0x70]\n 17811: u64 [sp + 0x308] = a0\n 17815: a0 = u64 [sp + 0x78]\n 17818: u64 [sp + 0x300] = a0\n 17822: s1 = u64 [sp + 0x60]\n 17825: u64 [sp + 0x318] = s1\n 17829: u64 [sp + 824] = 0\n 17833: u64 [sp + 816] = 0\n 17837: u64 [sp + 808] = 0\n 17841: u64 [sp + 800] = 0\n 17845: i32 a1 = sp + 0x300\n 17849: i32 a3 = sp + 0x320\n 17853: i32 a4 = sp + 0x2e0\n 17857: a2 = 0xffffffffffffffff\n 17860: a0 = 0\n 17862: ecalli 8 // 'get_storage'\n 17864: u64 [sp + 0x318] = s1\n 17868: a0 = u64 [sp + 0x68]\n 17871: u64 [sp + 0x310] = a0\n 17875: a0 = u64 [sp + 0x70]\n 17878: u64 [sp + 0x308] = a0\n 17882: a0 = u64 [sp + 0x78]\n 17885: u64 [sp + 0x300] = a0\n 17889: a0 = u64 [sp + 0x50]\n 17892: u64 [sp + 0x338] = a0\n 17896: a0 = u64 [sp + 0x58]\n 17899: u64 [sp + 0x330] = a0\n 17903: a0 = u64 [sp + 0x48]\n 17906: u64 [sp + 0x328] = a0\n 17910: a0 = u64 [sp + 0x40]\n 17913: u64 [sp + 0x320] = a0\n 17917: i32 a1 = sp + 0x300\n 17921: i32 a3 = sp + 0x320\n 17925: a2 = 0xffffffffffffffff\n 17928: a4 = 0x20\n 17931: a0 = 0\n 17933: ecalli 15 // 'set_storage'\n 17935: fallthrough\n      : @314 (gas: 3)\n 17936: s1 = 0x20020\n 17941: a0 = i32 [0x20020]\n 17946: jump @317 if a0 == 0\n      : @315 (gas: 6)\n 17949: u64 [sp + 0x78] = a0\n 17952: a0 = 0x30030\n 17957: i32 a0 = a0 + 0\n 17959: i32 a1 = s1 + 0\n 17961: ecalli 7 // 'get_immutable_data'\n 17963: fallthrough\n      : @316 (gas: 4)\n 17964: a0 = i32 [0x20020]\n 17969: u32 [0x20020] = 0\n 17974: a1 = u64 [sp + 0x78]\n 17977: jump @355 if a0 <u a1\n      : @317 (gas: 17)\n 17981: a1 = u64 [0x30040]\n 17986: u64 [sp + 0x38] = a1\n 17989: a1 = u64 [0x30038]\n 17994: u64 [sp + 0x30] = a1\n 17997: a0 = u64 [0x30030]\n 18002: u64 [sp + 0x40] = a0\n 18005: i32 a0 = sp + 0x240\n 18009: ecalli 5 // 'caller'\n 18011: a0 = i32 [sp + 0x250]\n 18015: u64 [sp + 0x58] = a0\n 18018: a0 = u64 [sp + 0x240]\n 18022: u64 [sp + 0x50] = a0\n 18025: a0 = u64 [sp + 0x248]\n 18029: u64 [sp + 0x48] = a0\n 18032: a0 = 0x40\n 18035: a1 = 0x20\n 18038: ra = 274, jump @0\n      : @318 [@dyn 137] (gas: 102)\n 18044: a1 = u8 [a0 + 0x11]\n 18047: a2 = u8 [a0 + 0x10]\n 18050: a3 = u8 [a0 + 0x12]\n 18053: a4 = u8 [a0 + 0x13]\n 18056: a1 = a1 << 0x8\n 18059: a1 = a1 | a2\n 18062: a3 = a3 << 0x10\n 18065: a4 = a4 << 0x18\n 18068: a3 = a3 | a4\n 18071: a1 = a1 | a3\n 18074: a2 = u8 [a0 + 0x15]\n 18077: a3 = u8 [a0 + 0x14]\n 18080: a4 = u8 [a0 + 0x16]\n 18083: a5 = u8 [a0 + 0x17]\n 18086: a2 = a2 << 0x8\n 18089: a2 = a2 | a3\n 18092: a4 = a4 << 0x10\n 18095: a5 = a5 << 0x18\n 18098: a4 = a4 | a5\n 18101: a2 = a2 | a4\n 18104: a2 = a2 << 0x20\n 18107: t0 = a2 | a1\n 18110: a2 = u8 [a0 + 0x1]\n 18113: a3 = u8 [a0]\n 18115: a4 = u8 [a0 + 0x2]\n 18118: a5 = u8 [a0 + 0x3]\n 18121: a2 = a2 << 0x8\n 18124: a2 = a2 | a3\n 18127: a4 = a4 << 0x10\n 18130: a5 = a5 << 0x18\n 18133: a4 = a4 | a5\n 18136: a2 = a2 | a4\n 18139: a3 = u8 [a0 + 0x5]\n 18142: a4 = u8 [a0 + 0x4]\n 18145: a5 = u8 [a0 + 0x6]\n 18148: s1 = u8 [a0 + 0x7]\n 18151: a3 = a3 << 0x8\n 18154: a3 = a3 | a4\n 18157: a5 = a5 << 0x10\n 18160: s1 = s1 << 0x18\n 18163: a5 = a5 | s1\n 18166: a3 = a3 | a5\n 18169: a3 = a3 << 0x20\n 18172: a2 = a2 | a3\n 18175: a3 = u8 [a0 + 0x19]\n 18178: a4 = u8 [a0 + 0x18]\n 18181: a5 = u8 [a0 + 0x1a]\n 18184: s1 = u8 [a0 + 0x1b]\n 18187: a3 = a3 << 0x8\n 18190: a3 = a3 | a4\n 18193: a5 = a5 << 0x10\n 18196: s1 = s1 << 0x18\n 18199: a5 = a5 | s1\n 18202: a3 = a3 | a5\n 18205: a4 = u8 [a0 + 0x1d]\n 18208: a5 = u8 [a0 + 0x1c]\n 18211: s1 = u8 [a0 + 0x1e]\n 18214: a1 = u8 [a0 + 0x1f]\n 18217: a4 = a4 << 0x8\n 18220: a4 = a4 | a5\n 18223: s1 = s1 << 0x10\n 18226: a1 = a1 << 0x18\n 18229: a1 = a1 | s1\n 18232: a1 = a1 | a4\n 18235: a1 = a1 << 0x20\n 18238: a3 = a3 | a1\n 18241: a1 = u8 [a0 + 0x9]\n 18244: a4 = u8 [a0 + 0x8]\n 18247: a5 = u8 [a0 + 0xa]\n 18250: s1 = u8 [a0 + 0xb]\n 18253: a1 = a1 << 0x8\n 18256: a1 = a1 | a4\n 18259: a5 = a5 << 0x10\n 18262: s1 = s1 << 0x18\n 18265: a5 = a5 | s1\n 18268: a1 = a1 | a5\n 18271: a4 = u8 [a0 + 0xd]\n 18274: a5 = u8 [a0 + 0xc]\n 18277: s1 = u8 [a0 + 0xe]\n 18280: a0 = u8 [a0 + 0xf]\n 18283: a4 = a4 << 0x8\n 18286: a4 = a4 | a5\n 18289: s1 = s1 << 0x10\n 18292: a0 = a0 << 0x18\n 18295: a0 = a0 | s1\n 18298: a0 = a0 | a4\n 18301: a0 = a0 << 0x20\n 18304: a0 = a0 | a1\n 18307: s1 = reverse a0\n 18309: a3 = reverse a3\n 18311: a1 = reverse a2\n 18313: a0 = reverse t0\n 18315: u64 [sp + 0x78] = a0\n 18318: u64 [sp + 0x60] = a1\n 18321: a0 = a0 | a1\n 18324: a1 = a3 | s1\n 18327: a1 = a1 | a0\n 18330: a1 = a1 >> 0x20\n 18333: a0 = a0 | s1\n 18336: a0 = a0 << 0x20\n 18339: a0 = a0 | a1\n 18342: jump @355 if a0 != 0\n      : @319 (gas: 5)\n 18346: i32 a0 = a3 + 0\n 18348: a1 = 0x20\n 18351: u64 [sp + 0x68] = a0\n 18354: u64 [sp + 0x70] = a3\n 18357: ra = 276, jump @0\n      : @320 [@dyn 138] (gas: 45)\n 18363: u8 [a0 + 31] = 0\n 18366: u8 [a0 + 30] = 0\n 18369: u8 [a0 + 29] = 0\n 18372: u8 [a0 + 28] = 0\n 18375: u8 [a0 + 27] = 0\n 18378: u8 [a0 + 26] = 0\n 18381: u8 [a0 + 25] = 0\n 18384: u8 [a0 + 24] = 0\n 18387: u8 [a0 + 23] = 0\n 18390: u8 [a0 + 22] = 0\n 18393: u8 [a0 + 21] = 0\n 18396: u8 [a0 + 20] = 0\n 18399: u8 [a0 + 19] = 0\n 18402: u8 [a0 + 18] = 0\n 18405: u8 [a0 + 17] = 0\n 18408: u8 [a0 + 16] = 0\n 18411: u8 [a0 + 15] = 0\n 18414: u8 [a0 + 14] = 0\n 18417: u8 [a0 + 13] = 0\n 18420: u8 [a0 + 12] = 0\n 18423: u8 [a0 + 11] = 0\n 18426: u8 [a0 + 10] = 0\n 18429: u8 [a0 + 9] = 0\n 18432: u8 [a0 + 8] = 0\n 18435: u8 [a0 + 7] = 0\n 18438: u8 [a0 + 6] = 0\n 18441: u8 [a0 + 5] = 0\n 18444: u8 [a0 + 3] = 0xbb\n 18449: u8 [a0 + 2] = 0x9c\n 18454: u8 [a0 + 1] = 0x5\n 18458: u8 [a0 + 0] = 0xa9\n 18462: u64 [sp + 0x18] = s1\n 18465: a3 = u64 [sp + 0x60]\n 18468: a3 = a3 | s1\n 18471: a1 = 0x100000000\n 18481: u64 [sp + 0x20] = a1\n 18484: a1 = 0xfffffffc\n 18494: a2 = u64 [sp + 0x70]\n 18497: a1 = a2 <u a1\n 18500: a2 = u64 [sp + 0x78]\n 18503: a1 = 0 if a2 != 0\n 18505: u64 [sp + 0x28] = a3\n 18508: a1 = 0 if a3 != 0\n 18510: u8 [a0 + 4] = 0\n 18513: jump @355 if a1 == 0\n      : @321 (gas: 19)\n 18517: a0 = u64 [sp + 0x48]\n 18520: a0 = reverse a0\n 18522: a1 = a0 >> 0x20\n 18525: a2 = u64 [sp + 0x50]\n 18528: a2 = reverse a2\n 18530: a3 = a2 << 0x20\n 18533: a1 = a1 | a3\n 18536: u64 [sp + 0x50] = a1\n 18539: a0 = a0 << 0x20\n 18542: a1 = u64 [sp + 0x58]\n 18545: a1 = reverse a1\n 18547: a1 = a1 >> 0x20\n 18550: a0 = a0 | a1\n 18553: u64 [sp + 0x58] = a0\n 18556: s1 = a2 >> 0x20\n 18559: a0 = u64 [sp + 0x68]\n 18562: i32 a0 = a0 + 0x4\n 18565: a1 = 0x20\n 18568: ra = 278, jump @0\n      : @322 [@dyn 139] (gas: 64)\n 18574: a1 = reverse s1\n 18576: a2 = u64 [sp + 0x50]\n 18579: a2 = reverse a2\n 18581: a3 = u64 [sp + 0x58]\n 18584: a3 = reverse a3\n 18586: a4 = a3 >> 0x38\n 18589: u8 [a0 + 0x1f] = a4\n 18592: a4 = a3 >> 0x30\n 18595: u8 [a0 + 0x1e] = a4\n 18598: a4 = a3 >> 0x28\n 18601: u8 [a0 + 0x1d] = a4\n 18604: a4 = a3 >> 0x20\n 18607: u8 [a0 + 0x1c] = a4\n 18610: a4 = a3 >> 0x18\n 18613: u8 [a0 + 0x1b] = a4\n 18616: a4 = a3 >> 0x10\n 18619: u8 [a0 + 0x1a] = a4\n 18622: a4 = a3 >> 0x8\n 18625: u8 [a0 + 0x19] = a4\n 18628: u8 [a0 + 0x18] = a3\n 18631: u8 [a0 + 0x10] = a2\n 18634: u8 [a0 + 11] = 0\n 18637: u8 [a0 + 10] = 0\n 18640: u8 [a0 + 9] = 0\n 18643: u8 [a0 + 7] = 0\n 18646: u8 [a0 + 6] = 0\n 18649: u8 [a0 + 5] = 0\n 18652: u8 [a0 + 4] = 0\n 18655: u8 [a0 + 3] = 0\n 18658: u8 [a0 + 2] = 0\n 18661: u8 [a0 + 1] = 0\n 18664: u8 [a0 + 0] = 0\n 18666: a3 = a2 >> 0x38\n 18669: u8 [a0 + 0x17] = a3\n 18672: a3 = a2 >> 0x30\n 18675: u8 [a0 + 0x16] = a3\n 18678: a3 = a2 >> 0x28\n 18681: u8 [a0 + 0x15] = a3\n 18684: a3 = a2 >> 0x20\n 18687: u8 [a0 + 0x14] = a3\n 18690: a3 = a2 >> 0x18\n 18693: u8 [a0 + 0x13] = a3\n 18696: a3 = a2 >> 0x10\n 18699: u8 [a0 + 0x12] = a3\n 18702: a2 = a2 >> 0x8\n 18705: u8 [a0 + 0x11] = a2\n 18708: u8 [a0 + 0x8] = a1\n 18711: a2 = a1 >> 0x38\n 18714: u8 [a0 + 0xf] = a2\n 18717: a2 = a1 >> 0x30\n 18720: u8 [a0 + 0xe] = a2\n 18723: a2 = a1 >> 0x28\n 18726: u8 [a0 + 0xd] = a2\n 18729: a1 = a1 >> 0x20\n 18732: a2 = u64 [sp + 0x20]\n 18735: a2 = a2 + 0xffffffffffffffdc\n 18738: a3 = u64 [sp + 0x70]\n 18741: a2 = a3 <u a2\n 18744: a3 = u64 [sp + 0x78]\n 18747: a2 = 0 if a3 != 0\n 18749: a3 = u64 [sp + 0x28]\n 18752: a2 = 0 if a3 != 0\n 18754: u8 [a0 + 0xc] = a1\n 18757: jump @355 if a2 == 0\n      : @323 (gas: 4)\n 18761: s1 = u64 [sp + 0x68]\n 18764: i32 a0 = s1 + 0x24\n 18767: a1 = 0x20\n 18770: ra = 280, jump @0\n      : @324 [@dyn 140] (gas: 92)\n 18776: a1 = u64 [sp + 0x88]\n 18780: a1 = reverse a1\n 18782: a2 = u64 [sp + 0x80]\n 18786: a2 = reverse a2\n 18788: a3 = u64 [sp + 0x90]\n 18792: a3 = reverse a3\n 18794: a4 = u64 [sp + 0x98]\n 18798: a4 = reverse a4\n 18800: a5 = a4 >> 0x38\n 18803: u8 [a0 + 0x1f] = a5\n 18806: a5 = a4 >> 0x30\n 18809: u8 [a0 + 0x1e] = a5\n 18812: a5 = a4 >> 0x28\n 18815: u8 [a0 + 0x1d] = a5\n 18818: a5 = a4 >> 0x20\n 18821: u8 [a0 + 0x1c] = a5\n 18824: a5 = a4 >> 0x18\n 18827: u8 [a0 + 0x1b] = a5\n 18830: a5 = a4 >> 0x10\n 18833: u8 [a0 + 0x1a] = a5\n 18836: a5 = a4 >> 0x8\n 18839: u8 [a0 + 0x19] = a5\n 18842: u8 [a0 + 0x18] = a4\n 18845: u8 [a0 + 0x10] = a3\n 18848: a4 = a3 >> 0x38\n 18851: u8 [a0 + 0x17] = a4\n 18854: a4 = a3 >> 0x30\n 18857: u8 [a0 + 0x16] = a4\n 18860: a4 = a3 >> 0x28\n 18863: u8 [a0 + 0x15] = a4\n 18866: a4 = a3 >> 0x20\n 18869: u8 [a0 + 0x14] = a4\n 18872: a4 = a3 >> 0x18\n 18875: u8 [a0 + 0x13] = a4\n 18878: a4 = a3 >> 0x10\n 18881: u8 [a0 + 0x12] = a4\n 18884: a3 = a3 >> 0x8\n 18887: u8 [a0 + 0x11] = a3\n 18890: u8 [a0 + 0x8] = a2\n 18893: a3 = a2 >> 0x38\n 18896: u8 [a0 + 0xf] = a3\n 18899: a3 = a2 >> 0x30\n 18902: u8 [a0 + 0xe] = a3\n 18905: a3 = a2 >> 0x28\n 18908: u8 [a0 + 0xd] = a3\n 18911: a3 = a2 >> 0x20\n 18914: u8 [a0 + 0xc] = a3\n 18917: a3 = a2 >> 0x18\n 18920: u8 [a0 + 0xb] = a3\n 18923: a3 = a2 >> 0x10\n 18926: u8 [a0 + 0xa] = a3\n 18929: a2 = a2 >> 0x8\n 18932: u8 [a0 + 0x9] = a2\n 18935: u8 [a0] = a1\n 18937: a2 = a1 >> 0x38\n 18940: u8 [a0 + 0x7] = a2\n 18943: a2 = a1 >> 0x30\n 18946: u8 [a0 + 0x6] = a2\n 18949: a2 = a1 >> 0x28\n 18952: u8 [a0 + 0x5] = a2\n 18955: a2 = a1 >> 0x20\n 18958: u8 [a0 + 0x4] = a2\n 18961: a2 = a1 >> 0x18\n 18964: u8 [a0 + 0x3] = a2\n 18967: a2 = a1 >> 0x10\n 18970: u8 [a0 + 0x2] = a2\n 18973: a1 = a1 >> 0x8\n 18976: u8 [a0 + 0x1] = a1\n 18979: ecalli 10 // 'ref_time_left'\n 18981: a0 = u64 [sp + 0x30]\n 18984: a0 = reverse a0\n 18986: a1 = a0 << 0x20\n 18989: a2 = u64 [sp + 0x38]\n 18992: a2 = reverse a2\n 18994: a2 = a2 >> 0x20\n 18997: a1 = a1 | a2\n 19000: a2 = u64 [sp + 0x40]\n 19003: a2 = reverse a2\n 19005: a3 = a2 << 0x20\n 19008: a0 = a0 >> 0x20\n 19011: a0 = a0 | a3\n 19014: a2 = a2 >> 0x20\n 19017: u64 [sp + 0x268] = a0\n 19021: u64 [sp + 0x260] = a1\n 19025: u32 [sp + 0x270] = a2\n 19029: u64 [sp + 664] = 0\n 19033: u64 [sp + 656] = 0\n 19037: u64 [sp + 648] = 0\n 19041: u64 [sp + 640] = 0\n 19045: a1 = 0x44\n 19048: a0 = s1\n 19050: ra = 282, jump @0\n      : @325 [@dyn 141] (gas: 4)\n 19056: u64 [sp + 0x98] = a0\n 19060: a1 = 0x20\n 19063: a0 = s1\n 19065: ra = 284, jump @0\n      : @326 [@dyn 142] (gas: 31)\n 19071: u32 [sp + 672] = 0x20\n 19076: u64 [sp + 728] = 0xffffffffffffffff\n 19081: u64 [sp + 720] = 0xffffffffffffffff\n 19086: u64 [sp + 712] = 0xffffffffffffffff\n 19091: u64 [sp + 704] = 0xffffffffffffffff\n 19096: a1 = sp + 0x260\n 19100: a1 = a1 << 0x20\n 19103: a1 = a1 >> 0x20\n 19106: a2 = 0x800000000\n 19116: s1 = a1 | a2\n 19119: a1 = sp + 0x280\n 19123: a1 = a1 << 0x20\n 19126: a1 = a1 >> 0x20\n 19129: a2 = sp + 0x2c0\n 19133: a2 = a2 << 0x20\n 19136: a3 = a2 | a1\n 19139: a1 = u64 [sp + 0x98]\n 19143: a1 = a1 << 0x20\n 19146: a1 = a1 >> 0x20\n 19149: a2 = 0x4400000000\n 19159: a4 = a1 | a2\n 19162: a0 = a0 << 0x20\n 19165: a0 = a0 >> 0x20\n 19168: a1 = sp + 0x2a0\n 19172: a1 = a1 << 0x20\n 19175: a5 = a1 | a0\n 19178: a1 = 0xffffffffffffffff\n 19181: a2 = 0xffffffffffffffff\n 19184: a0 = s1\n 19186: ecalli 1 // 'call'\n 19188: fallthrough\n      : @327 (gas: 1)\n 19189: jump @348 if a0 != 0\n      : @328 (gas: 2)\n 19193: ecalli 12 // 'return_data_size'\n 19195: fallthrough\n      : @329 (gas: 2)\n 19196: a1 = 0x20\n 19199: jump @331 if a0 >=u a1\n      : @330 (gas: 3)\n 19202: ecalli 12 // 'return_data_size'\n 19204: a1 = a0\n 19206: fallthrough\n      : @331 (gas: 27)\n 19207: a3 = u64 [sp + 0x60]\n 19210: s1 = u64 [sp + 0x78]\n 19213: a0 = a1 + 0x1f\n 19216: u64 [sp + 0x90] = a1\n 19220: a1 = a0 <u a1\n 19223: u64 [sp + 152] = 0\n 19227: a1 = a1 & 0x1\n 19230: a0 = a0 & 0xffffffffffffffe0\n 19233: a2 = u64 [sp + 0x70]\n 19236: a2 = a2 + a0\n 19239: u64 [sp + 0x88] = a2\n 19243: a0 = a2 <u a0\n 19246: s1 = s1 + a1\n 19249: s1 = s1 + a0\n 19252: a2 = s1 ^ a1\n 19255: a1 = s1 <u a1\n 19258: a1 = a0 if a2 == 0\n 19261: a0 = u64 [sp + 0x18]\n 19264: a1 = a1 + a0\n 19267: a0 = a1 <u a0\n 19270: a0 = a0 + a3\n 19273: u64 [sp + 0x80] = a1\n 19277: u64 [sp + 0x78] = a0\n 19280: a0 = a0 | a1\n 19283: a1 = s1 <u 0x1\n 19286: a1 = 0 if a0 != 0\n 19288: jump @360 if a1 == 0\n      : @332 (gas: 3)\n 19292: a0 = 0x40\n 19295: a1 = 0x20\n 19298: ra = 286, jump @0\n      : @333 [@dyn 143] (gas: 79)\n 19304: a1 = u64 [sp + 0x78]\n 19307: a1 = reverse a1\n 19309: a2 = u64 [sp + 0x80]\n 19313: a2 = reverse a2\n 19315: a3 = reverse s1\n 19317: a4 = u64 [sp + 0x88]\n 19321: a4 = reverse a4\n 19323: u8 [a0 + 0x18] = a4\n 19326: a5 = a4 >> 0x38\n 19329: u8 [a0 + 0x1f] = a5\n 19332: a5 = a4 >> 0x30\n 19335: u8 [a0 + 0x1e] = a5\n 19338: a5 = a4 >> 0x28\n 19341: u8 [a0 + 0x1d] = a5\n 19344: a5 = a4 >> 0x20\n 19347: u8 [a0 + 0x1c] = a5\n 19350: a5 = a4 >> 0x18\n 19353: u8 [a0 + 0x1b] = a5\n 19356: a5 = a4 >> 0x10\n 19359: u8 [a0 + 0x1a] = a5\n 19362: a4 = a4 >> 0x8\n 19365: u8 [a0 + 0x19] = a4\n 19368: u8 [a0 + 0x10] = a3\n 19371: a4 = a3 >> 0x38\n 19374: u8 [a0 + 0x17] = a4\n 19377: a4 = a3 >> 0x30\n 19380: u8 [a0 + 0x16] = a4\n 19383: a4 = a3 >> 0x28\n 19386: u8 [a0 + 0x15] = a4\n 19389: a4 = a3 >> 0x20\n 19392: u8 [a0 + 0x14] = a4\n 19395: a4 = a3 >> 0x18\n 19398: u8 [a0 + 0x13] = a4\n 19401: a4 = a3 >> 0x10\n 19404: u8 [a0 + 0x12] = a4\n 19407: a3 = a3 >> 0x8\n 19410: u8 [a0 + 0x11] = a3\n 19413: u8 [a0 + 0x8] = a2\n 19416: a3 = a2 >> 0x38\n 19419: u8 [a0 + 0xf] = a3\n 19422: a3 = a2 >> 0x30\n 19425: u8 [a0 + 0xe] = a3\n 19428: a3 = a2 >> 0x28\n 19431: u8 [a0 + 0xd] = a3\n 19434: a3 = a2 >> 0x20\n 19437: u8 [a0 + 0xc] = a3\n 19440: a3 = a2 >> 0x18\n 19443: u8 [a0 + 0xb] = a3\n 19446: a3 = a2 >> 0x10\n 19449: u8 [a0 + 0xa] = a3\n 19452: a2 = a2 >> 0x8\n 19455: u8 [a0 + 0x9] = a2\n 19458: u8 [a0] = a1\n 19460: a2 = a1 >> 0x38\n 19463: u8 [a0 + 0x7] = a2\n 19466: a2 = a1 >> 0x30\n 19469: u8 [a0 + 0x6] = a2\n 19472: a2 = a1 >> 0x28\n 19475: u8 [a0 + 0x5] = a2\n 19478: a2 = a1 >> 0x20\n 19481: u8 [a0 + 0x4] = a2\n 19484: a2 = a1 >> 0x18\n 19487: u8 [a0 + 0x3] = a2\n 19490: a2 = a1 >> 0x10\n 19493: u8 [a0 + 0x2] = a2\n 19496: a1 = a1 >> 0x8\n 19499: a5 = u64 [sp + 0x98]\n 19503: a2 = a5 >u 0\n 19505: a3 = u64 [sp + 0x90]\n 19509: a3 = a3 <u 0x20\n 19512: a3 = a3 ^ 0x1\n 19515: a3 = a2 if a5 != 0\n 19518: a2 = a5 >u 0\n 19520: a4 = a5 >u 0\n 19522: a4 = a2 if a5 == 0\n 19525: a2 = a5 | a5\n 19528: a4 = a3 if a2 == 0\n 19531: u8 [a0 + 0x1] = a1\n 19534: jump @356 if a4 == 0\n      : @334 (gas: 3)\n 19538: a1 = 0x20\n 19541: a0 = u64 [sp + 0x68]\n 19544: ra = 288, jump @0\n      : @335 [@dyn 144] (gas: 96)\n 19550: a1 = u8 [a0 + 0x9]\n 19553: a2 = u8 [a0 + 0x8]\n 19556: a3 = u8 [a0 + 0xa]\n 19559: a4 = u8 [a0 + 0xb]\n 19562: a1 = a1 << 0x8\n 19565: a1 = a1 | a2\n 19568: a3 = a3 << 0x10\n 19571: a4 = a4 << 0x18\n 19574: a3 = a3 | a4\n 19577: a1 = a1 | a3\n 19580: a2 = u8 [a0 + 0xd]\n 19583: a3 = u8 [a0 + 0xc]\n 19586: a4 = u8 [a0 + 0xe]\n 19589: a5 = u8 [a0 + 0xf]\n 19592: a2 = a2 << 0x8\n 19595: a2 = a2 | a3\n 19598: a4 = a4 << 0x10\n 19601: a5 = a5 << 0x18\n 19604: a4 = a4 | a5\n 19607: a2 = a2 | a4\n 19610: a2 = a2 << 0x20\n 19613: t0 = a2 | a1\n 19616: a2 = u8 [a0 + 0x1]\n 19619: a3 = u8 [a0]\n 19621: a4 = u8 [a0 + 0x2]\n 19624: a5 = u8 [a0 + 0x3]\n 19627: a2 = a2 << 0x8\n 19630: a2 = a2 | a3\n 19633: a4 = a4 << 0x10\n 19636: a5 = a5 << 0x18\n 19639: a4 = a4 | a5\n 19642: a2 = a2 | a4\n 19645: a3 = u8 [a0 + 0x5]\n 19648: a4 = u8 [a0 + 0x4]\n 19651: a5 = u8 [a0 + 0x6]\n 19654: s1 = u8 [a0 + 0x7]\n 19657: a3 = a3 << 0x8\n 19660: a3 = a3 | a4\n 19663: a5 = a5 << 0x10\n 19666: s1 = s1 << 0x18\n 19669: a5 = a5 | s1\n 19672: a3 = a3 | a5\n 19675: a3 = a3 << 0x20\n 19678: a2 = a2 | a3\n 19681: a3 = u8 [a0 + 0x19]\n 19684: a4 = u8 [a0 + 0x18]\n 19687: a5 = u8 [a0 + 0x1a]\n 19690: s1 = u8 [a0 + 0x1b]\n 19693: a3 = a3 << 0x8\n 19696: a3 = a3 | a4\n 19699: a5 = a5 << 0x10\n 19702: s1 = s1 << 0x18\n 19705: a5 = a5 | s1\n 19708: a3 = a3 | a5\n 19711: a4 = u8 [a0 + 0x1d]\n 19714: a5 = u8 [a0 + 0x1c]\n 19717: s1 = u8 [a0 + 0x1e]\n 19720: a1 = u8 [a0 + 0x1f]\n 19723: a4 = a4 << 0x8\n 19726: a4 = a4 | a5\n 19729: s1 = s1 << 0x10\n 19732: a1 = a1 << 0x18\n 19735: a1 = a1 | s1\n 19738: a1 = a1 | a4\n 19741: a1 = a1 << 0x20\n 19744: a3 = a3 | a1\n 19747: a1 = u8 [a0 + 0x11]\n 19750: a4 = u8 [a0 + 0x10]\n 19753: a5 = u8 [a0 + 0x12]\n 19756: s1 = u8 [a0 + 0x13]\n 19759: a1 = a1 << 0x8\n 19762: a1 = a1 | a4\n 19765: a5 = a5 << 0x10\n 19768: s1 = s1 << 0x18\n 19771: a5 = a5 | s1\n 19774: a1 = a1 | a5\n 19777: a4 = u8 [a0 + 0x15]\n 19780: a5 = u8 [a0 + 0x14]\n 19783: s1 = u8 [a0 + 0x16]\n 19786: a0 = u8 [a0 + 0x17]\n 19789: a4 = a4 << 0x8\n 19792: a4 = a4 | a5\n 19795: s1 = s1 << 0x10\n 19798: a0 = a0 << 0x18\n 19801: a0 = a0 | s1\n 19804: a0 = a0 | a4\n 19807: a0 = a0 << 0x20\n 19810: a0 = a0 | a1\n 19813: a1 = reverse a0\n 19815: a4 = reverse a3\n 19817: a4 = a4 <u 0x2\n 19820: a4 = 0 if a1 != 0\n 19822: a1 = t0 | a2\n 19825: a1 = reverse a1\n 19827: a4 = 0 if a1 != 0\n 19829: jump @356 if a4 == 0\n      : @336 (gas: 4)\n 19833: a0 = a0 | a2\n 19836: a1 = t0 | a3\n 19839: a0 = a0 | a1\n 19842: jump @349 if a0 == 0\n      : @337 (gas: 6)\n 19846: sp = s0 + 0xfffffffffffffca0\n 19850: ra = u64 [sp + 0x358]\n 19854: s0 = u64 [sp + 0x350]\n 19858: s1 = u64 [sp + 0x348]\n 19862: sp = sp + 0x360\n 19866: ret\n      : @338 (gas: 3)\n 19868: a0 = 0x40\n 19871: a1 = 0x20\n 19874: ra = 290, jump @0\n      : @339 [@dyn 145] (gas: 103)\n 19880: a1 = u8 [a0 + 0x11]\n 19883: a2 = u8 [a0 + 0x10]\n 19886: a3 = u8 [a0 + 0x12]\n 19889: a4 = u8 [a0 + 0x13]\n 19892: a1 = a1 << 0x8\n 19895: a1 = a1 | a2\n 19898: a3 = a3 << 0x10\n 19901: a4 = a4 << 0x18\n 19904: a3 = a3 | a4\n 19907: a1 = a1 | a3\n 19910: a2 = u8 [a0 + 0x15]\n 19913: a3 = u8 [a0 + 0x14]\n 19916: a4 = u8 [a0 + 0x16]\n 19919: a5 = u8 [a0 + 0x17]\n 19922: a2 = a2 << 0x8\n 19925: a2 = a2 | a3\n 19928: a4 = a4 << 0x10\n 19931: a5 = a5 << 0x18\n 19934: a4 = a4 | a5\n 19937: a2 = a2 | a4\n 19940: a2 = a2 << 0x20\n 19943: t0 = a2 | a1\n 19946: a2 = u8 [a0 + 0x1]\n 19949: a3 = u8 [a0]\n 19951: a4 = u8 [a0 + 0x2]\n 19954: a5 = u8 [a0 + 0x3]\n 19957: a2 = a2 << 0x8\n 19960: a2 = a2 | a3\n 19963: a4 = a4 << 0x10\n 19966: a5 = a5 << 0x18\n 19969: a4 = a4 | a5\n 19972: a2 = a2 | a4\n 19975: a3 = u8 [a0 + 0x5]\n 19978: a4 = u8 [a0 + 0x4]\n 19981: a5 = u8 [a0 + 0x6]\n 19984: s1 = u8 [a0 + 0x7]\n 19987: a3 = a3 << 0x8\n 19990: a3 = a3 | a4\n 19993: a5 = a5 << 0x10\n 19996: s1 = s1 << 0x18\n 19999: a5 = a5 | s1\n 20002: a3 = a3 | a5\n 20005: a3 = a3 << 0x20\n 20008: a2 = a2 | a3\n 20011: a3 = u8 [a0 + 0x19]\n 20014: a4 = u8 [a0 + 0x18]\n 20017: a5 = u8 [a0 + 0x1a]\n 20020: s1 = u8 [a0 + 0x1b]\n 20023: a3 = a3 << 0x8\n 20026: a3 = a3 | a4\n 20029: a5 = a5 << 0x10\n 20032: s1 = s1 << 0x18\n 20035: a5 = a5 | s1\n 20038: a3 = a3 | a5\n 20041: a4 = u8 [a0 + 0x1d]\n 20044: a5 = u8 [a0 + 0x1c]\n 20047: s1 = u8 [a0 + 0x1e]\n 20050: a1 = u8 [a0 + 0x1f]\n 20053: a4 = a4 << 0x8\n 20056: a4 = a4 | a5\n 20059: s1 = s1 << 0x10\n 20062: a1 = a1 << 0x18\n 20065: a1 = a1 | s1\n 20068: a1 = a1 | a4\n 20071: a1 = a1 << 0x20\n 20074: a3 = a3 | a1\n 20077: a1 = u8 [a0 + 0x9]\n 20080: a4 = u8 [a0 + 0x8]\n 20083: a5 = u8 [a0 + 0xa]\n 20086: s1 = u8 [a0 + 0xb]\n 20089: a1 = a1 << 0x8\n 20092: a1 = a1 | a4\n 20095: a5 = a5 << 0x10\n 20098: s1 = s1 << 0x18\n 20101: a5 = a5 | s1\n 20104: a1 = a1 | a5\n 20107: a4 = u8 [a0 + 0xd]\n 20110: a5 = u8 [a0 + 0xc]\n 20113: s1 = u8 [a0 + 0xe]\n 20116: a0 = u8 [a0 + 0xf]\n 20119: a4 = a4 << 0x8\n 20122: a4 = a4 | a5\n 20125: s1 = s1 << 0x10\n 20128: a0 = a0 << 0x18\n 20131: a0 = a0 | s1\n 20134: a0 = a0 | a4\n 20137: a0 = a0 << 0x20\n 20140: a0 = a0 | a1\n 20143: s1 = reverse a0\n 20145: a1 = reverse a3\n 20147: a2 = reverse a2\n 20149: a0 = reverse t0\n 20151: u64 [sp + 0x98] = a0\n 20155: u64 [sp + 0x90] = a2\n 20159: a0 = a0 | a2\n 20162: a2 = a1\n 20164: a1 = a1 | s1\n 20167: a1 = a1 | a0\n 20170: a1 = a1 >> 0x20\n 20173: a0 = a0 | s1\n 20176: a0 = a0 << 0x20\n 20179: a0 = a0 | a1\n 20182: jump @355 if a0 != 0\n      : @340 (gas: 5)\n 20186: u64 [sp + 0x88] = a2\n 20190: i32 a0 = a2 + 0\n 20192: a1 = 0x20\n 20195: u64 [sp + 0x80] = a0\n 20199: ra = 292, jump @0\n      : @341 [@dyn 146] (gas: 50)\n 20205: u8 [a0 + 31] = 0\n 20208: u8 [a0 + 30] = 0\n 20211: u8 [a0 + 29] = 0\n 20214: u8 [a0 + 28] = 0\n 20217: u8 [a0 + 27] = 0\n 20220: u8 [a0 + 26] = 0\n 20223: u8 [a0 + 25] = 0\n 20226: u8 [a0 + 24] = 0\n 20229: u8 [a0 + 23] = 0\n 20232: u8 [a0 + 22] = 0\n 20235: u8 [a0 + 21] = 0\n 20238: u8 [a0 + 20] = 0\n 20241: u8 [a0 + 19] = 0\n 20244: u8 [a0 + 18] = 0\n 20247: u8 [a0 + 17] = 0\n 20250: u8 [a0 + 16] = 0\n 20253: u8 [a0 + 15] = 0\n 20256: u8 [a0 + 14] = 0\n 20259: u8 [a0 + 13] = 0\n 20262: u8 [a0 + 12] = 0\n 20265: u8 [a0 + 11] = 0\n 20268: u8 [a0 + 10] = 0\n 20271: u8 [a0 + 9] = 0\n 20274: u8 [a0 + 8] = 0\n 20277: u8 [a0 + 7] = 0\n 20280: u8 [a0 + 6] = 0\n 20283: u8 [a0 + 5] = 0\n 20286: u8 [a0 + 4] = 0\n 20289: u8 [a0 + 3] = 0xa0\n 20294: u8 [a0 + 2] = 0x79\n 20298: u8 [a0 + 1] = 0xc3\n 20303: u8 [a0 + 0] = 0x8\n 20306: a1 = u64 [sp + 0x88]\n 20310: a0 = a1 + 0x4\n 20313: a1 = a0 <u a1\n 20316: a3 = u64 [sp + 0x98]\n 20320: a2 = a3 + a1\n 20323: a3 = a2 <u a3\n 20326: a3 = a1 if a1 == 0\n 20329: a3 = a3 + s1\n 20332: a1 = a3 <u s1\n 20335: a4 = u64 [sp + 0x90]\n 20339: a4 = a4 + a1\n 20342: u64 [sp + 0x1a8] = a2\n 20346: u64 [sp + 0x1a0] = a0\n 20350: u64 [sp + 0x1b0] = a3\n 20354: a0 = sp + 0x1c0\n 20358: a1 = sp + 0x1a0\n 20362: u64 [sp + 0x1b8] = a4\n 20366: ra = 294, jump @255\n      : @342 [@dyn 147] (gas: 5)\n 20372: a0 = u64 [sp + 0x1c8]\n 20376: t0 = u64 [sp + 0x1d8]\n 20380: t1 = u64 [sp + 0x1c0]\n 20384: a3 = u64 [sp + 0x1d0]\n 20388: jump @354\n      : @343 (gas: 3)\n 20391: a0 = 0x40\n 20394: a1 = 0x20\n 20397: ra = 296, jump @0\n      : @344 [@dyn 148] (gas: 103)\n 20403: a1 = u8 [a0 + 0x11]\n 20406: a2 = u8 [a0 + 0x10]\n 20409: a3 = u8 [a0 + 0x12]\n 20412: a4 = u8 [a0 + 0x13]\n 20415: a1 = a1 << 0x8\n 20418: a1 = a1 | a2\n 20421: a3 = a3 << 0x10\n 20424: a4 = a4 << 0x18\n 20427: a3 = a3 | a4\n 20430: a1 = a1 | a3\n 20433: a2 = u8 [a0 + 0x15]\n 20436: a3 = u8 [a0 + 0x14]\n 20439: a4 = u8 [a0 + 0x16]\n 20442: a5 = u8 [a0 + 0x17]\n 20445: a2 = a2 << 0x8\n 20448: a2 = a2 | a3\n 20451: a4 = a4 << 0x10\n 20454: a5 = a5 << 0x18\n 20457: a4 = a4 | a5\n 20460: a2 = a2 | a4\n 20463: a2 = a2 << 0x20\n 20466: t0 = a2 | a1\n 20469: a2 = u8 [a0 + 0x1]\n 20472: a3 = u8 [a0]\n 20474: a4 = u8 [a0 + 0x2]\n 20477: a5 = u8 [a0 + 0x3]\n 20480: a2 = a2 << 0x8\n 20483: a2 = a2 | a3\n 20486: a4 = a4 << 0x10\n 20489: a5 = a5 << 0x18\n 20492: a4 = a4 | a5\n 20495: a2 = a2 | a4\n 20498: a3 = u8 [a0 + 0x5]\n 20501: a4 = u8 [a0 + 0x4]\n 20504: a5 = u8 [a0 + 0x6]\n 20507: s1 = u8 [a0 + 0x7]\n 20510: a3 = a3 << 0x8\n 20513: a3 = a3 | a4\n 20516: a5 = a5 << 0x10\n 20519: s1 = s1 << 0x18\n 20522: a5 = a5 | s1\n 20525: a3 = a3 | a5\n 20528: a3 = a3 << 0x20\n 20531: a2 = a2 | a3\n 20534: a3 = u8 [a0 + 0x19]\n 20537: a4 = u8 [a0 + 0x18]\n 20540: a5 = u8 [a0 + 0x1a]\n 20543: s1 = u8 [a0 + 0x1b]\n 20546: a3 = a3 << 0x8\n 20549: a3 = a3 | a4\n 20552: a5 = a5 << 0x10\n 20555: s1 = s1 << 0x18\n 20558: a5 = a5 | s1\n 20561: a3 = a3 | a5\n 20564: a4 = u8 [a0 + 0x1d]\n 20567: a5 = u8 [a0 + 0x1c]\n 20570: s1 = u8 [a0 + 0x1e]\n 20573: a1 = u8 [a0 + 0x1f]\n 20576: a4 = a4 << 0x8\n 20579: a4 = a4 | a5\n 20582: s1 = s1 << 0x10\n 20585: a1 = a1 << 0x18\n 20588: a1 = a1 | s1\n 20591: a1 = a1 | a4\n 20594: a1 = a1 << 0x20\n 20597: a3 = a3 | a1\n 20600: a1 = u8 [a0 + 0x9]\n 20603: a4 = u8 [a0 + 0x8]\n 20606: a5 = u8 [a0 + 0xa]\n 20609: s1 = u8 [a0 + 0xb]\n 20612: a1 = a1 << 0x8\n 20615: a1 = a1 | a4\n 20618: a5 = a5 << 0x10\n 20621: s1 = s1 << 0x18\n 20624: a5 = a5 | s1\n 20627: a1 = a1 | a5\n 20630: a4 = u8 [a0 + 0xd]\n 20633: a5 = u8 [a0 + 0xc]\n 20636: s1 = u8 [a0 + 0xe]\n 20639: a0 = u8 [a0 + 0xf]\n 20642: a4 = a4 << 0x8\n 20645: a4 = a4 | a5\n 20648: s1 = s1 << 0x10\n 20651: a0 = a0 << 0x18\n 20654: a0 = a0 | s1\n 20657: a0 = a0 | a4\n 20660: a0 = a0 << 0x20\n 20663: a0 = a0 | a1\n 20666: s1 = reverse a0\n 20668: a1 = reverse a3\n 20670: a2 = reverse a2\n 20672: a0 = reverse t0\n 20674: u64 [sp + 0x98] = a0\n 20678: u64 [sp + 0x90] = a2\n 20682: a0 = a0 | a2\n 20685: a2 = a1\n 20687: a1 = a1 | s1\n 20690: a1 = a1 | a0\n 20693: a1 = a1 >> 0x20\n 20696: a0 = a0 | s1\n 20699: a0 = a0 << 0x20\n 20702: a0 = a0 | a1\n 20705: jump @355 if a0 != 0\n      : @345 (gas: 5)\n 20709: u64 [sp + 0x88] = a2\n 20713: i32 a0 = a2 + 0\n 20715: a1 = 0x20\n 20718: u64 [sp + 0x80] = a0\n 20722: ra = 298, jump @0\n      : @346 [@dyn 149] (gas: 50)\n 20728: u8 [a0 + 31] = 0\n 20731: u8 [a0 + 30] = 0\n 20734: u8 [a0 + 29] = 0\n 20737: u8 [a0 + 28] = 0\n 20740: u8 [a0 + 27] = 0\n 20743: u8 [a0 + 26] = 0\n 20746: u8 [a0 + 25] = 0\n 20749: u8 [a0 + 24] = 0\n 20752: u8 [a0 + 23] = 0\n 20755: u8 [a0 + 22] = 0\n 20758: u8 [a0 + 21] = 0\n 20761: u8 [a0 + 20] = 0\n 20764: u8 [a0 + 19] = 0\n 20767: u8 [a0 + 18] = 0\n 20770: u8 [a0 + 17] = 0\n 20773: u8 [a0 + 16] = 0\n 20776: u8 [a0 + 15] = 0\n 20779: u8 [a0 + 14] = 0\n 20782: u8 [a0 + 13] = 0\n 20785: u8 [a0 + 12] = 0\n 20788: u8 [a0 + 11] = 0\n 20791: u8 [a0 + 10] = 0\n 20794: u8 [a0 + 9] = 0\n 20797: u8 [a0 + 8] = 0\n 20800: u8 [a0 + 7] = 0\n 20803: u8 [a0 + 6] = 0\n 20806: u8 [a0 + 5] = 0\n 20809: u8 [a0 + 4] = 0\n 20812: u8 [a0 + 3] = 0xa0\n 20817: u8 [a0 + 2] = 0x79\n 20821: u8 [a0 + 1] = 0xc3\n 20826: u8 [a0 + 0] = 0x8\n 20829: a1 = u64 [sp + 0x88]\n 20833: a0 = a1 + 0x4\n 20836: a1 = a0 <u a1\n 20839: a3 = u64 [sp + 0x98]\n 20843: a2 = a3 + a1\n 20846: a3 = a2 <u a3\n 20849: a3 = a1 if a1 == 0\n 20852: a3 = a3 + s1\n 20855: a1 = a3 <u s1\n 20858: a4 = u64 [sp + 0x90]\n 20862: a4 = a4 + a1\n 20865: u64 [sp + 0xa8] = a2\n 20869: u64 [sp + 0xa0] = a0\n 20873: u64 [sp + 0xb0] = a3\n 20877: a0 = sp + 0xc0\n 20881: a1 = sp + 0xa0\n 20885: u64 [sp + 0xb8] = a4\n 20889: ra = 300, jump @263\n      : @347 [@dyn 150] (gas: 5)\n 20895: a0 = u64 [sp + 0xc8]\n 20899: t0 = u64 [sp + 0xd8]\n 20903: t1 = u64 [sp + 0xc0]\n 20907: a3 = u64 [sp + 0xd0]\n 20911: jump @354\n      : @348 (gas: 1)\n 20914: ra = 302, jump @275\n      : @349 [@dyn 151] (gas: 3)\n 20920: a0 = 0x40\n 20923: a1 = 0x20\n 20926: ra = 304, jump @0\n      : @350 [@dyn 152] (gas: 103)\n 20932: a1 = u8 [a0 + 0x11]\n 20935: a2 = u8 [a0 + 0x10]\n 20938: a3 = u8 [a0 + 0x12]\n 20941: a4 = u8 [a0 + 0x13]\n 20944: a1 = a1 << 0x8\n 20947: a1 = a1 | a2\n 20950: a3 = a3 << 0x10\n 20953: a4 = a4 << 0x18\n 20956: a3 = a3 | a4\n 20959: a1 = a1 | a3\n 20962: a2 = u8 [a0 + 0x15]\n 20965: a3 = u8 [a0 + 0x14]\n 20968: a4 = u8 [a0 + 0x16]\n 20971: a5 = u8 [a0 + 0x17]\n 20974: a2 = a2 << 0x8\n 20977: a2 = a2 | a3\n 20980: a4 = a4 << 0x10\n 20983: a5 = a5 << 0x18\n 20986: a4 = a4 | a5\n 20989: a2 = a2 | a4\n 20992: a2 = a2 << 0x20\n 20995: t0 = a2 | a1\n 20998: a2 = u8 [a0 + 0x1]\n 21001: a3 = u8 [a0]\n 21003: a4 = u8 [a0 + 0x2]\n 21006: a5 = u8 [a0 + 0x3]\n 21009: a2 = a2 << 0x8\n 21012: a2 = a2 | a3\n 21015: a4 = a4 << 0x10\n 21018: a5 = a5 << 0x18\n 21021: a4 = a4 | a5\n 21024: a2 = a2 | a4\n 21027: a3 = u8 [a0 + 0x5]\n 21030: a4 = u8 [a0 + 0x4]\n 21033: a5 = u8 [a0 + 0x6]\n 21036: s1 = u8 [a0 + 0x7]\n 21039: a3 = a3 << 0x8\n 21042: a3 = a3 | a4\n 21045: a5 = a5 << 0x10\n 21048: s1 = s1 << 0x18\n 21051: a5 = a5 | s1\n 21054: a3 = a3 | a5\n 21057: a3 = a3 << 0x20\n 21060: a2 = a2 | a3\n 21063: a3 = u8 [a0 + 0x19]\n 21066: a4 = u8 [a0 + 0x18]\n 21069: a5 = u8 [a0 + 0x1a]\n 21072: s1 = u8 [a0 + 0x1b]\n 21075: a3 = a3 << 0x8\n 21078: a3 = a3 | a4\n 21081: a5 = a5 << 0x10\n 21084: s1 = s1 << 0x18\n 21087: a5 = a5 | s1\n 21090: a3 = a3 | a5\n 21093: a4 = u8 [a0 + 0x1d]\n 21096: a5 = u8 [a0 + 0x1c]\n 21099: s1 = u8 [a0 + 0x1e]\n 21102: a1 = u8 [a0 + 0x1f]\n 21105: a4 = a4 << 0x8\n 21108: a4 = a4 | a5\n 21111: s1 = s1 << 0x10\n 21114: a1 = a1 << 0x18\n 21117: a1 = a1 | s1\n 21120: a1 = a1 | a4\n 21123: a1 = a1 << 0x20\n 21126: a3 = a3 | a1\n 21129: a1 = u8 [a0 + 0x9]\n 21132: a4 = u8 [a0 + 0x8]\n 21135: a5 = u8 [a0 + 0xa]\n 21138: s1 = u8 [a0 + 0xb]\n 21141: a1 = a1 << 0x8\n 21144: a1 = a1 | a4\n 21147: a5 = a5 << 0x10\n 21150: s1 = s1 << 0x18\n 21153: a5 = a5 | s1\n 21156: a1 = a1 | a5\n 21159: a4 = u8 [a0 + 0xd]\n 21162: a5 = u8 [a0 + 0xc]\n 21165: s1 = u8 [a0 + 0xe]\n 21168: a0 = u8 [a0 + 0xf]\n 21171: a4 = a4 << 0x8\n 21174: a4 = a4 | a5\n 21177: s1 = s1 << 0x10\n 21180: a0 = a0 << 0x18\n 21183: a0 = a0 | s1\n 21186: a0 = a0 | a4\n 21189: a0 = a0 << 0x20\n 21192: a0 = a0 | a1\n 21195: s1 = reverse a0\n 21197: a1 = reverse a3\n 21199: a2 = reverse a2\n 21201: a0 = reverse t0\n 21203: u64 [sp + 0x98] = a0\n 21207: u64 [sp + 0x90] = a2\n 21211: a0 = a0 | a2\n 21214: a2 = a1\n 21216: a1 = a1 | s1\n 21219: a1 = a1 | a0\n 21222: a1 = a1 >> 0x20\n 21225: a0 = a0 | s1\n 21228: a0 = a0 << 0x20\n 21231: a0 = a0 | a1\n 21234: jump @355 if a0 != 0\n      : @351 (gas: 5)\n 21238: u64 [sp + 0x88] = a2\n 21242: i32 a0 = a2 + 0\n 21244: a1 = 0x20\n 21247: u64 [sp + 0x80] = a0\n 21251: ra = 306, jump @0\n      : @352 [@dyn 153] (gas: 50)\n 21257: u8 [a0 + 31] = 0\n 21260: u8 [a0 + 30] = 0\n 21263: u8 [a0 + 29] = 0\n 21266: u8 [a0 + 28] = 0\n 21269: u8 [a0 + 27] = 0\n 21272: u8 [a0 + 26] = 0\n 21275: u8 [a0 + 25] = 0\n 21278: u8 [a0 + 24] = 0\n 21281: u8 [a0 + 23] = 0\n 21284: u8 [a0 + 22] = 0\n 21287: u8 [a0 + 21] = 0\n 21290: u8 [a0 + 20] = 0\n 21293: u8 [a0 + 19] = 0\n 21296: u8 [a0 + 18] = 0\n 21299: u8 [a0 + 17] = 0\n 21302: u8 [a0 + 16] = 0\n 21305: u8 [a0 + 15] = 0\n 21308: u8 [a0 + 14] = 0\n 21311: u8 [a0 + 13] = 0\n 21314: u8 [a0 + 12] = 0\n 21317: u8 [a0 + 11] = 0\n 21320: u8 [a0 + 10] = 0\n 21323: u8 [a0 + 9] = 0\n 21326: u8 [a0 + 8] = 0\n 21329: u8 [a0 + 7] = 0\n 21332: u8 [a0 + 6] = 0\n 21335: u8 [a0 + 5] = 0\n 21338: u8 [a0 + 4] = 0\n 21341: u8 [a0 + 3] = 0xa0\n 21346: u8 [a0 + 2] = 0x79\n 21350: u8 [a0 + 1] = 0xc3\n 21355: u8 [a0 + 0] = 0x8\n 21358: a1 = u64 [sp + 0x88]\n 21362: a0 = a1 + 0x4\n 21365: a1 = a0 <u a1\n 21368: a3 = u64 [sp + 0x98]\n 21372: a2 = a3 + a1\n 21375: a3 = a2 <u a3\n 21378: a3 = a1 if a1 == 0\n 21381: a3 = a3 + s1\n 21384: a1 = a3 <u s1\n 21387: a4 = u64 [sp + 0x90]\n 21391: a4 = a4 + a1\n 21394: u64 [sp + 0x168] = a2\n 21398: u64 [sp + 0x160] = a0\n 21402: u64 [sp + 0x170] = a3\n 21406: a0 = sp + 0x180\n 21410: a1 = sp + 0x160\n 21414: u64 [sp + 0x178] = a4\n 21418: ra = 308, jump @291\n      : @353 [@dyn 154] (gas: 5)\n 21424: a0 = u64 [sp + 0x188]\n 21428: t0 = u64 [sp + 0x198]\n 21432: t1 = u64 [sp + 0x180]\n 21436: a3 = u64 [sp + 0x190]\n 21440: fallthrough\n      : @354 (gas: 26)\n 21441: a1 = u64 [sp + 0x98]\n 21445: a4 = a0 ^ a1\n 21448: a5 = a0 <u a1\n 21451: t2 = a1\n 21453: a2 = u64 [sp + 0x88]\n 21457: a1 = t1 <u a2\n 21460: a5 = a1 if a4 == 0\n 21463: a4 = a3 - s1\n 21466: a3 = a3 <u s1\n 21469: s1 = u64 [sp + 0x90]\n 21473: s1 = t0 - s1\n 21476: s1 = s1 - a3\n 21479: a3 = a4 <u a5\n 21482: s1 = s1 - a3\n 21485: a4 = a4 - a5\n 21488: a0 = a0 - t2\n 21491: a1 = a0 - a1\n 21494: a0 = t1 - a2\n 21497: a1 = a1 | s1\n 21500: a2 = a0 | a4\n 21503: a2 = a2 | a1\n 21506: a1 = a1 | a4\n 21509: a2 = a2 >> 0x20\n 21512: a1 = a1 << 0x20\n 21515: a1 = a1 | a2\n 21518: jump @364 if a1 == 0\n      : @355 (gas: 1)\n 21522: trap\n      : @356 (gas: 3)\n 21523: a0 = 0\n 21525: a1 = 0\n 21527: ra = 310, jump @0\n      : @357 [@dyn 155] (gas: 5)\n 21533: i32 a1 = a0 + 0\n 21535: a0 = 0x1\n 21538: a2 = 0\n 21540: ecalli 13 // 'seal_return'\n 21542: fallthrough\n      : @358 (gas: 8)\n 21543: u64 [sp + 272] = 0\n 21547: u64 [sp + 264] = 0\n 21551: u64 [sp + 256] = 0\n 21555: a0 = 0x4e487b7100000000\n 21565: a1 = sp + 0x100\n 21569: u64 [sp + 0x118] = a0\n 21573: a0 = 0\n 21575: ra = 312, jump @8\n      : @359 [@dyn 156] (gas: 8)\n 21581: u64 [sp + 248] = 0\n 21585: u64 [sp + 240] = 0\n 21589: u64 [sp + 224] = 0x11\n 21594: a0 = 0x4\n 21597: a1 = sp + 0xe0\n 21601: u64 [sp + 232] = 0\n 21605: ra = 0x13c\n 21609: jump @8\n      : @360 (gas: 8)\n 21612: u64 [sp + 336] = 0\n 21616: u64 [sp + 328] = 0\n 21620: u64 [sp + 320] = 0\n 21624: a0 = 0x4e487b7100000000\n 21634: a1 = sp + 0x140\n 21638: u64 [sp + 0x158] = a0\n 21642: a0 = 0\n 21644: ra = 314, jump @8\n      : @361 [@dyn 157] (gas: 7)\n 21650: u64 [sp + 312] = 0\n 21654: u64 [sp + 304] = 0\n 21658: u64 [sp + 288] = 0x41\n 21663: a0 = 0x4\n 21666: a1 = sp + 0x120\n 21670: u64 [sp + 296] = 0\n 21674: ra = 316, jump @8\n      : @362 [@dyn 158] (gas: 3)\n 21680: a1 = 0x24\n 21683: a0 = 0\n 21685: ra = 318, jump @0\n      : @363 [@dyn 159] (gas: 5)\n 21691: i32 a1 = a0 + 0\n 21693: a0 = 0x1\n 21696: a2 = 0x24\n 21699: ecalli 13 // 'seal_return'\n 21701: fallthrough\n      : @364 (gas: 4)\n 21702: i32 s1 = a0 + 0\n 21704: a0 = u64 [sp + 0x80]\n 21708: a1 = s1\n 21710: ra = 320, jump @0\n      : @365 [@dyn 160] (gas: 6)\n 21716: i32 a1 = a0 + 0\n 21718: a0 = 0x1\n 21721: a2 = s1\n 21723: ra = 0x142\n 21727: ecalli 13 // 'seal_return'\n 21729: fallthrough\n      : @366 [@dyn 161] (gas: 12)\n 21730: a1 = u64 [a0 + 0x10]\n 21733: a2 = u64 [a0 + 0x18]\n 21736: a3 = u64 [a0 + 0x8]\n 21739: a0 = u64 [a0]\n 21741: a2 = a2 | a3\n 21744: a3 = a0 | a1\n 21747: a3 = a3 | a2\n 21750: a3 = a3 >> 0x20\n 21753: a1 = a1 | a2\n 21756: a1 = a1 << 0x20\n 21759: a1 = a1 | a3\n 21762: jump @369 if a1 != 0\n      : @367 (gas: 7)\n 21766: sp = sp + 0xfffffffffffffff0\n 21769: u64 [sp + 0x8] = ra\n 21772: u64 [sp] = s0\n 21774: i32 a0 = a0 + 0\n 21776: a1 = 0x20\n 21779: s0 = 0x20\n 21782: ra = 324, jump @0\n      : @368 [@dyn 162] (gas: 41)\n 21788: u8 [a0 + 31] = 0\n 21791: u8 [a0 + 30] = 0\n 21794: u8 [a0 + 29] = 0\n 21797: u8 [a0 + 28] = 0x74\n 21801: u8 [a0 + 27] = 0x6e\n 21805: u8 [a0 + 26] = 0x75\n 21809: u8 [a0 + 25] = 0x6f\n 21813: u8 [a0 + 24] = 0x6d\n 21817: u8 [a0 + 23] = 0x61\n 21821: u8 [a0 + 0x16] = s0\n 21824: a4 = 0x64\n 21827: u8 [a0 + 0x15] = a4\n 21830: a2 = 0x65\n 21833: u8 [a0 + 0x14] = a2\n 21836: u8 [a0 + 19] = 0x77\n 21840: u8 [a0 + 18] = 0x6f\n 21844: a5 = 0x72\n 21847: u8 [a0 + 0x11] = a5\n 21850: u8 [a0 + 0x10] = a5\n 21853: u8 [a0 + 15] = 0x6f\n 21857: u8 [a0 + 14] = 0x62\n 21861: u8 [a0 + 0xd] = s0\n 21864: u8 [a0 + 12] = 0x73\n 21868: u8 [a0 + 0xb] = a4\n 21871: u8 [a0 + 0xa] = a2\n 21874: u8 [a0 + 0x9] = a2\n 21877: u8 [a0 + 8] = 0x63\n 21881: u8 [a0 + 7] = 0x78\n 21885: u8 [a0 + 0x6] = a2\n 21888: u8 [a0 + 0x5] = s0\n 21891: a3 = 0x79\n 21894: u8 [a0 + 0x4] = a3\n 21897: u8 [a0 + 3] = 0x61\n 21901: u8 [a0 + 2] = 0x70\n 21905: u8 [a0 + 0x1] = a2\n 21908: a1 = 0x52\n 21911: u8 [a0] = a1\n 21913: ra = u64 [sp + 0x8]\n 21916: s0 = u64 [sp]\n 21918: sp = sp + 0x10\n 21921: ret\n      : @369 (gas: 1)\n 21923: trap\n      : @370 (gas: 17)\n 21924: sp = sp + 0xffffffffffffffa0\n 21927: u64 [sp + 0x58] = ra\n 21930: u64 [sp + 0x50] = s0\n 21933: u64 [sp + 0x48] = s1\n 21936: a3 = u64 [a1 + 0x18]\n 21939: a4 = u64 [a1 + 0x10]\n 21942: a5 = u64 [a1 + 0x8]\n 21945: s1 = u64 [a1]\n 21947: a1 = a5 | a3\n 21950: a2 = s1 | a4\n 21953: a2 = a2 | a1\n 21956: a2 = a2 >> 0x20\n 21959: a1 = a1 | a4\n 21962: a1 = a1 << 0x20\n 21965: a1 = a1 | a2\n 21968: u64 [sp + 0x28] = a0\n 21971: jump @377 if a1 != 0\n      : @371 (gas: 19)\n 21975: a0 = s1 + 0x20\n 21978: u64 [sp + 0x30] = a0\n 21981: a0 = a0 <u s1\n 21984: a1 = a5 + a0\n 21987: u64 [sp + 0x40] = a1\n 21990: u64 [sp + 0x8] = a5\n 21993: s0 = a1 <u a5\n 21996: s0 = a0 if a0 == 0\n 21999: s0 = s0 + a4\n 22002: u64 [sp + 0x10] = a4\n 22005: a0 = s0 <u a4\n 22008: u64 [sp + 0x18] = a3\n 22011: a0 = a0 + a3\n 22014: u64 [sp + 0x38] = a0\n 22017: u64 [sp] = s1\n 22019: i32 a0 = s1 + 0\n 22021: a1 = 0x20\n 22024: s1 = 0x20\n 22027: ra = 326, jump @0\n      : @372 [@dyn 163] (gas: 45)\n 22033: u8 [a0 + 0x1f] = s1\n 22036: a1 = u64 [sp + 0x30]\n 22039: s1 = a1\n 22041: a1 = a1 | s0\n 22044: a2 = u64 [sp + 0x40]\n 22047: a4 = u64 [sp + 0x38]\n 22050: a2 = a2 | a4\n 22053: a1 = a1 | a2\n 22056: a1 = a1 >> 0x20\n 22059: u64 [sp + 0x20] = s0\n 22062: a2 = a2 | s0\n 22065: a2 = a2 << 0x20\n 22068: a1 = a1 | a2\n 22071: u8 [a0 + 30] = 0\n 22074: u8 [a0 + 29] = 0\n 22077: u8 [a0 + 28] = 0\n 22080: u8 [a0 + 27] = 0\n 22083: u8 [a0 + 26] = 0\n 22086: u8 [a0 + 25] = 0\n 22089: u8 [a0 + 24] = 0\n 22092: u8 [a0 + 23] = 0\n 22095: u8 [a0 + 22] = 0\n 22098: u8 [a0 + 21] = 0\n 22101: u8 [a0 + 20] = 0\n 22104: u8 [a0 + 19] = 0\n 22107: u8 [a0 + 18] = 0\n 22110: u8 [a0 + 17] = 0\n 22113: u8 [a0 + 16] = 0\n 22116: u8 [a0 + 15] = 0\n 22119: u8 [a0 + 14] = 0\n 22122: u8 [a0 + 13] = 0\n 22125: u8 [a0 + 12] = 0\n 22128: u8 [a0 + 11] = 0\n 22131: u8 [a0 + 10] = 0\n 22134: u8 [a0 + 9] = 0\n 22137: u8 [a0 + 8] = 0\n 22140: u8 [a0 + 7] = 0\n 22143: u8 [a0 + 6] = 0\n 22146: u8 [a0 + 5] = 0\n 22149: u8 [a0 + 4] = 0\n 22152: u8 [a0 + 3] = 0\n 22155: u8 [a0 + 2] = 0\n 22158: u8 [a0 + 1] = 0\n 22161: u8 [a0 + 0] = 0\n 22163: jump @377 if a1 != 0\n      : @373 (gas: 4)\n 22167: i32 s0 = s1 + 0\n 22169: a1 = 0x20\n 22172: a0 = s0\n 22174: ra = 328, jump @0\n      : @374 [@dyn 164] (gas: 41)\n 22180: u8 [a0 + 31] = 0x1d\n 22184: u8 [a0 + 30] = 0\n 22187: u8 [a0 + 29] = 0\n 22190: u8 [a0 + 28] = 0\n 22193: u8 [a0 + 27] = 0\n 22196: u8 [a0 + 26] = 0\n 22199: u8 [a0 + 25] = 0\n 22202: u8 [a0 + 24] = 0\n 22205: u8 [a0 + 23] = 0\n 22208: u8 [a0 + 22] = 0\n 22211: u8 [a0 + 21] = 0\n 22214: u8 [a0 + 20] = 0\n 22217: u8 [a0 + 19] = 0\n 22220: u8 [a0 + 18] = 0\n 22223: u8 [a0 + 17] = 0\n 22226: u8 [a0 + 16] = 0\n 22229: u8 [a0 + 15] = 0\n 22232: u8 [a0 + 14] = 0\n 22235: u8 [a0 + 13] = 0\n 22238: u8 [a0 + 12] = 0\n 22241: u8 [a0 + 11] = 0\n 22244: u8 [a0 + 10] = 0\n 22247: u8 [a0 + 9] = 0\n 22250: u8 [a0 + 8] = 0\n 22253: u8 [a0 + 7] = 0\n 22256: u8 [a0 + 6] = 0\n 22259: u8 [a0 + 5] = 0\n 22262: u8 [a0 + 4] = 0\n 22265: u8 [a0 + 3] = 0\n 22268: u8 [a0 + 2] = 0\n 22271: u8 [a0 + 1] = 0\n 22274: a1 = u64 [sp + 0x20]\n 22277: a2 = u64 [sp + 0x38]\n 22280: a1 = a1 | a2\n 22283: a2 = 0xffffffe0\n 22293: a2 = s1 <u a2\n 22296: a3 = u64 [sp + 0x40]\n 22299: a2 = 0 if a3 != 0\n 22301: a2 = 0 if a1 != 0\n 22303: u8 [a0 + 0] = 0\n 22305: jump @377 if a2 == 0\n      : @375 (gas: 3)\n 22309: i32 a0 = s0 + 0x20\n 22312: a1 = 0x20\n 22315: ra = 330, jump @0\n      : @376 [@dyn 165] (gas: 55)\n 22321: u8 [a0 + 31] = 0\n 22324: u8 [a0 + 30] = 0\n 22327: u8 [a0 + 29] = 0\n 22330: u8 [a0 + 28] = 0x74\n 22334: u8 [a0 + 27] = 0x6e\n 22338: u8 [a0 + 26] = 0x75\n 22342: u8 [a0 + 25] = 0x6f\n 22346: u8 [a0 + 24] = 0x6d\n 22350: u8 [a0 + 23] = 0x61\n 22354: u8 [a0 + 22] = 0x20\n 22358: u8 [a0 + 21] = 0x64\n 22362: u8 [a0 + 20] = 0x65\n 22366: u8 [a0 + 19] = 0x77\n 22370: u8 [a0 + 18] = 0x6f\n 22374: a5 = 0x72\n 22377: u8 [a0 + 0x11] = a5\n 22380: u8 [a0 + 0x10] = a5\n 22383: u8 [a0 + 15] = 0x6f\n 22387: u8 [a0 + 14] = 0x62\n 22391: u8 [a0 + 13] = 0x20\n 22395: u8 [a0 + 12] = 0x73\n 22399: u8 [a0 + 11] = 0x64\n 22403: u8 [a0 + 10] = 0x65\n 22407: u8 [a0 + 9] = 0x65\n 22411: u8 [a0 + 8] = 0x63\n 22415: u8 [a0 + 7] = 0x78\n 22419: u8 [a0 + 6] = 0x65\n 22423: u8 [a0 + 5] = 0x20\n 22427: u8 [a0 + 4] = 0x79\n 22431: u8 [a0 + 3] = 0x61\n 22435: u8 [a0 + 2] = 0x70\n 22439: u8 [a0 + 1] = 0x65\n 22443: u8 [a0 + 0] = 0x52\n 22446: a1 = u64 [sp]\n 22448: a0 = a1 + 0x60\n 22451: a1 = a0 <u a1\n 22454: a3 = u64 [sp + 0x8]\n 22457: a2 = a3 + a1\n 22460: a3 = a2 <u a3\n 22463: a3 = a1 if a1 == 0\n 22466: a1 = u64 [sp + 0x10]\n 22469: a3 = a3 + a1\n 22472: a1 = a3 <u a1\n 22475: a4 = u64 [sp + 0x18]\n 22478: a1 = a1 + a4\n 22481: a4 = u64 [sp + 0x28]\n 22484: u64 [a4] = a0\n 22486: u64 [a4 + 0x8] = a2\n 22489: u64 [a4 + 0x10] = a3\n 22492: u64 [a4 + 0x18] = a1\n 22495: ra = u64 [sp + 0x58]\n 22498: s0 = u64 [sp + 0x50]\n 22501: s1 = u64 [sp + 0x48]\n 22504: sp = sp + 0x60\n 22507: ret\n      : @377 (gas: 1)\n 22509: trap\n      : @378 (gas: 17)\n 22510: sp = sp + 0xffffffffffffffa0\n 22513: u64 [sp + 0x58] = ra\n 22516: u64 [sp + 0x50] = s0\n 22519: u64 [sp + 0x48] = s1\n 22522: a3 = u64 [a1 + 0x18]\n 22525: a4 = u64 [a1 + 0x10]\n 22528: a5 = u64 [a1 + 0x8]\n 22531: s1 = u64 [a1]\n 22533: a1 = a5 | a3\n 22536: a2 = s1 | a4\n 22539: a2 = a2 | a1\n 22542: a2 = a2 >> 0x20\n 22545: a1 = a1 | a4\n 22548: a1 = a1 << 0x20\n 22551: a1 = a1 | a2\n 22554: u64 [sp + 0x28] = a0\n 22557: jump @385 if a1 != 0\n      : @379 (gas: 19)\n 22561: a0 = s1 + 0x20\n 22564: u64 [sp + 0x30] = a0\n 22567: a0 = a0 <u s1\n 22570: a1 = a5 + a0\n 22573: u64 [sp + 0x40] = a1\n 22576: u64 [sp + 0x8] = a5\n 22579: s0 = a1 <u a5\n 22582: s0 = a0 if a0 == 0\n 22585: s0 = s0 + a4\n 22588: u64 [sp + 0x10] = a4\n 22591: a0 = s0 <u a4\n 22594: u64 [sp + 0x18] = a3\n 22597: a0 = a0 + a3\n 22600: u64 [sp + 0x38] = a0\n 22603: u64 [sp] = s1\n 22605: i32 a0 = s1 + 0\n 22607: a1 = 0x20\n 22610: s1 = 0x20\n 22613: ra = 332, jump @0\n      : @380 [@dyn 166] (gas: 45)\n 22619: u8 [a0 + 0x1f] = s1\n 22622: a1 = u64 [sp + 0x30]\n 22625: s1 = a1\n 22627: a1 = a1 | s0\n 22630: a2 = u64 [sp + 0x40]\n 22633: a4 = u64 [sp + 0x38]\n 22636: a2 = a2 | a4\n 22639: a1 = a1 | a2\n 22642: a1 = a1 >> 0x20\n 22645: u64 [sp + 0x20] = s0\n 22648: a2 = a2 | s0\n 22651: a2 = a2 << 0x20\n 22654: a1 = a1 | a2\n 22657: u8 [a0 + 30] = 0\n 22660: u8 [a0 + 29] = 0\n 22663: u8 [a0 + 28] = 0\n 22666: u8 [a0 + 27] = 0\n 22669: u8 [a0 + 26] = 0\n 22672: u8 [a0 + 25] = 0\n 22675: u8 [a0 + 24] = 0\n 22678: u8 [a0 + 23] = 0\n 22681: u8 [a0 + 22] = 0\n 22684: u8 [a0 + 21] = 0\n 22687: u8 [a0 + 20] = 0\n 22690: u8 [a0 + 19] = 0\n 22693: u8 [a0 + 18] = 0\n 22696: u8 [a0 + 17] = 0\n 22699: u8 [a0 + 16] = 0\n 22702: u8 [a0 + 15] = 0\n 22705: u8 [a0 + 14] = 0\n 22708: u8 [a0 + 13] = 0\n 22711: u8 [a0 + 12] = 0\n 22714: u8 [a0 + 11] = 0\n 22717: u8 [a0 + 10] = 0\n 22720: u8 [a0 + 9] = 0\n 22723: u8 [a0 + 8] = 0\n 22726: u8 [a0 + 7] = 0\n 22729: u8 [a0 + 6] = 0\n 22732: u8 [a0 + 5] = 0\n 22735: u8 [a0 + 4] = 0\n 22738: u8 [a0 + 3] = 0\n 22741: u8 [a0 + 2] = 0\n 22744: u8 [a0 + 1] = 0\n 22747: u8 [a0 + 0] = 0\n 22749: jump @385 if a1 != 0\n      : @381 (gas: 4)\n 22753: i32 s0 = s1 + 0\n 22755: a1 = 0x20\n 22758: a0 = s0\n 22760: ra = 334, jump @0\n      : @382 [@dyn 167] (gas: 41)\n 22766: u8 [a0 + 31] = 0x15\n 22770: u8 [a0 + 30] = 0\n 22773: u8 [a0 + 29] = 0\n 22776: u8 [a0 + 28] = 0\n 22779: u8 [a0 + 27] = 0\n 22782: u8 [a0 + 26] = 0\n 22785: u8 [a0 + 25] = 0\n 22788: u8 [a0 + 24] = 0\n 22791: u8 [a0 + 23] = 0\n 22794: u8 [a0 + 22] = 0\n 22797: u8 [a0 + 21] = 0\n 22800: u8 [a0 + 20] = 0\n 22803: u8 [a0 + 19] = 0\n 22806: u8 [a0 + 18] = 0\n 22809: u8 [a0 + 17] = 0\n 22812: u8 [a0 + 16] = 0\n 22815: u8 [a0 + 15] = 0\n 22818: u8 [a0 + 14] = 0\n 22821: u8 [a0 + 13] = 0\n 22824: u8 [a0 + 12] = 0\n 22827: u8 [a0 + 11] = 0\n 22830: u8 [a0 + 10] = 0\n 22833: u8 [a0 + 9] = 0\n 22836: u8 [a0 + 8] = 0\n 22839: u8 [a0 + 7] = 0\n 22842: u8 [a0 + 6] = 0\n 22845: u8 [a0 + 5] = 0\n 22848: u8 [a0 + 4] = 0\n 22851: u8 [a0 + 3] = 0\n 22854: u8 [a0 + 2] = 0\n 22857: u8 [a0 + 1] = 0\n 22860: a1 = u64 [sp + 0x20]\n 22863: a2 = u64 [sp + 0x38]\n 22866: a1 = a1 | a2\n 22869: a2 = 0xffffffe0\n 22879: a2 = s1 <u a2\n 22882: a3 = u64 [sp + 0x40]\n 22885: a2 = 0 if a3 != 0\n 22887: a2 = 0 if a1 != 0\n 22889: u8 [a0 + 0] = 0\n 22891: jump @385 if a2 == 0\n      : @383 (gas: 3)\n 22895: i32 a0 = s0 + 0x20\n 22898: a1 = 0x20\n 22901: ra = 336, jump @0\n      : @384 [@dyn 168] (gas: 55)\n 22907: u8 [a0 + 31] = 0\n 22910: u8 [a0 + 30] = 0\n 22913: u8 [a0 + 29] = 0\n 22916: u8 [a0 + 28] = 0\n 22919: u8 [a0 + 27] = 0\n 22922: u8 [a0 + 26] = 0\n 22925: u8 [a0 + 25] = 0\n 22928: u8 [a0 + 24] = 0\n 22931: u8 [a0 + 23] = 0\n 22934: u8 [a0 + 22] = 0\n 22937: u8 [a0 + 21] = 0\n 22940: u8 [a0 + 20] = 0x64\n 22944: u8 [a0 + 19] = 0x65\n 22948: u8 [a0 + 18] = 0x6c\n 22952: u8 [a0 + 17] = 0x69\n 22956: u8 [a0 + 16] = 0x61\n 22960: u8 [a0 + 15] = 0x66\n 22964: a5 = 0x20\n 22967: u8 [a0 + 0xe] = a5\n 22970: u8 [a0 + 13] = 0x72\n 22974: u8 [a0 + 12] = 0x65\n 22978: u8 [a0 + 11] = 0x66\n 22982: u8 [a0 + 10] = 0x73\n 22986: u8 [a0 + 9] = 0x6e\n 22990: u8 [a0 + 8] = 0x61\n 22994: u8 [a0 + 7] = 0x72\n 22998: u8 [a0 + 6] = 0x74\n 23002: u8 [a0 + 0x5] = a5\n 23005: u8 [a0 + 4] = 0x79\n 23009: u8 [a0 + 3] = 0x61\n 23013: u8 [a0 + 2] = 0x70\n 23017: u8 [a0 + 1] = 0x65\n 23021: u8 [a0 + 0] = 0x52\n 23024: a1 = u64 [sp]\n 23026: a0 = a1 + 0x60\n 23029: a1 = a0 <u a1\n 23032: a3 = u64 [sp + 0x8]\n 23035: a2 = a3 + a1\n 23038: a3 = a2 <u a3\n 23041: a3 = a1 if a1 == 0\n 23044: a1 = u64 [sp + 0x10]\n 23047: a3 = a3 + a1\n 23050: a1 = a3 <u a1\n 23053: a4 = u64 [sp + 0x18]\n 23056: a1 = a1 + a4\n 23059: a4 = u64 [sp + 0x28]\n 23062: u64 [a4] = a0\n 23064: u64 [a4 + 0x8] = a2\n 23067: u64 [a4 + 0x10] = a3\n 23070: u64 [a4 + 0x18] = a1\n 23073: ra = u64 [sp + 0x58]\n 23076: s0 = u64 [sp + 0x50]\n 23079: s1 = u64 [sp + 0x48]\n 23082: sp = sp + 0x60\n 23085: ret\n      : @385 (gas: 1)\n 23087: trap\n      : @386 [@dyn 169] (gas: 56)\n 23088: a1 = u64 [sp + 0x78]\n 23091: a1 = reverse a1\n 23093: a2 = u64 [sp + 0x80]\n 23097: a2 = reverse a2\n 23099: a3 = s1 >> 0x18\n 23102: u8 [a0 + 0xf] = a3\n 23105: a3 = s1 >> 0x10\n 23108: u8 [a0 + 0xe] = a3\n 23111: a3 = s1 >> 0x8\n 23114: u8 [a0 + 0xd] = a3\n 23117: u8 [a0 + 0xc] = s1\n 23120: u8 [a0 + 11] = 0\n 23123: u8 [a0 + 10] = 0\n 23126: u8 [a0 + 9] = 0\n 23129: u8 [a0 + 8] = 0\n 23132: u8 [a0 + 7] = 0\n 23135: u8 [a0 + 6] = 0\n 23138: u8 [a0 + 5] = 0\n 23141: u8 [a0 + 4] = 0\n 23144: u8 [a0 + 3] = 0\n 23147: u8 [a0 + 2] = 0\n 23150: u8 [a0 + 1] = 0\n 23153: u8 [a0 + 0] = 0\n 23155: u8 [a0 + 0x18] = a2\n 23158: u8 [a0 + 0x10] = a1\n 23161: a3 = a2 >> 0x38\n 23164: u8 [a0 + 0x1f] = a3\n 23167: a3 = a2 >> 0x30\n 23170: u8 [a0 + 0x1e] = a3\n 23173: a3 = a2 >> 0x28\n 23176: u8 [a0 + 0x1d] = a3\n 23179: a3 = a2 >> 0x20\n 23182: u8 [a0 + 0x1c] = a3\n 23185: a3 = a2 >> 0x18\n 23188: u8 [a0 + 0x1b] = a3\n 23191: a3 = a2 >> 0x10\n 23194: u8 [a0 + 0x1a] = a3\n 23197: a2 = a2 >> 0x8\n 23200: u8 [a0 + 0x19] = a2\n 23203: a2 = a1 >> 0x38\n 23206: u8 [a0 + 0x17] = a2\n 23209: a2 = a1 >> 0x30\n 23212: u8 [a0 + 0x16] = a2\n 23215: a2 = a1 >> 0x28\n 23218: u8 [a0 + 0x15] = a2\n 23221: a2 = a1 >> 0x20\n 23224: u8 [a0 + 0x14] = a2\n 23227: a2 = a1 >> 0x18\n 23230: u8 [a0 + 0x13] = a2\n 23233: a2 = a1 >> 0x10\n 23236: u8 [a0 + 0x12] = a2\n 23239: a1 = a1 >> 0x8\n 23242: u8 [a0 + 0x11] = a1\n 23245: a0 = 0x20\n 23248: a1 = 0x20\n 23251: ra = 340, jump @0\n      : @387 [@dyn 170] (gas: 35)\n 23257: u8 [a0 + 31] = 0x1\n 23261: u8 [a0 + 30] = 0\n 23264: u8 [a0 + 29] = 0\n 23267: u8 [a0 + 28] = 0\n 23270: u8 [a0 + 27] = 0\n 23273: u8 [a0 + 26] = 0\n 23276: u8 [a0 + 25] = 0\n 23279: u8 [a0 + 24] = 0\n 23282: u8 [a0 + 23] = 0\n 23285: u8 [a0 + 22] = 0\n 23288: u8 [a0 + 21] = 0\n 23291: u8 [a0 + 20] = 0\n 23294: u8 [a0 + 19] = 0\n 23297: u8 [a0 + 18] = 0\n 23300: u8 [a0 + 17] = 0\n 23303: u8 [a0 + 16] = 0\n 23306: u8 [a0 + 15] = 0\n 23309: u8 [a0 + 14] = 0\n 23312: u8 [a0 + 13] = 0\n 23315: u8 [a0 + 12] = 0\n 23318: u8 [a0 + 11] = 0\n 23321: u8 [a0 + 10] = 0\n 23324: u8 [a0 + 9] = 0\n 23327: u8 [a0 + 8] = 0\n 23330: u8 [a0 + 7] = 0\n 23333: u8 [a0 + 6] = 0\n 23336: u8 [a0 + 5] = 0\n 23339: u8 [a0 + 4] = 0\n 23342: u8 [a0 + 3] = 0\n 23345: u8 [a0 + 2] = 0\n 23348: u8 [a0 + 1] = 0\n 23351: u8 [a0 + 0] = 0\n 23353: a1 = 0x40\n 23356: a0 = 0\n 23358: ra = 342, jump @0\n      : @388 [@dyn 171] (gas: 28)\n 23364: i32 a0 = a0 + 0\n 23366: i32 a2 = sp + 0x2e0\n 23370: a1 = 0x40\n 23373: ecalli 9 // 'hash_keccak_256'\n 23375: a0 = u64 [sp + 0x2f8]\n 23379: a1 = u64 [sp + 0x2f0]\n 23383: a2 = u64 [sp + 0x2e8]\n 23387: a3 = u64 [sp + 0x2e0]\n 23391: a0 = reverse a0\n 23393: a1 = reverse a1\n 23395: a2 = reverse a2\n 23397: a3 = reverse a3\n 23399: u64 [sp + 0x2d8] = a3\n 23403: u64 [sp + 0x2d0] = a2\n 23407: u64 [sp + 0x2c8] = a1\n 23411: u64 [sp + 0x2c0] = a0\n 23415: u64 [sp + 760] = 0\n 23419: u64 [sp + 752] = 0\n 23423: u64 [sp + 744] = 0\n 23427: u64 [sp + 736] = 0\n 23431: u32 [sp + 672] = 0x20\n 23436: i32 a1 = sp + 0x2c0\n 23440: i32 a3 = sp + 0x2e0\n 23444: i32 a4 = sp + 0x2a0\n 23448: a2 = 0xffffffffffffffff\n 23451: a0 = 0\n 23453: ecalli 8 // 'get_storage'\n 23455: fallthrough\n      : @389 (gas: 20)\n 23456: a0 = u64 [sp + 0x2f8]\n 23460: t0 = u64 [sp + 0x2e0]\n 23464: a2 = u64 [sp + 0x2f0]\n 23468: a3 = u64 [sp + 0x2e8]\n 23472: a1 = u64 [sp + 0x88]\n 23476: a4 = a0 ^ a1\n 23479: s1 = a0 <u a1\n 23482: a0 = u64 [sp + 0x68]\n 23485: a5 = a2 <u a0\n 23488: a5 = s1 if a4 != 0\n 23491: a1 = u64 [sp + 0x90]\n 23495: s1 = a3 ^ a1\n 23498: a3 = a3 <u a1\n 23501: a1 = u64 [sp + 0x98]\n 23505: a1 = t0 <u a1\n 23508: a1 = a3 if s1 != 0\n 23511: a0 = a0 ^ a2\n 23514: a0 = a0 | a4\n 23517: a1 = a5 if a0 != 0\n 23520: jump @422 if a1 != 0\n      : @390 (gas: 19)\n 23524: i32 a0 = sp + 0x1c0\n 23528: ecalli 5 // 'caller'\n 23530: a0 = u64 [sp + 0x1c8]\n 23534: a1 = i32 [sp + 0x1d0]\n 23538: s1 = u64 [sp + 0x1c0]\n 23542: a0 = reverse a0\n 23544: a2 = a0 << 0x20\n 23547: a1 = reverse a1\n 23549: a1 = a1 >> 0x20\n 23552: a1 = a1 | a2\n 23555: u64 [sp + 0x80] = a1\n 23559: a0 = a0 >> 0x20\n 23562: a1 = reverse s1\n 23564: a1 = a1 << 0x20\n 23567: a0 = a0 | a1\n 23570: u64 [sp + 0x78] = a0\n 23573: a1 = 0x20\n 23576: a0 = 0\n 23578: ra = 344, jump @0\n      : @391 [@dyn 172] (gas: 56)\n 23584: a1 = u64 [sp + 0x78]\n 23587: a1 = reverse a1\n 23589: a2 = u64 [sp + 0x80]\n 23593: a2 = reverse a2\n 23595: a3 = s1 >> 0x18\n 23598: u8 [a0 + 0xf] = a3\n 23601: a3 = s1 >> 0x10\n 23604: u8 [a0 + 0xe] = a3\n 23607: a3 = s1 >> 0x8\n 23610: u8 [a0 + 0xd] = a3\n 23613: u8 [a0 + 0xc] = s1\n 23616: u8 [a0 + 11] = 0\n 23619: u8 [a0 + 10] = 0\n 23622: u8 [a0 + 9] = 0\n 23625: u8 [a0 + 8] = 0\n 23628: u8 [a0 + 7] = 0\n 23631: u8 [a0 + 6] = 0\n 23634: u8 [a0 + 5] = 0\n 23637: u8 [a0 + 4] = 0\n 23640: u8 [a0 + 3] = 0\n 23643: u8 [a0 + 2] = 0\n 23646: u8 [a0 + 1] = 0\n 23649: u8 [a0 + 0] = 0\n 23651: u8 [a0 + 0x18] = a2\n 23654: u8 [a0 + 0x10] = a1\n 23657: a3 = a2 >> 0x38\n 23660: u8 [a0 + 0x1f] = a3\n 23663: a3 = a2 >> 0x30\n 23666: u8 [a0 + 0x1e] = a3\n 23669: a3 = a2 >> 0x28\n 23672: u8 [a0 + 0x1d] = a3\n 23675: a3 = a2 >> 0x20\n 23678: u8 [a0 + 0x1c] = a3\n 23681: a3 = a2 >> 0x18\n 23684: u8 [a0 + 0x1b] = a3\n 23687: a3 = a2 >> 0x10\n 23690: u8 [a0 + 0x1a] = a3\n 23693: a2 = a2 >> 0x8\n 23696: u8 [a0 + 0x19] = a2\n 23699: a2 = a1 >> 0x38\n 23702: u8 [a0 + 0x17] = a2\n 23705: a2 = a1 >> 0x30\n 23708: u8 [a0 + 0x16] = a2\n 23711: a2 = a1 >> 0x28\n 23714: u8 [a0 + 0x15] = a2\n 23717: a2 = a1 >> 0x20\n 23720: u8 [a0 + 0x14] = a2\n 23723: a2 = a1 >> 0x18\n 23726: u8 [a0 + 0x13] = a2\n 23729: a2 = a1 >> 0x10\n 23732: u8 [a0 + 0x12] = a2\n 23735: a1 = a1 >> 0x8\n 23738: u8 [a0 + 0x11] = a1\n 23741: a0 = 0x20\n 23744: a1 = 0x20\n 23747: ra = 346, jump @0\n      : @392 [@dyn 173] (gas: 35)\n 23753: u8 [a0 + 31] = 0x1\n 23757: u8 [a0 + 30] = 0\n 23760: u8 [a0 + 29] = 0\n 23763: u8 [a0 + 28] = 0\n 23766: u8 [a0 + 27] = 0\n 23769: u8 [a0 + 26] = 0\n 23772: u8 [a0 + 25] = 0\n 23775: u8 [a0 + 24] = 0\n 23778: u8 [a0 + 23] = 0\n 23781: u8 [a0 + 22] = 0\n 23784: u8 [a0 + 21] = 0\n 23787: u8 [a0 + 20] = 0\n 23790: u8 [a0 + 19] = 0\n 23793: u8 [a0 + 18] = 0\n 23796: u8 [a0 + 17] = 0\n 23799: u8 [a0 + 16] = 0\n 23802: u8 [a0 + 15] = 0\n 23805: u8 [a0 + 14] = 0\n 23808: u8 [a0 + 13] = 0\n 23811: u8 [a0 + 12] = 0\n 23814: u8 [a0 + 11] = 0\n 23817: u8 [a0 + 10] = 0\n 23820: u8 [a0 + 9] = 0\n 23823: u8 [a0 + 8] = 0\n 23826: u8 [a0 + 7] = 0\n 23829: u8 [a0 + 6] = 0\n 23832: u8 [a0 + 5] = 0\n 23835: u8 [a0 + 4] = 0\n 23838: u8 [a0 + 3] = 0\n 23841: u8 [a0 + 2] = 0\n 23844: u8 [a0 + 1] = 0\n 23847: u8 [a0 + 0] = 0\n 23849: a1 = 0x40\n 23852: a0 = 0\n 23854: ra = 348, jump @0\n      : @393 [@dyn 174] (gas: 32)\n 23860: i32 a0 = a0 + 0\n 23862: i32 a2 = sp + 0x2e0\n 23866: a1 = 0x40\n 23869: ecalli 9 // 'hash_keccak_256'\n 23871: a0 = u64 [sp + 0x2f8]\n 23875: a1 = u64 [sp + 0x2f0]\n 23879: a2 = u64 [sp + 0x2e8]\n 23883: a3 = u64 [sp + 0x2e0]\n 23887: a0 = reverse a0\n 23889: a1 = reverse a1\n 23891: a2 = reverse a2\n 23893: a3 = reverse a3\n 23895: u64 [sp + 0x60] = a3\n 23898: u64 [sp + 0x2d8] = a3\n 23902: u64 [sp + 0x70] = a2\n 23905: u64 [sp + 0x2d0] = a2\n 23909: u64 [sp + 0x78] = a1\n 23912: u64 [sp + 0x2c8] = a1\n 23916: u64 [sp + 0x80] = a0\n 23920: u64 [sp + 0x2c0] = a0\n 23924: u64 [sp + 760] = 0\n 23928: u64 [sp + 752] = 0\n 23932: u64 [sp + 744] = 0\n 23936: u64 [sp + 736] = 0\n 23940: u32 [sp + 672] = 0x20\n 23945: i32 a1 = sp + 0x2c0\n 23949: i32 a3 = sp + 0x2e0\n 23953: i32 a4 = sp + 0x2a0\n 23957: a2 = 0xffffffffffffffff\n 23960: a0 = 0\n 23962: ecalli 8 // 'get_storage'\n 23964: fallthrough\n      : @394 (gas: 22)\n 23965: a2 = u64 [sp + 0x2f8]\n 23969: a3 = u64 [sp + 0x2f0]\n 23973: t1 = u64 [sp + 0x2e8]\n 23977: a1 = u64 [sp + 0x2e0]\n 23981: a4 = u64 [sp + 0x88]\n 23985: a0 = a2 ^ a4\n 23988: a4 = a2 <u a4\n 23991: t0 = u64 [sp + 0x68]\n 23994: a5 = a3 <u t0\n 23997: u64 [sp + 0x50] = a5\n 24000: a4 = a5 if a0 == 0\n 24003: a5 = u64 [sp + 0x90]\n 24007: t2 = t1 ^ a5\n 24010: s1 = t1 <u a5\n 24013: a5 = u64 [sp + 0x98]\n 24017: u64 [sp + 0x40] = a1\n 24020: ra = a1 <u a5\n 24023: s1 = ra if t2 == 0\n 24026: a5 = a3 ^ t0\n 24029: a0 = a0 | a5\n 24032: a4 = s1 if a0 == 0\n 24035: jump @437 if a4 != 0\n      : @395 (gas: 59)\n 24039: a0 = a3 - t0\n 24042: a3 = a0 - s1\n 24045: u64 [sp + 0x58] = a3\n 24048: a0 = a0 <u s1\n 24051: a3 = u64 [sp + 0x88]\n 24055: a2 = a2 - a3\n 24058: a1 = u64 [sp + 0x50]\n 24061: a2 = a2 - a1\n 24064: a2 = a2 - a0\n 24067: u64 [sp + 0x50] = a2\n 24070: a0 = u64 [sp + 0x90]\n 24074: a0 = t1 - a0\n 24077: a0 = a0 - ra\n 24080: u64 [sp + 0x48] = a0\n 24083: u32 [sp + 672] = 0x20\n 24088: a0 = u64 [sp + 0x98]\n 24092: a1 = u64 [sp + 0x40]\n 24095: a1 = a1 - a0\n 24098: u64 [sp + 0x40] = a1\n 24101: a0 = u64 [sp + 0x70]\n 24104: u64 [sp + 0x2d0] = a0\n 24108: a0 = u64 [sp + 0x78]\n 24111: u64 [sp + 0x2c8] = a0\n 24115: a0 = u64 [sp + 0x80]\n 24119: u64 [sp + 0x2c0] = a0\n 24123: s1 = u64 [sp + 0x60]\n 24126: u64 [sp + 0x2d8] = s1\n 24130: u64 [sp + 760] = 0\n 24134: u64 [sp + 752] = 0\n 24138: u64 [sp + 744] = 0\n 24142: u64 [sp + 736] = 0\n 24146: i32 a1 = sp + 0x2c0\n 24150: i32 a3 = sp + 0x2e0\n 24154: i32 a4 = sp + 0x2a0\n 24158: a2 = 0xffffffffffffffff\n 24161: a0 = 0\n 24163: ecalli 8 // 'get_storage'\n 24165: u64 [sp + 0x2d8] = s1\n 24169: a0 = u64 [sp + 0x70]\n 24172: u64 [sp + 0x2d0] = a0\n 24176: a0 = u64 [sp + 0x78]\n 24179: u64 [sp + 0x2c8] = a0\n 24183: a0 = u64 [sp + 0x80]\n 24187: u64 [sp + 0x2c0] = a0\n 24191: a0 = u64 [sp + 0x50]\n 24194: u64 [sp + 0x2f8] = a0\n 24198: a0 = u64 [sp + 0x58]\n 24201: u64 [sp + 0x2f0] = a0\n 24205: a0 = u64 [sp + 0x48]\n 24208: u64 [sp + 0x2e8] = a0\n 24212: a0 = u64 [sp + 0x40]\n 24215: u64 [sp + 0x2e0] = a0\n 24219: i32 a1 = sp + 0x2c0\n 24223: i32 a3 = sp + 0x2e0\n 24227: a2 = 0xffffffffffffffff\n 24230: a4 = 0x20\n 24233: a0 = 0\n 24235: ecalli 15 // 'set_storage'\n 24237: fallthrough\n      : @396 (gas: 3)\n 24238: s1 = 0x20020\n 24243: a0 = i32 [0x20020]\n 24248: jump @399 if a0 == 0\n      : @397 (gas: 6)\n 24251: u64 [sp + 0x80] = a0\n 24255: a0 = 0x30030\n 24260: i32 a0 = a0 + 0\n 24262: i32 a1 = s1 + 0\n 24264: ecalli 7 // 'get_immutable_data'\n 24266: fallthrough\n      : @398 (gas: 4)\n 24267: a0 = i32 [0x20020]\n 24272: u32 [0x20020] = 0\n 24277: a1 = u64 [sp + 0x80]\n 24281: jump @434 if a0 <u a1\n      : @399 (gas: 25)\n 24285: a1 = u64 [0x30060]\n 24290: u64 [sp + 0x10] = a1\n 24293: a1 = u64 [0x30058]\n 24298: u64 [sp + 0x8] = a1\n 24301: a0 = u64 [0x30050]\n 24306: u64 [sp + 0x18] = a0\n 24309: i32 a0 = sp + 0x1e0\n 24313: ecalli 5 // 'caller'\n 24315: a0 = i32 [sp + 0x1f0]\n 24319: u64 [sp + 0x50] = a0\n 24322: a0 = u64 [sp + 0x1e0]\n 24326: u64 [sp + 0x48] = a0\n 24329: a0 = u64 [sp + 0x1e8]\n 24333: u64 [sp + 0x40] = a0\n 24336: i32 a0 = sp + 0x200\n 24340: ecalli 0 // 'address'\n 24341: a0 = i32 [sp + 0x210]\n 24345: u64 [sp + 0x38] = a0\n 24348: a0 = u64 [sp + 0x200]\n 24352: u64 [sp + 0x30] = a0\n 24355: a0 = u64 [sp + 0x208]\n 24359: u64 [sp + 0x28] = a0\n 24362: a0 = 0x40\n 24365: a1 = 0x20\n 24368: ra = 350, jump @0\n      : @400 [@dyn 175] (gas: 102)\n 24374: a1 = u8 [a0 + 0x11]\n 24377: a2 = u8 [a0 + 0x10]\n 24380: a3 = u8 [a0 + 0x12]\n 24383: a4 = u8 [a0 + 0x13]\n 24386: a1 = a1 << 0x8\n 24389: a1 = a1 | a2\n 24392: a3 = a3 << 0x10\n 24395: a4 = a4 << 0x18\n 24398: a3 = a3 | a4\n 24401: a1 = a1 | a3\n 24404: a2 = u8 [a0 + 0x15]\n 24407: a3 = u8 [a0 + 0x14]\n 24410: a4 = u8 [a0 + 0x16]\n 24413: a5 = u8 [a0 + 0x17]\n 24416: a2 = a2 << 0x8\n 24419: a2 = a2 | a3\n 24422: a4 = a4 << 0x10\n 24425: a5 = a5 << 0x18\n 24428: a4 = a4 | a5\n 24431: a2 = a2 | a4\n 24434: a2 = a2 << 0x20\n 24437: t0 = a2 | a1\n 24440: a2 = u8 [a0 + 0x1]\n 24443: a3 = u8 [a0]\n 24445: a4 = u8 [a0 + 0x2]\n 24448: a5 = u8 [a0 + 0x3]\n 24451: a2 = a2 << 0x8\n 24454: a2 = a2 | a3\n 24457: a4 = a4 << 0x10\n 24460: a5 = a5 << 0x18\n 24463: a4 = a4 | a5\n 24466: a2 = a2 | a4\n 24469: a3 = u8 [a0 + 0x5]\n 24472: a4 = u8 [a0 + 0x4]\n 24475: a5 = u8 [a0 + 0x6]\n 24478: s1 = u8 [a0 + 0x7]\n 24481: a3 = a3 << 0x8\n 24484: a3 = a3 | a4\n 24487: a5 = a5 << 0x10\n 24490: s1 = s1 << 0x18\n 24493: a5 = a5 | s1\n 24496: a3 = a3 | a5\n 24499: a3 = a3 << 0x20\n 24502: a2 = a2 | a3\n 24505: a3 = u8 [a0 + 0x19]\n 24508: a4 = u8 [a0 + 0x18]\n 24511: a5 = u8 [a0 + 0x1a]\n 24514: s1 = u8 [a0 + 0x1b]\n 24517: a3 = a3 << 0x8\n 24520: a3 = a3 | a4\n 24523: a5 = a5 << 0x10\n 24526: s1 = s1 << 0x18\n 24529: a5 = a5 | s1\n 24532: a3 = a3 | a5\n 24535: a4 = u8 [a0 + 0x1d]\n 24538: a5 = u8 [a0 + 0x1c]\n 24541: s1 = u8 [a0 + 0x1e]\n 24544: a1 = u8 [a0 + 0x1f]\n 24547: a4 = a4 << 0x8\n 24550: a4 = a4 | a5\n 24553: s1 = s1 << 0x10\n 24556: a1 = a1 << 0x18\n 24559: a1 = a1 | s1\n 24562: a1 = a1 | a4\n 24565: a1 = a1 << 0x20\n 24568: a3 = a3 | a1\n 24571: a1 = u8 [a0 + 0x9]\n 24574: a4 = u8 [a0 + 0x8]\n 24577: a5 = u8 [a0 + 0xa]\n 24580: s1 = u8 [a0 + 0xb]\n 24583: a1 = a1 << 0x8\n 24586: a1 = a1 | a4\n 24589: a5 = a5 << 0x10\n 24592: s1 = s1 << 0x18\n 24595: a5 = a5 | s1\n 24598: a1 = a1 | a5\n 24601: a4 = u8 [a0 + 0xd]\n 24604: a5 = u8 [a0 + 0xc]\n 24607: s1 = u8 [a0 + 0xe]\n 24610: a0 = u8 [a0 + 0xf]\n 24613: a4 = a4 << 0x8\n 24616: a4 = a4 | a5\n 24619: s1 = s1 << 0x10\n 24622: a0 = a0 << 0x18\n 24625: a0 = a0 | s1\n 24628: a0 = a0 | a4\n 24631: a0 = a0 << 0x20\n 24634: a0 = a0 | a1\n 24637: s1 = reverse a0\n 24639: a3 = reverse a3\n 24641: a1 = reverse a2\n 24643: a0 = reverse t0\n 24645: u64 [sp + 0x80] = a0\n 24649: u64 [sp + 0x60] = a1\n 24652: a0 = a0 | a1\n 24655: a1 = a3 | s1\n 24658: a1 = a1 | a0\n 24661: a1 = a1 >> 0x20\n 24664: a0 = a0 | s1\n 24667: a0 = a0 << 0x20\n 24670: a0 = a0 | a1\n 24673: jump @434 if a0 != 0\n      : @401 (gas: 5)\n 24677: i32 a0 = a3 + 0\n 24679: a1 = 0x20\n 24682: u64 [sp + 0x70] = a0\n 24685: u64 [sp + 0x78] = a3\n 24688: ra = 352, jump @0\n      : @402 [@dyn 176] (gas: 45)\n 24694: u8 [a0 + 31] = 0\n 24697: u8 [a0 + 30] = 0\n 24700: u8 [a0 + 29] = 0\n 24703: u8 [a0 + 28] = 0\n 24706: u8 [a0 + 27] = 0\n 24709: u8 [a0 + 26] = 0\n 24712: u8 [a0 + 25] = 0\n 24715: u8 [a0 + 24] = 0\n 24718: u8 [a0 + 23] = 0\n 24721: u8 [a0 + 22] = 0\n 24724: u8 [a0 + 21] = 0\n 24727: u8 [a0 + 20] = 0\n 24730: u8 [a0 + 19] = 0\n 24733: u8 [a0 + 18] = 0\n 24736: u8 [a0 + 17] = 0\n 24739: u8 [a0 + 16] = 0\n 24742: u8 [a0 + 15] = 0\n 24745: u8 [a0 + 14] = 0\n 24748: u8 [a0 + 13] = 0\n 24751: u8 [a0 + 12] = 0\n 24754: u8 [a0 + 11] = 0\n 24757: u8 [a0 + 10] = 0\n 24760: u8 [a0 + 9] = 0\n 24763: u8 [a0 + 8] = 0\n 24766: u8 [a0 + 7] = 0\n 24769: u8 [a0 + 6] = 0\n 24772: u8 [a0 + 5] = 0\n 24775: u8 [a0 + 3] = 0xdd\n 24780: u8 [a0 + 2] = 0x72\n 24784: u8 [a0 + 1] = 0xb8\n 24789: u8 [a0 + 0] = 0x23\n 24792: u64 [sp] = s1\n 24794: a3 = u64 [sp + 0x60]\n 24797: a3 = a3 | s1\n 24800: a1 = 0x100000000\n 24810: u64 [sp + 0x20] = a1\n 24813: a1 = 0xfffffffc\n 24823: a2 = u64 [sp + 0x78]\n 24826: a1 = a2 <u a1\n 24829: a2 = u64 [sp + 0x80]\n 24833: a1 = 0 if a2 != 0\n 24835: u64 [sp + 0x58] = a3\n 24838: a1 = 0 if a3 != 0\n 24840: u8 [a0 + 4] = 0\n 24843: jump @434 if a1 == 0\n      : @403 (gas: 19)\n 24847: a0 = u64 [sp + 0x40]\n 24850: a0 = reverse a0\n 24852: a1 = a0 >> 0x20\n 24855: a2 = u64 [sp + 0x48]\n 24858: a2 = reverse a2\n 24860: a3 = a2 << 0x20\n 24863: a1 = a1 | a3\n 24866: u64 [sp + 0x48] = a1\n 24869: a0 = a0 << 0x20\n 24872: a1 = u64 [sp + 0x50]\n 24875: a1 = reverse a1\n 24877: a1 = a1 >> 0x20\n 24880: a0 = a0 | a1\n 24883: u64 [sp + 0x50] = a0\n 24886: s1 = a2 >> 0x20\n 24889: a0 = u64 [sp + 0x70]\n 24892: i32 a0 = a0 + 0x4\n 24895: a1 = 0x20\n 24898: ra = 354, jump @0\n      : @404 [@dyn 177] (gas: 64)\n 24904: a1 = reverse s1\n 24906: a2 = u64 [sp + 0x48]\n 24909: a2 = reverse a2\n 24911: a3 = u64 [sp + 0x50]\n 24914: a3 = reverse a3\n 24916: a4 = a3 >> 0x38\n 24919: u8 [a0 + 0x1f] = a4\n 24922: a4 = a3 >> 0x30\n 24925: u8 [a0 + 0x1e] = a4\n 24928: a4 = a3 >> 0x28\n 24931: u8 [a0 + 0x1d] = a4\n 24934: a4 = a3 >> 0x20\n 24937: u8 [a0 + 0x1c] = a4\n 24940: a4 = a3 >> 0x18\n 24943: u8 [a0 + 0x1b] = a4\n 24946: a4 = a3 >> 0x10\n 24949: u8 [a0 + 0x1a] = a4\n 24952: a4 = a3 >> 0x8\n 24955: u8 [a0 + 0x19] = a4\n 24958: u8 [a0 + 0x18] = a3\n 24961: u8 [a0 + 0x10] = a2\n 24964: u8 [a0 + 11] = 0\n 24967: u8 [a0 + 10] = 0\n 24970: u8 [a0 + 9] = 0\n 24973: u8 [a0 + 7] = 0\n 24976: u8 [a0 + 6] = 0\n 24979: u8 [a0 + 5] = 0\n 24982: u8 [a0 + 4] = 0\n 24985: u8 [a0 + 3] = 0\n 24988: u8 [a0 + 2] = 0\n 24991: u8 [a0 + 1] = 0\n 24994: u8 [a0 + 0] = 0\n 24996: a3 = a2 >> 0x38\n 24999: u8 [a0 + 0x17] = a3\n 25002: a3 = a2 >> 0x30\n 25005: u8 [a0 + 0x16] = a3\n 25008: a3 = a2 >> 0x28\n 25011: u8 [a0 + 0x15] = a3\n 25014: a3 = a2 >> 0x20\n 25017: u8 [a0 + 0x14] = a3\n 25020: a3 = a2 >> 0x18\n 25023: u8 [a0 + 0x13] = a3\n 25026: a3 = a2 >> 0x10\n 25029: u8 [a0 + 0x12] = a3\n 25032: a2 = a2 >> 0x8\n 25035: u8 [a0 + 0x11] = a2\n 25038: u8 [a0 + 0x8] = a1\n 25041: a2 = a1 >> 0x38\n 25044: u8 [a0 + 0xf] = a2\n 25047: a2 = a1 >> 0x30\n 25050: u8 [a0 + 0xe] = a2\n 25053: a2 = a1 >> 0x28\n 25056: u8 [a0 + 0xd] = a2\n 25059: a1 = a1 >> 0x20\n 25062: a2 = u64 [sp + 0x20]\n 25065: a2 = a2 + 0xffffffffffffffdc\n 25068: a3 = u64 [sp + 0x78]\n 25071: a2 = a3 <u a2\n 25074: a3 = u64 [sp + 0x80]\n 25078: a2 = 0 if a3 != 0\n 25080: a3 = u64 [sp + 0x58]\n 25083: a2 = 0 if a3 != 0\n 25085: u8 [a0 + 0xc] = a1\n 25088: jump @434 if a2 == 0\n      : @405 (gas: 19)\n 25092: a0 = u64 [sp + 0x28]\n 25095: a0 = reverse a0\n 25097: a1 = a0 >> 0x20\n 25100: a2 = u64 [sp + 0x30]\n 25103: a2 = reverse a2\n 25105: a3 = a2 << 0x20\n 25108: a1 = a1 | a3\n 25111: u64 [sp + 0x50] = a1\n 25114: a0 = a0 << 0x20\n 25117: a1 = u64 [sp + 0x38]\n 25120: a1 = reverse a1\n 25122: a1 = a1 >> 0x20\n 25125: a0 = a0 | a1\n 25128: u64 [sp + 0x48] = a0\n 25131: s1 = a2 >> 0x20\n 25134: a0 = u64 [sp + 0x70]\n 25137: i32 a0 = a0 + 0x24\n 25140: a1 = 0x20\n 25143: ra = 356, jump @0\n      : @406 [@dyn 178] (gas: 63)\n 25149: a1 = reverse s1\n 25151: a2 = u64 [sp + 0x50]\n 25154: a2 = reverse a2\n 25156: a3 = u64 [sp + 0x48]\n 25159: a3 = reverse a3\n 25161: a4 = a3 >> 0x38\n 25164: u8 [a0 + 0x1f] = a4\n 25167: a4 = a3 >> 0x30\n 25170: u8 [a0 + 0x1e] = a4\n 25173: a4 = a3 >> 0x28\n 25176: u8 [a0 + 0x1d] = a4\n 25179: a4 = a3 >> 0x20\n 25182: u8 [a0 + 0x1c] = a4\n 25185: a4 = a3 >> 0x18\n 25188: u8 [a0 + 0x1b] = a4\n 25191: a4 = a3 >> 0x10\n 25194: u8 [a0 + 0x1a] = a4\n 25197: a4 = a3 >> 0x8\n 25200: u8 [a0 + 0x19] = a4\n 25203: u8 [a0 + 0x18] = a3\n 25206: u8 [a0 + 0x10] = a2\n 25209: u8 [a0 + 11] = 0\n 25212: u8 [a0 + 10] = 0\n 25215: u8 [a0 + 9] = 0\n 25218: u8 [a0 + 7] = 0\n 25221: u8 [a0 + 6] = 0\n 25224: u8 [a0 + 5] = 0\n 25227: u8 [a0 + 4] = 0\n 25230: u8 [a0 + 3] = 0\n 25233: u8 [a0 + 2] = 0\n 25236: u8 [a0 + 1] = 0\n 25239: u8 [a0 + 0] = 0\n 25241: a3 = a2 >> 0x38\n 25244: u8 [a0 + 0x17] = a3\n 25247: a3 = a2 >> 0x30\n 25250: u8 [a0 + 0x16] = a3\n 25253: a3 = a2 >> 0x28\n 25256: u8 [a0 + 0x15] = a3\n 25259: a3 = a2 >> 0x20\n 25262: u8 [a0 + 0x14] = a3\n 25265: a3 = a2 >> 0x18\n 25268: u8 [a0 + 0x13] = a3\n 25271: a3 = a2 >> 0x10\n 25274: u8 [a0 + 0x12] = a3\n 25277: a2 = a2 >> 0x8\n 25280: u8 [a0 + 0x11] = a2\n 25283: u8 [a0 + 0x8] = a1\n 25286: a2 = a1 >> 0x38\n 25289: u8 [a0 + 0xf] = a2\n 25292: a2 = a1 >> 0x30\n 25295: u8 [a0 + 0xe] = a2\n 25298: a2 = a1 >> 0x28\n 25301: u8 [a0 + 0xd] = a2\n 25304: a1 = a1 >> 0x20\n 25307: a2 = 0xffffffbc\n 25317: a3 = u64 [sp + 0x78]\n 25320: a2 = a3 <u a2\n 25323: a3 = u64 [sp + 0x80]\n 25327: a2 = 0 if a3 != 0\n 25329: a3 = u64 [sp + 0x58]\n 25332: a2 = 0 if a3 != 0\n 25334: u8 [a0 + 0xc] = a1\n 25337: jump @434 if a2 == 0\n      : @407 (gas: 4)\n 25341: s1 = u64 [sp + 0x70]\n 25344: i32 a0 = s1 + 0x44\n 25347: a1 = 0x20\n 25350: ra = 358, jump @0\n      : @408 [@dyn 179] (gas: 92)\n 25356: a1 = u64 [sp + 0x88]\n 25360: a1 = reverse a1\n 25362: a2 = u64 [sp + 0x68]\n 25365: a2 = reverse a2\n 25367: a3 = u64 [sp + 0x90]\n 25371: a3 = reverse a3\n 25373: a4 = u64 [sp + 0x98]\n 25377: a4 = reverse a4\n 25379: a5 = a4 >> 0x38\n 25382: u8 [a0 + 0x1f] = a5\n 25385: a5 = a4 >> 0x30\n 25388: u8 [a0 + 0x1e] = a5\n 25391: a5 = a4 >> 0x28\n 25394: u8 [a0 + 0x1d] = a5\n 25397: a5 = a4 >> 0x20\n 25400: u8 [a0 + 0x1c] = a5\n 25403: a5 = a4 >> 0x18\n 25406: u8 [a0 + 0x1b] = a5\n 25409: a5 = a4 >> 0x10\n 25412: u8 [a0 + 0x1a] = a5\n 25415: a5 = a4 >> 0x8\n 25418: u8 [a0 + 0x19] = a5\n 25421: u8 [a0 + 0x18] = a4\n 25424: u8 [a0 + 0x10] = a3\n 25427: a4 = a3 >> 0x38\n 25430: u8 [a0 + 0x17] = a4\n 25433: a4 = a3 >> 0x30\n 25436: u8 [a0 + 0x16] = a4\n 25439: a4 = a3 >> 0x28\n 25442: u8 [a0 + 0x15] = a4\n 25445: a4 = a3 >> 0x20\n 25448: u8 [a0 + 0x14] = a4\n 25451: a4 = a3 >> 0x18\n 25454: u8 [a0 + 0x13] = a4\n 25457: a4 = a3 >> 0x10\n 25460: u8 [a0 + 0x12] = a4\n 25463: a3 = a3 >> 0x8\n 25466: u8 [a0 + 0x11] = a3\n 25469: u8 [a0 + 0x8] = a2\n 25472: a3 = a2 >> 0x38\n 25475: u8 [a0 + 0xf] = a3\n 25478: a3 = a2 >> 0x30\n 25481: u8 [a0 + 0xe] = a3\n 25484: a3 = a2 >> 0x28\n 25487: u8 [a0 + 0xd] = a3\n 25490: a3 = a2 >> 0x20\n 25493: u8 [a0 + 0xc] = a3\n 25496: a3 = a2 >> 0x18\n 25499: u8 [a0 + 0xb] = a3\n 25502: a3 = a2 >> 0x10\n 25505: u8 [a0 + 0xa] = a3\n 25508: a2 = a2 >> 0x8\n 25511: u8 [a0 + 0x9] = a2\n 25514: u8 [a0] = a1\n 25516: a2 = a1 >> 0x38\n 25519: u8 [a0 + 0x7] = a2\n 25522: a2 = a1 >> 0x30\n 25525: u8 [a0 + 0x6] = a2\n 25528: a2 = a1 >> 0x28\n 25531: u8 [a0 + 0x5] = a2\n 25534: a2 = a1 >> 0x20\n 25537: u8 [a0 + 0x4] = a2\n 25540: a2 = a1 >> 0x18\n 25543: u8 [a0 + 0x3] = a2\n 25546: a2 = a1 >> 0x10\n 25549: u8 [a0 + 0x2] = a2\n 25552: a1 = a1 >> 0x8\n 25555: u8 [a0 + 0x1] = a1\n 25558: ecalli 10 // 'ref_time_left'\n 25560: a0 = u64 [sp + 0x8]\n 25563: a0 = reverse a0\n 25565: a1 = a0 << 0x20\n 25568: a2 = u64 [sp + 0x10]\n 25571: a2 = reverse a2\n 25573: a2 = a2 >> 0x20\n 25576: a1 = a1 | a2\n 25579: a2 = u64 [sp + 0x18]\n 25582: a2 = reverse a2\n 25584: a3 = a2 << 0x20\n 25587: a0 = a0 >> 0x20\n 25590: a0 = a0 | a3\n 25593: a2 = a2 >> 0x20\n 25596: u64 [sp + 0x228] = a0\n 25600: u64 [sp + 0x220] = a1\n 25604: u32 [sp + 0x230] = a2\n 25608: u64 [sp + 600] = 0\n 25612: u64 [sp + 592] = 0\n 25616: u64 [sp + 584] = 0\n 25620: u64 [sp + 576] = 0\n 25624: a1 = 0x64\n 25627: a0 = s1\n 25629: ra = 360, jump @0\n      : @409 [@dyn 180] (gas: 4)\n 25635: u64 [sp + 0x98] = a0\n 25639: a1 = 0x20\n 25642: a0 = s1\n 25644: ra = 362, jump @0\n      : @410 [@dyn 181] (gas: 31)\n 25650: u32 [sp + 608] = 0x20\n 25655: u64 [sp + 664] = 0xffffffffffffffff\n 25660: u64 [sp + 656] = 0xffffffffffffffff\n 25665: u64 [sp + 648] = 0xffffffffffffffff\n 25670: u64 [sp + 640] = 0xffffffffffffffff\n 25675: a1 = sp + 0x220\n 25679: a1 = a1 << 0x20\n 25682: a1 = a1 >> 0x20\n 25685: s1 = 0x800000000\n 25695: s1 = s1 | a1\n 25698: a1 = sp + 0x240\n 25702: a1 = a1 << 0x20\n 25705: a1 = a1 >> 0x20\n 25708: a2 = sp + 0x280\n 25712: a2 = a2 << 0x20\n 25715: a3 = a2 | a1\n 25718: a1 = u64 [sp + 0x98]\n 25722: a1 = a1 << 0x20\n 25725: a1 = a1 >> 0x20\n 25728: a2 = 0x6400000000\n 25738: a4 = a1 | a2\n 25741: a0 = a0 << 0x20\n 25744: a0 = a0 >> 0x20\n 25747: a1 = sp + 0x260\n 25751: a1 = a1 << 0x20\n 25754: a5 = a1 | a0\n 25757: a1 = 0xffffffffffffffff\n 25760: a2 = 0xffffffffffffffff\n 25763: a0 = s1\n 25765: ecalli 1 // 'call'\n 25767: fallthrough\n      : @411 (gas: 1)\n 25768: jump @427 if a0 != 0\n      : @412 (gas: 2)\n 25772: ecalli 12 // 'return_data_size'\n 25774: fallthrough\n      : @413 (gas: 2)\n 25775: a1 = 0x20\n 25778: jump @415 if a0 >=u a1\n      : @414 (gas: 3)\n 25781: ecalli 12 // 'return_data_size'\n 25783: a1 = a0\n 25785: fallthrough\n      : @415 (gas: 27)\n 25786: a3 = u64 [sp + 0x60]\n 25789: s1 = u64 [sp + 0x80]\n 25793: a0 = a1 + 0x1f\n 25796: u64 [sp + 0x90] = a1\n 25800: a1 = a0 <u a1\n 25803: u64 [sp + 152] = 0\n 25807: a1 = a1 & 0x1\n 25810: a0 = a0 & 0xffffffffffffffe0\n 25813: a2 = u64 [sp + 0x78]\n 25816: a2 = a2 + a0\n 25819: u64 [sp + 0x88] = a2\n 25823: a0 = a2 <u a0\n 25826: s1 = s1 + a1\n 25829: s1 = s1 + a0\n 25832: a2 = s1 ^ a1\n 25835: a1 = s1 <u a1\n 25838: a1 = a0 if a2 == 0\n 25841: a0 = u64 [sp]\n 25843: a1 = a1 + a0\n 25846: a0 = a1 <u a0\n 25849: a0 = a0 + a3\n 25852: u64 [sp + 0x80] = a1\n 25856: u64 [sp + 0x78] = a0\n 25859: a0 = a0 | a1\n 25862: a1 = s1 <u 0x1\n 25865: a1 = 0 if a0 != 0\n 25867: jump @439 if a1 == 0\n      : @416 (gas: 3)\n 25871: a0 = 0x40\n 25874: a1 = 0x20\n 25877: ra = 364, jump @0\n      : @417 [@dyn 182] (gas: 79)\n 25883: a1 = u64 [sp + 0x78]\n 25886: a1 = reverse a1\n 25888: a2 = u64 [sp + 0x80]\n 25892: a2 = reverse a2\n 25894: a3 = reverse s1\n 25896: a4 = u64 [sp + 0x88]\n 25900: a4 = reverse a4\n 25902: u8 [a0 + 0x18] = a4\n 25905: a5 = a4 >> 0x38\n 25908: u8 [a0 + 0x1f] = a5\n 25911: a5 = a4 >> 0x30\n 25914: u8 [a0 + 0x1e] = a5\n 25917: a5 = a4 >> 0x28\n 25920: u8 [a0 + 0x1d] = a5\n 25923: a5 = a4 >> 0x20\n 25926: u8 [a0 + 0x1c] = a5\n 25929: a5 = a4 >> 0x18\n 25932: u8 [a0 + 0x1b] = a5\n 25935: a5 = a4 >> 0x10\n 25938: u8 [a0 + 0x1a] = a5\n 25941: a4 = a4 >> 0x8\n 25944: u8 [a0 + 0x19] = a4\n 25947: u8 [a0 + 0x10] = a3\n 25950: a4 = a3 >> 0x38\n 25953: u8 [a0 + 0x17] = a4\n 25956: a4 = a3 >> 0x30\n 25959: u8 [a0 + 0x16] = a4\n 25962: a4 = a3 >> 0x28\n 25965: u8 [a0 + 0x15] = a4\n 25968: a4 = a3 >> 0x20\n 25971: u8 [a0 + 0x14] = a4\n 25974: a4 = a3 >> 0x18\n 25977: u8 [a0 + 0x13] = a4\n 25980: a4 = a3 >> 0x10\n 25983: u8 [a0 + 0x12] = a4\n 25986: a3 = a3 >> 0x8\n 25989: u8 [a0 + 0x11] = a3\n 25992: u8 [a0 + 0x8] = a2\n 25995: a3 = a2 >> 0x38\n 25998: u8 [a0 + 0xf] = a3\n 26001: a3 = a2 >> 0x30\n 26004: u8 [a0 + 0xe] = a3\n 26007: a3 = a2 >> 0x28\n 26010: u8 [a0 + 0xd] = a3\n 26013: a3 = a2 >> 0x20\n 26016: u8 [a0 + 0xc] = a3\n 26019: a3 = a2 >> 0x18\n 26022: u8 [a0 + 0xb] = a3\n 26025: a3 = a2 >> 0x10\n 26028: u8 [a0 + 0xa] = a3\n 26031: a2 = a2 >> 0x8\n 26034: u8 [a0 + 0x9] = a2\n 26037: u8 [a0] = a1\n 26039: a2 = a1 >> 0x38\n 26042: u8 [a0 + 0x7] = a2\n 26045: a2 = a1 >> 0x30\n 26048: u8 [a0 + 0x6] = a2\n 26051: a2 = a1 >> 0x28\n 26054: u8 [a0 + 0x5] = a2\n 26057: a2 = a1 >> 0x20\n 26060: u8 [a0 + 0x4] = a2\n 26063: a2 = a1 >> 0x18\n 26066: u8 [a0 + 0x3] = a2\n 26069: a2 = a1 >> 0x10\n 26072: u8 [a0 + 0x2] = a2\n 26075: a1 = a1 >> 0x8\n 26078: a5 = u64 [sp + 0x98]\n 26082: a2 = a5 >u 0\n 26084: a3 = u64 [sp + 0x90]\n 26088: a3 = a3 <u 0x20\n 26091: a3 = a3 ^ 0x1\n 26094: a3 = a2 if a5 != 0\n 26097: a2 = a5 >u 0\n 26099: a4 = a5 >u 0\n 26101: a4 = a2 if a5 == 0\n 26104: a2 = a5 | a5\n 26107: a4 = a3 if a2 == 0\n 26110: u8 [a0 + 0x1] = a1\n 26113: jump @435 if a4 == 0\n      : @418 (gas: 3)\n 26117: a1 = 0x20\n 26120: a0 = u64 [sp + 0x70]\n 26123: ra = 366, jump @0\n      : @419 [@dyn 183] (gas: 96)\n 26129: a1 = u8 [a0 + 0x9]\n 26132: a2 = u8 [a0 + 0x8]\n 26135: a3 = u8 [a0 + 0xa]\n 26138: a4 = u8 [a0 + 0xb]\n 26141: a1 = a1 << 0x8\n 26144: a1 = a1 | a2\n 26147: a3 = a3 << 0x10\n 26150: a4 = a4 << 0x18\n 26153: a3 = a3 | a4\n 26156: a1 = a1 | a3\n 26159: a2 = u8 [a0 + 0xd]\n 26162: a3 = u8 [a0 + 0xc]\n 26165: a4 = u8 [a0 + 0xe]\n 26168: a5 = u8 [a0 + 0xf]\n 26171: a2 = a2 << 0x8\n 26174: a2 = a2 | a3\n 26177: a4 = a4 << 0x10\n 26180: a5 = a5 << 0x18\n 26183: a4 = a4 | a5\n 26186: a2 = a2 | a4\n 26189: a2 = a2 << 0x20\n 26192: t0 = a2 | a1\n 26195: a2 = u8 [a0 + 0x1]\n 26198: a3 = u8 [a0]\n 26200: a4 = u8 [a0 + 0x2]\n 26203: a5 = u8 [a0 + 0x3]\n 26206: a2 = a2 << 0x8\n 26209: a2 = a2 | a3\n 26212: a4 = a4 << 0x10\n 26215: a5 = a5 << 0x18\n 26218: a4 = a4 | a5\n 26221: a2 = a2 | a4\n 26224: a3 = u8 [a0 + 0x5]\n 26227: a4 = u8 [a0 + 0x4]\n 26230: a5 = u8 [a0 + 0x6]\n 26233: s1 = u8 [a0 + 0x7]\n 26236: a3 = a3 << 0x8\n 26239: a3 = a3 | a4\n 26242: a5 = a5 << 0x10\n 26245: s1 = s1 << 0x18\n 26248: a5 = a5 | s1\n 26251: a3 = a3 | a5\n 26254: a3 = a3 << 0x20\n 26257: a2 = a2 | a3\n 26260: a3 = u8 [a0 + 0x19]\n 26263: a4 = u8 [a0 + 0x18]\n 26266: a5 = u8 [a0 + 0x1a]\n 26269: s1 = u8 [a0 + 0x1b]\n 26272: a3 = a3 << 0x8\n 26275: a3 = a3 | a4\n 26278: a5 = a5 << 0x10\n 26281: s1 = s1 << 0x18\n 26284: a5 = a5 | s1\n 26287: a3 = a3 | a5\n 26290: a4 = u8 [a0 + 0x1d]\n 26293: a5 = u8 [a0 + 0x1c]\n 26296: s1 = u8 [a0 + 0x1e]\n 26299: a1 = u8 [a0 + 0x1f]\n 26302: a4 = a4 << 0x8\n 26305: a4 = a4 | a5\n 26308: s1 = s1 << 0x10\n 26311: a1 = a1 << 0x18\n 26314: a1 = a1 | s1\n 26317: a1 = a1 | a4\n 26320: a1 = a1 << 0x20\n 26323: a3 = a3 | a1\n 26326: a1 = u8 [a0 + 0x11]\n 26329: a4 = u8 [a0 + 0x10]\n 26332: a5 = u8 [a0 + 0x12]\n 26335: s1 = u8 [a0 + 0x13]\n 26338: a1 = a1 << 0x8\n 26341: a1 = a1 | a4\n 26344: a5 = a5 << 0x10\n 26347: s1 = s1 << 0x18\n 26350: a5 = a5 | s1\n 26353: a1 = a1 | a5\n 26356: a4 = u8 [a0 + 0x15]\n 26359: a5 = u8 [a0 + 0x14]\n 26362: s1 = u8 [a0 + 0x16]\n 26365: a0 = u8 [a0 + 0x17]\n 26368: a4 = a4 << 0x8\n 26371: a4 = a4 | a5\n 26374: s1 = s1 << 0x10\n 26377: a0 = a0 << 0x18\n 26380: a0 = a0 | s1\n 26383: a0 = a0 | a4\n 26386: a0 = a0 << 0x20\n 26389: a0 = a0 | a1\n 26392: a1 = reverse a0\n 26394: a4 = reverse a3\n 26396: a4 = a4 <u 0x2\n 26399: a4 = 0 if a1 != 0\n 26401: a1 = t0 | a2\n 26404: a1 = reverse a1\n 26406: a4 = 0 if a1 != 0\n 26408: jump @435 if a4 == 0\n      : @420 (gas: 4)\n 26412: a0 = a0 | a2\n 26415: a1 = t0 | a3\n 26418: a0 = a0 | a1\n 26421: jump @428 if a0 == 0\n      : @421 (gas: 6)\n 26425: sp = s0 + 0xfffffffffffffce0\n 26429: ra = u64 [sp + 0x318]\n 26433: s0 = u64 [sp + 0x310]\n 26437: s1 = u64 [sp + 0x308]\n 26441: sp = sp + 0x320\n 26445: ret\n      : @422 (gas: 3)\n 26447: a0 = 0x40\n 26450: a1 = 0x20\n 26453: ra = 368, jump @0\n      : @423 [@dyn 184] (gas: 103)\n 26459: a1 = u8 [a0 + 0x11]\n 26462: a2 = u8 [a0 + 0x10]\n 26465: a3 = u8 [a0 + 0x12]\n 26468: a4 = u8 [a0 + 0x13]\n 26471: a1 = a1 << 0x8\n 26474: a1 = a1 | a2\n 26477: a3 = a3 << 0x10\n 26480: a4 = a4 << 0x18\n 26483: a3 = a3 | a4\n 26486: a1 = a1 | a3\n 26489: a2 = u8 [a0 + 0x15]\n 26492: a3 = u8 [a0 + 0x14]\n 26495: a4 = u8 [a0 + 0x16]\n 26498: a5 = u8 [a0 + 0x17]\n 26501: a2 = a2 << 0x8\n 26504: a2 = a2 | a3\n 26507: a4 = a4 << 0x10\n 26510: a5 = a5 << 0x18\n 26513: a4 = a4 | a5\n 26516: a2 = a2 | a4\n 26519: a2 = a2 << 0x20\n 26522: t0 = a2 | a1\n 26525: a2 = u8 [a0 + 0x1]\n 26528: a3 = u8 [a0]\n 26530: a4 = u8 [a0 + 0x2]\n 26533: a5 = u8 [a0 + 0x3]\n 26536: a2 = a2 << 0x8\n 26539: a2 = a2 | a3\n 26542: a4 = a4 << 0x10\n 26545: a5 = a5 << 0x18\n 26548: a4 = a4 | a5\n 26551: a2 = a2 | a4\n 26554: a3 = u8 [a0 + 0x5]\n 26557: a4 = u8 [a0 + 0x4]\n 26560: a5 = u8 [a0 + 0x6]\n 26563: s1 = u8 [a0 + 0x7]\n 26566: a3 = a3 << 0x8\n 26569: a3 = a3 | a4\n 26572: a5 = a5 << 0x10\n 26575: s1 = s1 << 0x18\n 26578: a5 = a5 | s1\n 26581: a3 = a3 | a5\n 26584: a3 = a3 << 0x20\n 26587: a2 = a2 | a3\n 26590: a3 = u8 [a0 + 0x19]\n 26593: a4 = u8 [a0 + 0x18]\n 26596: a5 = u8 [a0 + 0x1a]\n 26599: s1 = u8 [a0 + 0x1b]\n 26602: a3 = a3 << 0x8\n 26605: a3 = a3 | a4\n 26608: a5 = a5 << 0x10\n 26611: s1 = s1 << 0x18\n 26614: a5 = a5 | s1\n 26617: a3 = a3 | a5\n 26620: a4 = u8 [a0 + 0x1d]\n 26623: a5 = u8 [a0 + 0x1c]\n 26626: s1 = u8 [a0 + 0x1e]\n 26629: a1 = u8 [a0 + 0x1f]\n 26632: a4 = a4 << 0x8\n 26635: a4 = a4 | a5\n 26638: s1 = s1 << 0x10\n 26641: a1 = a1 << 0x18\n 26644: a1 = a1 | s1\n 26647: a1 = a1 | a4\n 26650: a1 = a1 << 0x20\n 26653: a3 = a3 | a1\n 26656: a1 = u8 [a0 + 0x9]\n 26659: a4 = u8 [a0 + 0x8]\n 26662: a5 = u8 [a0 + 0xa]\n 26665: s1 = u8 [a0 + 0xb]\n 26668: a1 = a1 << 0x8\n 26671: a1 = a1 | a4\n 26674: a5 = a5 << 0x10\n 26677: s1 = s1 << 0x18\n 26680: a5 = a5 | s1\n 26683: a1 = a1 | a5\n 26686: a4 = u8 [a0 + 0xd]\n 26689: a5 = u8 [a0 + 0xc]\n 26692: s1 = u8 [a0 + 0xe]\n 26695: a0 = u8 [a0 + 0xf]\n 26698: a4 = a4 << 0x8\n 26701: a4 = a4 | a5\n 26704: s1 = s1 << 0x10\n 26707: a0 = a0 << 0x18\n 26710: a0 = a0 | s1\n 26713: a0 = a0 | a4\n 26716: a0 = a0 << 0x20\n 26719: a0 = a0 | a1\n 26722: s1 = reverse a0\n 26724: a1 = reverse a3\n 26726: a2 = reverse a2\n 26728: a0 = reverse t0\n 26730: u64 [sp + 0x98] = a0\n 26734: u64 [sp + 0x90] = a2\n 26738: a0 = a0 | a2\n 26741: a2 = a1\n 26743: a1 = a1 | s1\n 26746: a1 = a1 | a0\n 26749: a1 = a1 >> 0x20\n 26752: a0 = a0 | s1\n 26755: a0 = a0 << 0x20\n 26758: a0 = a0 | a1\n 26761: jump @434 if a0 != 0\n      : @424 (gas: 5)\n 26765: u64 [sp + 0x88] = a2\n 26769: i32 a0 = a2 + 0\n 26771: a1 = 0x20\n 26774: u64 [sp + 0x80] = a0\n 26778: ra = 370, jump @0\n      : @425 [@dyn 185] (gas: 50)\n 26784: u8 [a0 + 31] = 0\n 26787: u8 [a0 + 30] = 0\n 26790: u8 [a0 + 29] = 0\n 26793: u8 [a0 + 28] = 0\n 26796: u8 [a0 + 27] = 0\n 26799: u8 [a0 + 26] = 0\n 26802: u8 [a0 + 25] = 0\n 26805: u8 [a0 + 24] = 0\n 26808: u8 [a0 + 23] = 0\n 26811: u8 [a0 + 22] = 0\n 26814: u8 [a0 + 21] = 0\n 26817: u8 [a0 + 20] = 0\n 26820: u8 [a0 + 19] = 0\n 26823: u8 [a0 + 18] = 0\n 26826: u8 [a0 + 17] = 0\n 26829: u8 [a0 + 16] = 0\n 26832: u8 [a0 + 15] = 0\n 26835: u8 [a0 + 14] = 0\n 26838: u8 [a0 + 13] = 0\n 26841: u8 [a0 + 12] = 0\n 26844: u8 [a0 + 11] = 0\n 26847: u8 [a0 + 10] = 0\n 26850: u8 [a0 + 9] = 0\n 26853: u8 [a0 + 8] = 0\n 26856: u8 [a0 + 7] = 0\n 26859: u8 [a0 + 6] = 0\n 26862: u8 [a0 + 5] = 0\n 26865: u8 [a0 + 4] = 0\n 26868: u8 [a0 + 3] = 0xa0\n 26873: u8 [a0 + 2] = 0x79\n 26877: u8 [a0 + 1] = 0xc3\n 26882: u8 [a0 + 0] = 0x8\n 26885: a1 = u64 [sp + 0x88]\n 26889: a0 = a1 + 0x4\n 26892: a1 = a0 <u a1\n 26895: a3 = u64 [sp + 0x98]\n 26899: a2 = a3 + a1\n 26902: a3 = a2 <u a3\n 26905: a3 = a1 if a1 == 0\n 26908: a3 = a3 + s1\n 26911: a1 = a3 <u s1\n 26914: a4 = u64 [sp + 0x90]\n 26918: a4 = a4 + a1\n 26921: u64 [sp + 0xa8] = a2\n 26925: u64 [sp + 0xa0] = a0\n 26929: u64 [sp + 0xb0] = a3\n 26933: a0 = sp + 0xc0\n 26937: a1 = sp + 0xa0\n 26941: u64 [sp + 0xb8] = a4\n 26945: ra = 372, jump @370\n      : @426 [@dyn 186] (gas: 5)\n 26951: a0 = u64 [sp + 0xc8]\n 26955: t0 = u64 [sp + 0xd8]\n 26959: t1 = u64 [sp + 0xc0]\n 26963: a3 = u64 [sp + 0xd0]\n 26967: jump @433\n      : @427 (gas: 1)\n 26970: ra = 374, jump @275\n      : @428 [@dyn 187] (gas: 3)\n 26976: a0 = 0x40\n 26979: a1 = 0x20\n 26982: ra = 376, jump @0\n      : @429 [@dyn 188] (gas: 103)\n 26988: a1 = u8 [a0 + 0x11]\n 26991: a2 = u8 [a0 + 0x10]\n 26994: a3 = u8 [a0 + 0x12]\n 26997: a4 = u8 [a0 + 0x13]\n 27000: a1 = a1 << 0x8\n 27003: a1 = a1 | a2\n 27006: a3 = a3 << 0x10\n 27009: a4 = a4 << 0x18\n 27012: a3 = a3 | a4\n 27015: a1 = a1 | a3\n 27018: a2 = u8 [a0 + 0x15]\n 27021: a3 = u8 [a0 + 0x14]\n 27024: a4 = u8 [a0 + 0x16]\n 27027: a5 = u8 [a0 + 0x17]\n 27030: a2 = a2 << 0x8\n 27033: a2 = a2 | a3\n 27036: a4 = a4 << 0x10\n 27039: a5 = a5 << 0x18\n 27042: a4 = a4 | a5\n 27045: a2 = a2 | a4\n 27048: a2 = a2 << 0x20\n 27051: t0 = a2 | a1\n 27054: a2 = u8 [a0 + 0x1]\n 27057: a3 = u8 [a0]\n 27059: a4 = u8 [a0 + 0x2]\n 27062: a5 = u8 [a0 + 0x3]\n 27065: a2 = a2 << 0x8\n 27068: a2 = a2 | a3\n 27071: a4 = a4 << 0x10\n 27074: a5 = a5 << 0x18\n 27077: a4 = a4 | a5\n 27080: a2 = a2 | a4\n 27083: a3 = u8 [a0 + 0x5]\n 27086: a4 = u8 [a0 + 0x4]\n 27089: a5 = u8 [a0 + 0x6]\n 27092: s1 = u8 [a0 + 0x7]\n 27095: a3 = a3 << 0x8\n 27098: a3 = a3 | a4\n 27101: a5 = a5 << 0x10\n 27104: s1 = s1 << 0x18\n 27107: a5 = a5 | s1\n 27110: a3 = a3 | a5\n 27113: a3 = a3 << 0x20\n 27116: a2 = a2 | a3\n 27119: a3 = u8 [a0 + 0x19]\n 27122: a4 = u8 [a0 + 0x18]\n 27125: a5 = u8 [a0 + 0x1a]\n 27128: s1 = u8 [a0 + 0x1b]\n 27131: a3 = a3 << 0x8\n 27134: a3 = a3 | a4\n 27137: a5 = a5 << 0x10\n 27140: s1 = s1 << 0x18\n 27143: a5 = a5 | s1\n 27146: a3 = a3 | a5\n 27149: a4 = u8 [a0 + 0x1d]\n 27152: a5 = u8 [a0 + 0x1c]\n 27155: s1 = u8 [a0 + 0x1e]\n 27158: a1 = u8 [a0 + 0x1f]\n 27161: a4 = a4 << 0x8\n 27164: a4 = a4 | a5\n 27167: s1 = s1 << 0x10\n 27170: a1 = a1 << 0x18\n 27173: a1 = a1 | s1\n 27176: a1 = a1 | a4\n 27179: a1 = a1 << 0x20\n 27182: a3 = a3 | a1\n 27185: a1 = u8 [a0 + 0x9]\n 27188: a4 = u8 [a0 + 0x8]\n 27191: a5 = u8 [a0 + 0xa]\n 27194: s1 = u8 [a0 + 0xb]\n 27197: a1 = a1 << 0x8\n 27200: a1 = a1 | a4\n 27203: a5 = a5 << 0x10\n 27206: s1 = s1 << 0x18\n 27209: a5 = a5 | s1\n 27212: a1 = a1 | a5\n 27215: a4 = u8 [a0 + 0xd]\n 27218: a5 = u8 [a0 + 0xc]\n 27221: s1 = u8 [a0 + 0xe]\n 27224: a0 = u8 [a0 + 0xf]\n 27227: a4 = a4 << 0x8\n 27230: a4 = a4 | a5\n 27233: s1 = s1 << 0x10\n 27236: a0 = a0 << 0x18\n 27239: a0 = a0 | s1\n 27242: a0 = a0 | a4\n 27245: a0 = a0 << 0x20\n 27248: a0 = a0 | a1\n 27251: s1 = reverse a0\n 27253: a1 = reverse a3\n 27255: a2 = reverse a2\n 27257: a0 = reverse t0\n 27259: u64 [sp + 0x98] = a0\n 27263: u64 [sp + 0x90] = a2\n 27267: a0 = a0 | a2\n 27270: a2 = a1\n 27272: a1 = a1 | s1\n 27275: a1 = a1 | a0\n 27278: a1 = a1 >> 0x20\n 27281: a0 = a0 | s1\n 27284: a0 = a0 << 0x20\n 27287: a0 = a0 | a1\n 27290: jump @434 if a0 != 0\n      : @430 (gas: 5)\n 27294: u64 [sp + 0x88] = a2\n 27298: i32 a0 = a2 + 0\n 27300: a1 = 0x20\n 27303: u64 [sp + 0x80] = a0\n 27307: ra = 378, jump @0\n      : @431 [@dyn 189] (gas: 50)\n 27313: u8 [a0 + 31] = 0\n 27316: u8 [a0 + 30] = 0\n 27319: u8 [a0 + 29] = 0\n 27322: u8 [a0 + 28] = 0\n 27325: u8 [a0 + 27] = 0\n 27328: u8 [a0 + 26] = 0\n 27331: u8 [a0 + 25] = 0\n 27334: u8 [a0 + 24] = 0\n 27337: u8 [a0 + 23] = 0\n 27340: u8 [a0 + 22] = 0\n 27343: u8 [a0 + 21] = 0\n 27346: u8 [a0 + 20] = 0\n 27349: u8 [a0 + 19] = 0\n 27352: u8 [a0 + 18] = 0\n 27355: u8 [a0 + 17] = 0\n 27358: u8 [a0 + 16] = 0\n 27361: u8 [a0 + 15] = 0\n 27364: u8 [a0 + 14] = 0\n 27367: u8 [a0 + 13] = 0\n 27370: u8 [a0 + 12] = 0\n 27373: u8 [a0 + 11] = 0\n 27376: u8 [a0 + 10] = 0\n 27379: u8 [a0 + 9] = 0\n 27382: u8 [a0 + 8] = 0\n 27385: u8 [a0 + 7] = 0\n 27388: u8 [a0 + 6] = 0\n 27391: u8 [a0 + 5] = 0\n 27394: u8 [a0 + 4] = 0\n 27397: u8 [a0 + 3] = 0xa0\n 27402: u8 [a0 + 2] = 0x79\n 27406: u8 [a0 + 1] = 0xc3\n 27411: u8 [a0 + 0] = 0x8\n 27414: a1 = u64 [sp + 0x88]\n 27418: a0 = a1 + 0x4\n 27421: a1 = a0 <u a1\n 27424: a3 = u64 [sp + 0x98]\n 27428: a2 = a3 + a1\n 27431: a3 = a2 <u a3\n 27434: a3 = a1 if a1 == 0\n 27437: a3 = a3 + s1\n 27440: a1 = a3 <u s1\n 27443: a4 = u64 [sp + 0x90]\n 27447: a4 = a4 + a1\n 27450: u64 [sp + 0x168] = a2\n 27454: u64 [sp + 0x160] = a0\n 27458: u64 [sp + 0x170] = a3\n 27462: a0 = sp + 0x180\n 27466: a1 = sp + 0x160\n 27470: u64 [sp + 0x178] = a4\n 27474: ra = 380, jump @378\n      : @432 [@dyn 190] (gas: 5)\n 27480: a0 = u64 [sp + 0x188]\n 27484: t0 = u64 [sp + 0x198]\n 27488: t1 = u64 [sp + 0x180]\n 27492: a3 = u64 [sp + 0x190]\n 27496: fallthrough\n      : @433 (gas: 26)\n 27497: a1 = u64 [sp + 0x98]\n 27501: a4 = a0 ^ a1\n 27504: a5 = a0 <u a1\n 27507: t2 = a1\n 27509: a2 = u64 [sp + 0x88]\n 27513: a1 = t1 <u a2\n 27516: a5 = a1 if a4 == 0\n 27519: a4 = a3 - s1\n 27522: a3 = a3 <u s1\n 27525: s1 = u64 [sp + 0x90]\n 27529: s1 = t0 - s1\n 27532: s1 = s1 - a3\n 27535: a3 = a4 <u a5\n 27538: s1 = s1 - a3\n 27541: a4 = a4 - a5\n 27544: a0 = a0 - t2\n 27547: a1 = a0 - a1\n 27550: a0 = t1 - a2\n 27553: a1 = a1 | s1\n 27556: a2 = a0 | a4\n 27559: a2 = a2 | a1\n 27562: a1 = a1 | a4\n 27565: a2 = a2 >> 0x20\n 27568: a1 = a1 << 0x20\n 27571: a1 = a1 | a2\n 27574: jump @443 if a1 == 0\n      : @434 (gas: 1)\n 27578: trap\n      : @435 (gas: 3)\n 27579: a0 = 0\n 27581: a1 = 0\n 27583: ra = 382, jump @0\n      : @436 [@dyn 191] (gas: 5)\n 27589: i32 a1 = a0 + 0\n 27591: a0 = 0x1\n 27594: a2 = 0\n 27596: ecalli 13 // 'seal_return'\n 27598: fallthrough\n      : @437 (gas: 8)\n 27599: u64 [sp + 272] = 0\n 27603: u64 [sp + 264] = 0\n 27607: u64 [sp + 256] = 0\n 27611: a0 = 0x4e487b7100000000\n 27621: a1 = sp + 0x100\n 27625: u64 [sp + 0x118] = a0\n 27629: a0 = 0\n 27631: ra = 384, jump @8\n      : @438 [@dyn 192] (gas: 8)\n 27637: u64 [sp + 248] = 0\n 27641: u64 [sp + 240] = 0\n 27645: u64 [sp + 224] = 0x11\n 27650: a0 = 0x4\n 27653: a1 = sp + 0xe0\n 27657: u64 [sp + 232] = 0\n 27661: ra = 0x184\n 27665: jump @8\n      : @439 (gas: 8)\n 27668: u64 [sp + 336] = 0\n 27672: u64 [sp + 328] = 0\n 27676: u64 [sp + 320] = 0\n 27680: a0 = 0x4e487b7100000000\n 27690: a1 = sp + 0x140\n 27694: u64 [sp + 0x158] = a0\n 27698: a0 = 0\n 27700: ra = 386, jump @8\n      : @440 [@dyn 193] (gas: 7)\n 27706: u64 [sp + 312] = 0\n 27710: u64 [sp + 304] = 0\n 27714: u64 [sp + 288] = 0x41\n 27719: a0 = 0x4\n 27722: a1 = sp + 0x120\n 27726: u64 [sp + 296] = 0\n 27730: ra = 388, jump @8\n      : @441 [@dyn 194] (gas: 3)\n 27736: a1 = 0x24\n 27739: a0 = 0\n 27741: ra = 390, jump @0\n      : @442 [@dyn 195] (gas: 5)\n 27747: i32 a1 = a0 + 0\n 27749: a0 = 0x1\n 27752: a2 = 0x24\n 27755: ecalli 13 // 'seal_return'\n 27757: fallthrough\n      : @443 (gas: 4)\n 27758: i32 s1 = a0 + 0\n 27760: a0 = u64 [sp + 0x80]\n 27764: a1 = s1\n 27766: ra = 392, jump @0\n      : @444 [@dyn 196] (gas: 6)\n 27772: i32 a1 = a0 + 0\n 27774: a0 = 0x1\n 27777: a2 = s1\n 27779: ra = 0x18a\n 27783: ecalli 13 // 'seal_return'\n 27785: fallthrough\n      : @445 [@dyn 197] (gas: 12)\n 27786: a2 = u64 [a1 + 0x10]\n 27789: a3 = u64 [a1 + 0x18]\n 27792: a4 = u64 [a1 + 0x8]\n 27795: a1 = u64 [a1]\n 27797: a3 = a3 | a4\n 27800: a4 = a1 | a2\n 27803: a4 = a4 | a3\n 27806: a4 = a4 >> 0x20\n 27809: a2 = a2 | a3\n 27812: a2 = a2 << 0x20\n 27815: a2 = a2 | a4\n 27818: jump @448 if a2 != 0\n      : @446 (gas: 13)\n 27822: sp = sp + 0xffffffffffffffd8\n 27825: u64 [sp + 0x20] = ra\n 27828: u64 [sp + 0x18] = s0\n 27831: u64 [sp + 0x10] = s1\n 27834: s0 = u64 [a0 + 0x18]\n 27837: s1 = u64 [a0 + 0x10]\n 27840: a2 = u64 [a0 + 0x8]\n 27843: u64 [sp] = a2\n 27845: a0 = u64 [a0]\n 27847: u64 [sp + 0x8] = a0\n 27850: i32 a0 = a1 + 0\n 27852: a1 = 0x20\n 27855: ra = 396, jump @0\n      : @447 [@dyn 198] (gas: 71)\n 27861: a1 = reverse s0\n 27863: a2 = reverse s1\n 27865: a3 = u64 [sp]\n 27867: a3 = reverse a3\n 27869: a4 = u64 [sp + 0x8]\n 27872: a4 = reverse a4\n 27874: a5 = a4 >> 0x38\n 27877: u8 [a0 + 0x1f] = a5\n 27880: a5 = a4 >> 0x30\n 27883: u8 [a0 + 0x1e] = a5\n 27886: a5 = a4 >> 0x28\n 27889: u8 [a0 + 0x1d] = a5\n 27892: a5 = a4 >> 0x20\n 27895: u8 [a0 + 0x1c] = a5\n 27898: a5 = a4 >> 0x18\n 27901: u8 [a0 + 0x1b] = a5\n 27904: a5 = a4 >> 0x10\n 27907: u8 [a0 + 0x1a] = a5\n 27910: a5 = a4 >> 0x8\n 27913: u8 [a0 + 0x19] = a5\n 27916: u8 [a0 + 0x18] = a4\n 27919: u8 [a0 + 0x10] = a3\n 27922: a4 = a3 >> 0x38\n 27925: u8 [a0 + 0x17] = a4\n 27928: a4 = a3 >> 0x30\n 27931: u8 [a0 + 0x16] = a4\n 27934: a4 = a3 >> 0x28\n 27937: u8 [a0 + 0x15] = a4\n 27940: a4 = a3 >> 0x20\n 27943: u8 [a0 + 0x14] = a4\n 27946: a4 = a3 >> 0x18\n 27949: u8 [a0 + 0x13] = a4\n 27952: a4 = a3 >> 0x10\n 27955: u8 [a0 + 0x12] = a4\n 27958: a3 = a3 >> 0x8\n 27961: u8 [a0 + 0x11] = a3\n 27964: u8 [a0 + 0x8] = a2\n 27967: a3 = a2 >> 0x38\n 27970: u8 [a0 + 0xf] = a3\n 27973: a3 = a2 >> 0x30\n 27976: u8 [a0 + 0xe] = a3\n 27979: a3 = a2 >> 0x28\n 27982: u8 [a0 + 0xd] = a3\n 27985: a3 = a2 >> 0x20\n 27988: u8 [a0 + 0xc] = a3\n 27991: a3 = a2 >> 0x18\n 27994: u8 [a0 + 0xb] = a3\n 27997: a3 = a2 >> 0x10\n 28000: u8 [a0 + 0xa] = a3\n 28003: a2 = a2 >> 0x8\n 28006: u8 [a0 + 0x9] = a2\n 28009: u8 [a0] = a1\n 28011: a2 = a1 >> 0x38\n 28014: u8 [a0 + 0x7] = a2\n 28017: a2 = a1 >> 0x30\n 28020: u8 [a0 + 0x6] = a2\n 28023: a2 = a1 >> 0x28\n 28026: u8 [a0 + 0x5] = a2\n 28029: a2 = a1 >> 0x20\n 28032: u8 [a0 + 0x4] = a2\n 28035: a2 = a1 >> 0x18\n 28038: u8 [a0 + 0x3] = a2\n 28041: a2 = a1 >> 0x10\n 28044: u8 [a0 + 0x2] = a2\n 28047: a1 = a1 >> 0x8\n 28050: u8 [a0 + 0x1] = a1\n 28053: ra = u64 [sp + 0x20]\n 28056: s0 = u64 [sp + 0x18]\n 28059: s1 = u64 [sp + 0x10]\n 28062: sp = sp + 0x28\n 28065: ret\n      : @448 (gas: 1)\n 28067: trap\n      : @449 [@dyn 199] (gas: 102)\n 28068: a1 = u8 [a0 + 0x11]\n 28071: a2 = u8 [a0 + 0x10]\n 28074: a3 = u8 [a0 + 0x12]\n 28077: a4 = u8 [a0 + 0x13]\n 28080: a1 = a1 << 0x8\n 28083: a1 = a1 | a2\n 28086: a3 = a3 << 0x10\n 28089: a4 = a4 << 0x18\n 28092: a3 = a3 | a4\n 28095: a1 = a1 | a3\n 28098: a2 = u8 [a0 + 0x15]\n 28101: a3 = u8 [a0 + 0x14]\n 28104: a4 = u8 [a0 + 0x16]\n 28107: a5 = u8 [a0 + 0x17]\n 28110: a2 = a2 << 0x8\n 28113: a2 = a2 | a3\n 28116: a4 = a4 << 0x10\n 28119: a5 = a5 << 0x18\n 28122: a4 = a4 | a5\n 28125: a2 = a2 | a4\n 28128: a2 = a2 << 0x20\n 28131: t0 = a2 | a1\n 28134: a2 = u8 [a0 + 0x1]\n 28137: a3 = u8 [a0]\n 28139: a4 = u8 [a0 + 0x2]\n 28142: a5 = u8 [a0 + 0x3]\n 28145: a2 = a2 << 0x8\n 28148: a2 = a2 | a3\n 28151: a4 = a4 << 0x10\n 28154: a5 = a5 << 0x18\n 28157: a4 = a4 | a5\n 28160: a2 = a2 | a4\n 28163: a3 = u8 [a0 + 0x5]\n 28166: a4 = u8 [a0 + 0x4]\n 28169: a5 = u8 [a0 + 0x6]\n 28172: s1 = u8 [a0 + 0x7]\n 28175: a3 = a3 << 0x8\n 28178: a3 = a3 | a4\n 28181: a5 = a5 << 0x10\n 28184: s1 = s1 << 0x18\n 28187: a5 = a5 | s1\n 28190: a3 = a3 | a5\n 28193: a3 = a3 << 0x20\n 28196: a2 = a2 | a3\n 28199: a3 = u8 [a0 + 0x19]\n 28202: a4 = u8 [a0 + 0x18]\n 28205: a5 = u8 [a0 + 0x1a]\n 28208: s1 = u8 [a0 + 0x1b]\n 28211: a3 = a3 << 0x8\n 28214: a3 = a3 | a4\n 28217: a5 = a5 << 0x10\n 28220: s1 = s1 << 0x18\n 28223: a5 = a5 | s1\n 28226: a3 = a3 | a5\n 28229: a4 = u8 [a0 + 0x1d]\n 28232: a5 = u8 [a0 + 0x1c]\n 28235: s1 = u8 [a0 + 0x1e]\n 28238: a1 = u8 [a0 + 0x1f]\n 28241: a4 = a4 << 0x8\n 28244: a4 = a4 | a5\n 28247: s1 = s1 << 0x10\n 28250: a1 = a1 << 0x18\n 28253: a1 = a1 | s1\n 28256: a1 = a1 | a4\n 28259: a1 = a1 << 0x20\n 28262: a3 = a3 | a1\n 28265: a1 = u8 [a0 + 0x9]\n 28268: a4 = u8 [a0 + 0x8]\n 28271: a5 = u8 [a0 + 0xa]\n 28274: s1 = u8 [a0 + 0xb]\n 28277: a1 = a1 << 0x8\n 28280: a1 = a1 | a4\n 28283: a5 = a5 << 0x10\n 28286: s1 = s1 << 0x18\n 28289: a5 = a5 | s1\n 28292: a1 = a1 | a5\n 28295: a4 = u8 [a0 + 0xd]\n 28298: a5 = u8 [a0 + 0xc]\n 28301: s1 = u8 [a0 + 0xe]\n 28304: a0 = u8 [a0 + 0xf]\n 28307: a4 = a4 << 0x8\n 28310: a4 = a4 | a5\n 28313: s1 = s1 << 0x10\n 28316: a0 = a0 << 0x18\n 28319: a0 = a0 | s1\n 28322: a0 = a0 | a4\n 28325: a0 = a0 << 0x20\n 28328: a0 = a0 | a1\n 28331: s1 = reverse a0\n 28333: a3 = reverse a3\n 28335: a1 = reverse a2\n 28337: a0 = reverse t0\n 28339: u64 [sp + 0x50] = a0\n 28342: u64 [sp + 0x48] = a1\n 28345: a0 = a0 | a1\n 28348: a1 = a3 | s1\n 28351: a1 = a1 | a0\n 28354: a1 = a1 >> 0x20\n 28357: a0 = a0 | s1\n 28360: a0 = a0 << 0x20\n 28363: a0 = a0 | a1\n 28366: jump @455 if a0 != 0\n      : @450 (gas: 5)\n 28370: i32 a0 = a3 + 0\n 28372: a1 = 0x20\n 28375: u64 [sp + 0x8] = a0\n 28378: u64 [sp + 0x10] = a3\n 28381: ra = 400, jump @0\n      : @451 [@dyn 200] (gas: 77)\n 28387: a1 = u64 [sp + 0x58]\n 28390: a1 = reverse a1\n 28392: a2 = u64 [sp + 0x60]\n 28395: a2 = reverse a2\n 28397: a3 = u64 [sp + 0x68]\n 28400: a3 = reverse a3\n 28402: a4 = u64 [sp + 0x70]\n 28405: a4 = reverse a4\n 28407: a5 = a4 >> 0x38\n 28410: u8 [a0 + 0x1f] = a5\n 28413: a5 = a4 >> 0x30\n 28416: u8 [a0 + 0x1e] = a5\n 28419: a5 = a4 >> 0x28\n 28422: u8 [a0 + 0x1d] = a5\n 28425: a5 = a4 >> 0x20\n 28428: u8 [a0 + 0x1c] = a5\n 28431: a5 = a4 >> 0x18\n 28434: u8 [a0 + 0x1b] = a5\n 28437: a5 = a4 >> 0x10\n 28440: u8 [a0 + 0x1a] = a5\n 28443: a5 = a4 >> 0x8\n 28446: u8 [a0 + 0x19] = a5\n 28449: u8 [a0 + 0x18] = a4\n 28452: u8 [a0 + 0x10] = a3\n 28455: a4 = a3 >> 0x38\n 28458: u8 [a0 + 0x17] = a4\n 28461: a4 = a3 >> 0x30\n 28464: u8 [a0 + 0x16] = a4\n 28467: a4 = a3 >> 0x28\n 28470: u8 [a0 + 0x15] = a4\n 28473: a4 = a3 >> 0x20\n 28476: u8 [a0 + 0x14] = a4\n 28479: a4 = a3 >> 0x18\n 28482: u8 [a0 + 0x13] = a4\n 28485: a4 = a3 >> 0x10\n 28488: u8 [a0 + 0x12] = a4\n 28491: a3 = a3 >> 0x8\n 28494: u8 [a0 + 0x11] = a3\n 28497: u8 [a0 + 0x8] = a2\n 28500: a3 = a2 >> 0x38\n 28503: u8 [a0 + 0xf] = a3\n 28506: a3 = a2 >> 0x30\n 28509: u8 [a0 + 0xe] = a3\n 28512: a3 = a2 >> 0x28\n 28515: u8 [a0 + 0xd] = a3\n 28518: a3 = a2 >> 0x20\n 28521: u8 [a0 + 0xc] = a3\n 28524: a3 = a2 >> 0x18\n 28527: u8 [a0 + 0xb] = a3\n 28530: a3 = a2 >> 0x10\n 28533: u8 [a0 + 0xa] = a3\n 28536: a2 = a2 >> 0x8\n 28539: u8 [a0 + 0x9] = a2\n 28542: u8 [a0] = a1\n 28544: a2 = a1 >> 0x38\n 28547: u8 [a0 + 0x7] = a2\n 28550: a2 = a1 >> 0x30\n 28553: u8 [a0 + 0x6] = a2\n 28556: a2 = a1 >> 0x28\n 28559: u8 [a0 + 0x5] = a2\n 28562: a2 = a1 >> 0x20\n 28565: u8 [a0 + 0x4] = a2\n 28568: a2 = a1 >> 0x18\n 28571: u8 [a0 + 0x3] = a2\n 28574: a2 = a1 >> 0x10\n 28577: u8 [a0 + 0x2] = a2\n 28580: a1 = a1 >> 0x8\n 28583: a2 = u64 [sp + 0x48]\n 28586: a2 = a2 | s1\n 28589: a3 = 0xffffffe0\n 28599: a4 = u64 [sp + 0x10]\n 28602: a3 = a4 <u a3\n 28605: a4 = u64 [sp + 0x50]\n 28608: a3 = 0 if a4 != 0\n 28610: a3 = 0 if a2 != 0\n 28612: u8 [a0 + 0x1] = a1\n 28615: jump @455 if a3 == 0\n      : @452 (gas: 18)\n 28619: a0 = u64 [sp + 0x18]\n 28622: a0 = reverse a0\n 28624: a1 = a0 << 0x20\n 28627: a2 = u64 [sp + 0x20]\n 28630: a2 = reverse a2\n 28632: a2 = a2 >> 0x20\n 28635: a1 = a1 | a2\n 28638: u64 [sp + 0x70] = a1\n 28641: a1 = u64 [sp + 0x78]\n 28644: a1 = reverse a1\n 28646: a1 = a1 << 0x20\n 28649: a0 = a0 >> 0x20\n 28652: a0 = a0 | a1\n 28655: u64 [sp + 0x68] = a0\n 28658: s1 = u64 [sp + 0x8]\n 28661: i32 a0 = s1 + 0x20\n 28664: a1 = 0x20\n 28667: ra = 402, jump @0\n      : @453 [@dyn 201] (gas: 71)\n 28673: a1 = u64 [sp + 0x28]\n 28676: a1 = reverse a1\n 28678: a2 = u64 [sp + 0x30]\n 28681: a2 = reverse a2\n 28683: a3 = u64 [sp + 0x38]\n 28686: a3 = reverse a3\n 28688: a4 = u64 [sp + 0x40]\n 28691: a4 = reverse a4\n 28693: a5 = a4 >> 0x38\n 28696: u8 [a0 + 0x1f] = a5\n 28699: a5 = a4 >> 0x30\n 28702: u8 [a0 + 0x1e] = a5\n 28705: a5 = a4 >> 0x28\n 28708: u8 [a0 + 0x1d] = a5\n 28711: a5 = a4 >> 0x20\n 28714: u8 [a0 + 0x1c] = a5\n 28717: a5 = a4 >> 0x18\n 28720: u8 [a0 + 0x1b] = a5\n 28723: a5 = a4 >> 0x10\n 28726: u8 [a0 + 0x1a] = a5\n 28729: a5 = a4 >> 0x8\n 28732: u8 [a0 + 0x19] = a5\n 28735: u8 [a0 + 0x18] = a4\n 28738: u8 [a0 + 0x10] = a3\n 28741: a4 = a3 >> 0x38\n 28744: u8 [a0 + 0x17] = a4\n 28747: a4 = a3 >> 0x30\n 28750: u8 [a0 + 0x16] = a4\n 28753: a4 = a3 >> 0x28\n 28756: u8 [a0 + 0x15] = a4\n 28759: a4 = a3 >> 0x20\n 28762: u8 [a0 + 0x14] = a4\n 28765: a4 = a3 >> 0x18\n 28768: u8 [a0 + 0x13] = a4\n 28771: a4 = a3 >> 0x10\n 28774: u8 [a0 + 0x12] = a4\n 28777: a3 = a3 >> 0x8\n 28780: u8 [a0 + 0x11] = a3\n 28783: u8 [a0 + 0x8] = a2\n 28786: a3 = a2 >> 0x38\n 28789: u8 [a0 + 0xf] = a3\n 28792: a3 = a2 >> 0x30\n 28795: u8 [a0 + 0xe] = a3\n 28798: a3 = a2 >> 0x28\n 28801: u8 [a0 + 0xd] = a3\n 28804: a3 = a2 >> 0x20\n 28807: u8 [a0 + 0xc] = a3\n 28810: a3 = a2 >> 0x18\n 28813: u8 [a0 + 0xb] = a3\n 28816: a3 = a2 >> 0x10\n 28819: u8 [a0 + 0xa] = a3\n 28822: a2 = a2 >> 0x8\n 28825: u8 [a0 + 0x9] = a2\n 28828: u8 [a0] = a1\n 28830: a2 = a1 >> 0x38\n 28833: u8 [a0 + 0x7] = a2\n 28836: a2 = a1 >> 0x30\n 28839: u8 [a0 + 0x6] = a2\n 28842: a2 = a1 >> 0x28\n 28845: u8 [a0 + 0x5] = a2\n 28848: a2 = a1 >> 0x20\n 28851: u8 [a0 + 0x4] = a2\n 28854: a2 = a1 >> 0x18\n 28857: u8 [a0 + 0x3] = a2\n 28860: a2 = a1 >> 0x10\n 28863: u8 [a0 + 0x2] = a2\n 28866: a1 = a1 >> 0x8\n 28869: u8 [a0 + 0x1] = a1\n 28872: a1 = 0x40\n 28875: a0 = s1\n 28877: ra = 404, jump @0\n      : @454 [@dyn 202] (gas: 29)\n 28883: a1 = u64 [0x20000]\n 28888: a2 = u64 [0x20008]\n 28893: a3 = u64 [0x20010]\n 28898: a4 = u64 [0x20018]\n 28903: u64 [sp + 0xb8] = a1\n 28907: u64 [sp + 0xb0] = a2\n 28911: u64 [sp + 0xa8] = a3\n 28915: u64 [sp + 0xa0] = a4\n 28919: a1 = u64 [sp + 0x68]\n 28922: a1 = reverse a1\n 28924: a2 = u64 [sp + 0x70]\n 28927: a2 = reverse a2\n 28929: a3 = u64 [sp + 0x78]\n 28932: a3 = a3 << 0x20\n 28935: u64 [sp + 0xd8] = a2\n 28939: u64 [sp + 0xd0] = a1\n 28943: u64 [sp + 0xc8] = a3\n 28947: u64 [sp + 192] = 0\n 28951: i32 a2 = a0 + 0\n 28953: i32 a0 = sp + 0xa0\n 28957: a1 = 0x2\n 28960: a3 = 0x40\n 28963: ecalli 6 // 'deposit_event'\n 28965: sp = s0 + 0xffffffffffffff00\n 28969: ra = u64 [sp + 0xf8]\n 28973: s0 = u64 [sp + 0xf0]\n 28977: s1 = u64 [sp + 0xe8]\n 28981: sp = sp + 0x100\n 28985: ret\n      : @455 (gas: 1)\n 28987: trap\n      : @456 (gas: 17)\n 28988: sp = sp + 0xffffffffffffffa0\n 28991: u64 [sp + 0x58] = ra\n 28994: u64 [sp + 0x50] = s0\n 28997: u64 [sp + 0x48] = s1\n 29000: a3 = u64 [a1 + 0x18]\n 29003: a4 = u64 [a1 + 0x10]\n 29006: a5 = u64 [a1 + 0x8]\n 29009: s1 = u64 [a1]\n 29011: a1 = a5 | a3\n 29014: a2 = s1 | a4\n 29017: a2 = a2 | a1\n 29020: a2 = a2 >> 0x20\n 29023: a1 = a1 | a4\n 29026: a1 = a1 << 0x20\n 29029: a1 = a1 | a2\n 29032: u64 [sp + 0x28] = a0\n 29035: jump @463 if a1 != 0\n      : @457 (gas: 19)\n 29039: a0 = s1 + 0x20\n 29042: u64 [sp + 0x30] = a0\n 29045: a0 = a0 <u s1\n 29048: a1 = a5 + a0\n 29051: u64 [sp + 0x40] = a1\n 29054: u64 [sp + 0x8] = a5\n 29057: s0 = a1 <u a5\n 29060: s0 = a0 if a0 == 0\n 29063: s0 = s0 + a4\n 29066: u64 [sp + 0x10] = a4\n 29069: a0 = s0 <u a4\n 29072: u64 [sp + 0x18] = a3\n 29075: a0 = a0 + a3\n 29078: u64 [sp + 0x38] = a0\n 29081: u64 [sp] = s1\n 29083: i32 a0 = s1 + 0\n 29085: a1 = 0x20\n 29088: s1 = 0x20\n 29091: ra = 406, jump @0\n      : @458 [@dyn 203] (gas: 45)\n 29097: u8 [a0 + 0x1f] = s1\n 29100: a1 = u64 [sp + 0x30]\n 29103: s1 = a1\n 29105: a1 = a1 | s0\n 29108: a2 = u64 [sp + 0x40]\n 29111: a4 = u64 [sp + 0x38]\n 29114: a2 = a2 | a4\n 29117: a1 = a1 | a2\n 29120: a1 = a1 >> 0x20\n 29123: u64 [sp + 0x20] = s0\n 29126: a2 = a2 | s0\n 29129: a2 = a2 << 0x20\n 29132: a1 = a1 | a2\n 29135: u8 [a0 + 30] = 0\n 29138: u8 [a0 + 29] = 0\n 29141: u8 [a0 + 28] = 0\n 29144: u8 [a0 + 27] = 0\n 29147: u8 [a0 + 26] = 0\n 29150: u8 [a0 + 25] = 0\n 29153: u8 [a0 + 24] = 0\n 29156: u8 [a0 + 23] = 0\n 29159: u8 [a0 + 22] = 0\n 29162: u8 [a0 + 21] = 0\n 29165: u8 [a0 + 20] = 0\n 29168: u8 [a0 + 19] = 0\n 29171: u8 [a0 + 18] = 0\n 29174: u8 [a0 + 17] = 0\n 29177: u8 [a0 + 16] = 0\n 29180: u8 [a0 + 15] = 0\n 29183: u8 [a0 + 14] = 0\n 29186: u8 [a0 + 13] = 0\n 29189: u8 [a0 + 12] = 0\n 29192: u8 [a0 + 11] = 0\n 29195: u8 [a0 + 10] = 0\n 29198: u8 [a0 + 9] = 0\n 29201: u8 [a0 + 8] = 0\n 29204: u8 [a0 + 7] = 0\n 29207: u8 [a0 + 6] = 0\n 29210: u8 [a0 + 5] = 0\n 29213: u8 [a0 + 4] = 0\n 29216: u8 [a0 + 3] = 0\n 29219: u8 [a0 + 2] = 0\n 29222: u8 [a0 + 1] = 0\n 29225: u8 [a0 + 0] = 0\n 29227: jump @463 if a1 != 0\n      : @459 (gas: 4)\n 29231: i32 s0 = s1 + 0\n 29233: a1 = 0x20\n 29236: a0 = s0\n 29238: ra = 408, jump @0\n      : @460 [@dyn 204] (gas: 41)\n 29244: u8 [a0 + 31] = 0x1a\n 29248: u8 [a0 + 30] = 0\n 29251: u8 [a0 + 29] = 0\n 29254: u8 [a0 + 28] = 0\n 29257: u8 [a0 + 27] = 0\n 29260: u8 [a0 + 26] = 0\n 29263: u8 [a0 + 25] = 0\n 29266: u8 [a0 + 24] = 0\n 29269: u8 [a0 + 23] = 0\n 29272: u8 [a0 + 22] = 0\n 29275: u8 [a0 + 21] = 0\n 29278: u8 [a0 + 20] = 0\n 29281: u8 [a0 + 19] = 0\n 29284: u8 [a0 + 18] = 0\n 29287: u8 [a0 + 17] = 0\n 29290: u8 [a0 + 16] = 0\n 29293: u8 [a0 + 15] = 0\n 29296: u8 [a0 + 14] = 0\n 29299: u8 [a0 + 13] = 0\n 29302: u8 [a0 + 12] = 0\n 29305: u8 [a0 + 11] = 0\n 29308: u8 [a0 + 10] = 0\n 29311: u8 [a0 + 9] = 0\n 29314: u8 [a0 + 8] = 0\n 29317: u8 [a0 + 7] = 0\n 29320: u8 [a0 + 6] = 0\n 29323: u8 [a0 + 5] = 0\n 29326: u8 [a0 + 4] = 0\n 29329: u8 [a0 + 3] = 0\n 29332: u8 [a0 + 2] = 0\n 29335: u8 [a0 + 1] = 0\n 29338: a1 = u64 [sp + 0x20]\n 29341: a2 = u64 [sp + 0x38]\n 29344: a1 = a1 | a2\n 29347: a2 = 0xffffffe0\n 29357: a2 = s1 <u a2\n 29360: a3 = u64 [sp + 0x40]\n 29363: a2 = 0 if a3 != 0\n 29365: a2 = 0 if a1 != 0\n 29367: u8 [a0 + 0] = 0\n 29369: jump @463 if a2 == 0\n      : @461 (gas: 3)\n 29373: i32 a0 = s0 + 0x20\n 29376: a1 = 0x20\n 29379: ra = 410, jump @0\n      : @462 [@dyn 205] (gas: 55)\n 29385: u8 [a0 + 31] = 0\n 29388: u8 [a0 + 30] = 0\n 29391: u8 [a0 + 29] = 0\n 29394: u8 [a0 + 28] = 0\n 29397: u8 [a0 + 27] = 0\n 29400: u8 [a0 + 26] = 0\n 29403: u8 [a0 + 25] = 0x64\n 29407: u8 [a0 + 24] = 0x65\n 29411: u8 [a0 + 23] = 0x6c\n 29415: u8 [a0 + 22] = 0x69\n 29419: u8 [a0 + 21] = 0x61\n 29423: u8 [a0 + 20] = 0x66\n 29427: u8 [a0 + 19] = 0x20\n 29431: a5 = 0x72\n 29434: u8 [a0 + 0x12] = a5\n 29437: u8 [a0 + 17] = 0x65\n 29441: u8 [a0 + 16] = 0x66\n 29445: u8 [a0 + 15] = 0x73\n 29449: u8 [a0 + 14] = 0x6e\n 29453: u8 [a0 + 13] = 0x61\n 29457: u8 [a0 + 0xc] = a5\n 29460: u8 [a0 + 11] = 0x74\n 29464: u8 [a0 + 10] = 0x20\n 29468: u8 [a0 + 9] = 0x6c\n 29472: u8 [a0 + 8] = 0x61\n 29476: u8 [a0 + 0x7] = a5\n 29479: u8 [a0 + 6] = 0x65\n 29483: u8 [a0 + 5] = 0x74\n 29487: u8 [a0 + 4] = 0x61\n 29491: u8 [a0 + 3] = 0x6c\n 29495: u8 [a0 + 2] = 0x6c\n 29499: u8 [a0 + 1] = 0x6f\n 29503: u8 [a0 + 0] = 0x43\n 29506: a1 = u64 [sp]\n 29508: a0 = a1 + 0x60\n 29511: a1 = a0 <u a1\n 29514: a3 = u64 [sp + 0x8]\n 29517: a2 = a3 + a1\n 29520: a3 = a2 <u a3\n 29523: a3 = a1 if a1 == 0\n 29526: a1 = u64 [sp + 0x10]\n 29529: a3 = a3 + a1\n 29532: a1 = a3 <u a1\n 29535: a4 = u64 [sp + 0x18]\n 29538: a1 = a1 + a4\n 29541: a4 = u64 [sp + 0x28]\n 29544: u64 [a4] = a0\n 29546: u64 [a4 + 0x8] = a2\n 29549: u64 [a4 + 0x10] = a3\n 29552: u64 [a4 + 0x18] = a1\n 29555: ra = u64 [sp + 0x58]\n 29558: s0 = u64 [sp + 0x50]\n 29561: s1 = u64 [sp + 0x48]\n 29564: sp = sp + 0x60\n 29567: ret\n      : @463 (gas: 1)\n 29569: trap\n      : @464 [@dyn 206] (gas: 56)\n 29570: a1 = u64 [sp + 0x90]\n 29574: a1 = reverse a1\n 29576: a2 = u64 [sp + 0x98]\n 29580: a2 = reverse a2\n 29582: a3 = s1 >> 0x18\n 29585: u8 [a0 + 0xf] = a3\n 29588: a3 = s1 >> 0x10\n 29591: u8 [a0 + 0xe] = a3\n 29594: a3 = s1 >> 0x8\n 29597: u8 [a0 + 0xd] = a3\n 29600: u8 [a0 + 0xc] = s1\n 29603: u8 [a0 + 11] = 0\n 29606: u8 [a0 + 10] = 0\n 29609: u8 [a0 + 9] = 0\n 29612: u8 [a0 + 8] = 0\n 29615: u8 [a0 + 7] = 0\n 29618: u8 [a0 + 6] = 0\n 29621: u8 [a0 + 5] = 0\n 29624: u8 [a0 + 4] = 0\n 29627: u8 [a0 + 3] = 0\n 29630: u8 [a0 + 2] = 0\n 29633: u8 [a0 + 1] = 0\n 29636: u8 [a0 + 0] = 0\n 29638: u8 [a0 + 0x18] = a2\n 29641: u8 [a0 + 0x10] = a1\n 29644: a3 = a2 >> 0x38\n 29647: u8 [a0 + 0x1f] = a3\n 29650: a3 = a2 >> 0x30\n 29653: u8 [a0 + 0x1e] = a3\n 29656: a3 = a2 >> 0x28\n 29659: u8 [a0 + 0x1d] = a3\n 29662: a3 = a2 >> 0x20\n 29665: u8 [a0 + 0x1c] = a3\n 29668: a3 = a2 >> 0x18\n 29671: u8 [a0 + 0x1b] = a3\n 29674: a3 = a2 >> 0x10\n 29677: u8 [a0 + 0x1a] = a3\n 29680: a2 = a2 >> 0x8\n 29683: u8 [a0 + 0x19] = a2\n 29686: a2 = a1 >> 0x38\n 29689: u8 [a0 + 0x17] = a2\n 29692: a2 = a1 >> 0x30\n 29695: u8 [a0 + 0x16] = a2\n 29698: a2 = a1 >> 0x28\n 29701: u8 [a0 + 0x15] = a2\n 29704: a2 = a1 >> 0x20\n 29707: u8 [a0 + 0x14] = a2\n 29710: a2 = a1 >> 0x18\n 29713: u8 [a0 + 0x13] = a2\n 29716: a2 = a1 >> 0x10\n 29719: u8 [a0 + 0x12] = a2\n 29722: a1 = a1 >> 0x8\n 29725: u8 [a0 + 0x11] = a1\n 29728: a0 = 0x20\n 29731: a1 = 0x20\n 29734: ra = 414, jump @0\n      : @465 [@dyn 207] (gas: 35)\n 29740: u8 [a0 + 31] = 0\n 29743: u8 [a0 + 30] = 0\n 29746: u8 [a0 + 29] = 0\n 29749: u8 [a0 + 28] = 0\n 29752: u8 [a0 + 27] = 0\n 29755: u8 [a0 + 26] = 0\n 29758: u8 [a0 + 25] = 0\n 29761: u8 [a0 + 24] = 0\n 29764: u8 [a0 + 23] = 0\n 29767: u8 [a0 + 22] = 0\n 29770: u8 [a0 + 21] = 0\n 29773: u8 [a0 + 20] = 0\n 29776: u8 [a0 + 19] = 0\n 29779: u8 [a0 + 18] = 0\n 29782: u8 [a0 + 17] = 0\n 29785: u8 [a0 + 16] = 0\n 29788: u8 [a0 + 15] = 0\n 29791: u8 [a0 + 14] = 0\n 29794: u8 [a0 + 13] = 0\n 29797: u8 [a0 + 12] = 0\n 29800: u8 [a0 + 11] = 0\n 29803: u8 [a0 + 10] = 0\n 29806: u8 [a0 + 9] = 0\n 29809: u8 [a0 + 8] = 0\n 29812: u8 [a0 + 7] = 0\n 29815: u8 [a0 + 6] = 0\n 29818: u8 [a0 + 5] = 0\n 29821: u8 [a0 + 4] = 0\n 29824: u8 [a0 + 3] = 0\n 29827: u8 [a0 + 2] = 0\n 29830: u8 [a0 + 1] = 0\n 29833: u8 [a0 + 0] = 0\n 29835: a1 = 0x40\n 29838: a0 = 0\n 29840: ra = 416, jump @0\n      : @466 [@dyn 208] (gas: 32)\n 29846: i32 a0 = a0 + 0\n 29848: i32 a2 = sp + 0x280\n 29852: a1 = 0x40\n 29855: ecalli 9 // 'hash_keccak_256'\n 29857: a0 = u64 [sp + 0x298]\n 29861: a1 = u64 [sp + 0x290]\n 29865: a2 = u64 [sp + 0x288]\n 29869: a3 = u64 [sp + 0x280]\n 29873: a0 = reverse a0\n 29875: a1 = reverse a1\n 29877: a2 = reverse a2\n 29879: a3 = reverse a3\n 29881: u64 [sp + 0x60] = a3\n 29884: u64 [sp + 0x278] = a3\n 29888: u64 [sp + 0x88] = a2\n 29892: u64 [sp + 0x270] = a2\n 29896: u64 [sp + 0x90] = a1\n 29900: u64 [sp + 0x268] = a1\n 29904: u64 [sp + 0x98] = a0\n 29908: u64 [sp + 0x260] = a0\n 29912: u64 [sp + 664] = 0\n 29916: u64 [sp + 656] = 0\n 29920: u64 [sp + 648] = 0\n 29924: u64 [sp + 640] = 0\n 29928: u32 [sp + 576] = 0x20\n 29933: i32 a1 = sp + 0x260\n 29937: i32 a3 = sp + 0x280\n 29941: i32 a4 = sp + 0x240\n 29945: a2 = 0xffffffffffffffff\n 29948: a0 = 0\n 29950: ecalli 8 // 'get_storage'\n 29952: fallthrough\n      : @467 (gas: 39)\n 29953: a4 = u64 [sp + 0x288]\n 29957: a2 = u64 [sp + 0x280]\n 29961: t1 = u64 [sp + 0x298]\n 29965: s1 = u64 [sp + 0x290]\n 29969: a5 = u64 [sp + 0x68]\n 29972: a5 = a5 + a4\n 29975: a1 = u64 [sp + 0x80]\n 29979: a1 = a1 + a2\n 29982: u64 [sp + 0x58] = a1\n 29985: a3 = a1 <u a2\n 29988: a5 = a5 + a3\n 29991: t0 = a5 ^ a4\n 29994: u64 [sp + 0x50] = a5\n 29997: a4 = a5 <u a4\n 30000: a5 = u64 [sp + 0x78]\n 30003: a5 = a5 + s1\n 30006: a1 = u64 [sp + 0x70]\n 30009: a1 = a1 + t1\n 30012: a2 = a5 <u s1\n 30015: a1 = a1 + a2\n 30018: a2 = a3\n 30020: a2 = a4 if t0 != 0\n 30023: a0 = a5 + a2\n 30026: a2 = a0 <u a5\n 30029: a5 = a1 + a2\n 30032: a1 = a3 ^ 0x1\n 30035: a2 = a4 ^ 0x1\n 30038: a1 = a2 if t0 != 0\n 30041: a2 = a0 <u s1\n 30044: a3 = a5 ^ t1\n 30047: u64 [sp + 0x40] = a5\n 30050: a4 = a5 <u t1\n 30053: a4 = a2 if a3 == 0\n 30056: u64 [sp + 0x48] = a0\n 30059: a0 = a0 ^ s1\n 30062: a0 = a0 | a3\n 30065: a2 = a4 ^ 0x1\n 30068: a1 = a2 if a0 != 0\n 30071: jump @504 if a1 == 0\n      : @468 (gas: 41)\n 30075: a0 = u64 [sp + 0x88]\n 30079: u64 [sp + 0x270] = a0\n 30083: a0 = u64 [sp + 0x90]\n 30087: u64 [sp + 0x268] = a0\n 30091: a0 = u64 [sp + 0x98]\n 30095: u64 [sp + 0x260] = a0\n 30099: s1 = u64 [sp + 0x60]\n 30102: u64 [sp + 0x278] = s1\n 30106: u64 [sp + 664] = 0\n 30110: u64 [sp + 656] = 0\n 30114: u64 [sp + 648] = 0\n 30118: u64 [sp + 640] = 0\n 30122: u32 [sp + 576] = 0x20\n 30127: i32 a1 = sp + 0x260\n 30131: i32 a3 = sp + 0x280\n 30135: i32 a4 = sp + 0x240\n 30139: a2 = 0xffffffffffffffff\n 30142: a0 = 0\n 30144: ecalli 8 // 'get_storage'\n 30146: u64 [sp + 0x278] = s1\n 30150: a0 = u64 [sp + 0x88]\n 30154: u64 [sp + 0x270] = a0\n 30158: a0 = u64 [sp + 0x90]\n 30162: u64 [sp + 0x268] = a0\n 30166: a0 = u64 [sp + 0x98]\n 30170: u64 [sp + 0x260] = a0\n 30174: a0 = u64 [sp + 0x40]\n 30177: u64 [sp + 0x298] = a0\n 30181: a0 = u64 [sp + 0x48]\n 30184: u64 [sp + 0x290] = a0\n 30188: a0 = u64 [sp + 0x50]\n 30191: u64 [sp + 0x288] = a0\n 30195: a0 = u64 [sp + 0x58]\n 30198: u64 [sp + 0x280] = a0\n 30202: i32 a1 = sp + 0x260\n 30206: i32 a3 = sp + 0x280\n 30210: a2 = 0xffffffffffffffff\n 30213: a4 = 0x20\n 30216: a0 = 0\n 30218: ecalli 15 // 'set_storage'\n 30220: fallthrough\n      : @469 (gas: 3)\n 30221: s1 = 0x20020\n 30226: a0 = i32 [0x20020]\n 30231: jump @472 if a0 == 0\n      : @470 (gas: 6)\n 30234: u64 [sp + 0x98] = a0\n 30238: a0 = 0x30030\n 30243: i32 a0 = a0 + 0\n 30245: i32 a1 = s1 + 0\n 30247: ecalli 7 // 'get_immutable_data'\n 30249: fallthrough\n      : @471 (gas: 4)\n 30250: a0 = i32 [0x20020]\n 30255: u32 [0x20020] = 0\n 30260: a1 = u64 [sp + 0x98]\n 30264: jump @501 if a0 <u a1\n      : @472 (gas: 25)\n 30268: a1 = u64 [0x30040]\n 30273: u64 [sp + 0x10] = a1\n 30276: a1 = u64 [0x30038]\n 30281: u64 [sp + 0x8] = a1\n 30284: a0 = u64 [0x30030]\n 30289: u64 [sp + 0x18] = a0\n 30292: i32 a0 = sp + 0x180\n 30296: ecalli 5 // 'caller'\n 30298: a0 = i32 [sp + 0x190]\n 30302: u64 [sp + 0x50] = a0\n 30305: a0 = u64 [sp + 0x180]\n 30309: u64 [sp + 0x48] = a0\n 30312: a0 = u64 [sp + 0x188]\n 30316: u64 [sp + 0x40] = a0\n 30319: i32 a0 = sp + 0x1a0\n 30323: ecalli 0 // 'address'\n 30324: a0 = i32 [sp + 0x1b0]\n 30328: u64 [sp + 0x38] = a0\n 30331: a0 = u64 [sp + 0x1a0]\n 30335: u64 [sp + 0x30] = a0\n 30338: a0 = u64 [sp + 0x1a8]\n 30342: u64 [sp + 0x28] = a0\n 30345: a0 = 0x40\n 30348: a1 = 0x20\n 30351: ra = 418, jump @0\n      : @473 [@dyn 209] (gas: 102)\n 30357: a1 = u8 [a0 + 0x11]\n 30360: a2 = u8 [a0 + 0x10]\n 30363: a3 = u8 [a0 + 0x12]\n 30366: a4 = u8 [a0 + 0x13]\n 30369: a1 = a1 << 0x8\n 30372: a1 = a1 | a2\n 30375: a3 = a3 << 0x10\n 30378: a4 = a4 << 0x18\n 30381: a3 = a3 | a4\n 30384: a1 = a1 | a3\n 30387: a2 = u8 [a0 + 0x15]\n 30390: a3 = u8 [a0 + 0x14]\n 30393: a4 = u8 [a0 + 0x16]\n 30396: a5 = u8 [a0 + 0x17]\n 30399: a2 = a2 << 0x8\n 30402: a2 = a2 | a3\n 30405: a4 = a4 << 0x10\n 30408: a5 = a5 << 0x18\n 30411: a4 = a4 | a5\n 30414: a2 = a2 | a4\n 30417: a2 = a2 << 0x20\n 30420: t0 = a2 | a1\n 30423: a2 = u8 [a0 + 0x1]\n 30426: a3 = u8 [a0]\n 30428: a4 = u8 [a0 + 0x2]\n 30431: a5 = u8 [a0 + 0x3]\n 30434: a2 = a2 << 0x8\n 30437: a2 = a2 | a3\n 30440: a4 = a4 << 0x10\n 30443: a5 = a5 << 0x18\n 30446: a4 = a4 | a5\n 30449: a2 = a2 | a4\n 30452: a3 = u8 [a0 + 0x5]\n 30455: a4 = u8 [a0 + 0x4]\n 30458: a5 = u8 [a0 + 0x6]\n 30461: s1 = u8 [a0 + 0x7]\n 30464: a3 = a3 << 0x8\n 30467: a3 = a3 | a4\n 30470: a5 = a5 << 0x10\n 30473: s1 = s1 << 0x18\n 30476: a5 = a5 | s1\n 30479: a3 = a3 | a5\n 30482: a3 = a3 << 0x20\n 30485: a2 = a2 | a3\n 30488: a3 = u8 [a0 + 0x19]\n 30491: a4 = u8 [a0 + 0x18]\n 30494: a5 = u8 [a0 + 0x1a]\n 30497: s1 = u8 [a0 + 0x1b]\n 30500: a3 = a3 << 0x8\n 30503: a3 = a3 | a4\n 30506: a5 = a5 << 0x10\n 30509: s1 = s1 << 0x18\n 30512: a5 = a5 | s1\n 30515: a3 = a3 | a5\n 30518: a4 = u8 [a0 + 0x1d]\n 30521: a5 = u8 [a0 + 0x1c]\n 30524: s1 = u8 [a0 + 0x1e]\n 30527: a1 = u8 [a0 + 0x1f]\n 30530: a4 = a4 << 0x8\n 30533: a4 = a4 | a5\n 30536: s1 = s1 << 0x10\n 30539: a1 = a1 << 0x18\n 30542: a1 = a1 | s1\n 30545: a1 = a1 | a4\n 30548: a1 = a1 << 0x20\n 30551: a3 = a3 | a1\n 30554: a1 = u8 [a0 + 0x9]\n 30557: a4 = u8 [a0 + 0x8]\n 30560: a5 = u8 [a0 + 0xa]\n 30563: s1 = u8 [a0 + 0xb]\n 30566: a1 = a1 << 0x8\n 30569: a1 = a1 | a4\n 30572: a5 = a5 << 0x10\n 30575: s1 = s1 << 0x18\n 30578: a5 = a5 | s1\n 30581: a1 = a1 | a5\n 30584: a4 = u8 [a0 + 0xd]\n 30587: a5 = u8 [a0 + 0xc]\n 30590: s1 = u8 [a0 + 0xe]\n 30593: a0 = u8 [a0 + 0xf]\n 30596: a4 = a4 << 0x8\n 30599: a4 = a4 | a5\n 30602: s1 = s1 << 0x10\n 30605: a0 = a0 << 0x18\n 30608: a0 = a0 | s1\n 30611: a0 = a0 | a4\n 30614: a0 = a0 << 0x20\n 30617: a0 = a0 | a1\n 30620: s1 = reverse a0\n 30622: a3 = reverse a3\n 30624: a1 = reverse a2\n 30626: a0 = reverse t0\n 30628: u64 [sp + 0x98] = a0\n 30632: u64 [sp + 0x60] = a1\n 30635: a0 = a0 | a1\n 30638: a1 = a3 | s1\n 30641: a1 = a1 | a0\n 30644: a1 = a1 >> 0x20\n 30647: a0 = a0 | s1\n 30650: a0 = a0 << 0x20\n 30653: a0 = a0 | a1\n 30656: jump @501 if a0 != 0\n      : @474 (gas: 5)\n 30660: i32 a0 = a3 + 0\n 30662: a1 = 0x20\n 30665: u64 [sp + 0x88] = a0\n 30669: u64 [sp + 0x90] = a3\n 30673: ra = 420, jump @0\n      : @475 [@dyn 210] (gas: 45)\n 30679: u8 [a0 + 31] = 0\n 30682: u8 [a0 + 30] = 0\n 30685: u8 [a0 + 29] = 0\n 30688: u8 [a0 + 28] = 0\n 30691: u8 [a0 + 27] = 0\n 30694: u8 [a0 + 26] = 0\n 30697: u8 [a0 + 25] = 0\n 30700: u8 [a0 + 24] = 0\n 30703: u8 [a0 + 23] = 0\n 30706: u8 [a0 + 22] = 0\n 30709: u8 [a0 + 21] = 0\n 30712: u8 [a0 + 20] = 0\n 30715: u8 [a0 + 19] = 0\n 30718: u8 [a0 + 18] = 0\n 30721: u8 [a0 + 17] = 0\n 30724: u8 [a0 + 16] = 0\n 30727: u8 [a0 + 15] = 0\n 30730: u8 [a0 + 14] = 0\n 30733: u8 [a0 + 13] = 0\n 30736: u8 [a0 + 12] = 0\n 30739: u8 [a0 + 11] = 0\n 30742: u8 [a0 + 10] = 0\n 30745: u8 [a0 + 9] = 0\n 30748: u8 [a0 + 8] = 0\n 30751: u8 [a0 + 7] = 0\n 30754: u8 [a0 + 6] = 0\n 30757: u8 [a0 + 5] = 0\n 30760: u8 [a0 + 3] = 0xdd\n 30765: u8 [a0 + 2] = 0x72\n 30769: u8 [a0 + 1] = 0xb8\n 30774: u8 [a0 + 0] = 0x23\n 30777: u64 [sp] = s1\n 30779: a3 = u64 [sp + 0x60]\n 30782: a3 = a3 | s1\n 30785: a1 = 0x100000000\n 30795: u64 [sp + 0x20] = a1\n 30798: a1 = 0xfffffffc\n 30808: a2 = u64 [sp + 0x90]\n 30812: a1 = a2 <u a1\n 30815: a2 = u64 [sp + 0x98]\n 30819: a1 = 0 if a2 != 0\n 30821: u64 [sp + 0x58] = a3\n 30824: a1 = 0 if a3 != 0\n 30826: u8 [a0 + 4] = 0\n 30829: jump @501 if a1 == 0\n      : @476 (gas: 19)\n 30833: a0 = u64 [sp + 0x40]\n 30836: a0 = reverse a0\n 30838: a1 = a0 >> 0x20\n 30841: a2 = u64 [sp + 0x48]\n 30844: a2 = reverse a2\n 30846: a3 = a2 << 0x20\n 30849: a1 = a1 | a3\n 30852: u64 [sp + 0x48] = a1\n 30855: a0 = a0 << 0x20\n 30858: a1 = u64 [sp + 0x50]\n 30861: a1 = reverse a1\n 30863: a1 = a1 >> 0x20\n 30866: a0 = a0 | a1\n 30869: u64 [sp + 0x50] = a0\n 30872: s1 = a2 >> 0x20\n 30875: a0 = u64 [sp + 0x88]\n 30879: i32 a0 = a0 + 0x4\n 30882: a1 = 0x20\n 30885: ra = 422, jump @0\n      : @477 [@dyn 211] (gas: 64)\n 30891: a1 = reverse s1\n 30893: a2 = u64 [sp + 0x48]\n 30896: a2 = reverse a2\n 30898: a3 = u64 [sp + 0x50]\n 30901: a3 = reverse a3\n 30903: a4 = a3 >> 0x38\n 30906: u8 [a0 + 0x1f] = a4\n 30909: a4 = a3 >> 0x30\n 30912: u8 [a0 + 0x1e] = a4\n 30915: a4 = a3 >> 0x28\n 30918: u8 [a0 + 0x1d] = a4\n 30921: a4 = a3 >> 0x20\n 30924: u8 [a0 + 0x1c] = a4\n 30927: a4 = a3 >> 0x18\n 30930: u8 [a0 + 0x1b] = a4\n 30933: a4 = a3 >> 0x10\n 30936: u8 [a0 + 0x1a] = a4\n 30939: a4 = a3 >> 0x8\n 30942: u8 [a0 + 0x19] = a4\n 30945: u8 [a0 + 0x18] = a3\n 30948: u8 [a0 + 0x10] = a2\n 30951: u8 [a0 + 11] = 0\n 30954: u8 [a0 + 10] = 0\n 30957: u8 [a0 + 9] = 0\n 30960: u8 [a0 + 7] = 0\n 30963: u8 [a0 + 6] = 0\n 30966: u8 [a0 + 5] = 0\n 30969: u8 [a0 + 4] = 0\n 30972: u8 [a0 + 3] = 0\n 30975: u8 [a0 + 2] = 0\n 30978: u8 [a0 + 1] = 0\n 30981: u8 [a0 + 0] = 0\n 30983: a3 = a2 >> 0x38\n 30986: u8 [a0 + 0x17] = a3\n 30989: a3 = a2 >> 0x30\n 30992: u8 [a0 + 0x16] = a3\n 30995: a3 = a2 >> 0x28\n 30998: u8 [a0 + 0x15] = a3\n 31001: a3 = a2 >> 0x20\n 31004: u8 [a0 + 0x14] = a3\n 31007: a3 = a2 >> 0x18\n 31010: u8 [a0 + 0x13] = a3\n 31013: a3 = a2 >> 0x10\n 31016: u8 [a0 + 0x12] = a3\n 31019: a2 = a2 >> 0x8\n 31022: u8 [a0 + 0x11] = a2\n 31025: u8 [a0 + 0x8] = a1\n 31028: a2 = a1 >> 0x38\n 31031: u8 [a0 + 0xf] = a2\n 31034: a2 = a1 >> 0x30\n 31037: u8 [a0 + 0xe] = a2\n 31040: a2 = a1 >> 0x28\n 31043: u8 [a0 + 0xd] = a2\n 31046: a1 = a1 >> 0x20\n 31049: a2 = u64 [sp + 0x20]\n 31052: a2 = a2 + 0xffffffffffffffdc\n 31055: a3 = u64 [sp + 0x90]\n 31059: a2 = a3 <u a2\n 31062: a3 = u64 [sp + 0x98]\n 31066: a2 = 0 if a3 != 0\n 31068: a3 = u64 [sp + 0x58]\n 31071: a2 = 0 if a3 != 0\n 31073: u8 [a0 + 0xc] = a1\n 31076: jump @501 if a2 == 0\n      : @478 (gas: 19)\n 31080: a0 = u64 [sp + 0x28]\n 31083: a0 = reverse a0\n 31085: a1 = a0 >> 0x20\n 31088: a2 = u64 [sp + 0x30]\n 31091: a2 = reverse a2\n 31093: a3 = a2 << 0x20\n 31096: a1 = a1 | a3\n 31099: u64 [sp + 0x50] = a1\n 31102: a0 = a0 << 0x20\n 31105: a1 = u64 [sp + 0x38]\n 31108: a1 = reverse a1\n 31110: a1 = a1 >> 0x20\n 31113: a0 = a0 | a1\n 31116: u64 [sp + 0x48] = a0\n 31119: s1 = a2 >> 0x20\n 31122: a0 = u64 [sp + 0x88]\n 31126: i32 a0 = a0 + 0x24\n 31129: a1 = 0x20\n 31132: ra = 424, jump @0\n      : @479 [@dyn 212] (gas: 63)\n 31138: a1 = reverse s1\n 31140: a2 = u64 [sp + 0x50]\n 31143: a2 = reverse a2\n 31145: a3 = u64 [sp + 0x48]\n 31148: a3 = reverse a3\n 31150: a4 = a3 >> 0x38\n 31153: u8 [a0 + 0x1f] = a4\n 31156: a4 = a3 >> 0x30\n 31159: u8 [a0 + 0x1e] = a4\n 31162: a4 = a3 >> 0x28\n 31165: u8 [a0 + 0x1d] = a4\n 31168: a4 = a3 >> 0x20\n 31171: u8 [a0 + 0x1c] = a4\n 31174: a4 = a3 >> 0x18\n 31177: u8 [a0 + 0x1b] = a4\n 31180: a4 = a3 >> 0x10\n 31183: u8 [a0 + 0x1a] = a4\n 31186: a4 = a3 >> 0x8\n 31189: u8 [a0 + 0x19] = a4\n 31192: u8 [a0 + 0x18] = a3\n 31195: u8 [a0 + 0x10] = a2\n 31198: u8 [a0 + 11] = 0\n 31201: u8 [a0 + 10] = 0\n 31204: u8 [a0 + 9] = 0\n 31207: u8 [a0 + 7] = 0\n 31210: u8 [a0 + 6] = 0\n 31213: u8 [a0 + 5] = 0\n 31216: u8 [a0 + 4] = 0\n 31219: u8 [a0 + 3] = 0\n 31222: u8 [a0 + 2] = 0\n 31225: u8 [a0 + 1] = 0\n 31228: u8 [a0 + 0] = 0\n 31230: a3 = a2 >> 0x38\n 31233: u8 [a0 + 0x17] = a3\n 31236: a3 = a2 >> 0x30\n 31239: u8 [a0 + 0x16] = a3\n 31242: a3 = a2 >> 0x28\n 31245: u8 [a0 + 0x15] = a3\n 31248: a3 = a2 >> 0x20\n 31251: u8 [a0 + 0x14] = a3\n 31254: a3 = a2 >> 0x18\n 31257: u8 [a0 + 0x13] = a3\n 31260: a3 = a2 >> 0x10\n 31263: u8 [a0 + 0x12] = a3\n 31266: a2 = a2 >> 0x8\n 31269: u8 [a0 + 0x11] = a2\n 31272: u8 [a0 + 0x8] = a1\n 31275: a2 = a1 >> 0x38\n 31278: u8 [a0 + 0xf] = a2\n 31281: a2 = a1 >> 0x30\n 31284: u8 [a0 + 0xe] = a2\n 31287: a2 = a1 >> 0x28\n 31290: u8 [a0 + 0xd] = a2\n 31293: a1 = a1 >> 0x20\n 31296: a2 = 0xffffffbc\n 31306: a3 = u64 [sp + 0x90]\n 31310: a2 = a3 <u a2\n 31313: a3 = u64 [sp + 0x98]\n 31317: a2 = 0 if a3 != 0\n 31319: a3 = u64 [sp + 0x58]\n 31322: a2 = 0 if a3 != 0\n 31324: u8 [a0 + 0xc] = a1\n 31327: jump @501 if a2 == 0\n      : @480 (gas: 4)\n 31331: s1 = u64 [sp + 0x88]\n 31335: i32 a0 = s1 + 0x44\n 31338: a1 = 0x20\n 31341: ra = 426, jump @0\n      : @481 [@dyn 213] (gas: 92)\n 31347: a1 = u64 [sp + 0x70]\n 31350: a1 = reverse a1\n 31352: a2 = u64 [sp + 0x78]\n 31355: a2 = reverse a2\n 31357: a3 = u64 [sp + 0x68]\n 31360: a3 = reverse a3\n 31362: a4 = u64 [sp + 0x80]\n 31366: a4 = reverse a4\n 31368: a5 = a4 >> 0x38\n 31371: u8 [a0 + 0x1f] = a5\n 31374: a5 = a4 >> 0x30\n 31377: u8 [a0 + 0x1e] = a5\n 31380: a5 = a4 >> 0x28\n 31383: u8 [a0 + 0x1d] = a5\n 31386: a5 = a4 >> 0x20\n 31389: u8 [a0 + 0x1c] = a5\n 31392: a5 = a4 >> 0x18\n 31395: u8 [a0 + 0x1b] = a5\n 31398: a5 = a4 >> 0x10\n 31401: u8 [a0 + 0x1a] = a5\n 31404: a5 = a4 >> 0x8\n 31407: u8 [a0 + 0x19] = a5\n 31410: u8 [a0 + 0x18] = a4\n 31413: u8 [a0 + 0x10] = a3\n 31416: a4 = a3 >> 0x38\n 31419: u8 [a0 + 0x17] = a4\n 31422: a4 = a3 >> 0x30\n 31425: u8 [a0 + 0x16] = a4\n 31428: a4 = a3 >> 0x28\n 31431: u8 [a0 + 0x15] = a4\n 31434: a4 = a3 >> 0x20\n 31437: u8 [a0 + 0x14] = a4\n 31440: a4 = a3 >> 0x18\n 31443: u8 [a0 + 0x13] = a4\n 31446: a4 = a3 >> 0x10\n 31449: u8 [a0 + 0x12] = a4\n 31452: a3 = a3 >> 0x8\n 31455: u8 [a0 + 0x11] = a3\n 31458: u8 [a0 + 0x8] = a2\n 31461: a3 = a2 >> 0x38\n 31464: u8 [a0 + 0xf] = a3\n 31467: a3 = a2 >> 0x30\n 31470: u8 [a0 + 0xe] = a3\n 31473: a3 = a2 >> 0x28\n 31476: u8 [a0 + 0xd] = a3\n 31479: a3 = a2 >> 0x20\n 31482: u8 [a0 + 0xc] = a3\n 31485: a3 = a2 >> 0x18\n 31488: u8 [a0 + 0xb] = a3\n 31491: a3 = a2 >> 0x10\n 31494: u8 [a0 + 0xa] = a3\n 31497: a2 = a2 >> 0x8\n 31500: u8 [a0 + 0x9] = a2\n 31503: u8 [a0] = a1\n 31505: a2 = a1 >> 0x38\n 31508: u8 [a0 + 0x7] = a2\n 31511: a2 = a1 >> 0x30\n 31514: u8 [a0 + 0x6] = a2\n 31517: a2 = a1 >> 0x28\n 31520: u8 [a0 + 0x5] = a2\n 31523: a2 = a1 >> 0x20\n 31526: u8 [a0 + 0x4] = a2\n 31529: a2 = a1 >> 0x18\n 31532: u8 [a0 + 0x3] = a2\n 31535: a2 = a1 >> 0x10\n 31538: u8 [a0 + 0x2] = a2\n 31541: a1 = a1 >> 0x8\n 31544: u8 [a0 + 0x1] = a1\n 31547: ecalli 10 // 'ref_time_left'\n 31549: a0 = u64 [sp + 0x8]\n 31552: a0 = reverse a0\n 31554: a1 = a0 << 0x20\n 31557: a2 = u64 [sp + 0x10]\n 31560: a2 = reverse a2\n 31562: a2 = a2 >> 0x20\n 31565: a1 = a1 | a2\n 31568: a2 = u64 [sp + 0x18]\n 31571: a2 = reverse a2\n 31573: a3 = a2 << 0x20\n 31576: a0 = a0 >> 0x20\n 31579: a0 = a0 | a3\n 31582: a2 = a2 >> 0x20\n 31585: u64 [sp + 0x1c8] = a0\n 31589: u64 [sp + 0x1c0] = a1\n 31593: u32 [sp + 0x1d0] = a2\n 31597: u64 [sp + 504] = 0\n 31601: u64 [sp + 496] = 0\n 31605: u64 [sp + 488] = 0\n 31609: u64 [sp + 480] = 0\n 31613: a1 = 0x64\n 31616: a0 = s1\n 31618: ra = 428, jump @0\n      : @482 [@dyn 214] (gas: 4)\n 31624: u64 [sp + 0x80] = a0\n 31628: a1 = 0x20\n 31631: a0 = s1\n 31633: ra = 430, jump @0\n      : @483 [@dyn 215] (gas: 31)\n 31639: u32 [sp + 512] = 0x20\n 31644: u64 [sp + 568] = 0xffffffffffffffff\n 31649: u64 [sp + 560] = 0xffffffffffffffff\n 31654: u64 [sp + 552] = 0xffffffffffffffff\n 31659: u64 [sp + 544] = 0xffffffffffffffff\n 31664: a1 = sp + 0x1c0\n 31668: a1 = a1 << 0x20\n 31671: a1 = a1 >> 0x20\n 31674: s1 = 0x800000000\n 31684: s1 = s1 | a1\n 31687: a1 = sp + 0x1e0\n 31691: a1 = a1 << 0x20\n 31694: a1 = a1 >> 0x20\n 31697: a2 = sp + 0x220\n 31701: a2 = a2 << 0x20\n 31704: a3 = a2 | a1\n 31707: a1 = u64 [sp + 0x80]\n 31711: a1 = a1 << 0x20\n 31714: a1 = a1 >> 0x20\n 31717: a2 = 0x6400000000\n 31727: a4 = a1 | a2\n 31730: a0 = a0 << 0x20\n 31733: a0 = a0 >> 0x20\n 31736: a1 = sp + 0x200\n 31740: a1 = a1 << 0x20\n 31743: a5 = a1 | a0\n 31746: a1 = 0xffffffffffffffff\n 31749: a2 = 0xffffffffffffffff\n 31752: a0 = s1\n 31754: ecalli 1 // 'call'\n 31756: fallthrough\n      : @484 (gas: 1)\n 31757: jump @495 if a0 != 0\n      : @485 (gas: 2)\n 31761: ecalli 12 // 'return_data_size'\n 31763: fallthrough\n      : @486 (gas: 2)\n 31764: a1 = 0x20\n 31767: jump @488 if a0 >=u a1\n      : @487 (gas: 3)\n 31770: ecalli 12 // 'return_data_size'\n 31772: a1 = a0\n 31774: fallthrough\n      : @488 (gas: 27)\n 31775: a3 = u64 [sp + 0x60]\n 31778: s1 = u64 [sp + 0x98]\n 31782: a0 = a1 + 0x1f\n 31785: u64 [sp + 0x80] = a1\n 31789: a1 = a0 <u a1\n 31792: u64 [sp + 152] = 0\n 31796: a1 = a1 & 0x1\n 31799: a0 = a0 & 0xffffffffffffffe0\n 31802: a2 = u64 [sp + 0x90]\n 31806: a2 = a2 + a0\n 31809: u64 [sp + 0x90] = a2\n 31813: a0 = a2 <u a0\n 31816: s1 = s1 + a1\n 31819: s1 = s1 + a0\n 31822: a2 = s1 ^ a1\n 31825: a1 = s1 <u a1\n 31828: a1 = a0 if a2 == 0\n 31831: a0 = u64 [sp]\n 31833: a1 = a1 + a0\n 31836: a0 = a1 <u a0\n 31839: a0 = a0 + a3\n 31842: u64 [sp + 0x78] = a1\n 31845: u64 [sp + 0x70] = a0\n 31848: a0 = a0 | a1\n 31851: a1 = s1 <u 0x1\n 31854: a1 = 0 if a0 != 0\n 31856: jump @506 if a1 == 0\n      : @489 (gas: 3)\n 31860: a0 = 0x40\n 31863: a1 = 0x20\n 31866: ra = 432, jump @0\n      : @490 [@dyn 216] (gas: 79)\n 31872: a1 = u64 [sp + 0x70]\n 31875: a1 = reverse a1\n 31877: a2 = u64 [sp + 0x78]\n 31880: a2 = reverse a2\n 31882: a3 = reverse s1\n 31884: a4 = u64 [sp + 0x90]\n 31888: a4 = reverse a4\n 31890: u8 [a0 + 0x18] = a4\n 31893: a5 = a4 >> 0x38\n 31896: u8 [a0 + 0x1f] = a5\n 31899: a5 = a4 >> 0x30\n 31902: u8 [a0 + 0x1e] = a5\n 31905: a5 = a4 >> 0x28\n 31908: u8 [a0 + 0x1d] = a5\n 31911: a5 = a4 >> 0x20\n 31914: u8 [a0 + 0x1c] = a5\n 31917: a5 = a4 >> 0x18\n 31920: u8 [a0 + 0x1b] = a5\n 31923: a5 = a4 >> 0x10\n 31926: u8 [a0 + 0x1a] = a5\n 31929: a4 = a4 >> 0x8\n 31932: u8 [a0 + 0x19] = a4\n 31935: u8 [a0 + 0x10] = a3\n 31938: a4 = a3 >> 0x38\n 31941: u8 [a0 + 0x17] = a4\n 31944: a4 = a3 >> 0x30\n 31947: u8 [a0 + 0x16] = a4\n 31950: a4 = a3 >> 0x28\n 31953: u8 [a0 + 0x15] = a4\n 31956: a4 = a3 >> 0x20\n 31959: u8 [a0 + 0x14] = a4\n 31962: a4 = a3 >> 0x18\n 31965: u8 [a0 + 0x13] = a4\n 31968: a4 = a3 >> 0x10\n 31971: u8 [a0 + 0x12] = a4\n 31974: a3 = a3 >> 0x8\n 31977: u8 [a0 + 0x11] = a3\n 31980: u8 [a0 + 0x8] = a2\n 31983: a3 = a2 >> 0x38\n 31986: u8 [a0 + 0xf] = a3\n 31989: a3 = a2 >> 0x30\n 31992: u8 [a0 + 0xe] = a3\n 31995: a3 = a2 >> 0x28\n 31998: u8 [a0 + 0xd] = a3\n 32001: a3 = a2 >> 0x20\n 32004: u8 [a0 + 0xc] = a3\n 32007: a3 = a2 >> 0x18\n 32010: u8 [a0 + 0xb] = a3\n 32013: a3 = a2 >> 0x10\n 32016: u8 [a0 + 0xa] = a3\n 32019: a2 = a2 >> 0x8\n 32022: u8 [a0 + 0x9] = a2\n 32025: u8 [a0] = a1\n 32027: a2 = a1 >> 0x38\n 32030: u8 [a0 + 0x7] = a2\n 32033: a2 = a1 >> 0x30\n 32036: u8 [a0 + 0x6] = a2\n 32039: a2 = a1 >> 0x28\n 32042: u8 [a0 + 0x5] = a2\n 32045: a2 = a1 >> 0x20\n 32048: u8 [a0 + 0x4] = a2\n 32051: a2 = a1 >> 0x18\n 32054: u8 [a0 + 0x3] = a2\n 32057: a2 = a1 >> 0x10\n 32060: u8 [a0 + 0x2] = a2\n 32063: a1 = a1 >> 0x8\n 32066: a5 = u64 [sp + 0x98]\n 32070: a2 = a5 >u 0\n 32072: a3 = u64 [sp + 0x80]\n 32076: a3 = a3 <u 0x20\n 32079: a3 = a3 ^ 0x1\n 32082: a3 = a2 if a5 != 0\n 32085: a2 = a5 >u 0\n 32087: a4 = a5 >u 0\n 32089: a4 = a2 if a5 == 0\n 32092: a2 = a5 | a5\n 32095: a4 = a3 if a2 == 0\n 32098: u8 [a0 + 0x1] = a1\n 32101: jump @502 if a4 == 0\n      : @491 (gas: 3)\n 32105: a1 = 0x20\n 32108: a0 = u64 [sp + 0x88]\n 32112: ra = 434, jump @0\n      : @492 [@dyn 217] (gas: 96)\n 32118: a1 = u8 [a0 + 0x9]\n 32121: a2 = u8 [a0 + 0x8]\n 32124: a3 = u8 [a0 + 0xa]\n 32127: a4 = u8 [a0 + 0xb]\n 32130: a1 = a1 << 0x8\n 32133: a1 = a1 | a2\n 32136: a3 = a3 << 0x10\n 32139: a4 = a4 << 0x18\n 32142: a3 = a3 | a4\n 32145: a1 = a1 | a3\n 32148: a2 = u8 [a0 + 0xd]\n 32151: a3 = u8 [a0 + 0xc]\n 32154: a4 = u8 [a0 + 0xe]\n 32157: a5 = u8 [a0 + 0xf]\n 32160: a2 = a2 << 0x8\n 32163: a2 = a2 | a3\n 32166: a4 = a4 << 0x10\n 32169: a5 = a5 << 0x18\n 32172: a4 = a4 | a5\n 32175: a2 = a2 | a4\n 32178: a2 = a2 << 0x20\n 32181: t0 = a2 | a1\n 32184: a2 = u8 [a0 + 0x1]\n 32187: a3 = u8 [a0]\n 32189: a4 = u8 [a0 + 0x2]\n 32192: a5 = u8 [a0 + 0x3]\n 32195: a2 = a2 << 0x8\n 32198: a2 = a2 | a3\n 32201: a4 = a4 << 0x10\n 32204: a5 = a5 << 0x18\n 32207: a4 = a4 | a5\n 32210: a2 = a2 | a4\n 32213: a3 = u8 [a0 + 0x5]\n 32216: a4 = u8 [a0 + 0x4]\n 32219: a5 = u8 [a0 + 0x6]\n 32222: s1 = u8 [a0 + 0x7]\n 32225: a3 = a3 << 0x8\n 32228: a3 = a3 | a4\n 32231: a5 = a5 << 0x10\n 32234: s1 = s1 << 0x18\n 32237: a5 = a5 | s1\n 32240: a3 = a3 | a5\n 32243: a3 = a3 << 0x20\n 32246: a2 = a2 | a3\n 32249: a3 = u8 [a0 + 0x19]\n 32252: a4 = u8 [a0 + 0x18]\n 32255: a5 = u8 [a0 + 0x1a]\n 32258: s1 = u8 [a0 + 0x1b]\n 32261: a3 = a3 << 0x8\n 32264: a3 = a3 | a4\n 32267: a5 = a5 << 0x10\n 32270: s1 = s1 << 0x18\n 32273: a5 = a5 | s1\n 32276: a3 = a3 | a5\n 32279: a4 = u8 [a0 + 0x1d]\n 32282: a5 = u8 [a0 + 0x1c]\n 32285: s1 = u8 [a0 + 0x1e]\n 32288: a1 = u8 [a0 + 0x1f]\n 32291: a4 = a4 << 0x8\n 32294: a4 = a4 | a5\n 32297: s1 = s1 << 0x10\n 32300: a1 = a1 << 0x18\n 32303: a1 = a1 | s1\n 32306: a1 = a1 | a4\n 32309: a1 = a1 << 0x20\n 32312: a3 = a3 | a1\n 32315: a1 = u8 [a0 + 0x11]\n 32318: a4 = u8 [a0 + 0x10]\n 32321: a5 = u8 [a0 + 0x12]\n 32324: s1 = u8 [a0 + 0x13]\n 32327: a1 = a1 << 0x8\n 32330: a1 = a1 | a4\n 32333: a5 = a5 << 0x10\n 32336: s1 = s1 << 0x18\n 32339: a5 = a5 | s1\n 32342: a1 = a1 | a5\n 32345: a4 = u8 [a0 + 0x15]\n 32348: a5 = u8 [a0 + 0x14]\n 32351: s1 = u8 [a0 + 0x16]\n 32354: a0 = u8 [a0 + 0x17]\n 32357: a4 = a4 << 0x8\n 32360: a4 = a4 | a5\n 32363: s1 = s1 << 0x10\n 32366: a0 = a0 << 0x18\n 32369: a0 = a0 | s1\n 32372: a0 = a0 | a4\n 32375: a0 = a0 << 0x20\n 32378: a0 = a0 | a1\n 32381: a1 = reverse a0\n 32383: a4 = reverse a3\n 32385: a4 = a4 <u 0x2\n 32388: a4 = 0 if a1 != 0\n 32390: a1 = t0 | a2\n 32393: a1 = reverse a1\n 32395: a4 = 0 if a1 != 0\n 32397: jump @502 if a4 == 0\n      : @493 (gas: 4)\n 32401: a0 = a0 | a2\n 32404: a1 = t0 | a3\n 32407: a0 = a0 | a1\n 32410: jump @496 if a0 == 0\n      : @494 (gas: 6)\n 32413: sp = s0 + 0xfffffffffffffd40\n 32417: ra = u64 [sp + 0x2b8]\n 32421: s0 = u64 [sp + 0x2b0]\n 32425: s1 = u64 [sp + 0x2a8]\n 32429: sp = sp + 0x2c0\n 32433: ret\n      : @495 (gas: 1)\n 32435: ra = 436, jump @275\n      : @496 [@dyn 218] (gas: 3)\n 32441: a0 = 0x40\n 32444: a1 = 0x20\n 32447: ra = 438, jump @0\n      : @497 [@dyn 219] (gas: 103)\n 32453: a1 = u8 [a0 + 0x11]\n 32456: a2 = u8 [a0 + 0x10]\n 32459: a3 = u8 [a0 + 0x12]\n 32462: a4 = u8 [a0 + 0x13]\n 32465: a1 = a1 << 0x8\n 32468: a1 = a1 | a2\n 32471: a3 = a3 << 0x10\n 32474: a4 = a4 << 0x18\n 32477: a3 = a3 | a4\n 32480: a1 = a1 | a3\n 32483: a2 = u8 [a0 + 0x15]\n 32486: a3 = u8 [a0 + 0x14]\n 32489: a4 = u8 [a0 + 0x16]\n 32492: a5 = u8 [a0 + 0x17]\n 32495: a2 = a2 << 0x8\n 32498: a2 = a2 | a3\n 32501: a4 = a4 << 0x10\n 32504: a5 = a5 << 0x18\n 32507: a4 = a4 | a5\n 32510: a2 = a2 | a4\n 32513: a2 = a2 << 0x20\n 32516: t0 = a2 | a1\n 32519: a2 = u8 [a0 + 0x1]\n 32522: a3 = u8 [a0]\n 32524: a4 = u8 [a0 + 0x2]\n 32527: a5 = u8 [a0 + 0x3]\n 32530: a2 = a2 << 0x8\n 32533: a2 = a2 | a3\n 32536: a4 = a4 << 0x10\n 32539: a5 = a5 << 0x18\n 32542: a4 = a4 | a5\n 32545: a2 = a2 | a4\n 32548: a3 = u8 [a0 + 0x5]\n 32551: a4 = u8 [a0 + 0x4]\n 32554: a5 = u8 [a0 + 0x6]\n 32557: s1 = u8 [a0 + 0x7]\n 32560: a3 = a3 << 0x8\n 32563: a3 = a3 | a4\n 32566: a5 = a5 << 0x10\n 32569: s1 = s1 << 0x18\n 32572: a5 = a5 | s1\n 32575: a3 = a3 | a5\n 32578: a3 = a3 << 0x20\n 32581: a2 = a2 | a3\n 32584: a3 = u8 [a0 + 0x19]\n 32587: a4 = u8 [a0 + 0x18]\n 32590: a5 = u8 [a0 + 0x1a]\n 32593: s1 = u8 [a0 + 0x1b]\n 32596: a3 = a3 << 0x8\n 32599: a3 = a3 | a4\n 32602: a5 = a5 << 0x10\n 32605: s1 = s1 << 0x18\n 32608: a5 = a5 | s1\n 32611: a3 = a3 | a5\n 32614: a4 = u8 [a0 + 0x1d]\n 32617: a5 = u8 [a0 + 0x1c]\n 32620: s1 = u8 [a0 + 0x1e]\n 32623: a1 = u8 [a0 + 0x1f]\n 32626: a4 = a4 << 0x8\n 32629: a4 = a4 | a5\n 32632: s1 = s1 << 0x10\n 32635: a1 = a1 << 0x18\n 32638: a1 = a1 | s1\n 32641: a1 = a1 | a4\n 32644: a1 = a1 << 0x20\n 32647: a3 = a3 | a1\n 32650: a1 = u8 [a0 + 0x9]\n 32653: a4 = u8 [a0 + 0x8]\n 32656: a5 = u8 [a0 + 0xa]\n 32659: s1 = u8 [a0 + 0xb]\n 32662: a1 = a1 << 0x8\n 32665: a1 = a1 | a4\n 32668: a5 = a5 << 0x10\n 32671: s1 = s1 << 0x18\n 32674: a5 = a5 | s1\n 32677: a1 = a1 | a5\n 32680: a4 = u8 [a0 + 0xd]\n 32683: a5 = u8 [a0 + 0xc]\n 32686: s1 = u8 [a0 + 0xe]\n 32689: a0 = u8 [a0 + 0xf]\n 32692: a4 = a4 << 0x8\n 32695: a4 = a4 | a5\n 32698: s1 = s1 << 0x10\n 32701: a0 = a0 << 0x18\n 32704: a0 = a0 | s1\n 32707: a0 = a0 | a4\n 32710: a0 = a0 << 0x20\n 32713: a0 = a0 | a1\n 32716: s1 = reverse a0\n 32718: a1 = reverse a3\n 32720: a2 = reverse a2\n 32722: a0 = reverse t0\n 32724: u64 [sp + 0x98] = a0\n 32728: u64 [sp + 0x90] = a2\n 32732: a0 = a0 | a2\n 32735: a2 = a1\n 32737: a1 = a1 | s1\n 32740: a1 = a1 | a0\n 32743: a1 = a1 >> 0x20\n 32746: a0 = a0 | s1\n 32749: a0 = a0 << 0x20\n 32752: a0 = a0 | a1\n 32755: jump @501 if a0 != 0\n      : @498 (gas: 5)\n 32759: u64 [sp + 0x88] = a2\n 32763: i32 a0 = a2 + 0\n 32765: a1 = 0x20\n 32768: u64 [sp + 0x80] = a0\n 32772: ra = 440, jump @0\n      : @499 [@dyn 220] (gas: 50)\n 32779: u8 [a0 + 31] = 0\n 32782: u8 [a0 + 30] = 0\n 32785: u8 [a0 + 29] = 0\n 32788: u8 [a0 + 28] = 0\n 32791: u8 [a0 + 27] = 0\n 32794: u8 [a0 + 26] = 0\n 32797: u8 [a0 + 25] = 0\n 32800: u8 [a0 + 24] = 0\n 32803: u8 [a0 + 23] = 0\n 32806: u8 [a0 + 22] = 0\n 32809: u8 [a0 + 21] = 0\n 32812: u8 [a0 + 20] = 0\n 32815: u8 [a0 + 19] = 0\n 32818: u8 [a0 + 18] = 0\n 32821: u8 [a0 + 17] = 0\n 32824: u8 [a0 + 16] = 0\n 32827: u8 [a0 + 15] = 0\n 32830: u8 [a0 + 14] = 0\n 32833: u8 [a0 + 13] = 0\n 32836: u8 [a0 + 12] = 0\n 32839: u8 [a0 + 11] = 0\n 32842: u8 [a0 + 10] = 0\n 32845: u8 [a0 + 9] = 0\n 32848: u8 [a0 + 8] = 0\n 32851: u8 [a0 + 7] = 0\n 32854: u8 [a0 + 6] = 0\n 32857: u8 [a0 + 5] = 0\n 32860: u8 [a0 + 4] = 0\n 32863: u8 [a0 + 3] = 0xa0\n 32868: u8 [a0 + 2] = 0x79\n 32872: u8 [a0 + 1] = 0xc3\n 32877: u8 [a0 + 0] = 0x8\n 32880: a1 = u64 [sp + 0x88]\n 32884: a0 = a1 + 0x4\n 32887: a1 = a0 <u a1\n 32890: a3 = u64 [sp + 0x98]\n 32894: a2 = a3 + a1\n 32897: a3 = a2 <u a3\n 32900: a3 = a1 if a1 == 0\n 32903: a3 = a3 + s1\n 32906: a1 = a3 <u s1\n 32909: a4 = u64 [sp + 0x90]\n 32913: a4 = a4 + a1\n 32916: u64 [sp + 0x128] = a2\n 32920: u64 [sp + 0x120] = a0\n 32924: u64 [sp + 0x130] = a3\n 32928: a0 = sp + 0x140\n 32932: a1 = sp + 0x120\n 32936: u64 [sp + 0x138] = a4\n 32940: ra = 442, jump @456\n      : @500 [@dyn 221] (gas: 30)\n 32946: a0 = u64 [sp + 0x148]\n 32950: t0 = u64 [sp + 0x158]\n 32954: t1 = u64 [sp + 0x140]\n 32958: a3 = u64 [sp + 0x150]\n 32962: a1 = u64 [sp + 0x98]\n 32966: a4 = a0 ^ a1\n 32969: a5 = a0 <u a1\n 32972: t2 = a1\n 32974: a2 = u64 [sp + 0x88]\n 32978: a1 = t1 <u a2\n 32981: a5 = a1 if a4 == 0\n 32984: a4 = a3 - s1\n 32987: a3 = a3 <u s1\n 32990: s1 = u64 [sp + 0x90]\n 32994: s1 = t0 - s1\n 32997: s1 = s1 - a3\n 33000: a3 = a4 <u a5\n 33003: s1 = s1 - a3\n 33006: a4 = a4 - a5\n 33009: a0 = a0 - t2\n 33012: a1 = a0 - a1\n 33015: a0 = t1 - a2\n 33018: a1 = a1 | s1\n 33021: a2 = a0 | a4\n 33024: a2 = a2 | a1\n 33027: a1 = a1 | a4\n 33030: a2 = a2 >> 0x20\n 33033: a1 = a1 << 0x20\n 33036: a1 = a1 | a2\n 33039: jump @510 if a1 == 0\n      : @501 (gas: 1)\n 33043: trap\n      : @502 (gas: 3)\n 33044: a0 = 0\n 33046: a1 = 0\n 33048: ra = 444, jump @0\n      : @503 [@dyn 222] (gas: 5)\n 33055: i32 a1 = a0 + 0\n 33057: a0 = 0x1\n 33060: a2 = 0\n 33062: ecalli 13 // 'seal_return'\n 33064: fallthrough\n      : @504 (gas: 8)\n 33065: u64 [sp + 208] = 0\n 33069: u64 [sp + 200] = 0\n 33073: u64 [sp + 192] = 0\n 33077: a0 = 0x4e487b7100000000\n 33087: a1 = sp + 0xc0\n 33091: u64 [sp + 0xd8] = a0\n 33095: a0 = 0\n 33097: ra = 446, jump @8\n      : @505 [@dyn 223] (gas: 8)\n 33104: u64 [sp + 184] = 0\n 33108: u64 [sp + 176] = 0\n 33112: u64 [sp + 160] = 0x11\n 33117: a0 = 0x4\n 33120: a1 = sp + 0xa0\n 33124: u64 [sp + 168] = 0\n 33128: ra = 0x1c2\n 33132: jump @8\n      : @506 (gas: 8)\n 33136: u64 [sp + 272] = 0\n 33140: u64 [sp + 264] = 0\n 33144: u64 [sp + 256] = 0\n 33148: a0 = 0x4e487b7100000000\n 33158: a1 = sp + 0x100\n 33162: u64 [sp + 0x118] = a0\n 33166: a0 = 0\n 33168: ra = 448, jump @8\n      : @507 [@dyn 224] (gas: 7)\n 33175: u64 [sp + 248] = 0\n 33179: u64 [sp + 240] = 0\n 33183: u64 [sp + 224] = 0x41\n 33188: a0 = 0x4\n 33191: a1 = sp + 0xe0\n 33195: u64 [sp + 232] = 0\n 33199: ra = 450, jump @8\n      : @508 [@dyn 225] (gas: 3)\n 33206: a1 = 0x24\n 33209: a0 = 0\n 33211: ra = 452, jump @0\n      : @509 [@dyn 226] (gas: 5)\n 33218: i32 a1 = a0 + 0\n 33220: a0 = 0x1\n 33223: a2 = 0x24\n 33226: ecalli 13 // 'seal_return'\n 33228: fallthrough\n      : @510 (gas: 4)\n 33229: i32 s1 = a0 + 0\n 33231: a0 = u64 [sp + 0x80]\n 33235: a1 = s1\n 33237: ra = 454, jump @0\n      : @511 [@dyn 227] (gas: 6)\n 33244: i32 a1 = a0 + 0\n 33246: a0 = 0x1\n 33249: a2 = s1\n 33251: ra = 0x1c8\n 33255: ecalli 13 // 'seal_return'\n 33257: fallthrough\n      : @512 [@dyn 228] (gas: 70)\n 33258: sp = sp + 0xffffffffffffff40\n 33262: u64 [sp + 0xb8] = ra\n 33266: u64 [sp + 0xb0] = s0\n 33270: u64 [sp + 0xa8] = s1\n 33274: s0 = sp + 0xc0\n 33278: sp = sp & 0xfffffffffffffff0\n 33281: ra = u64 [a2]\n 33283: t0 = u64 [a1]\n 33285: a3 = u64 [a1 + 0x8]\n 33288: u64 [sp + 0x58] = a0\n 33291: a4 = u64 [a2 + 0x8]\n 33294: a0 = t0 mulhu ra\n 33297: s1 = a3 * ra\n 33300: a0 = a0 + s1\n 33303: s1 = a0 <u s1\n 33306: a5 = a3 mulhu ra\n 33309: a5 = a5 + s1\n 33312: s1 = t0 * a4\n 33315: a0 = a0 + s1\n 33318: u64 [sp + 0x50] = a0\n 33321: a0 = a0 <u s1\n 33324: s1 = t0 mulhu a4\n 33327: a0 = a0 + s1\n 33330: a0 = a0 + a5\n 33333: a5 = a0 <u a5\n 33336: s1 = a3 mulhu a4\n 33339: a5 = a5 + s1\n 33342: s1 = a3 * a4\n 33345: a0 = a0 + s1\n 33348: u64 [sp + 0x48] = a0\n 33351: s1 = a0 <u s1\n 33354: a5 = a5 + s1\n 33357: u64 [sp + 0x40] = a5\n 33360: t1 = u64 [a2 + 0x10]\n 33363: a2 = u64 [a2 + 0x18]\n 33366: t2 = u64 [a1 + 0x18]\n 33369: a0 = u64 [a1 + 0x10]\n 33372: a5 = a3 * t1\n 33375: u64 [sp + 0x20] = a2\n 33378: s1 = a2 * t0\n 33381: a1 = s1 + a5\n 33384: u64 [sp + 0x28] = a4\n 33387: s1 = a4 * a0\n 33390: a2 = t2 * ra\n 33393: a2 = a2 + s1\n 33396: s1 = t1 * t0\n 33399: a5 = a0 * ra\n 33402: s1 = s1 + a5\n 33405: u64 [sp + 0x30] = t1\n 33408: a4 = t1 mulhu t0\n 33411: u64 [sp + 0x10] = a4\n 33414: a4 = a4 + a1\n 33417: t1 = a0 mulhu ra\n 33420: a1 = t1 + a2\n 33423: a2 = s1 <u a5\n 33426: u64 [sp + 0x18] = a1\n 33429: u64 [sp + 0x8] = a4\n 33432: a5 = a1 + a4\n 33435: a2 = a2 + a5\n 33438: u64 [sp + 0x38] = t2\n 33441: a5 = a3 | t2\n 33444: a1 = t0 | a0\n 33447: a1 = a1 | a5\n 33450: a4 = u64 [sp + 0x40]\n 33453: a5 = u64 [sp + 0x48]\n 33456: s1 = s1 + a5\n 33459: t2 = s1 <u a5\n 33462: a2 = a2 + a4\n 33465: a2 = a2 + t2\n 33468: jump @514 if a1 == 0\n      : @513 (gas: 50)\n 33472: a1 = a2 ^ a4\n 33475: u64 [sp + 0x48] = a2\n 33478: a2 = u64 [sp + 0x48]\n 33481: a2 = a2 <u a4\n 33484: t2 = a2 if a1 != 0\n 33487: u64 [sp + 0x40] = s1\n 33490: a1 = u64 [sp + 0x10]\n 33493: a2 = u64 [sp + 0x8]\n 33496: s1 = a2 <u a1\n 33499: a2 = a3 >u 0\n 33501: a1 = u64 [sp + 0x20]\n 33504: a5 = a1 >u 0\n 33506: a2 = a2 & a5\n 33509: a5 = a1 mulhu t0\n 33512: a5 = a5 >u 0\n 33514: a2 = a2 | a5\n 33517: a4 = t1\n 33519: t1 = u64 [sp + 0x30]\n 33522: a3 = a3 mulhu t1\n 33525: a3 = a3 >u 0\n 33527: a2 = a2 | a3\n 33530: a2 = a2 | s1\n 33533: u64 [sp + 0x10] = a2\n 33536: a2 = u64 [sp + 0x18]\n 33539: a2 = a2 <u a4\n 33542: a4 = u64 [sp + 0x28]\n 33545: a3 = a4 >u 0\n 33547: s1 = u64 [sp + 0x38]\n 33550: a5 = s1 >u 0\n 33552: a3 = a3 & a5\n 33555: a5 = s1 mulhu ra\n 33558: a5 = a5 >u 0\n 33560: a3 = a3 | a5\n 33563: a5 = a4 mulhu a0\n 33566: a5 = a5 >u 0\n 33568: a3 = a3 | a5\n 33571: a2 = a2 | a3\n 33574: a3 = t1 | a1\n 33577: a5 = a0 | s1\n 33580: s1 = u64 [sp + 0x40]\n 33583: a3 = a3 >u 0\n 33585: a5 = a5 >u 0\n 33587: a3 = a3 & a5\n 33590: a2 = a2 | a3\n 33593: a1 = u64 [sp + 0x10]\n 33596: a1 = a1 | a2\n 33599: a2 = u64 [sp + 0x48]\n 33602: a0 = a1 | t2\n 33605: a0 = a0 & 0x1\n 33608: jump @515 if a0 != 0\n      : @514 (gas: 13)\n 33611: a0 = t0 * ra\n 33614: a1 = u64 [sp + 0x58]\n 33617: u64 [a1] = a0\n 33619: a0 = u64 [sp + 0x50]\n 33622: u64 [a1 + 0x8] = a0\n 33625: u64 [a1 + 0x10] = s1\n 33628: u64 [a1 + 0x18] = a2\n 33631: sp = s0 + 0xffffffffffffff40\n 33635: ra = u64 [sp + 0xb8]\n 33639: s0 = u64 [sp + 0xb0]\n 33643: s1 = u64 [sp + 0xa8]\n 33647: sp = sp + 0xc0\n 33651: ret\n      : @515 (gas: 8)\n 33653: u64 [sp + 144] = 0\n 33657: u64 [sp + 136] = 0\n 33661: u64 [sp + 128] = 0\n 33665: a0 = 0x4e487b7100000000\n 33675: a1 = sp + 0x80\n 33679: u64 [sp + 0x98] = a0\n 33683: a0 = 0\n 33685: ra = 458, jump @8\n      : @516 [@dyn 229] (gas: 7)\n 33692: u64 [sp + 120] = 0\n 33695: u64 [sp + 112] = 0\n 33698: u64 [sp + 96] = 0x11\n 33702: a0 = 0x4\n 33705: a1 = sp + 0x60\n 33708: u64 [sp + 104] = 0\n 33711: ra = 460, jump @8\n      : @517 [@dyn 230] (gas: 3)\n 33718: a1 = 0x24\n 33721: a0 = 0\n 33723: ra = 462, jump @0\n      : @518 [@dyn 231] (gas: 6)\n 33730: i32 a1 = a0 + 0\n 33732: a0 = 0x1\n 33735: a2 = 0x24\n 33738: ra = 0x1d0\n 33742: ecalli 13 // 'seal_return'\n 33744: fallthrough\n      : @519 [@dyn 232] (gas: 9)\n 33745: a2 = u64 [a1 + 0x18]\n 33748: a3 = u64 [a1 + 0x10]\n 33751: a4 = u64 [a1 + 0x8]\n 33754: a1 = u64 [a1]\n 33756: u64 [a0 + 0x18] = a2\n 33759: u64 [a0 + 0x10] = a3\n 33762: u64 [a0 + 0x8] = a4\n 33765: u64 [a0] = a1\n 33767: ret\n      : @520 (gas: 17)\n 33769: sp = sp + 0xffffffffffffffa0\n 33772: u64 [sp + 0x58] = ra\n 33775: u64 [sp + 0x50] = s0\n 33778: u64 [sp + 0x48] = s1\n 33781: a3 = u64 [a1 + 0x18]\n 33784: a4 = u64 [a1 + 0x10]\n 33787: a5 = u64 [a1 + 0x8]\n 33790: s1 = u64 [a1]\n 33792: a1 = a5 | a3\n 33795: a2 = s1 | a4\n 33798: a2 = a2 | a1\n 33801: a2 = a2 >> 0x20\n 33804: a1 = a1 | a4\n 33807: a1 = a1 << 0x20\n 33810: a1 = a1 | a2\n 33813: u64 [sp + 0x28] = a0\n 33816: jump @527 if a1 != 0\n      : @521 (gas: 19)\n 33820: a0 = s1 + 0x20\n 33823: u64 [sp + 0x30] = a0\n 33826: a0 = a0 <u s1\n 33829: a1 = a5 + a0\n 33832: u64 [sp + 0x40] = a1\n 33835: u64 [sp + 0x8] = a5\n 33838: s0 = a1 <u a5\n 33841: s0 = a0 if a0 == 0\n 33844: s0 = s0 + a4\n 33847: u64 [sp + 0x10] = a4\n 33850: a0 = s0 <u a4\n 33853: u64 [sp + 0x18] = a3\n 33856: a0 = a0 + a3\n 33859: u64 [sp + 0x38] = a0\n 33862: u64 [sp] = s1\n 33864: i32 a0 = s1 + 0\n 33866: a1 = 0x20\n 33869: s1 = 0x20\n 33872: ra = 466, jump @0\n      : @522 [@dyn 233] (gas: 45)\n 33879: u8 [a0 + 0x1f] = s1\n 33882: a1 = u64 [sp + 0x30]\n 33885: s1 = a1\n 33887: a1 = a1 | s0\n 33890: a2 = u64 [sp + 0x40]\n 33893: a4 = u64 [sp + 0x38]\n 33896: a2 = a2 | a4\n 33899: a1 = a1 | a2\n 33902: a1 = a1 >> 0x20\n 33905: u64 [sp + 0x20] = s0\n 33908: a2 = a2 | s0\n 33911: a2 = a2 << 0x20\n 33914: a1 = a1 | a2\n 33917: u8 [a0 + 30] = 0\n 33920: u8 [a0 + 29] = 0\n 33923: u8 [a0 + 28] = 0\n 33926: u8 [a0 + 27] = 0\n 33929: u8 [a0 + 26] = 0\n 33932: u8 [a0 + 25] = 0\n 33935: u8 [a0 + 24] = 0\n 33938: u8 [a0 + 23] = 0\n 33941: u8 [a0 + 22] = 0\n 33944: u8 [a0 + 21] = 0\n 33947: u8 [a0 + 20] = 0\n 33950: u8 [a0 + 19] = 0\n 33953: u8 [a0 + 18] = 0\n 33956: u8 [a0 + 17] = 0\n 33959: u8 [a0 + 16] = 0\n 33962: u8 [a0 + 15] = 0\n 33965: u8 [a0 + 14] = 0\n 33968: u8 [a0 + 13] = 0\n 33971: u8 [a0 + 12] = 0\n 33974: u8 [a0 + 11] = 0\n 33977: u8 [a0 + 10] = 0\n 33980: u8 [a0 + 9] = 0\n 33983: u8 [a0 + 8] = 0\n 33986: u8 [a0 + 7] = 0\n 33989: u8 [a0 + 6] = 0\n 33992: u8 [a0 + 5] = 0\n 33995: u8 [a0 + 4] = 0\n 33998: u8 [a0 + 3] = 0\n 34001: u8 [a0 + 2] = 0\n 34004: u8 [a0 + 1] = 0\n 34007: u8 [a0 + 0] = 0\n 34009: jump @527 if a1 != 0\n      : @523 (gas: 4)\n 34013: i32 s0 = s1 + 0\n 34015: a1 = 0x20\n 34018: a0 = s0\n 34020: ra = 468, jump @0\n      : @524 [@dyn 234] (gas: 41)\n 34027: u8 [a0 + 31] = 0x19\n 34031: u8 [a0 + 30] = 0\n 34034: u8 [a0 + 29] = 0\n 34037: u8 [a0 + 28] = 0\n 34040: u8 [a0 + 27] = 0\n 34043: u8 [a0 + 26] = 0\n 34046: u8 [a0 + 25] = 0\n 34049: u8 [a0 + 24] = 0\n 34052: u8 [a0 + 23] = 0\n 34055: u8 [a0 + 22] = 0\n 34058: u8 [a0 + 21] = 0\n 34061: u8 [a0 + 20] = 0\n 34064: u8 [a0 + 19] = 0\n 34067: u8 [a0 + 18] = 0\n 34070: u8 [a0 + 17] = 0\n 34073: u8 [a0 + 16] = 0\n 34076: u8 [a0 + 15] = 0\n 34079: u8 [a0 + 14] = 0\n 34082: u8 [a0 + 13] = 0\n 34085: u8 [a0 + 12] = 0\n 34088: u8 [a0 + 11] = 0\n 34091: u8 [a0 + 10] = 0\n 34094: u8 [a0 + 9] = 0\n 34097: u8 [a0 + 8] = 0\n 34100: u8 [a0 + 7] = 0\n 34103: u8 [a0 + 6] = 0\n 34106: u8 [a0 + 5] = 0\n 34109: u8 [a0 + 4] = 0\n 34112: u8 [a0 + 3] = 0\n 34115: u8 [a0 + 2] = 0\n 34118: u8 [a0 + 1] = 0\n 34121: a1 = u64 [sp + 0x20]\n 34124: a2 = u64 [sp + 0x38]\n 34127: a1 = a1 | a2\n 34130: a2 = 0xffffffe0\n 34140: a2 = s1 <u a2\n 34143: a3 = u64 [sp + 0x40]\n 34146: a2 = 0 if a3 != 0\n 34148: a2 = 0 if a1 != 0\n 34150: u8 [a0 + 0] = 0\n 34152: jump @527 if a2 == 0\n      : @525 (gas: 3)\n 34156: i32 a0 = s0 + 0x20\n 34159: a1 = 0x20\n 34162: ra = 470, jump @0\n      : @526 [@dyn 235] (gas: 54)\n 34169: u8 [a0 + 19] = 0x66\n 34173: u8 [a0 + 24] = 0x72\n 34177: u8 [a0 + 15] = 0x72\n 34181: u8 [a0 + 22] = 0x74\n 34185: u8 [a0 + 13] = 0x74\n 34189: u8 [a0 + 20] = 0x61\n 34193: u8 [a0 + 16] = 0x61\n 34197: u8 [a0 + 12] = 0x61\n 34201: u8 [a0 + 17] = 0x6c\n 34205: u8 [a0 + 11] = 0x6c\n 34209: u8 [a0 + 10] = 0x6c\n 34213: u8 [a0 + 23] = 0x6f\n 34217: u8 [a0 + 9] = 0x6f\n 34221: u8 [a0 + 31] = 0\n 34224: u8 [a0 + 30] = 0\n 34227: u8 [a0 + 29] = 0\n 34230: u8 [a0 + 28] = 0\n 34233: u8 [a0 + 27] = 0\n 34236: u8 [a0 + 26] = 0\n 34239: u8 [a0 + 25] = 0\n 34242: u8 [a0 + 18] = 0x20\n 34246: u8 [a0 + 7] = 0x20\n 34250: u8 [a0 + 6] = 0x73\n 34254: u8 [a0 + 5] = 0x64\n 34258: u8 [a0 + 14] = 0x65\n 34262: u8 [a0 + 4] = 0x65\n 34266: u8 [a0 + 3] = 0x65\n 34270: u8 [a0 + 21] = 0x63\n 34274: u8 [a0 + 8] = 0x63\n 34278: u8 [a0 + 2] = 0x63\n 34282: u8 [a0 + 1] = 0x78\n 34286: u8 [a0 + 0] = 0x45\n 34289: a1 = u64 [sp]\n 34291: a0 = a1 + 0x60\n 34294: a1 = a0 <u a1\n 34297: a3 = u64 [sp + 0x8]\n 34300: a2 = a3 + a1\n 34303: a3 = a2 <u a3\n 34306: a3 = a1 if a1 == 0\n 34309: a1 = u64 [sp + 0x10]\n 34312: a3 = a3 + a1\n 34315: a1 = a3 <u a1\n 34318: a4 = u64 [sp + 0x18]\n 34321: a1 = a1 + a4\n 34324: a4 = u64 [sp + 0x28]\n 34327: u64 [a4] = a0\n 34329: u64 [a4 + 0x8] = a2\n 34332: u64 [a4 + 0x10] = a3\n 34335: u64 [a4 + 0x18] = a1\n 34338: ra = u64 [sp + 0x58]\n 34341: s0 = u64 [sp + 0x50]\n 34344: s1 = u64 [sp + 0x48]\n 34347: sp = sp + 0x60\n 34350: ret\n      : @527 (gas: 1)\n 34352: trap\n      : @528 (gas: 17)\n 34353: sp = sp + 0xffffffffffffffa0\n 34356: u64 [sp + 0x58] = ra\n 34359: u64 [sp + 0x50] = s0\n 34362: u64 [sp + 0x48] = s1\n 34365: a3 = u64 [a1 + 0x18]\n 34368: a4 = u64 [a1 + 0x10]\n 34371: a5 = u64 [a1 + 0x8]\n 34374: s1 = u64 [a1]\n 34376: a1 = a5 | a3\n 34379: a2 = s1 | a4\n 34382: a2 = a2 | a1\n 34385: a2 = a2 >> 0x20\n 34388: a1 = a1 | a4\n 34391: a1 = a1 << 0x20\n 34394: a1 = a1 | a2\n 34397: u64 [sp + 0x28] = a0\n 34400: jump @535 if a1 != 0\n      : @529 (gas: 19)\n 34404: a0 = s1 + 0x20\n 34407: u64 [sp + 0x30] = a0\n 34410: a0 = a0 <u s1\n 34413: a1 = a5 + a0\n 34416: u64 [sp + 0x40] = a1\n 34419: u64 [sp + 0x8] = a5\n 34422: s0 = a1 <u a5\n 34425: s0 = a0 if a0 == 0\n 34428: s0 = s0 + a4\n 34431: u64 [sp + 0x10] = a4\n 34434: a0 = s0 <u a4\n 34437: u64 [sp + 0x18] = a3\n 34440: a0 = a0 + a3\n 34443: u64 [sp + 0x38] = a0\n 34446: u64 [sp] = s1\n 34448: i32 a0 = s1 + 0\n 34450: a1 = 0x20\n 34453: s1 = 0x20\n 34456: ra = 472, jump @0\n      : @530 [@dyn 236] (gas: 45)\n 34463: u8 [a0 + 0x1f] = s1\n 34466: a1 = u64 [sp + 0x30]\n 34469: s1 = a1\n 34471: a1 = a1 | s0\n 34474: a2 = u64 [sp + 0x40]\n 34477: a4 = u64 [sp + 0x38]\n 34480: a2 = a2 | a4\n 34483: a1 = a1 | a2\n 34486: a1 = a1 >> 0x20\n 34489: u64 [sp + 0x20] = s0\n 34492: a2 = a2 | s0\n 34495: a2 = a2 << 0x20\n 34498: a1 = a1 | a2\n 34501: u8 [a0 + 30] = 0\n 34504: u8 [a0 + 29] = 0\n 34507: u8 [a0 + 28] = 0\n 34510: u8 [a0 + 27] = 0\n 34513: u8 [a0 + 26] = 0\n 34516: u8 [a0 + 25] = 0\n 34519: u8 [a0 + 24] = 0\n 34522: u8 [a0 + 23] = 0\n 34525: u8 [a0 + 22] = 0\n 34528: u8 [a0 + 21] = 0\n 34531: u8 [a0 + 20] = 0\n 34534: u8 [a0 + 19] = 0\n 34537: u8 [a0 + 18] = 0\n 34540: u8 [a0 + 17] = 0\n 34543: u8 [a0 + 16] = 0\n 34546: u8 [a0 + 15] = 0\n 34549: u8 [a0 + 14] = 0\n 34552: u8 [a0 + 13] = 0\n 34555: u8 [a0 + 12] = 0\n 34558: u8 [a0 + 11] = 0\n 34561: u8 [a0 + 10] = 0\n 34564: u8 [a0 + 9] = 0\n 34567: u8 [a0 + 8] = 0\n 34570: u8 [a0 + 7] = 0\n 34573: u8 [a0 + 6] = 0\n 34576: u8 [a0 + 5] = 0\n 34579: u8 [a0 + 4] = 0\n 34582: u8 [a0 + 3] = 0\n 34585: u8 [a0 + 2] = 0\n 34588: u8 [a0 + 1] = 0\n 34591: u8 [a0 + 0] = 0\n 34593: jump @535 if a1 != 0\n      : @531 (gas: 4)\n 34597: i32 s0 = s1 + 0\n 34599: a1 = 0x20\n 34602: a0 = s0\n 34604: ra = 474, jump @0\n      : @532 [@dyn 237] (gas: 41)\n 34611: u8 [a0 + 31] = 0x16\n 34615: u8 [a0 + 30] = 0\n 34618: u8 [a0 + 29] = 0\n 34621: u8 [a0 + 28] = 0\n 34624: u8 [a0 + 27] = 0\n 34627: u8 [a0 + 26] = 0\n 34630: u8 [a0 + 25] = 0\n 34633: u8 [a0 + 24] = 0\n 34636: u8 [a0 + 23] = 0\n 34639: u8 [a0 + 22] = 0\n 34642: u8 [a0 + 21] = 0\n 34645: u8 [a0 + 20] = 0\n 34648: u8 [a0 + 19] = 0\n 34651: u8 [a0 + 18] = 0\n 34654: u8 [a0 + 17] = 0\n 34657: u8 [a0 + 16] = 0\n 34660: u8 [a0 + 15] = 0\n 34663: u8 [a0 + 14] = 0\n 34666: u8 [a0 + 13] = 0\n 34669: u8 [a0 + 12] = 0\n 34672: u8 [a0 + 11] = 0\n 34675: u8 [a0 + 10] = 0\n 34678: u8 [a0 + 9] = 0\n 34681: u8 [a0 + 8] = 0\n 34684: u8 [a0 + 7] = 0\n 34687: u8 [a0 + 6] = 0\n 34690: u8 [a0 + 5] = 0\n 34693: u8 [a0 + 4] = 0\n 34696: u8 [a0 + 3] = 0\n 34699: u8 [a0 + 2] = 0\n 34702: u8 [a0 + 1] = 0\n 34705: a1 = u64 [sp + 0x20]\n 34708: a2 = u64 [sp + 0x38]\n 34711: a1 = a1 | a2\n 34714: a2 = 0xffffffe0\n 34724: a2 = s1 <u a2\n 34727: a3 = u64 [sp + 0x40]\n 34730: a2 = 0 if a3 != 0\n 34732: a2 = 0 if a1 != 0\n 34734: u8 [a0 + 0] = 0\n 34736: jump @535 if a2 == 0\n      : @533 (gas: 3)\n 34740: i32 a0 = s0 + 0x20\n 34743: a1 = 0x20\n 34746: ra = 476, jump @0\n      : @534 [@dyn 238] (gas: 55)\n 34753: u8 [a0 + 31] = 0\n 34756: u8 [a0 + 30] = 0\n 34759: u8 [a0 + 29] = 0\n 34762: u8 [a0 + 28] = 0\n 34765: u8 [a0 + 27] = 0\n 34768: u8 [a0 + 26] = 0\n 34771: u8 [a0 + 25] = 0\n 34774: u8 [a0 + 24] = 0\n 34777: u8 [a0 + 23] = 0\n 34780: u8 [a0 + 22] = 0\n 34783: u8 [a0 + 21] = 0x64\n 34787: u8 [a0 + 20] = 0x65\n 34791: u8 [a0 + 19] = 0x6c\n 34795: u8 [a0 + 18] = 0x69\n 34799: u8 [a0 + 17] = 0x61\n 34803: u8 [a0 + 16] = 0x66\n 34807: a5 = 0x20\n 34810: u8 [a0 + 0xf] = a5\n 34813: u8 [a0 + 14] = 0x72\n 34817: u8 [a0 + 13] = 0x65\n 34821: u8 [a0 + 12] = 0x66\n 34825: u8 [a0 + 11] = 0x73\n 34829: u8 [a0 + 10] = 0x6e\n 34833: u8 [a0 + 9] = 0x61\n 34837: u8 [a0 + 8] = 0x72\n 34841: u8 [a0 + 7] = 0x74\n 34845: u8 [a0 + 0x6] = a5\n 34848: u8 [a0 + 5] = 0x77\n 34852: u8 [a0 + 4] = 0x6f\n 34856: u8 [a0 + 3] = 0x72\n 34860: u8 [a0 + 2] = 0x72\n 34864: u8 [a0 + 1] = 0x6f\n 34868: u8 [a0 + 0] = 0x42\n 34871: a1 = u64 [sp]\n 34873: a0 = a1 + 0x60\n 34876: a1 = a0 <u a1\n 34879: a3 = u64 [sp + 0x8]\n 34882: a2 = a3 + a1\n 34885: a3 = a2 <u a3\n 34888: a3 = a1 if a1 == 0\n 34891: a1 = u64 [sp + 0x10]\n 34894: a3 = a3 + a1\n 34897: a1 = a3 <u a1\n 34900: a4 = u64 [sp + 0x18]\n 34903: a1 = a1 + a4\n 34906: a4 = u64 [sp + 0x28]\n 34909: u64 [a4] = a0\n 34911: u64 [a4 + 0x8] = a2\n 34914: u64 [a4 + 0x10] = a3\n 34917: u64 [a4 + 0x18] = a1\n 34920: ra = u64 [sp + 0x58]\n 34923: s0 = u64 [sp + 0x50]\n 34926: s1 = u64 [sp + 0x48]\n 34929: sp = sp + 0x60\n 34932: ret\n      : @535 (gas: 1)\n 34934: trap\n      : @536 [@dyn 239] (gas: 56)\n 34935: a1 = u64 [sp + 0x190]\n 34939: a1 = reverse a1\n 34941: a2 = u64 [sp + 0x198]\n 34945: a2 = reverse a2\n 34947: a3 = s1 >> 0x18\n 34950: u8 [a0 + 0xf] = a3\n 34953: a3 = s1 >> 0x10\n 34956: u8 [a0 + 0xe] = a3\n 34959: a3 = s1 >> 0x8\n 34962: u8 [a0 + 0xd] = a3\n 34965: u8 [a0 + 0xc] = s1\n 34968: u8 [a0 + 11] = 0\n 34971: u8 [a0 + 10] = 0\n 34974: u8 [a0 + 9] = 0\n 34977: u8 [a0 + 8] = 0\n 34980: u8 [a0 + 7] = 0\n 34983: u8 [a0 + 6] = 0\n 34986: u8 [a0 + 5] = 0\n 34989: u8 [a0 + 4] = 0\n 34992: u8 [a0 + 3] = 0\n 34995: u8 [a0 + 2] = 0\n 34998: u8 [a0 + 1] = 0\n 35001: u8 [a0 + 0] = 0\n 35003: u8 [a0 + 0x18] = a2\n 35006: u8 [a0 + 0x10] = a1\n 35009: a3 = a2 >> 0x38\n 35012: u8 [a0 + 0x1f] = a3\n 35015: a3 = a2 >> 0x30\n 35018: u8 [a0 + 0x1e] = a3\n 35021: a3 = a2 >> 0x28\n 35024: u8 [a0 + 0x1d] = a3\n 35027: a3 = a2 >> 0x20\n 35030: u8 [a0 + 0x1c] = a3\n 35033: a3 = a2 >> 0x18\n 35036: u8 [a0 + 0x1b] = a3\n 35039: a3 = a2 >> 0x10\n 35042: u8 [a0 + 0x1a] = a3\n 35045: a2 = a2 >> 0x8\n 35048: u8 [a0 + 0x19] = a2\n 35051: a2 = a1 >> 0x38\n 35054: u8 [a0 + 0x17] = a2\n 35057: a2 = a1 >> 0x30\n 35060: u8 [a0 + 0x16] = a2\n 35063: a2 = a1 >> 0x28\n 35066: u8 [a0 + 0x15] = a2\n 35069: a2 = a1 >> 0x20\n 35072: u8 [a0 + 0x14] = a2\n 35075: a2 = a1 >> 0x18\n 35078: u8 [a0 + 0x13] = a2\n 35081: a2 = a1 >> 0x10\n 35084: u8 [a0 + 0x12] = a2\n 35087: a1 = a1 >> 0x8\n 35090: u8 [a0 + 0x11] = a1\n 35093: a0 = 0x20\n 35096: a1 = 0x20\n 35099: ra = 480, jump @0\n      : @537 [@dyn 240] (gas: 35)\n 35106: u8 [a0 + 31] = 0\n 35109: u8 [a0 + 30] = 0\n 35112: u8 [a0 + 29] = 0\n 35115: u8 [a0 + 28] = 0\n 35118: u8 [a0 + 27] = 0\n 35121: u8 [a0 + 26] = 0\n 35124: u8 [a0 + 25] = 0\n 35127: u8 [a0 + 24] = 0\n 35130: u8 [a0 + 23] = 0\n 35133: u8 [a0 + 22] = 0\n 35136: u8 [a0 + 21] = 0\n 35139: u8 [a0 + 20] = 0\n 35142: u8 [a0 + 19] = 0\n 35145: u8 [a0 + 18] = 0\n 35148: u8 [a0 + 17] = 0\n 35151: u8 [a0 + 16] = 0\n 35154: u8 [a0 + 15] = 0\n 35157: u8 [a0 + 14] = 0\n 35160: u8 [a0 + 13] = 0\n 35163: u8 [a0 + 12] = 0\n 35166: u8 [a0 + 11] = 0\n 35169: u8 [a0 + 10] = 0\n 35172: u8 [a0 + 9] = 0\n 35175: u8 [a0 + 8] = 0\n 35178: u8 [a0 + 7] = 0\n 35181: u8 [a0 + 6] = 0\n 35184: u8 [a0 + 5] = 0\n 35187: u8 [a0 + 4] = 0\n 35190: u8 [a0 + 3] = 0\n 35193: u8 [a0 + 2] = 0\n 35196: u8 [a0 + 1] = 0\n 35199: u8 [a0 + 0] = 0\n 35201: a1 = 0x40\n 35204: a0 = 0\n 35206: ra = 482, jump @0\n      : @538 [@dyn 241] (gas: 28)\n 35213: i32 a0 = a0 + 0\n 35215: i32 a2 = sp + 0x4e0\n 35219: a1 = 0x40\n 35222: ecalli 9 // 'hash_keccak_256'\n 35224: a0 = u64 [sp + 0x4f8]\n 35228: a1 = u64 [sp + 0x4f0]\n 35232: a2 = u64 [sp + 0x4e8]\n 35236: a3 = u64 [sp + 0x4e0]\n 35240: a0 = reverse a0\n 35242: a1 = reverse a1\n 35244: a2 = reverse a2\n 35246: a3 = reverse a3\n 35248: u64 [sp + 0x4d8] = a3\n 35252: u64 [sp + 0x4d0] = a2\n 35256: u64 [sp + 0x4c8] = a1\n 35260: u64 [sp + 0x4c0] = a0\n 35264: u64 [sp + 1272] = 0\n 35268: u64 [sp + 1264] = 0\n 35272: u64 [sp + 1256] = 0\n 35276: u64 [sp + 1248] = 0\n 35280: u32 [sp + 1184] = 0x20\n 35285: i32 a1 = sp + 0x4c0\n 35289: i32 a3 = sp + 0x4e0\n 35293: i32 a4 = sp + 0x4a0\n 35297: a2 = 0xffffffffffffffff\n 35300: a0 = 0\n 35302: ecalli 8 // 'get_storage'\n 35304: fallthrough\n      : @539 (gas: 25)\n 35305: t0 = u64 [sp + 0x4f8]\n 35309: s1 = u64 [sp + 0x4e0]\n 35313: a4 = u64 [sp + 0x4e8]\n 35317: a5 = u64 [sp + 0x4f0]\n 35321: a0 = 0x32\n 35324: a1 = s1 mulhu a0\n 35327: a2 = a4 * a0\n 35330: a1 = a1 + a2\n 35333: u64 [sp + 0x130] = a1\n 35337: a1 = a1 <u a2\n 35340: a2 = a4 mulhu a0\n 35343: a1 = a1 + a2\n 35346: a2 = a5 * a0\n 35349: a2 = a2 + a1\n 35352: u64 [sp + 0x140] = a2\n 35356: a1 = a2 <u a1\n 35359: a3 = t0 * a0\n 35362: a2 = a5 mulhu a0\n 35365: a3 = a3 + a2\n 35368: a4 = a4 | t0\n 35371: u64 [sp + 0x198] = s1\n 35375: a5 = a5 | s1\n 35378: a4 = a4 | a5\n 35381: a5 = a3 + a1\n 35384: jump @542 if a4 == 0\n      : @540 (gas: 7)\n 35387: a1 = 0 if a5 != 0\n 35389: a2 = a3 <u a2\n 35392: a0 = t0 mulhu a0\n 35395: a0 = a0 >u 0\n 35397: a0 = a0 | a2\n 35400: a0 = a0 | a1\n 35403: jump @542 if a0 == 0\n      : @541 (gas: 1)\n 35406: jump @608\n      : @542 (gas: 20)\n 35409: u64 [sp + 0x148] = a5\n 35413: i32 a0 = sp + 0x3c0\n 35417: ecalli 5 // 'caller'\n 35419: a0 = u64 [sp + 0x3c8]\n 35423: a1 = i32 [sp + 0x3d0]\n 35427: s1 = u64 [sp + 0x3c0]\n 35431: a0 = reverse a0\n 35433: a2 = a0 << 0x20\n 35436: a1 = reverse a1\n 35438: a1 = a1 >> 0x20\n 35441: a1 = a1 | a2\n 35444: u64 [sp + 0x190] = a1\n 35448: a0 = a0 >> 0x20\n 35451: a1 = reverse s1\n 35453: a1 = a1 << 0x20\n 35456: a0 = a0 | a1\n 35459: u64 [sp + 0x188] = a0\n 35463: a1 = 0x20\n 35466: a0 = 0\n 35468: ra = 484, jump @0\n      : @543 [@dyn 242] (gas: 56)\n 35475: a1 = u64 [sp + 0x188]\n 35479: a1 = reverse a1\n 35481: a2 = u64 [sp + 0x190]\n 35485: a2 = reverse a2\n 35487: a3 = s1 >> 0x18\n 35490: u8 [a0 + 0xf] = a3\n 35493: a3 = s1 >> 0x10\n 35496: u8 [a0 + 0xe] = a3\n 35499: a3 = s1 >> 0x8\n 35502: u8 [a0 + 0xd] = a3\n 35505: u8 [a0 + 0xc] = s1\n 35508: u8 [a0 + 11] = 0\n 35511: u8 [a0 + 10] = 0\n 35514: u8 [a0 + 9] = 0\n 35517: u8 [a0 + 8] = 0\n 35520: u8 [a0 + 7] = 0\n 35523: u8 [a0 + 6] = 0\n 35526: u8 [a0 + 5] = 0\n 35529: u8 [a0 + 4] = 0\n 35532: u8 [a0 + 3] = 0\n 35535: u8 [a0 + 2] = 0\n 35538: u8 [a0 + 1] = 0\n 35541: u8 [a0 + 0] = 0\n 35543: u8 [a0 + 0x18] = a2\n 35546: u8 [a0 + 0x10] = a1\n 35549: a3 = a2 >> 0x38\n 35552: u8 [a0 + 0x1f] = a3\n 35555: a3 = a2 >> 0x30\n 35558: u8 [a0 + 0x1e] = a3\n 35561: a3 = a2 >> 0x28\n 35564: u8 [a0 + 0x1d] = a3\n 35567: a3 = a2 >> 0x20\n 35570: u8 [a0 + 0x1c] = a3\n 35573: a3 = a2 >> 0x18\n 35576: u8 [a0 + 0x1b] = a3\n 35579: a3 = a2 >> 0x10\n 35582: u8 [a0 + 0x1a] = a3\n 35585: a2 = a2 >> 0x8\n 35588: u8 [a0 + 0x19] = a2\n 35591: a2 = a1 >> 0x38\n 35594: u8 [a0 + 0x17] = a2\n 35597: a2 = a1 >> 0x30\n 35600: u8 [a0 + 0x16] = a2\n 35603: a2 = a1 >> 0x28\n 35606: u8 [a0 + 0x15] = a2\n 35609: a2 = a1 >> 0x20\n 35612: u8 [a0 + 0x14] = a2\n 35615: a2 = a1 >> 0x18\n 35618: u8 [a0 + 0x13] = a2\n 35621: a2 = a1 >> 0x10\n 35624: u8 [a0 + 0x12] = a2\n 35627: a1 = a1 >> 0x8\n 35630: u8 [a0 + 0x11] = a1\n 35633: a0 = 0x20\n 35636: a1 = 0x20\n 35639: ra = 486, jump @0\n      : @544 [@dyn 243] (gas: 35)\n 35646: u8 [a0 + 31] = 0x1\n 35650: u8 [a0 + 30] = 0\n 35653: u8 [a0 + 29] = 0\n 35656: u8 [a0 + 28] = 0\n 35659: u8 [a0 + 27] = 0\n 35662: u8 [a0 + 26] = 0\n 35665: u8 [a0 + 25] = 0\n 35668: u8 [a0 + 24] = 0\n 35671: u8 [a0 + 23] = 0\n 35674: u8 [a0 + 22] = 0\n 35677: u8 [a0 + 21] = 0\n 35680: u8 [a0 + 20] = 0\n 35683: u8 [a0 + 19] = 0\n 35686: u8 [a0 + 18] = 0\n 35689: u8 [a0 + 17] = 0\n 35692: u8 [a0 + 16] = 0\n 35695: u8 [a0 + 15] = 0\n 35698: u8 [a0 + 14] = 0\n 35701: u8 [a0 + 13] = 0\n 35704: u8 [a0 + 12] = 0\n 35707: u8 [a0 + 11] = 0\n 35710: u8 [a0 + 10] = 0\n 35713: u8 [a0 + 9] = 0\n 35716: u8 [a0 + 8] = 0\n 35719: u8 [a0 + 7] = 0\n 35722: u8 [a0 + 6] = 0\n 35725: u8 [a0 + 5] = 0\n 35728: u8 [a0 + 4] = 0\n 35731: u8 [a0 + 3] = 0\n 35734: u8 [a0 + 2] = 0\n 35737: u8 [a0 + 1] = 0\n 35740: u8 [a0 + 0] = 0\n 35742: a1 = 0x40\n 35745: a0 = 0\n 35747: ra = 488, jump @0\n      : @545 [@dyn 244] (gas: 28)\n 35754: i32 a0 = a0 + 0\n 35756: i32 a2 = sp + 0x4e0\n 35760: a1 = 0x40\n 35763: ecalli 9 // 'hash_keccak_256'\n 35765: a0 = u64 [sp + 0x4f8]\n 35769: a1 = u64 [sp + 0x4f0]\n 35773: a2 = u64 [sp + 0x4e8]\n 35777: a3 = u64 [sp + 0x4e0]\n 35781: a0 = reverse a0\n 35783: a1 = reverse a1\n 35785: a2 = reverse a2\n 35787: a3 = reverse a3\n 35789: u64 [sp + 0x4d8] = a3\n 35793: u64 [sp + 0x4d0] = a2\n 35797: u64 [sp + 0x4c8] = a1\n 35801: u64 [sp + 0x4c0] = a0\n 35805: u64 [sp + 1272] = 0\n 35809: u64 [sp + 1264] = 0\n 35813: u64 [sp + 1256] = 0\n 35817: u64 [sp + 1248] = 0\n 35821: u32 [sp + 1184] = 0x20\n 35826: i32 a1 = sp + 0x4c0\n 35830: i32 a3 = sp + 0x4e0\n 35834: i32 a4 = sp + 0x4a0\n 35838: a2 = 0xffffffffffffffff\n 35841: a0 = 0\n 35843: ecalli 8 // 'get_storage'\n 35845: fallthrough\n      : @546 (gas: 39)\n 35846: a4 = u64 [sp + 0x4e8]\n 35850: a2 = u64 [sp + 0x4e0]\n 35854: t1 = u64 [sp + 0x4f8]\n 35858: s1 = u64 [sp + 0x4f0]\n 35862: a5 = u64 [sp + 0x110]\n 35866: a5 = a5 + a4\n 35869: a1 = u64 [sp + 0x118]\n 35873: a1 = a1 + a2\n 35876: u64 [sp + 0xf8] = a1\n 35880: a3 = a1 <u a2\n 35883: a5 = a5 + a3\n 35886: t0 = a5 ^ a4\n 35889: u64 [sp + 0xf0] = a5\n 35893: a4 = a5 <u a4\n 35896: a5 = u64 [sp + 0x108]\n 35900: a5 = a5 + s1\n 35903: a1 = u64 [sp + 0x100]\n 35907: a1 = a1 + t1\n 35910: a2 = a5 <u s1\n 35913: a1 = a1 + a2\n 35916: a2 = a3\n 35918: a2 = a4 if t0 != 0\n 35921: a0 = a5 + a2\n 35924: a2 = a0 <u a5\n 35927: a5 = a1 + a2\n 35930: a1 = a3 ^ 0x1\n 35933: a2 = a4 ^ 0x1\n 35936: a1 = a2 if t0 != 0\n 35939: a2 = a0 <u s1\n 35942: a3 = a5 ^ t1\n 35945: u64 [sp + 0xe0] = a5\n 35949: a4 = a5 <u t1\n 35952: a4 = a2 if a3 == 0\n 35955: u64 [sp + 0xe8] = a0\n 35959: a0 = a0 ^ s1\n 35962: a0 = a0 | a3\n 35965: a2 = a4 ^ 0x1\n 35968: a1 = a2 if a0 != 0\n 35971: jump @548 if a1 != 0\n      : @547 (gas: 1)\n 35974: jump @602\n      : @548 (gas: 57)\n 35977: a0 = u64 [sp + 0x198]\n 35981: a2 = a0 * 0x32\n 35984: u64 [sp + 0x138] = a2\n 35988: t1 = u64 [sp + 0x140]\n 35992: a0 = a2 | t1\n 35995: t0 = u64 [sp + 0x148]\n 35999: t2 = u64 [sp + 0x130]\n 36003: a1 = t2 | t0\n 36006: a0 = a0 | a1\n 36009: a0 = a0 <u 0x1\n 36012: u64 [sp + 0x198] = a0\n 36016: a0 = clz t1\n 36018: a1 = a0 + 0x40\n 36021: a0 = clz t0\n 36023: a0 = a1 if t0 == 0\n 36026: a1 = clz a2\n 36028: a1 = a1 + 0x40\n 36031: a2 = clz t2\n 36033: a2 = a1 if t2 == 0\n 36036: a1 = a2 + 0x80\n 36040: a4 = t1 | t0\n 36043: a0 = a1 if a4 == 0\n 36046: a5 = a1 <u a2\n 36049: a5 = 0 if a4 != 0\n 36051: a4 = a5 >u 0\n 36053: a1 = a0 <u 0xfa\n 36057: s1 = a1 ^ 0x1\n 36060: a4 = s1 if a5 == 0\n 36063: a1 = a4 <u 0x1\n 36066: a2 = a1 + 0xffffffffffffffff\n 36069: a3 = -a4\n 36071: a5 = -a5\n 36073: ra = a5 - s1\n 36076: a1 = 0xf9 - a0\n 36080: u64 [sp + 0x188] = a3\n 36084: a0 = a3 >u 0\n 36086: s1 = a2 >u 0\n 36088: u64 [sp + 0x190] = a2\n 36092: s1 = a0 if a2 == 0\n 36095: a0 = ra >u 0\n 36097: a3 = a1 <u 0x100\n 36101: a3 = a3 ^ 0x1\n 36104: a3 = a0 if ra != 0\n 36107: a3 = s1 if a4 != 0\n 36110: a2 = u64 [sp + 0x198]\n 36114: a2 = a2 | a3\n 36117: a4 = t0\n 36119: a5 = t2\n 36121: t2 = u64 [sp + 0x138]\n 36125: a4 = 0 if a2 != 0\n 36127: a3 = t1\n 36129: a3 = 0 if a2 != 0\n 36131: s1 = a5\n 36133: s1 = 0 if a2 != 0\n 36135: a0 = t2\n 36137: a0 = 0 if a2 != 0\n 36139: jump @556 if a2 != 0\n      : @549 (gas: 8)\n 36143: t0 = a1\n 36145: a2 = a1 ^ 0xff\n 36149: a1 = u64 [sp + 0x188]\n 36153: a2 = a2 | a1\n 36156: a1 = u64 [sp + 0x190]\n 36160: a1 = ra | a1\n 36163: a1 = a1 | a2\n 36166: jump @556 if a1 == 0\n      : @550 (gas: 257)\n 36170: a1 = t0 + 0x1\n 36173: u64 [sp + 0x198] = a1\n 36177: a0 = a1 <u 0x1\n 36180: a0 = a0 + ra\n 36183: u64 [sp + 0x160] = a0\n 36187: a0 = a0 | a1\n 36190: a0 = a0 <u 0x1\n 36193: a1 = u64 [sp + 0x188]\n 36197: a0 = a0 + a1\n 36200: u64 [sp + 0x180] = a0\n 36204: a0 = a0 <u a1\n 36207: a1 = u64 [sp + 0x190]\n 36211: a0 = a0 + a1\n 36214: u64 [sp + 0x168] = a0\n 36218: u8 [sp + 0x340] = t2\n 36222: u8 [sp + 831] = 0\n 36226: u8 [sp + 830] = 0\n 36230: u8 [sp + 829] = 0\n 36234: u8 [sp + 828] = 0\n 36238: u8 [sp + 827] = 0\n 36242: u8 [sp + 826] = 0\n 36246: u8 [sp + 825] = 0\n 36250: u8 [sp + 824] = 0\n 36254: u8 [sp + 823] = 0\n 36258: u8 [sp + 822] = 0\n 36262: u8 [sp + 821] = 0\n 36266: u8 [sp + 820] = 0\n 36270: u8 [sp + 819] = 0\n 36274: u8 [sp + 818] = 0\n 36278: u8 [sp + 817] = 0\n 36282: u8 [sp + 816] = 0\n 36286: u8 [sp + 815] = 0\n 36290: u8 [sp + 814] = 0\n 36294: u8 [sp + 813] = 0\n 36298: u8 [sp + 812] = 0\n 36302: u8 [sp + 811] = 0\n 36306: u8 [sp + 810] = 0\n 36310: u8 [sp + 809] = 0\n 36314: u8 [sp + 808] = 0\n 36318: u8 [sp + 807] = 0\n 36322: u8 [sp + 806] = 0\n 36326: u8 [sp + 805] = 0\n 36330: u8 [sp + 804] = 0\n 36334: u8 [sp + 803] = 0\n 36338: u8 [sp + 802] = 0\n 36342: u8 [sp + 801] = 0\n 36346: u8 [sp + 800] = 0\n 36350: ra = a5\n 36352: u8 [sp + 0x348] = a5\n 36356: a0 = t2 >> 0x38\n 36359: u64 [sp + 0x128] = a0\n 36363: u8 [sp + 0x347] = a0\n 36367: a0 = t2 >> 0x30\n 36370: u64 [sp + 0x120] = a0\n 36374: u8 [sp + 0x346] = a0\n 36378: a0 = t2 >> 0x28\n 36381: u64 [sp + 0xd8] = a0\n 36385: u8 [sp + 0x345] = a0\n 36389: a0 = t2 >> 0x20\n 36392: u64 [sp + 0xd0] = a0\n 36396: u8 [sp + 0x344] = a0\n 36400: i32 t0 = 0xff - t0\n 36404: a1 = t0 << 0x38\n 36407: a1 = a1 >> 0x3b\n 36410: a2 = sp + 0x340\n 36414: a2 = a2 - a1\n 36417: a0 = t2 >> 0x18\n 36420: u64 [sp + 0x80] = a0\n 36424: u8 [sp + 0x343] = a0\n 36428: a0 = t2 >> 0x10\n 36431: u64 [sp + 0x78] = a0\n 36434: u8 [sp + 0x342] = a0\n 36438: a0 = t2 >> 0x8\n 36441: u64 [sp + 0x70] = a0\n 36444: u8 [sp + 0x341] = a0\n 36448: u8 [sp + 0x350] = t1\n 36452: a0 = a5 >> 0x38\n 36455: u64 [sp + 0x68] = a0\n 36458: u8 [sp + 0x34f] = a0\n 36462: a0 = a5 >> 0x30\n 36465: u64 [sp + 0x60] = a0\n 36468: u8 [sp + 0x34e] = a0\n 36472: a0 = a5 >> 0x28\n 36475: u64 [sp + 0x58] = a0\n 36478: u8 [sp + 0x34d] = a0\n 36482: a0 = a5 >> 0x20\n 36485: u64 [sp + 0x50] = a0\n 36488: u8 [sp + 0x34c] = a0\n 36492: a0 = a5 >> 0x18\n 36495: u64 [sp + 0x48] = a0\n 36498: u8 [sp + 0x34b] = a0\n 36502: a0 = a5 >> 0x10\n 36505: u64 [sp + 0x40] = a0\n 36508: u8 [sp + 0x34a] = a0\n 36512: a0 = a5 >> 0x8\n 36515: u64 [sp + 0x38] = a0\n 36518: u8 [sp + 0x349] = a0\n 36522: t2 = u64 [sp + 0x148]\n 36526: u8 [sp + 0x358] = t2\n 36530: a0 = t1 >> 0x38\n 36533: u64 [sp + 0x30] = a0\n 36536: u8 [sp + 0x357] = a0\n 36540: a0 = t1 >> 0x30\n 36543: u64 [sp + 0x28] = a0\n 36546: u8 [sp + 0x356] = a0\n 36550: a0 = t1 >> 0x28\n 36553: u64 [sp + 0x20] = a0\n 36556: u8 [sp + 0x355] = a0\n 36560: a0 = t1 >> 0x20\n 36563: u64 [sp + 0x18] = a0\n 36566: u8 [sp + 0x354] = a0\n 36570: a0 = t1 >> 0x18\n 36573: u64 [sp + 0x10] = a0\n 36576: u8 [sp + 0x353] = a0\n 36580: a0 = t1 >> 0x10\n 36583: u64 [sp + 0xc8] = a0\n 36587: u8 [sp + 0x352] = a0\n 36591: a0 = t1 >> 0x8\n 36594: u64 [sp + 0xc0] = a0\n 36598: u8 [sp + 0x351] = a0\n 36602: a0 = t2 >> 0x38\n 36605: u64 [sp + 0xb8] = a0\n 36609: u8 [sp + 0x35f] = a0\n 36613: a0 = t2 >> 0x30\n 36616: u64 [sp + 0xb0] = a0\n 36620: u8 [sp + 0x35e] = a0\n 36624: a0 = t2 >> 0x28\n 36627: u64 [sp + 0xa8] = a0\n 36631: u8 [sp + 0x35d] = a0\n 36635: a0 = t2 >> 0x20\n 36638: u64 [sp + 0xa0] = a0\n 36642: u8 [sp + 0x35c] = a0\n 36646: a0 = t2 >> 0x18\n 36649: u64 [sp + 0x98] = a0\n 36653: u8 [sp + 0x35b] = a0\n 36657: a0 = t2 >> 0x10\n 36660: u64 [sp + 0x90] = a0\n 36664: u8 [sp + 0x35a] = a0\n 36668: a0 = t2 >> 0x8\n 36671: u64 [sp + 0x88] = a0\n 36675: u8 [sp + 0x359] = a0\n 36679: a1 = u8 [a2 + 0x19]\n 36682: a3 = u8 [a2 + 0x18]\n 36685: a4 = u8 [a2 + 0x1a]\n 36688: a5 = u8 [a2 + 0x1b]\n 36691: a1 = a1 << 0x8\n 36694: a1 = a1 | a3\n 36697: a4 = a4 << 0x10\n 36700: a5 = a5 << 0x18\n 36703: a4 = a4 | a5\n 36706: a1 = a1 | a4\n 36709: a3 = u8 [a2 + 0x1d]\n 36712: a4 = u8 [a2 + 0x1c]\n 36715: a5 = u8 [a2 + 0x1e]\n 36718: s1 = u8 [a2 + 0x1f]\n 36721: a3 = a3 << 0x8\n 36724: a3 = a3 | a4\n 36727: a5 = a5 << 0x10\n 36730: s1 = s1 << 0x18\n 36733: a5 = a5 | s1\n 36736: a3 = a3 | a5\n 36739: a3 = a3 << 0x20\n 36742: a1 = a1 | a3\n 36745: a3 = u8 [a2 + 0x11]\n 36748: a4 = u8 [a2 + 0x10]\n 36751: a5 = u8 [a2 + 0x12]\n 36754: s1 = u8 [a2 + 0x13]\n 36757: a3 = a3 << 0x8\n 36760: a3 = a3 | a4\n 36763: a5 = a5 << 0x10\n 36766: s1 = s1 << 0x18\n 36769: a5 = a5 | s1\n 36772: a3 = a3 | a5\n 36775: a4 = u8 [a2 + 0x15]\n 36778: a5 = u8 [a2 + 0x14]\n 36781: s1 = u8 [a2 + 0x16]\n 36784: a0 = u8 [a2 + 0x17]\n 36787: a4 = a4 << 0x8\n 36790: a4 = a4 | a5\n 36793: s1 = s1 << 0x10\n 36796: a0 = a0 << 0x18\n 36799: a0 = a0 | s1\n 36802: a0 = a0 | a4\n 36805: a0 = a0 << 0x20\n 36808: t1 = a0 | a3\n 36811: a0 = t0 & 0x7\n 36814: a4 = a1 << a0\n 36817: a5 = t1 >> 0x1\n 36820: t0 = a0 ^ 0x3f\n 36823: a5 = a5 >> t0\n 36826: a4 = a4 | a5\n 36829: u64 [sp + 0x190] = a4\n 36833: a4 = u8 [a2 + 0x9]\n 36836: a5 = u8 [a2 + 0x8]\n 36839: s1 = u8 [a2 + 0xa]\n 36842: a1 = u8 [a2 + 0xb]\n 36845: a4 = a4 << 0x8\n 36848: a4 = a4 | a5\n 36851: s1 = s1 << 0x10\n 36854: a1 = a1 << 0x18\n 36857: a1 = a1 | s1\n 36860: a1 = a1 | a4\n 36863: a4 = u8 [a2 + 0xd]\n 36866: a5 = u8 [a2 + 0xc]\n 36869: s1 = u8 [a2 + 0xe]\n 36872: a3 = u8 [a2 + 0xf]\n 36875: a4 = a4 << 0x8\n 36878: a4 = a4 | a5\n 36881: s1 = s1 << 0x10\n 36884: a3 = a3 << 0x18\n 36887: a3 = a3 | s1\n 36890: a3 = a3 | a4\n 36893: a3 = a3 << 0x20\n 36896: s1 = a3 | a1\n 36899: a1 = s1 >> 0x1\n 36902: a3 = a0 ^ 0xffffffffffffffff\n 36905: a1 = a1 >> a3\n 36908: a3 = t1 << a0\n 36911: a1 = a1 | a3\n 36914: u64 [sp + 0x188] = a1\n 36918: a1 = u8 [a2 + 0x1]\n 36921: a3 = u8 [a2]\n 36923: a4 = u8 [a2 + 0x2]\n 36926: a5 = u8 [a2 + 0x3]\n 36929: a1 = a1 << 0x8\n 36932: a1 = a1 | a3\n 36935: a4 = a4 << 0x10\n 36938: a5 = a5 << 0x18\n 36941: a4 = a4 | a5\n 36944: a1 = a1 | a4\n 36947: a3 = u8 [a2 + 0x5]\n 36950: a4 = u8 [a2 + 0x4]\n 36953: a5 = u8 [a2 + 0x6]\n 36956: a2 = u8 [a2 + 0x7]\n 36959: a3 = a3 << 0x8\n 36962: a3 = a3 | a4\n 36965: a4 = u64 [sp + 0x160]\n 36969: a5 = a5 << 0x10\n 36972: a2 = a2 << 0x18\n 36975: a2 = a2 | a5\n 36978: a2 = a2 | a3\n 36981: a2 = a2 << 0x20\n 36984: a1 = a1 | a2\n 36987: a2 = a1 >> 0x1\n 36990: a2 = a2 >> t0\n 36993: t0 = u64 [sp + 0x168]\n 36997: a3 = s1 << a0\n 37000: a2 = a2 | a3\n 37003: u64 [sp + 0x170] = a2\n 37007: a2 = a4 | t0\n 37010: a3 = u64 [sp + 0x198]\n 37014: a5 = u64 [sp + 0x180]\n 37018: a3 = a3 | a5\n 37021: a2 = a2 | a3\n 37024: a0 = a1 << a0\n 37027: u64 [sp + 0x178] = a0\n 37031: jump @554 if a2 == 0\n      : @551 (gas: 213)\n 37035: u64 [sp + 344] = 0\n 37039: u64 [sp + 336] = 0\n 37043: a0 = u64 [sp + 0x138]\n 37047: u8 [sp + 0x2e0] = a0\n 37051: u8 [sp + 0x2e8] = ra\n 37055: a0 = u64 [sp + 0x128]\n 37059: u8 [sp + 0x2e7] = a0\n 37063: a0 = u64 [sp + 0x120]\n 37067: u8 [sp + 0x2e6] = a0\n 37071: a0 = u64 [sp + 0xd8]\n 37075: u8 [sp + 0x2e5] = a0\n 37079: a0 = u64 [sp + 0xd0]\n 37083: u8 [sp + 0x2e4] = a0\n 37087: a0 = u64 [sp + 0x80]\n 37091: u8 [sp + 0x2e3] = a0\n 37095: a0 = u64 [sp + 0x78]\n 37098: u8 [sp + 0x2e2] = a0\n 37102: a0 = u64 [sp + 0x70]\n 37105: u8 [sp + 0x2e1] = a0\n 37109: a0 = u64 [sp + 0x140]\n 37113: u8 [sp + 0x2f0] = a0\n 37117: a0 = u64 [sp + 0x68]\n 37120: u8 [sp + 0x2ef] = a0\n 37124: a0 = u64 [sp + 0x60]\n 37127: u8 [sp + 0x2ee] = a0\n 37131: a0 = u64 [sp + 0x58]\n 37134: u8 [sp + 0x2ed] = a0\n 37138: a0 = u64 [sp + 0x50]\n 37141: u8 [sp + 0x2ec] = a0\n 37145: a0 = u64 [sp + 0x48]\n 37148: u8 [sp + 0x2eb] = a0\n 37152: a0 = u64 [sp + 0x40]\n 37155: u8 [sp + 0x2ea] = a0\n 37159: a0 = u64 [sp + 0x38]\n 37162: u8 [sp + 0x2e9] = a0\n 37166: u8 [sp + 0x2f8] = t2\n 37170: a0 = u64 [sp + 0x30]\n 37173: u8 [sp + 0x2f7] = a0\n 37177: a0 = u64 [sp + 0x28]\n 37180: u8 [sp + 0x2f6] = a0\n 37184: a0 = u64 [sp + 0x20]\n 37187: u8 [sp + 0x2f5] = a0\n 37191: a0 = u64 [sp + 0x18]\n 37194: u8 [sp + 0x2f4] = a0\n 37198: a0 = u64 [sp + 0x10]\n 37201: u8 [sp + 0x2f3] = a0\n 37205: u8 [sp + 799] = 0\n 37209: u8 [sp + 798] = 0\n 37213: u8 [sp + 797] = 0\n 37217: u8 [sp + 796] = 0\n 37221: u8 [sp + 795] = 0\n 37225: u8 [sp + 794] = 0\n 37229: u8 [sp + 793] = 0\n 37233: u8 [sp + 792] = 0\n 37237: u8 [sp + 791] = 0\n 37241: u8 [sp + 790] = 0\n 37245: u8 [sp + 789] = 0\n 37249: u8 [sp + 788] = 0\n 37253: u8 [sp + 787] = 0\n 37257: u8 [sp + 786] = 0\n 37261: u8 [sp + 785] = 0\n 37265: u8 [sp + 784] = 0\n 37269: u8 [sp + 783] = 0\n 37273: u8 [sp + 782] = 0\n 37277: u8 [sp + 781] = 0\n 37281: u8 [sp + 780] = 0\n 37285: u8 [sp + 779] = 0\n 37289: u8 [sp + 778] = 0\n 37293: u8 [sp + 777] = 0\n 37297: u8 [sp + 776] = 0\n 37301: u8 [sp + 775] = 0\n 37305: u8 [sp + 774] = 0\n 37309: u8 [sp + 773] = 0\n 37313: u8 [sp + 772] = 0\n 37317: u8 [sp + 771] = 0\n 37321: u8 [sp + 770] = 0\n 37325: u8 [sp + 769] = 0\n 37329: u8 [sp + 768] = 0\n 37333: a0 = u64 [sp + 0xc8]\n 37337: u8 [sp + 0x2f2] = a0\n 37341: a0 = u64 [sp + 0xc0]\n 37345: u8 [sp + 0x2f1] = a0\n 37349: a0 = u64 [sp + 0xb8]\n 37353: u8 [sp + 0x2ff] = a0\n 37357: a0 = u64 [sp + 0xb0]\n 37361: u8 [sp + 0x2fe] = a0\n 37365: a0 = u64 [sp + 0xa8]\n 37369: u8 [sp + 0x2fd] = a0\n 37373: a0 = u64 [sp + 0xa0]\n 37377: u8 [sp + 0x2fc] = a0\n 37381: a0 = u64 [sp + 0x98]\n 37385: u8 [sp + 0x2fb] = a0\n 37389: a0 = u64 [sp + 0x90]\n 37393: u8 [sp + 0x2fa] = a0\n 37397: a0 = u64 [sp + 0x88]\n 37401: u8 [sp + 0x2f9] = a0\n 37405: s1 = u64 [sp + 0x198]\n 37409: a0 = s1 << 0x38\n 37412: a0 = a0 >> 0x3b\n 37415: a1 = sp + 0x2e0\n 37419: a1 = a1 + a0\n 37422: a0 = u8 [a1 + 0x11]\n 37425: a2 = u8 [a1 + 0x10]\n 37428: a3 = u8 [a1 + 0x12]\n 37431: a4 = u8 [a1 + 0x13]\n 37434: a0 = a0 << 0x8\n 37437: a0 = a0 | a2\n 37440: a3 = a3 << 0x10\n 37443: a4 = a4 << 0x18\n 37446: a3 = a3 | a4\n 37449: a0 = a0 | a3\n 37452: a2 = u8 [a1 + 0x15]\n 37455: a3 = u8 [a1 + 0x14]\n 37458: a4 = u8 [a1 + 0x16]\n 37461: a5 = u8 [a1 + 0x17]\n 37464: a2 = a2 << 0x8\n 37467: a2 = a2 | a3\n 37470: a4 = a4 << 0x10\n 37473: a5 = a5 << 0x18\n 37476: a4 = a4 | a5\n 37479: a2 = a2 | a4\n 37482: a2 = a2 << 0x20\n 37485: t1 = a2 | a0\n 37488: a3 = s1 & 0x7\n 37491: t2 = t1 >> a3\n 37494: a4 = u8 [a1 + 0x19]\n 37497: a5 = u8 [a1 + 0x18]\n 37500: s1 = u8 [a1 + 0x1a]\n 37503: a0 = u8 [a1 + 0x1b]\n 37506: a4 = a4 << 0x8\n 37509: a4 = a4 | a5\n 37512: s1 = s1 << 0x10\n 37515: a0 = a0 << 0x18\n 37518: a0 = a0 | s1\n 37521: a0 = a0 | a4\n 37524: a4 = u8 [a1 + 0x1d]\n 37527: a5 = u8 [a1 + 0x1c]\n 37530: s1 = u8 [a1 + 0x1e]\n 37533: a2 = u8 [a1 + 0x1f]\n 37536: a4 = a4 << 0x8\n 37539: a4 = a4 | a5\n 37542: s1 = s1 << 0x10\n 37545: a2 = a2 << 0x18\n 37548: a2 = a2 | s1\n 37551: a2 = a2 | a4\n 37554: a2 = a2 << 0x20\n 37557: a0 = a0 | a2\n 37560: u64 [sp + 0x138] = a0\n 37564: a0 = a0 << 0x1\n 37567: ra = a3 ^ 0x3f\n 37570: a0 = a0 << ra\n 37573: a0 = t2 | a0\n 37576: u64 [sp + 0x148] = a0\n 37580: a0 = u8 [a1 + 0x9]\n 37583: a2 = u8 [a1 + 0x8]\n 37586: a4 = u8 [a1 + 0xa]\n 37589: a5 = u8 [a1 + 0xb]\n 37592: a0 = a0 << 0x8\n 37595: a0 = a0 | a2\n 37598: a4 = a4 << 0x10\n 37601: a5 = a5 << 0x18\n 37604: a4 = a4 | a5\n 37607: a0 = a0 | a4\n 37610: a2 = u8 [a1 + 0xd]\n 37613: a4 = u8 [a1 + 0xc]\n 37616: a5 = u8 [a1 + 0xe]\n 37619: s1 = u8 [a1 + 0xf]\n 37622: a2 = a2 << 0x8\n 37625: a2 = a2 | a4\n 37628: a5 = a5 << 0x10\n 37631: s1 = s1 << 0x18\n 37634: a5 = a5 | s1\n 37637: a2 = a2 | a5\n 37640: a2 = a2 << 0x20\n 37643: t2 = a2 | a0\n 37646: a0 = t2 >> a3\n 37649: t1 = t1 << 0x1\n 37652: a2 = a3 ^ 0xffffffffffffffff\n 37655: a2 = t1 << a2\n 37658: a0 = a0 | a2\n 37661: u64 [sp + 0x140] = a0\n 37665: a2 = u8 [a1 + 0x1]\n 37668: a4 = u8 [a1]\n 37670: s1 = u8 [a1 + 0x2]\n 37673: a5 = u8 [a1 + 0x3]\n 37676: a2 = a2 << 0x8\n 37679: a2 = a2 | a4\n 37682: s1 = s1 << 0x10\n 37685: a5 = a5 << 0x18\n 37688: a5 = a5 | s1\n 37691: a2 = a2 | a5\n 37694: a4 = u8 [a1 + 0x5]\n 37697: a5 = u8 [a1 + 0x4]\n 37700: s1 = u8 [a1 + 0x6]\n 37703: a1 = u8 [a1 + 0x7]\n 37706: a4 = a4 << 0x8\n 37709: a4 = a4 | a5\n 37712: a5 = u64 [sp + 0x158]\n 37716: s1 = s1 << 0x10\n 37719: a1 = a1 << 0x18\n 37722: a1 = a1 | s1\n 37725: a1 = a1 | a4\n 37728: a1 = a1 << 0x20\n 37731: a1 = a1 | a2\n 37734: t2 = t2 << 0x1\n 37737: a2 = t2 << ra\n 37740: s1 = a1 >> a3\n 37743: t2 = s1 | a2\n 37746: a1 = u64 [sp + 0x138]\n 37750: a3 = a1 >> a3\n 37753: u64 [sp + 296] = 0x63\n 37758: u64 [sp + 288] = 0\n 37762: fallthrough\n      : @552 (gas: 89)\n 37763: u64 [sp + 0x158] = a5\n 37767: u64 [sp + 0x168] = t0\n 37771: u64 [sp + 304] = 0\n 37775: a4 = t2 >> 0x3f\n 37778: a0 = u64 [sp + 0x140]\n 37782: a5 = a0 << 0x1\n 37785: t1 = a5 | a4\n 37788: s1 = t2 << 0x1\n 37791: ra = u64 [sp + 0x190]\n 37795: a5 = ra >> 0x3f\n 37798: t0 = s1 | a5\n 37801: a5 = u64 [sp + 0x120]\n 37805: a4 = a5 ^ t1\n 37808: t2 = a5 <u t1\n 37811: a1 = u64 [sp + 0x128]\n 37815: s1 = a1 <u t0\n 37818: s1 = t2 if a4 != 0\n 37821: a3 = a3 << 0x1\n 37824: a2 = u64 [sp + 0x148]\n 37828: a4 = a2 >> 0x3f\n 37831: a3 = a3 | a4\n 37834: u64 [sp + 0x138] = a3\n 37838: a0 = a0 >> 0x3f\n 37841: a2 = a2 << 0x1\n 37844: a4 = a2 | a0\n 37847: a0 = ra << 0x1\n 37850: a1 = u64 [sp + 0x188]\n 37854: a2 = a1 >> 0x3f\n 37857: t2 = a0 | a2\n 37860: a2 = a1 << 0x1\n 37863: a0 = u64 [sp + 0x170]\n 37867: a1 = a0 >> 0x3f\n 37870: a1 = a1 | a2\n 37873: a2 = a0 << 0x1\n 37876: a0 = u64 [sp + 0x178]\n 37880: a3 = a0 >> 0x3f\n 37883: a2 = a2 | a3\n 37886: a3 = a0 << 0x1\n 37889: a0 = u64 [sp + 0x158]\n 37893: a3 = a3 | a0\n 37896: u64 [sp + 0x178] = a3\n 37900: ra = u64 [sp + 0x168]\n 37904: a3 = u64 [sp + 0x150]\n 37908: a2 = a2 | a3\n 37911: u64 [sp + 0x170] = a2\n 37915: a1 = a1 | a3\n 37918: u64 [sp + 0x188] = a1\n 37922: a0 = a3 | t2\n 37925: u64 [sp + 0x190] = a0\n 37929: a0 = a5 - a4\n 37932: a0 = a0 <u s1\n 37935: a1 = a5 <u a4\n 37938: s1 = u64 [sp + 0x138]\n 37942: a2 = a5 - s1\n 37945: a2 = a2 - a1\n 37948: a2 = a2 - a0\n 37951: a1 = a2 >>a 0x3f\n 37954: a0 = a1 & 0x64\n 37957: t2 = t0 - a0\n 37960: a3 = t0 <u a0\n 37963: a0 = t1 - a3\n 37966: u64 [sp + 0x140] = a0\n 37970: a3 = 0 if t1 != 0\n 37972: a0 = a4 - a3\n 37975: u64 [sp + 0x148] = a0\n 37979: a3 = a4 <u a3\n 37982: s1 = s1 - a3\n 37985: a5 = u64 [sp + 0x198]\n 37989: a0 = u64 [sp + 0x160]\n 37993: a4 = a5 | a0\n 37996: a4 = a4 <u 0x1\n 37999: a2 = u64 [sp + 0x180]\n 38003: a3 = a2 <u a4\n 38006: a4 = a2 - a4\n 38009: a2 = a5 <u 0x1\n 38012: a0 = a0 - a2\n 38015: ra = ra - a3\n 38018: a3 = s1\n 38020: a5 = a5 + 0xffffffffffffffff\n 38023: u64 [sp + 0x160] = a0\n 38027: t0 = ra\n 38029: a2 = a0 | ra\n 38032: u64 [sp + 0x198] = a5\n 38036: a5 = a5 | a4\n 38039: a2 = a2 | a5\n 38042: a5 = a1 & 0x1\n 38045: u64 [sp + 0x180] = a4\n 38049: u64 [sp + 336] = 0\n 38053: jump @552 if a2 != 0\n      : @553 (gas: 1)\n 38057: jump @555\n      : @554 (gas: 3)\n 38059: a5 = 0\n 38061: u64 [sp + 304] = 0\n 38065: fallthrough\n      : @555 (gas: 20)\n 38066: a2 = u64 [sp + 0x188]\n 38070: a0 = a2 >> 0x3f\n 38073: a1 = u64 [sp + 0x190]\n 38077: a1 = a1 << 0x1\n 38080: a1 = a1 | a0\n 38083: a4 = u64 [sp + 0x170]\n 38087: a0 = a4 >> 0x3f\n 38090: a2 = a2 << 0x1\n 38093: a2 = a2 | a0\n 38096: a0 = u64 [sp + 0x178]\n 38100: a3 = a0 >> 0x3f\n 38103: a4 = a4 << 0x1\n 38106: a0 = a0 << 0x1\n 38109: a0 = a0 | a5\n 38112: a5 = u64 [sp + 0x130]\n 38116: s1 = a5 | a3\n 38119: s1 = s1 | a4\n 38122: a3 = a5 | a2\n 38125: a4 = a5 | a1\n 38128: fallthrough\n      : @556 (gas: 16)\n 38129: a1 = u64 [sp + 0xf8]\n 38133: a0 = a0 <u a1\n 38136: a2 = u64 [sp + 0xf0]\n 38140: a1 = a2 ^ s1\n 38143: a2 = s1 <u a2\n 38146: a2 = a0 if a1 == 0\n 38149: a5 = u64 [sp + 0xe8]\n 38153: a0 = a3 <u a5\n 38156: a1 = u64 [sp + 0xe0]\n 38160: s1 = a1 ^ a4\n 38163: a4 = a4 <u a1\n 38166: a4 = a0 if s1 == 0\n 38169: a0 = a5 ^ a3\n 38172: a0 = a0 | s1\n 38175: a4 = a2 if a0 == 0\n 38178: jump @587 if a4 != 0\n      : @557 (gas: 19)\n 38182: i32 a0 = sp + 0x3e0\n 38186: ecalli 5 // 'caller'\n 38188: a0 = u64 [sp + 0x3e8]\n 38192: a1 = i32 [sp + 0x3f0]\n 38196: s1 = u64 [sp + 0x3e0]\n 38200: a0 = reverse a0\n 38202: a2 = a0 << 0x20\n 38205: a1 = reverse a1\n 38207: a1 = a1 >> 0x20\n 38210: a1 = a1 | a2\n 38213: u64 [sp + 0x198] = a1\n 38217: a0 = a0 >> 0x20\n 38220: a1 = reverse s1\n 38222: a1 = a1 << 0x20\n 38225: a0 = a0 | a1\n 38228: u64 [sp + 0x190] = a0\n 38232: a1 = 0x20\n 38235: a0 = 0\n 38237: ra = 490, jump @0\n      : @558 [@dyn 245] (gas: 56)\n 38244: a1 = u64 [sp + 0x190]\n 38248: a1 = reverse a1\n 38250: a2 = u64 [sp + 0x198]\n 38254: a2 = reverse a2\n 38256: a3 = s1 >> 0x18\n 38259: u8 [a0 + 0xf] = a3\n 38262: a3 = s1 >> 0x10\n 38265: u8 [a0 + 0xe] = a3\n 38268: a3 = s1 >> 0x8\n 38271: u8 [a0 + 0xd] = a3\n 38274: u8 [a0 + 0xc] = s1\n 38277: u8 [a0 + 11] = 0\n 38280: u8 [a0 + 10] = 0\n 38283: u8 [a0 + 9] = 0\n 38286: u8 [a0 + 8] = 0\n 38289: u8 [a0 + 7] = 0\n 38292: u8 [a0 + 6] = 0\n 38295: u8 [a0 + 5] = 0\n 38298: u8 [a0 + 4] = 0\n 38301: u8 [a0 + 3] = 0\n 38304: u8 [a0 + 2] = 0\n 38307: u8 [a0 + 1] = 0\n 38310: u8 [a0 + 0] = 0\n 38312: u8 [a0 + 0x18] = a2\n 38315: u8 [a0 + 0x10] = a1\n 38318: a3 = a2 >> 0x38\n 38321: u8 [a0 + 0x1f] = a3\n 38324: a3 = a2 >> 0x30\n 38327: u8 [a0 + 0x1e] = a3\n 38330: a3 = a2 >> 0x28\n 38333: u8 [a0 + 0x1d] = a3\n 38336: a3 = a2 >> 0x20\n 38339: u8 [a0 + 0x1c] = a3\n 38342: a3 = a2 >> 0x18\n 38345: u8 [a0 + 0x1b] = a3\n 38348: a3 = a2 >> 0x10\n 38351: u8 [a0 + 0x1a] = a3\n 38354: a2 = a2 >> 0x8\n 38357: u8 [a0 + 0x19] = a2\n 38360: a2 = a1 >> 0x38\n 38363: u8 [a0 + 0x17] = a2\n 38366: a2 = a1 >> 0x30\n 38369: u8 [a0 + 0x16] = a2\n 38372: a2 = a1 >> 0x28\n 38375: u8 [a0 + 0x15] = a2\n 38378: a2 = a1 >> 0x20\n 38381: u8 [a0 + 0x14] = a2\n 38384: a2 = a1 >> 0x18\n 38387: u8 [a0 + 0x13] = a2\n 38390: a2 = a1 >> 0x10\n 38393: u8 [a0 + 0x12] = a2\n 38396: a1 = a1 >> 0x8\n 38399: u8 [a0 + 0x11] = a1\n 38402: a0 = 0x20\n 38405: a1 = 0x20\n 38408: ra = 492, jump @0\n      : @559 [@dyn 246] (gas: 35)\n 38415: u8 [a0 + 31] = 0x1\n 38419: u8 [a0 + 30] = 0\n 38422: u8 [a0 + 29] = 0\n 38425: u8 [a0 + 28] = 0\n 38428: u8 [a0 + 27] = 0\n 38431: u8 [a0 + 26] = 0\n 38434: u8 [a0 + 25] = 0\n 38437: u8 [a0 + 24] = 0\n 38440: u8 [a0 + 23] = 0\n 38443: u8 [a0 + 22] = 0\n 38446: u8 [a0 + 21] = 0\n 38449: u8 [a0 + 20] = 0\n 38452: u8 [a0 + 19] = 0\n 38455: u8 [a0 + 18] = 0\n 38458: u8 [a0 + 17] = 0\n 38461: u8 [a0 + 16] = 0\n 38464: u8 [a0 + 15] = 0\n 38467: u8 [a0 + 14] = 0\n 38470: u8 [a0 + 13] = 0\n 38473: u8 [a0 + 12] = 0\n 38476: u8 [a0 + 11] = 0\n 38479: u8 [a0 + 10] = 0\n 38482: u8 [a0 + 9] = 0\n 38485: u8 [a0 + 8] = 0\n 38488: u8 [a0 + 7] = 0\n 38491: u8 [a0 + 6] = 0\n 38494: u8 [a0 + 5] = 0\n 38497: u8 [a0 + 4] = 0\n 38500: u8 [a0 + 3] = 0\n 38503: u8 [a0 + 2] = 0\n 38506: u8 [a0 + 1] = 0\n 38509: u8 [a0 + 0] = 0\n 38511: a1 = 0x40\n 38514: a0 = 0\n 38516: ra = 494, jump @0\n      : @560 [@dyn 247] (gas: 32)\n 38523: i32 a0 = a0 + 0\n 38525: i32 a2 = sp + 0x4e0\n 38529: a1 = 0x40\n 38532: ecalli 9 // 'hash_keccak_256'\n 38534: a0 = u64 [sp + 0x4f8]\n 38538: a1 = u64 [sp + 0x4f0]\n 38542: a2 = u64 [sp + 0x4e8]\n 38546: a3 = u64 [sp + 0x4e0]\n 38550: a0 = reverse a0\n 38552: a1 = reverse a1\n 38554: a2 = reverse a2\n 38556: a3 = reverse a3\n 38558: u64 [sp + 0x180] = a3\n 38562: u64 [sp + 0x4d8] = a3\n 38566: u64 [sp + 0x188] = a2\n 38570: u64 [sp + 0x4d0] = a2\n 38574: u64 [sp + 0x190] = a1\n 38578: u64 [sp + 0x4c8] = a1\n 38582: u64 [sp + 0x198] = a0\n 38586: u64 [sp + 0x4c0] = a0\n 38590: u64 [sp + 1272] = 0\n 38594: u64 [sp + 1264] = 0\n 38598: u64 [sp + 1256] = 0\n 38602: u64 [sp + 1248] = 0\n 38606: u32 [sp + 1184] = 0x20\n 38611: i32 a1 = sp + 0x4c0\n 38615: i32 a3 = sp + 0x4e0\n 38619: i32 a4 = sp + 0x4a0\n 38623: a2 = 0xffffffffffffffff\n 38626: a0 = 0\n 38628: ecalli 8 // 'get_storage'\n 38630: fallthrough\n      : @561 (gas: 39)\n 38631: a4 = u64 [sp + 0x4e8]\n 38635: a2 = u64 [sp + 0x4e0]\n 38639: t1 = u64 [sp + 0x4f8]\n 38643: s1 = u64 [sp + 0x4f0]\n 38647: a5 = u64 [sp + 0x110]\n 38651: a5 = a5 + a4\n 38654: a1 = u64 [sp + 0x118]\n 38658: a1 = a1 + a2\n 38661: u64 [sp + 0x178] = a1\n 38665: a3 = a1 <u a2\n 38668: a5 = a5 + a3\n 38671: t0 = a5 ^ a4\n 38674: u64 [sp + 0x170] = a5\n 38678: a4 = a5 <u a4\n 38681: a5 = u64 [sp + 0x108]\n 38685: a5 = a5 + s1\n 38688: a1 = u64 [sp + 0x100]\n 38692: a1 = a1 + t1\n 38695: a2 = a5 <u s1\n 38698: a1 = a1 + a2\n 38701: a2 = a3\n 38703: a2 = a4 if t0 != 0\n 38706: a0 = a5 + a2\n 38709: a2 = a0 <u a5\n 38712: a5 = a1 + a2\n 38715: a1 = a3 ^ 0x1\n 38718: a2 = a4 ^ 0x1\n 38721: a1 = a2 if t0 != 0\n 38724: a2 = a0 <u s1\n 38727: a3 = a5 ^ t1\n 38730: u64 [sp + 0x160] = a5\n 38734: a4 = a5 <u t1\n 38737: a4 = a2 if a3 == 0\n 38740: u64 [sp + 0x168] = a0\n 38744: a0 = a0 ^ s1\n 38747: a0 = a0 | a3\n 38750: a2 = a4 ^ 0x1\n 38753: a1 = a2 if a0 != 0\n 38756: jump @604 if a1 == 0\n      : @562 (gas: 41)\n 38760: a0 = u64 [sp + 0x188]\n 38764: u64 [sp + 0x4d0] = a0\n 38768: a0 = u64 [sp + 0x190]\n 38772: u64 [sp + 0x4c8] = a0\n 38776: a0 = u64 [sp + 0x198]\n 38780: u64 [sp + 0x4c0] = a0\n 38784: s1 = u64 [sp + 0x180]\n 38788: u64 [sp + 0x4d8] = s1\n 38792: u64 [sp + 1272] = 0\n 38796: u64 [sp + 1264] = 0\n 38800: u64 [sp + 1256] = 0\n 38804: u64 [sp + 1248] = 0\n 38808: u32 [sp + 1184] = 0x20\n 38813: i32 a1 = sp + 0x4c0\n 38817: i32 a3 = sp + 0x4e0\n 38821: i32 a4 = sp + 0x4a0\n 38825: a2 = 0xffffffffffffffff\n 38828: a0 = 0\n 38830: ecalli 8 // 'get_storage'\n 38832: u64 [sp + 0x4d8] = s1\n 38836: a0 = u64 [sp + 0x188]\n 38840: u64 [sp + 0x4d0] = a0\n 38844: a0 = u64 [sp + 0x190]\n 38848: u64 [sp + 0x4c8] = a0\n 38852: a0 = u64 [sp + 0x198]\n 38856: u64 [sp + 0x4c0] = a0\n 38860: a0 = u64 [sp + 0x160]\n 38864: u64 [sp + 0x4f8] = a0\n 38868: a0 = u64 [sp + 0x168]\n 38872: u64 [sp + 0x4f0] = a0\n 38876: a0 = u64 [sp + 0x170]\n 38880: u64 [sp + 0x4e8] = a0\n 38884: a0 = u64 [sp + 0x178]\n 38888: u64 [sp + 0x4e0] = a0\n 38892: i32 a1 = sp + 0x4c0\n 38896: i32 a3 = sp + 0x4e0\n 38900: a2 = 0xffffffffffffffff\n 38903: a4 = 0x20\n 38906: a0 = 0\n 38908: ecalli 15 // 'set_storage'\n 38910: fallthrough\n      : @563 (gas: 3)\n 38911: s1 = 0x20020\n 38916: a0 = i32 [0x20020]\n 38921: jump @566 if a0 == 0\n      : @564 (gas: 6)\n 38924: u64 [sp + 0x198] = a0\n 38928: a0 = 0x30030\n 38933: i32 a0 = a0 + 0\n 38935: i32 a1 = s1 + 0\n 38937: ecalli 7 // 'get_immutable_data'\n 38939: fallthrough\n      : @565 (gas: 4)\n 38940: a0 = i32 [0x20020]\n 38945: u32 [0x20020] = 0\n 38950: a1 = u64 [sp + 0x198]\n 38954: jump @599 if a0 <u a1\n      : @566 (gas: 17)\n 38958: a1 = u64 [0x30060]\n 38963: u64 [sp + 0x158] = a1\n 38967: a1 = u64 [0x30058]\n 38972: u64 [sp + 0x150] = a1\n 38976: a0 = u64 [0x30050]\n 38981: u64 [sp + 0x160] = a0\n 38985: i32 a0 = sp + 0x400\n 38989: ecalli 5 // 'caller'\n 38991: a0 = i32 [sp + 0x410]\n 38995: u64 [sp + 0x178] = a0\n 38999: a0 = u64 [sp + 0x400]\n 39003: u64 [sp + 0x170] = a0\n 39007: a0 = u64 [sp + 0x408]\n 39011: u64 [sp + 0x168] = a0\n 39015: a0 = 0x40\n 39018: a1 = 0x20\n 39021: ra = 496, jump @0\n      : @567 [@dyn 248] (gas: 102)\n 39028: a1 = u8 [a0 + 0x11]\n 39031: a2 = u8 [a0 + 0x10]\n 39034: a3 = u8 [a0 + 0x12]\n 39037: a4 = u8 [a0 + 0x13]\n 39040: a1 = a1 << 0x8\n 39043: a1 = a1 | a2\n 39046: a3 = a3 << 0x10\n 39049: a4 = a4 << 0x18\n 39052: a3 = a3 | a4\n 39055: a1 = a1 | a3\n 39058: a2 = u8 [a0 + 0x15]\n 39061: a3 = u8 [a0 + 0x14]\n 39064: a4 = u8 [a0 + 0x16]\n 39067: a5 = u8 [a0 + 0x17]\n 39070: a2 = a2 << 0x8\n 39073: a2 = a2 | a3\n 39076: a4 = a4 << 0x10\n 39079: a5 = a5 << 0x18\n 39082: a4 = a4 | a5\n 39085: a2 = a2 | a4\n 39088: a2 = a2 << 0x20\n 39091: t0 = a2 | a1\n 39094: a2 = u8 [a0 + 0x1]\n 39097: a3 = u8 [a0]\n 39099: a4 = u8 [a0 + 0x2]\n 39102: a5 = u8 [a0 + 0x3]\n 39105: a2 = a2 << 0x8\n 39108: a2 = a2 | a3\n 39111: a4 = a4 << 0x10\n 39114: a5 = a5 << 0x18\n 39117: a4 = a4 | a5\n 39120: a2 = a2 | a4\n 39123: a3 = u8 [a0 + 0x5]\n 39126: a4 = u8 [a0 + 0x4]\n 39129: a5 = u8 [a0 + 0x6]\n 39132: s1 = u8 [a0 + 0x7]\n 39135: a3 = a3 << 0x8\n 39138: a3 = a3 | a4\n 39141: a5 = a5 << 0x10\n 39144: s1 = s1 << 0x18\n 39147: a5 = a5 | s1\n 39150: a3 = a3 | a5\n 39153: a3 = a3 << 0x20\n 39156: a2 = a2 | a3\n 39159: a3 = u8 [a0 + 0x19]\n 39162: a4 = u8 [a0 + 0x18]\n 39165: a5 = u8 [a0 + 0x1a]\n 39168: s1 = u8 [a0 + 0x1b]\n 39171: a3 = a3 << 0x8\n 39174: a3 = a3 | a4\n 39177: a5 = a5 << 0x10\n 39180: s1 = s1 << 0x18\n 39183: a5 = a5 | s1\n 39186: a3 = a3 | a5\n 39189: a4 = u8 [a0 + 0x1d]\n 39192: a5 = u8 [a0 + 0x1c]\n 39195: s1 = u8 [a0 + 0x1e]\n 39198: a1 = u8 [a0 + 0x1f]\n 39201: a4 = a4 << 0x8\n 39204: a4 = a4 | a5\n 39207: s1 = s1 << 0x10\n 39210: a1 = a1 << 0x18\n 39213: a1 = a1 | s1\n 39216: a1 = a1 | a4\n 39219: a1 = a1 << 0x20\n 39222: a3 = a3 | a1\n 39225: a1 = u8 [a0 + 0x9]\n 39228: a4 = u8 [a0 + 0x8]\n 39231: a5 = u8 [a0 + 0xa]\n 39234: s1 = u8 [a0 + 0xb]\n 39237: a1 = a1 << 0x8\n 39240: a1 = a1 | a4\n 39243: a5 = a5 << 0x10\n 39246: s1 = s1 << 0x18\n 39249: a5 = a5 | s1\n 39252: a1 = a1 | a5\n 39255: a4 = u8 [a0 + 0xd]\n 39258: a5 = u8 [a0 + 0xc]\n 39261: s1 = u8 [a0 + 0xe]\n 39264: a0 = u8 [a0 + 0xf]\n 39267: a4 = a4 << 0x8\n 39270: a4 = a4 | a5\n 39273: s1 = s1 << 0x10\n 39276: a0 = a0 << 0x18\n 39279: a0 = a0 | s1\n 39282: a0 = a0 | a4\n 39285: a0 = a0 << 0x20\n 39288: a0 = a0 | a1\n 39291: s1 = reverse a0\n 39293: a3 = reverse a3\n 39295: a1 = reverse a2\n 39297: a0 = reverse t0\n 39299: u64 [sp + 0x198] = a0\n 39303: u64 [sp + 0x180] = a1\n 39307: a0 = a0 | a1\n 39310: a1 = a3 | s1\n 39313: a1 = a1 | a0\n 39316: a1 = a1 >> 0x20\n 39319: a0 = a0 | s1\n 39322: a0 = a0 << 0x20\n 39325: a0 = a0 | a1\n 39328: jump @599 if a0 != 0\n      : @568 (gas: 5)\n 39332: i32 a0 = a3 + 0\n 39334: a1 = 0x20\n 39337: u64 [sp + 0x188] = a0\n 39341: u64 [sp + 0x190] = a3\n 39345: ra = 498, jump @0\n      : @569 [@dyn 249] (gas: 45)\n 39352: u8 [a0 + 31] = 0\n 39355: u8 [a0 + 30] = 0\n 39358: u8 [a0 + 29] = 0\n 39361: u8 [a0 + 28] = 0\n 39364: u8 [a0 + 27] = 0\n 39367: u8 [a0 + 26] = 0\n 39370: u8 [a0 + 25] = 0\n 39373: u8 [a0 + 24] = 0\n 39376: u8 [a0 + 23] = 0\n 39379: u8 [a0 + 22] = 0\n 39382: u8 [a0 + 21] = 0\n 39385: u8 [a0 + 20] = 0\n 39388: u8 [a0 + 19] = 0\n 39391: u8 [a0 + 18] = 0\n 39394: u8 [a0 + 17] = 0\n 39397: u8 [a0 + 16] = 0\n 39400: u8 [a0 + 15] = 0\n 39403: u8 [a0 + 14] = 0\n 39406: u8 [a0 + 13] = 0\n 39409: u8 [a0 + 12] = 0\n 39412: u8 [a0 + 11] = 0\n 39415: u8 [a0 + 10] = 0\n 39418: u8 [a0 + 9] = 0\n 39421: u8 [a0 + 8] = 0\n 39424: u8 [a0 + 7] = 0\n 39427: u8 [a0 + 6] = 0\n 39430: u8 [a0 + 5] = 0\n 39433: u8 [a0 + 3] = 0xbb\n 39438: u8 [a0 + 2] = 0x9c\n 39443: u8 [a0 + 1] = 0x5\n 39447: u8 [a0 + 0] = 0xa9\n 39451: u64 [sp + 0x138] = s1\n 39455: a3 = u64 [sp + 0x180]\n 39459: a3 = a3 | s1\n 39462: a1 = 0x100000000\n 39472: u64 [sp + 0x140] = a1\n 39476: a1 = 0xfffffffc\n 39486: a2 = u64 [sp + 0x190]\n 39490: a1 = a2 <u a1\n 39493: a2 = u64 [sp + 0x198]\n 39497: a1 = 0 if a2 != 0\n 39499: u64 [sp + 0x148] = a3\n 39503: a1 = 0 if a3 != 0\n 39505: u8 [a0 + 4] = 0\n 39508: jump @599 if a1 == 0\n      : @570 (gas: 19)\n 39512: a0 = u64 [sp + 0x168]\n 39516: a0 = reverse a0\n 39518: a1 = a0 >> 0x20\n 39521: a2 = u64 [sp + 0x170]\n 39525: a2 = reverse a2\n 39527: a3 = a2 << 0x20\n 39530: a1 = a1 | a3\n 39533: u64 [sp + 0x170] = a1\n 39537: a0 = a0 << 0x20\n 39540: a1 = u64 [sp + 0x178]\n 39544: a1 = reverse a1\n 39546: a1 = a1 >> 0x20\n 39549: a0 = a0 | a1\n 39552: u64 [sp + 0x178] = a0\n 39556: s1 = a2 >> 0x20\n 39559: a0 = u64 [sp + 0x188]\n 39563: i32 a0 = a0 + 0x4\n 39566: a1 = 0x20\n 39569: ra = 500, jump @0\n      : @571 [@dyn 250] (gas: 64)\n 39576: a1 = reverse s1\n 39578: a2 = u64 [sp + 0x170]\n 39582: a2 = reverse a2\n 39584: a3 = u64 [sp + 0x178]\n 39588: a3 = reverse a3\n 39590: a4 = a3 >> 0x38\n 39593: u8 [a0 + 0x1f] = a4\n 39596: a4 = a3 >> 0x30\n 39599: u8 [a0 + 0x1e] = a4\n 39602: a4 = a3 >> 0x28\n 39605: u8 [a0 + 0x1d] = a4\n 39608: a4 = a3 >> 0x20\n 39611: u8 [a0 + 0x1c] = a4\n 39614: a4 = a3 >> 0x18\n 39617: u8 [a0 + 0x1b] = a4\n 39620: a4 = a3 >> 0x10\n 39623: u8 [a0 + 0x1a] = a4\n 39626: a4 = a3 >> 0x8\n 39629: u8 [a0 + 0x19] = a4\n 39632: u8 [a0 + 0x18] = a3\n 39635: u8 [a0 + 0x10] = a2\n 39638: u8 [a0 + 11] = 0\n 39641: u8 [a0 + 10] = 0\n 39644: u8 [a0 + 9] = 0\n 39647: u8 [a0 + 7] = 0\n 39650: u8 [a0 + 6] = 0\n 39653: u8 [a0 + 5] = 0\n 39656: u8 [a0 + 4] = 0\n 39659: u8 [a0 + 3] = 0\n 39662: u8 [a0 + 2] = 0\n 39665: u8 [a0 + 1] = 0\n 39668: u8 [a0 + 0] = 0\n 39670: a3 = a2 >> 0x38\n 39673: u8 [a0 + 0x17] = a3\n 39676: a3 = a2 >> 0x30\n 39679: u8 [a0 + 0x16] = a3\n 39682: a3 = a2 >> 0x28\n 39685: u8 [a0 + 0x15] = a3\n 39688: a3 = a2 >> 0x20\n 39691: u8 [a0 + 0x14] = a3\n 39694: a3 = a2 >> 0x18\n 39697: u8 [a0 + 0x13] = a3\n 39700: a3 = a2 >> 0x10\n 39703: u8 [a0 + 0x12] = a3\n 39706: a2 = a2 >> 0x8\n 39709: u8 [a0 + 0x11] = a2\n 39712: u8 [a0 + 0x8] = a1\n 39715: a2 = a1 >> 0x38\n 39718: u8 [a0 + 0xf] = a2\n 39721: a2 = a1 >> 0x30\n 39724: u8 [a0 + 0xe] = a2\n 39727: a2 = a1 >> 0x28\n 39730: u8 [a0 + 0xd] = a2\n 39733: a1 = a1 >> 0x20\n 39736: a2 = u64 [sp + 0x140]\n 39740: a2 = a2 + 0xffffffffffffffdc\n 39743: a3 = u64 [sp + 0x190]\n 39747: a2 = a3 <u a2\n 39750: a3 = u64 [sp + 0x198]\n 39754: a2 = 0 if a3 != 0\n 39756: a3 = u64 [sp + 0x148]\n 39760: a2 = 0 if a3 != 0\n 39762: u8 [a0 + 0xc] = a1\n 39765: jump @599 if a2 == 0\n      : @572 (gas: 4)\n 39769: s1 = u64 [sp + 0x188]\n 39773: i32 a0 = s1 + 0x24\n 39776: a1 = 0x20\n 39779: ra = 502, jump @0\n      : @573 [@dyn 251] (gas: 92)\n 39786: a1 = u64 [sp + 0x100]\n 39790: a1 = reverse a1\n 39792: a2 = u64 [sp + 0x108]\n 39796: a2 = reverse a2\n 39798: a3 = u64 [sp + 0x110]\n 39802: a3 = reverse a3\n 39804: a4 = u64 [sp + 0x118]\n 39808: a4 = reverse a4\n 39810: a5 = a4 >> 0x38\n 39813: u8 [a0 + 0x1f] = a5\n 39816: a5 = a4 >> 0x30\n 39819: u8 [a0 + 0x1e] = a5\n 39822: a5 = a4 >> 0x28\n 39825: u8 [a0 + 0x1d] = a5\n 39828: a5 = a4 >> 0x20\n 39831: u8 [a0 + 0x1c] = a5\n 39834: a5 = a4 >> 0x18\n 39837: u8 [a0 + 0x1b] = a5\n 39840: a5 = a4 >> 0x10\n 39843: u8 [a0 + 0x1a] = a5\n 39846: a5 = a4 >> 0x8\n 39849: u8 [a0 + 0x19] = a5\n 39852: u8 [a0 + 0x18] = a4\n 39855: u8 [a0 + 0x10] = a3\n 39858: a4 = a3 >> 0x38\n 39861: u8 [a0 + 0x17] = a4\n 39864: a4 = a3 >> 0x30\n 39867: u8 [a0 + 0x16] = a4\n 39870: a4 = a3 >> 0x28\n 39873: u8 [a0 + 0x15] = a4\n 39876: a4 = a3 >> 0x20\n 39879: u8 [a0 + 0x14] = a4\n 39882: a4 = a3 >> 0x18\n 39885: u8 [a0 + 0x13] = a4\n 39888: a4 = a3 >> 0x10\n 39891: u8 [a0 + 0x12] = a4\n 39894: a3 = a3 >> 0x8\n 39897: u8 [a0 + 0x11] = a3\n 39900: u8 [a0 + 0x8] = a2\n 39903: a3 = a2 >> 0x38\n 39906: u8 [a0 + 0xf] = a3\n 39909: a3 = a2 >> 0x30\n 39912: u8 [a0 + 0xe] = a3\n 39915: a3 = a2 >> 0x28\n 39918: u8 [a0 + 0xd] = a3\n 39921: a3 = a2 >> 0x20\n 39924: u8 [a0 + 0xc] = a3\n 39927: a3 = a2 >> 0x18\n 39930: u8 [a0 + 0xb] = a3\n 39933: a3 = a2 >> 0x10\n 39936: u8 [a0 + 0xa] = a3\n 39939: a2 = a2 >> 0x8\n 39942: u8 [a0 + 0x9] = a2\n 39945: u8 [a0] = a1\n 39947: a2 = a1 >> 0x38\n 39950: u8 [a0 + 0x7] = a2\n 39953: a2 = a1 >> 0x30\n 39956: u8 [a0 + 0x6] = a2\n 39959: a2 = a1 >> 0x28\n 39962: u8 [a0 + 0x5] = a2\n 39965: a2 = a1 >> 0x20\n 39968: u8 [a0 + 0x4] = a2\n 39971: a2 = a1 >> 0x18\n 39974: u8 [a0 + 0x3] = a2\n 39977: a2 = a1 >> 0x10\n 39980: u8 [a0 + 0x2] = a2\n 39983: a1 = a1 >> 0x8\n 39986: u8 [a0 + 0x1] = a1\n 39989: ecalli 10 // 'ref_time_left'\n 39991: a0 = u64 [sp + 0x150]\n 39995: a0 = reverse a0\n 39997: a1 = a0 << 0x20\n 40000: a2 = u64 [sp + 0x158]\n 40004: a2 = reverse a2\n 40006: a2 = a2 >> 0x20\n 40009: a1 = a1 | a2\n 40012: a2 = u64 [sp + 0x160]\n 40016: a2 = reverse a2\n 40018: a3 = a2 << 0x20\n 40021: a0 = a0 >> 0x20\n 40024: a0 = a0 | a3\n 40027: a2 = a2 >> 0x20\n 40030: u64 [sp + 0x428] = a0\n 40034: u64 [sp + 0x420] = a1\n 40038: u32 [sp + 0x430] = a2\n 40042: u64 [sp + 1112] = 0\n 40046: u64 [sp + 1104] = 0\n 40050: u64 [sp + 1096] = 0\n 40054: u64 [sp + 1088] = 0\n 40058: a1 = 0x44\n 40061: a0 = s1\n 40063: ra = 504, jump @0\n      : @574 [@dyn 252] (gas: 4)\n 40070: u64 [sp + 0x178] = a0\n 40074: a1 = 0x20\n 40077: a0 = s1\n 40079: ra = 506, jump @0\n      : @575 [@dyn 253] (gas: 31)\n 40086: u32 [sp + 1120] = 0x20\n 40091: u64 [sp + 1176] = 0xffffffffffffffff\n 40096: u64 [sp + 1168] = 0xffffffffffffffff\n 40101: u64 [sp + 1160] = 0xffffffffffffffff\n 40106: u64 [sp + 1152] = 0xffffffffffffffff\n 40111: a1 = sp + 0x420\n 40115: a1 = a1 << 0x20\n 40118: a1 = a1 >> 0x20\n 40121: a2 = 0x800000000\n 40131: s1 = a1 | a2\n 40134: a1 = sp + 0x440\n 40138: a1 = a1 << 0x20\n 40141: a1 = a1 >> 0x20\n 40144: a2 = sp + 0x480\n 40148: a2 = a2 << 0x20\n 40151: a3 = a2 | a1\n 40154: a1 = u64 [sp + 0x178]\n 40158: a1 = a1 << 0x20\n 40161: a1 = a1 >> 0x20\n 40164: a2 = 0x4400000000\n 40174: a4 = a1 | a2\n 40177: a0 = a0 << 0x20\n 40180: a0 = a0 >> 0x20\n 40183: a1 = sp + 0x460\n 40187: a1 = a1 << 0x20\n 40190: a5 = a1 | a0\n 40193: a1 = 0xffffffffffffffff\n 40196: a2 = 0xffffffffffffffff\n 40199: a0 = s1\n 40201: ecalli 1 // 'call'\n 40203: fallthrough\n      : @576 (gas: 1)\n 40204: jump @592 if a0 != 0\n      : @577 (gas: 2)\n 40208: ecalli 12 // 'return_data_size'\n 40210: fallthrough\n      : @578 (gas: 2)\n 40211: a1 = 0x20\n 40214: jump @580 if a0 >=u a1\n      : @579 (gas: 3)\n 40217: ecalli 12 // 'return_data_size'\n 40219: a1 = a0\n 40221: fallthrough\n      : @580 (gas: 27)\n 40222: a3 = u64 [sp + 0x180]\n 40226: s1 = u64 [sp + 0x198]\n 40230: a0 = a1 + 0x1f\n 40233: u64 [sp + 0x180] = a1\n 40237: a1 = a0 <u a1\n 40240: u64 [sp + 408] = 0\n 40244: a1 = a1 & 0x1\n 40247: a0 = a0 & 0xffffffffffffffe0\n 40250: a2 = u64 [sp + 0x190]\n 40254: a2 = a2 + a0\n 40257: u64 [sp + 0x190] = a2\n 40261: a0 = a2 <u a0\n 40264: s1 = s1 + a1\n 40267: s1 = s1 + a0\n 40270: a2 = s1 ^ a1\n 40273: a1 = s1 <u a1\n 40276: a1 = a0 if a2 == 0\n 40279: a0 = u64 [sp + 0x138]\n 40283: a1 = a1 + a0\n 40286: a0 = a1 <u a0\n 40289: a0 = a0 + a3\n 40292: u64 [sp + 0x178] = a1\n 40296: u64 [sp + 0x170] = a0\n 40300: a0 = a0 | a1\n 40303: a1 = s1 <u 0x1\n 40306: a1 = 0 if a0 != 0\n 40308: jump @606 if a1 == 0\n      : @581 (gas: 3)\n 40312: a0 = 0x40\n 40315: a1 = 0x20\n 40318: ra = 508, jump @0\n      : @582 [@dyn 254] (gas: 79)\n 40325: a1 = u64 [sp + 0x170]\n 40329: a1 = reverse a1\n 40331: a2 = u64 [sp + 0x178]\n 40335: a2 = reverse a2\n 40337: a3 = reverse s1\n 40339: a4 = u64 [sp + 0x190]\n 40343: a4 = reverse a4\n 40345: u8 [a0 + 0x18] = a4\n 40348: a5 = a4 >> 0x38\n 40351: u8 [a0 + 0x1f] = a5\n 40354: a5 = a4 >> 0x30\n 40357: u8 [a0 + 0x1e] = a5\n 40360: a5 = a4 >> 0x28\n 40363: u8 [a0 + 0x1d] = a5\n 40366: a5 = a4 >> 0x20\n 40369: u8 [a0 + 0x1c] = a5\n 40372: a5 = a4 >> 0x18\n 40375: u8 [a0 + 0x1b] = a5\n 40378: a5 = a4 >> 0x10\n 40381: u8 [a0 + 0x1a] = a5\n 40384: a4 = a4 >> 0x8\n 40387: u8 [a0 + 0x19] = a4\n 40390: u8 [a0 + 0x10] = a3\n 40393: a4 = a3 >> 0x38\n 40396: u8 [a0 + 0x17] = a4\n 40399: a4 = a3 >> 0x30\n 40402: u8 [a0 + 0x16] = a4\n 40405: a4 = a3 >> 0x28\n 40408: u8 [a0 + 0x15] = a4\n 40411: a4 = a3 >> 0x20\n 40414: u8 [a0 + 0x14] = a4\n 40417: a4 = a3 >> 0x18\n 40420: u8 [a0 + 0x13] = a4\n 40423: a4 = a3 >> 0x10\n 40426: u8 [a0 + 0x12] = a4\n 40429: a3 = a3 >> 0x8\n 40432: u8 [a0 + 0x11] = a3\n 40435: u8 [a0 + 0x8] = a2\n 40438: a3 = a2 >> 0x38\n 40441: u8 [a0 + 0xf] = a3\n 40444: a3 = a2 >> 0x30\n 40447: u8 [a0 + 0xe] = a3\n 40450: a3 = a2 >> 0x28\n 40453: u8 [a0 + 0xd] = a3\n 40456: a3 = a2 >> 0x20\n 40459: u8 [a0 + 0xc] = a3\n 40462: a3 = a2 >> 0x18\n 40465: u8 [a0 + 0xb] = a3\n 40468: a3 = a2 >> 0x10\n 40471: u8 [a0 + 0xa] = a3\n 40474: a2 = a2 >> 0x8\n 40477: u8 [a0 + 0x9] = a2\n 40480: u8 [a0] = a1\n 40482: a2 = a1 >> 0x38\n 40485: u8 [a0 + 0x7] = a2\n 40488: a2 = a1 >> 0x30\n 40491: u8 [a0 + 0x6] = a2\n 40494: a2 = a1 >> 0x28\n 40497: u8 [a0 + 0x5] = a2\n 40500: a2 = a1 >> 0x20\n 40503: u8 [a0 + 0x4] = a2\n 40506: a2 = a1 >> 0x18\n 40509: u8 [a0 + 0x3] = a2\n 40512: a2 = a1 >> 0x10\n 40515: u8 [a0 + 0x2] = a2\n 40518: a1 = a1 >> 0x8\n 40521: a5 = u64 [sp + 0x198]\n 40525: a2 = a5 >u 0\n 40527: a3 = u64 [sp + 0x180]\n 40531: a3 = a3 <u 0x20\n 40534: a3 = a3 ^ 0x1\n 40537: a3 = a2 if a5 != 0\n 40540: a2 = a5 >u 0\n 40542: a4 = a5 >u 0\n 40544: a4 = a2 if a5 == 0\n 40547: a2 = a5 | a5\n 40550: a4 = a3 if a2 == 0\n 40553: u8 [a0 + 0x1] = a1\n 40556: jump @600 if a4 == 0\n      : @583 (gas: 3)\n 40560: a1 = 0x20\n 40563: a0 = u64 [sp + 0x188]\n 40567: ra = 510, jump @0\n      : @584 [@dyn 255] (gas: 96)\n 40574: a1 = u8 [a0 + 0x9]\n 40577: a2 = u8 [a0 + 0x8]\n 40580: a3 = u8 [a0 + 0xa]\n 40583: a4 = u8 [a0 + 0xb]\n 40586: a1 = a1 << 0x8\n 40589: a1 = a1 | a2\n 40592: a3 = a3 << 0x10\n 40595: a4 = a4 << 0x18\n 40598: a3 = a3 | a4\n 40601: a1 = a1 | a3\n 40604: a2 = u8 [a0 + 0xd]\n 40607: a3 = u8 [a0 + 0xc]\n 40610: a4 = u8 [a0 + 0xe]\n 40613: a5 = u8 [a0 + 0xf]\n 40616: a2 = a2 << 0x8\n 40619: a2 = a2 | a3\n 40622: a4 = a4 << 0x10\n 40625: a5 = a5 << 0x18\n 40628: a4 = a4 | a5\n 40631: a2 = a2 | a4\n 40634: a2 = a2 << 0x20\n 40637: t0 = a2 | a1\n 40640: a2 = u8 [a0 + 0x1]\n 40643: a3 = u8 [a0]\n 40645: a4 = u8 [a0 + 0x2]\n 40648: a5 = u8 [a0 + 0x3]\n 40651: a2 = a2 << 0x8\n 40654: a2 = a2 | a3\n 40657: a4 = a4 << 0x10\n 40660: a5 = a5 << 0x18\n 40663: a4 = a4 | a5\n 40666: a2 = a2 | a4\n 40669: a3 = u8 [a0 + 0x5]\n 40672: a4 = u8 [a0 + 0x4]\n 40675: a5 = u8 [a0 + 0x6]\n 40678: s1 = u8 [a0 + 0x7]\n 40681: a3 = a3 << 0x8\n 40684: a3 = a3 | a4\n 40687: a5 = a5 << 0x10\n 40690: s1 = s1 << 0x18\n 40693: a5 = a5 | s1\n 40696: a3 = a3 | a5\n 40699: a3 = a3 << 0x20\n 40702: a2 = a2 | a3\n 40705: a3 = u8 [a0 + 0x19]\n 40708: a4 = u8 [a0 + 0x18]\n 40711: a5 = u8 [a0 + 0x1a]\n 40714: s1 = u8 [a0 + 0x1b]\n 40717: a3 = a3 << 0x8\n 40720: a3 = a3 | a4\n 40723: a5 = a5 << 0x10\n 40726: s1 = s1 << 0x18\n 40729: a5 = a5 | s1\n 40732: a3 = a3 | a5\n 40735: a4 = u8 [a0 + 0x1d]\n 40738: a5 = u8 [a0 + 0x1c]\n 40741: s1 = u8 [a0 + 0x1e]\n 40744: a1 = u8 [a0 + 0x1f]\n 40747: a4 = a4 << 0x8\n 40750: a4 = a4 | a5\n 40753: s1 = s1 << 0x10\n 40756: a1 = a1 << 0x18\n 40759: a1 = a1 | s1\n 40762: a1 = a1 | a4\n 40765: a1 = a1 << 0x20\n 40768: a3 = a3 | a1\n 40771: a1 = u8 [a0 + 0x11]\n 40774: a4 = u8 [a0 + 0x10]\n 40777: a5 = u8 [a0 + 0x12]\n 40780: s1 = u8 [a0 + 0x13]\n 40783: a1 = a1 << 0x8\n 40786: a1 = a1 | a4\n 40789: a5 = a5 << 0x10\n 40792: s1 = s1 << 0x18\n 40795: a5 = a5 | s1\n 40798: a1 = a1 | a5\n 40801: a4 = u8 [a0 + 0x15]\n 40804: a5 = u8 [a0 + 0x14]\n 40807: s1 = u8 [a0 + 0x16]\n 40810: a0 = u8 [a0 + 0x17]\n 40813: a4 = a4 << 0x8\n 40816: a4 = a4 | a5\n 40819: s1 = s1 << 0x10\n 40822: a0 = a0 << 0x18\n 40825: a0 = a0 | s1\n 40828: a0 = a0 | a4\n 40831: a0 = a0 << 0x20\n 40834: a0 = a0 | a1\n 40837: a1 = reverse a0\n 40839: a4 = reverse a3\n 40841: a4 = a4 <u 0x2\n 40844: a4 = 0 if a1 != 0\n 40846: a1 = t0 | a2\n 40849: a1 = reverse a1\n 40851: a4 = 0 if a1 != 0\n 40853: jump @600 if a4 == 0\n      : @585 (gas: 4)\n 40857: a0 = a0 | a2\n 40860: a1 = t0 | a3\n 40863: a0 = a0 | a1\n 40866: jump @593 if a0 == 0\n      : @586 (gas: 6)\n 40870: sp = s0 + 0xfffffffffffffae0\n 40874: ra = u64 [sp + 0x518]\n 40878: s0 = u64 [sp + 0x510]\n 40882: s1 = u64 [sp + 0x508]\n 40886: sp = sp + 0x520\n 40890: ret\n      : @587 (gas: 3)\n 40892: a0 = 0x40\n 40895: a1 = 0x20\n 40898: ra = 512, jump @0\n      : @588 [@dyn 256] (gas: 103)\n 40905: a1 = u8 [a0 + 0x11]\n 40908: a2 = u8 [a0 + 0x10]\n 40911: a3 = u8 [a0 + 0x12]\n 40914: a4 = u8 [a0 + 0x13]\n 40917: a1 = a1 << 0x8\n 40920: a1 = a1 | a2\n 40923: a3 = a3 << 0x10\n 40926: a4 = a4 << 0x18\n 40929: a3 = a3 | a4\n 40932: a1 = a1 | a3\n 40935: a2 = u8 [a0 + 0x15]\n 40938: a3 = u8 [a0 + 0x14]\n 40941: a4 = u8 [a0 + 0x16]\n 40944: a5 = u8 [a0 + 0x17]\n 40947: a2 = a2 << 0x8\n 40950: a2 = a2 | a3\n 40953: a4 = a4 << 0x10\n 40956: a5 = a5 << 0x18\n 40959: a4 = a4 | a5\n 40962: a2 = a2 | a4\n 40965: a2 = a2 << 0x20\n 40968: t0 = a2 | a1\n 40971: a2 = u8 [a0 + 0x1]\n 40974: a3 = u8 [a0]\n 40976: a4 = u8 [a0 + 0x2]\n 40979: a5 = u8 [a0 + 0x3]\n 40982: a2 = a2 << 0x8\n 40985: a2 = a2 | a3\n 40988: a4 = a4 << 0x10\n 40991: a5 = a5 << 0x18\n 40994: a4 = a4 | a5\n 40997: a2 = a2 | a4\n 41000: a3 = u8 [a0 + 0x5]\n 41003: a4 = u8 [a0 + 0x4]\n 41006: a5 = u8 [a0 + 0x6]\n 41009: s1 = u8 [a0 + 0x7]\n 41012: a3 = a3 << 0x8\n 41015: a3 = a3 | a4\n 41018: a5 = a5 << 0x10\n 41021: s1 = s1 << 0x18\n 41024: a5 = a5 | s1\n 41027: a3 = a3 | a5\n 41030: a3 = a3 << 0x20\n 41033: a2 = a2 | a3\n 41036: a3 = u8 [a0 + 0x19]\n 41039: a4 = u8 [a0 + 0x18]\n 41042: a5 = u8 [a0 + 0x1a]\n 41045: s1 = u8 [a0 + 0x1b]\n 41048: a3 = a3 << 0x8\n 41051: a3 = a3 | a4\n 41054: a5 = a5 << 0x10\n 41057: s1 = s1 << 0x18\n 41060: a5 = a5 | s1\n 41063: a3 = a3 | a5\n 41066: a4 = u8 [a0 + 0x1d]\n 41069: a5 = u8 [a0 + 0x1c]\n 41072: s1 = u8 [a0 + 0x1e]\n 41075: a1 = u8 [a0 + 0x1f]\n 41078: a4 = a4 << 0x8\n 41081: a4 = a4 | a5\n 41084: s1 = s1 << 0x10\n 41087: a1 = a1 << 0x18\n 41090: a1 = a1 | s1\n 41093: a1 = a1 | a4\n 41096: a1 = a1 << 0x20\n 41099: a3 = a3 | a1\n 41102: a1 = u8 [a0 + 0x9]\n 41105: a4 = u8 [a0 + 0x8]\n 41108: a5 = u8 [a0 + 0xa]\n 41111: s1 = u8 [a0 + 0xb]\n 41114: a1 = a1 << 0x8\n 41117: a1 = a1 | a4\n 41120: a5 = a5 << 0x10\n 41123: s1 = s1 << 0x18\n 41126: a5 = a5 | s1\n 41129: a1 = a1 | a5\n 41132: a4 = u8 [a0 + 0xd]\n 41135: a5 = u8 [a0 + 0xc]\n 41138: s1 = u8 [a0 + 0xe]\n 41141: a0 = u8 [a0 + 0xf]\n 41144: a4 = a4 << 0x8\n 41147: a4 = a4 | a5\n 41150: s1 = s1 << 0x10\n 41153: a0 = a0 << 0x18\n 41156: a0 = a0 | s1\n 41159: a0 = a0 | a4\n 41162: a0 = a0 << 0x20\n 41165: a0 = a0 | a1\n 41168: s1 = reverse a0\n 41170: a1 = reverse a3\n 41172: a2 = reverse a2\n 41174: a0 = reverse t0\n 41176: u64 [sp + 0x198] = a0\n 41180: u64 [sp + 0x190] = a2\n 41184: a0 = a0 | a2\n 41187: a2 = a1\n 41189: a1 = a1 | s1\n 41192: a1 = a1 | a0\n 41195: a1 = a1 >> 0x20\n 41198: a0 = a0 | s1\n 41201: a0 = a0 << 0x20\n 41204: a0 = a0 | a1\n 41207: jump @599 if a0 != 0\n      : @589 (gas: 5)\n 41211: u64 [sp + 0x188] = a2\n 41215: i32 a0 = a2 + 0\n 41217: a1 = 0x20\n 41220: u64 [sp + 0x180] = a0\n 41224: ra = 514, jump @0\n      : @590 [@dyn 257] (gas: 50)\n 41231: u8 [a0 + 31] = 0\n 41234: u8 [a0 + 30] = 0\n 41237: u8 [a0 + 29] = 0\n 41240: u8 [a0 + 28] = 0\n 41243: u8 [a0 + 27] = 0\n 41246: u8 [a0 + 26] = 0\n 41249: u8 [a0 + 25] = 0\n 41252: u8 [a0 + 24] = 0\n 41255: u8 [a0 + 23] = 0\n 41258: u8 [a0 + 22] = 0\n 41261: u8 [a0 + 21] = 0\n 41264: u8 [a0 + 20] = 0\n 41267: u8 [a0 + 19] = 0\n 41270: u8 [a0 + 18] = 0\n 41273: u8 [a0 + 17] = 0\n 41276: u8 [a0 + 16] = 0\n 41279: u8 [a0 + 15] = 0\n 41282: u8 [a0 + 14] = 0\n 41285: u8 [a0 + 13] = 0\n 41288: u8 [a0 + 12] = 0\n 41291: u8 [a0 + 11] = 0\n 41294: u8 [a0 + 10] = 0\n 41297: u8 [a0 + 9] = 0\n 41300: u8 [a0 + 8] = 0\n 41303: u8 [a0 + 7] = 0\n 41306: u8 [a0 + 6] = 0\n 41309: u8 [a0 + 5] = 0\n 41312: u8 [a0 + 4] = 0\n 41315: u8 [a0 + 3] = 0xa0\n 41320: u8 [a0 + 2] = 0x79\n 41324: u8 [a0 + 1] = 0xc3\n 41329: u8 [a0 + 0] = 0x8\n 41332: a1 = u64 [sp + 0x188]\n 41336: a0 = a1 + 0x4\n 41339: a1 = a0 <u a1\n 41342: a3 = u64 [sp + 0x198]\n 41346: a2 = a3 + a1\n 41349: a3 = a2 <u a3\n 41352: a3 = a1 if a1 == 0\n 41355: a3 = a3 + s1\n 41358: a1 = a3 <u s1\n 41361: a4 = u64 [sp + 0x190]\n 41365: a4 = a4 + a1\n 41368: u64 [sp + 0x1e8] = a2\n 41372: u64 [sp + 0x1e0] = a0\n 41376: u64 [sp + 0x1f0] = a3\n 41380: a0 = sp + 0x200\n 41384: a1 = sp + 0x1e0\n 41388: u64 [sp + 0x1f8] = a4\n 41392: ra = 516, jump @520\n      : @591 [@dyn 258] (gas: 5)\n 41398: a0 = u64 [sp + 0x208]\n 41402: t0 = u64 [sp + 0x218]\n 41406: t1 = u64 [sp + 0x200]\n 41410: a3 = u64 [sp + 0x210]\n 41414: jump @598\n      : @592 (gas: 1)\n 41417: ra = 518, jump @275\n      : @593 [@dyn 259] (gas: 3)\n 41423: a0 = 0x40\n 41426: a1 = 0x20\n 41429: ra = 520, jump @0\n      : @594 [@dyn 260] (gas: 103)\n 41436: a1 = u8 [a0 + 0x11]\n 41439: a2 = u8 [a0 + 0x10]\n 41442: a3 = u8 [a0 + 0x12]\n 41445: a4 = u8 [a0 + 0x13]\n 41448: a1 = a1 << 0x8\n 41451: a1 = a1 | a2\n 41454: a3 = a3 << 0x10\n 41457: a4 = a4 << 0x18\n 41460: a3 = a3 | a4\n 41463: a1 = a1 | a3\n 41466: a2 = u8 [a0 + 0x15]\n 41469: a3 = u8 [a0 + 0x14]\n 41472: a4 = u8 [a0 + 0x16]\n 41475: a5 = u8 [a0 + 0x17]\n 41478: a2 = a2 << 0x8\n 41481: a2 = a2 | a3\n 41484: a4 = a4 << 0x10\n 41487: a5 = a5 << 0x18\n 41490: a4 = a4 | a5\n 41493: a2 = a2 | a4\n 41496: a2 = a2 << 0x20\n 41499: t0 = a2 | a1\n 41502: a2 = u8 [a0 + 0x1]\n 41505: a3 = u8 [a0]\n 41507: a4 = u8 [a0 + 0x2]\n 41510: a5 = u8 [a0 + 0x3]\n 41513: a2 = a2 << 0x8\n 41516: a2 = a2 | a3\n 41519: a4 = a4 << 0x10\n 41522: a5 = a5 << 0x18\n 41525: a4 = a4 | a5\n 41528: a2 = a2 | a4\n 41531: a3 = u8 [a0 + 0x5]\n 41534: a4 = u8 [a0 + 0x4]\n 41537: a5 = u8 [a0 + 0x6]\n 41540: s1 = u8 [a0 + 0x7]\n 41543: a3 = a3 << 0x8\n 41546: a3 = a3 | a4\n 41549: a5 = a5 << 0x10\n 41552: s1 = s1 << 0x18\n 41555: a5 = a5 | s1\n 41558: a3 = a3 | a5\n 41561: a3 = a3 << 0x20\n 41564: a2 = a2 | a3\n 41567: a3 = u8 [a0 + 0x19]\n 41570: a4 = u8 [a0 + 0x18]\n 41573: a5 = u8 [a0 + 0x1a]\n 41576: s1 = u8 [a0 + 0x1b]\n 41579: a3 = a3 << 0x8\n 41582: a3 = a3 | a4\n 41585: a5 = a5 << 0x10\n 41588: s1 = s1 << 0x18\n 41591: a5 = a5 | s1\n 41594: a3 = a3 | a5\n 41597: a4 = u8 [a0 + 0x1d]\n 41600: a5 = u8 [a0 + 0x1c]\n 41603: s1 = u8 [a0 + 0x1e]\n 41606: a1 = u8 [a0 + 0x1f]\n 41609: a4 = a4 << 0x8\n 41612: a4 = a4 | a5\n 41615: s1 = s1 << 0x10\n 41618: a1 = a1 << 0x18\n 41621: a1 = a1 | s1\n 41624: a1 = a1 | a4\n 41627: a1 = a1 << 0x20\n 41630: a3 = a3 | a1\n 41633: a1 = u8 [a0 + 0x9]\n 41636: a4 = u8 [a0 + 0x8]\n 41639: a5 = u8 [a0 + 0xa]\n 41642: s1 = u8 [a0 + 0xb]\n 41645: a1 = a1 << 0x8\n 41648: a1 = a1 | a4\n 41651: a5 = a5 << 0x10\n 41654: s1 = s1 << 0x18\n 41657: a5 = a5 | s1\n 41660: a1 = a1 | a5\n 41663: a4 = u8 [a0 + 0xd]\n 41666: a5 = u8 [a0 + 0xc]\n 41669: s1 = u8 [a0 + 0xe]\n 41672: a0 = u8 [a0 + 0xf]\n 41675: a4 = a4 << 0x8\n 41678: a4 = a4 | a5\n 41681: s1 = s1 << 0x10\n 41684: a0 = a0 << 0x18\n 41687: a0 = a0 | s1\n 41690: a0 = a0 | a4\n 41693: a0 = a0 << 0x20\n 41696: a0 = a0 | a1\n 41699: s1 = reverse a0\n 41701: a1 = reverse a3\n 41703: a2 = reverse a2\n 41705: a0 = reverse t0\n 41707: u64 [sp + 0x198] = a0\n 41711: u64 [sp + 0x190] = a2\n 41715: a0 = a0 | a2\n 41718: a2 = a1\n 41720: a1 = a1 | s1\n 41723: a1 = a1 | a0\n 41726: a1 = a1 >> 0x20\n 41729: a0 = a0 | s1\n 41732: a0 = a0 << 0x20\n 41735: a0 = a0 | a1\n 41738: jump @599 if a0 != 0\n      : @595 (gas: 5)\n 41742: u64 [sp + 0x188] = a2\n 41746: i32 a0 = a2 + 0\n 41748: a1 = 0x20\n 41751: u64 [sp + 0x180] = a0\n 41755: ra = 522, jump @0\n      : @596 [@dyn 261] (gas: 50)\n 41762: u8 [a0 + 31] = 0\n 41765: u8 [a0 + 30] = 0\n 41768: u8 [a0 + 29] = 0\n 41771: u8 [a0 + 28] = 0\n 41774: u8 [a0 + 27] = 0\n 41777: u8 [a0 + 26] = 0\n 41780: u8 [a0 + 25] = 0\n 41783: u8 [a0 + 24] = 0\n 41786: u8 [a0 + 23] = 0\n 41789: u8 [a0 + 22] = 0\n 41792: u8 [a0 + 21] = 0\n 41795: u8 [a0 + 20] = 0\n 41798: u8 [a0 + 19] = 0\n 41801: u8 [a0 + 18] = 0\n 41804: u8 [a0 + 17] = 0\n 41807: u8 [a0 + 16] = 0\n 41810: u8 [a0 + 15] = 0\n 41813: u8 [a0 + 14] = 0\n 41816: u8 [a0 + 13] = 0\n 41819: u8 [a0 + 12] = 0\n 41822: u8 [a0 + 11] = 0\n 41825: u8 [a0 + 10] = 0\n 41828: u8 [a0 + 9] = 0\n 41831: u8 [a0 + 8] = 0\n 41834: u8 [a0 + 7] = 0\n 41837: u8 [a0 + 6] = 0\n 41840: u8 [a0 + 5] = 0\n 41843: u8 [a0 + 4] = 0\n 41846: u8 [a0 + 3] = 0xa0\n 41851: u8 [a0 + 2] = 0x79\n 41855: u8 [a0 + 1] = 0xc3\n 41860: u8 [a0 + 0] = 0x8\n 41863: a1 = u64 [sp + 0x188]\n 41867: a0 = a1 + 0x4\n 41870: a1 = a0 <u a1\n 41873: a3 = u64 [sp + 0x198]\n 41877: a2 = a3 + a1\n 41880: a3 = a2 <u a3\n 41883: a3 = a1 if a1 == 0\n 41886: a3 = a3 + s1\n 41889: a1 = a3 <u s1\n 41892: a4 = u64 [sp + 0x190]\n 41896: a4 = a4 + a1\n 41899: u64 [sp + 0x2a8] = a2\n 41903: u64 [sp + 0x2a0] = a0\n 41907: u64 [sp + 0x2b0] = a3\n 41911: a0 = sp + 0x2c0\n 41915: a1 = sp + 0x2a0\n 41919: u64 [sp + 0x2b8] = a4\n 41923: ra = 524, jump @528\n      : @597 [@dyn 262] (gas: 5)\n 41929: a0 = u64 [sp + 0x2c8]\n 41933: t0 = u64 [sp + 0x2d8]\n 41937: t1 = u64 [sp + 0x2c0]\n 41941: a3 = u64 [sp + 0x2d0]\n 41945: fallthrough\n      : @598 (gas: 26)\n 41946: a1 = u64 [sp + 0x198]\n 41950: a4 = a0 ^ a1\n 41953: a5 = a0 <u a1\n 41956: t2 = a1\n 41958: a2 = u64 [sp + 0x188]\n 41962: a1 = t1 <u a2\n 41965: a5 = a1 if a4 == 0\n 41968: a4 = a3 - s1\n 41971: a3 = a3 <u s1\n 41974: s1 = u64 [sp + 0x190]\n 41978: s1 = t0 - s1\n 41981: s1 = s1 - a3\n 41984: a3 = a4 <u a5\n 41987: s1 = s1 - a3\n 41990: a4 = a4 - a5\n 41993: a0 = a0 - t2\n 41996: a1 = a0 - a1\n 41999: a0 = t1 - a2\n 42002: a1 = a1 | s1\n 42005: a2 = a0 | a4\n 42008: a2 = a2 | a1\n 42011: a1 = a1 | a4\n 42014: a2 = a2 >> 0x20\n 42017: a1 = a1 << 0x20\n 42020: a1 = a1 | a2\n 42023: jump @612 if a1 == 0\n      : @599 (gas: 1)\n 42027: trap\n      : @600 (gas: 3)\n 42028: a0 = 0\n 42030: a1 = 0\n 42032: ra = 526, jump @0\n      : @601 [@dyn 263] (gas: 5)\n 42039: i32 a1 = a0 + 0\n 42041: a0 = 0x1\n 42044: a2 = 0\n 42046: ecalli 13 // 'seal_return'\n 42048: fallthrough\n      : @602 (gas: 8)\n 42049: u64 [sp + 464] = 0\n 42053: u64 [sp + 456] = 0\n 42057: u64 [sp + 448] = 0\n 42061: a0 = 0x4e487b7100000000\n 42071: a1 = sp + 0x1c0\n 42075: u64 [sp + 0x1d8] = a0\n 42079: a0 = 0\n 42081: ra = 528, jump @8\n      : @603 [@dyn 264] (gas: 8)\n 42088: u64 [sp + 440] = 0\n 42092: u64 [sp + 432] = 0\n 42096: u64 [sp + 416] = 0x11\n 42101: a0 = 0x4\n 42104: a1 = sp + 0x1a0\n 42108: u64 [sp + 424] = 0\n 42112: ra = 0x218\n 42116: jump @8\n      : @604 (gas: 8)\n 42120: u64 [sp + 592] = 0\n 42124: u64 [sp + 584] = 0\n 42128: u64 [sp + 576] = 0\n 42132: a0 = 0x4e487b7100000000\n 42142: a1 = sp + 0x240\n 42146: u64 [sp + 0x258] = a0\n 42150: a0 = 0\n 42152: ra = 530, jump @8\n      : @605 [@dyn 265] (gas: 8)\n 42159: u64 [sp + 568] = 0\n 42163: u64 [sp + 560] = 0\n 42167: u64 [sp + 544] = 0x11\n 42172: a0 = 0x4\n 42175: a1 = sp + 0x220\n 42179: u64 [sp + 552] = 0\n 42183: ra = 0x218\n 42187: jump @8\n      : @606 (gas: 8)\n 42191: u64 [sp + 656] = 0\n 42195: u64 [sp + 648] = 0\n 42199: u64 [sp + 640] = 0\n 42203: a0 = 0x4e487b7100000000\n 42213: a1 = sp + 0x280\n 42217: u64 [sp + 0x298] = a0\n 42221: a0 = 0\n 42223: ra = 532, jump @8\n      : @607 [@dyn 266] (gas: 8)\n 42230: u64 [sp + 632] = 0\n 42234: u64 [sp + 624] = 0\n 42238: u64 [sp + 608] = 0x41\n 42243: a0 = 0x4\n 42246: a1 = sp + 0x260\n 42250: u64 [sp + 616] = 0\n 42254: ra = 0x218\n 42258: jump @8\n      : @608 (gas: 8)\n 42262: u64 [sp + 912] = 0\n 42266: u64 [sp + 904] = 0\n 42270: u64 [sp + 896] = 0\n 42274: a0 = 0x4e487b7100000000\n 42284: a1 = sp + 0x380\n 42288: u64 [sp + 0x398] = a0\n 42292: a0 = 0\n 42294: ra = 534, jump @8\n      : @609 [@dyn 267] (gas: 7)\n 42301: u64 [sp + 888] = 0\n 42305: u64 [sp + 880] = 0\n 42309: u64 [sp + 864] = 0x11\n 42314: a0 = 0x4\n 42317: a1 = sp + 0x360\n 42321: u64 [sp + 872] = 0\n 42325: ra = 536, jump @8\n      : @610 [@dyn 268] (gas: 3)\n 42332: a1 = 0x24\n 42335: a0 = 0\n 42337: ra = 538, jump @0\n      : @611 [@dyn 269] (gas: 5)\n 42344: i32 a1 = a0 + 0\n 42346: a0 = 0x1\n 42349: a2 = 0x24\n 42352: ecalli 13 // 'seal_return'\n 42354: fallthrough\n      : @612 (gas: 4)\n 42355: i32 s1 = a0 + 0\n 42357: a0 = u64 [sp + 0x180]\n 42361: a1 = s1\n 42363: ra = 540, jump @0\n      : @613 [@dyn 270] (gas: 7)\n 42370: i32 a1 = a0 + 0\n 42372: a0 = 0x1\n 42375: a2 = s1\n 42377: ecalli 13 // 'seal_return'\n 42379: a0 = 0\n 42381: ra = 0x21e\n 42385: jump @10\n      : @614 [export #0: 'call'] (gas: 2)\n 42389: a0 = 0\n 42391: ra = 542, jump @10\n      : @615 [@dyn 271] [export #1: 'deploy'] (gas: 2)\n 42398: a0 = 0x1\n 42401: ra = 544, jump @10\n      : @616 [@dyn 272] (gas: 24)\n 42408: sp = sp + 0xffffffffffffffb0\n 42411: u64 [sp + 0x48] = ra\n 42414: u64 [sp + 0x40] = s0\n 42417: s0 = sp + 0x50\n 42420: sp = sp & 0xfffffffffffffff0\n 42423: t0 = u64 [a0]\n 42425: t1 = u64 [a0 + 0x8]\n 42428: a4 = u64 [a0 + 0x10]\n 42431: a0 = u64 [a0 + 0x18]\n 42434: a5 = u64 [a1]\n 42436: a2 = u64 [a1 + 0x8]\n 42439: a3 = u64 [a1 + 0x10]\n 42442: a1 = u64 [a1 + 0x18]\n 42445: u64 [sp + 0x18] = a1\n 42448: u64 [sp + 0x10] = a3\n 42451: u64 [sp + 0x8] = a2\n 42454: u64 [sp] = a5\n 42456: u64 [sp + 0x38] = a0\n 42459: u64 [sp + 0x30] = a4\n 42462: u64 [sp + 0x28] = t1\n 42465: a0 = sp + 0x20\n 42468: a1 = sp\n 42470: u64 [sp + 0x20] = t0\n 42473: ra = 546, jump @271\n      : @617 [@dyn 273] (gas: 5)\n 42479: sp = s0 + 0xffffffffffffffb0\n 42482: ra = u64 [sp + 0x48]\n 42485: s0 = u64 [sp + 0x40]\n 42488: sp = sp + 0x50\n 42491: ret\n",
						"bytecode": {
							"object": ""
						},
						"deployedBytecode": {
							"object": ""
						},
						"methodIdentifiers": {
							"COLLATERAL_FACTOR()": "17f49e05",
							"borrow(uint256)": "c5ebeaec",
							"borrowAsset()": "446456e5",
							"borrows(address)": "54a5706f",
							"collateral()": "d8dfeb45",
							"crossBorrow(uint256,bytes32)": "57a343d6",
							"deposit(uint256)": "b6b55f25",
							"deposits(address)": "fc7e286d",
							"repay(uint256)": "371fd8e6",
							"withdraw(uint256)": "2e1a7d4d"
						}
					},
					"irOptimized": "/// @use-src 1:\"contracts/LendingPool.sol\"\nobject \"LendingPool_301\" {\n    code {\n        {\n            /// @src 1:246:3369  \"contract LendingPool {...\"\n            mstore(64, memoryguard(0xc0))\n            if callvalue()\n            {\n                revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb()\n            }\n            let _1, _2 := copy_arguments_for_constructor_object_LendingPool()\n            constructor_LendingPool(_1, _2)\n            let _3 := allocate_unbounded()\n            codecopy(_3, dataoffset(\"LendingPool_301_deployed\"), datasize(\"LendingPool_301_deployed\"))\n            setimmutable(_3, \"84\", mload(128))\n            setimmutable(_3, \"87\", mload(160))\n            return(_3, datasize(\"LendingPool_301_deployed\"))\n        }\n        function allocate_unbounded() -> memPtr\n        { memPtr := mload(64) }\n        function revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb()\n        { revert(0, 0) }\n        function round_up_to_mul_of(value) -> result\n        {\n            result := and(add(value, 31), not(31))\n        }\n        function panic_error_0x41()\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x41)\n            revert(0, 0x24)\n        }\n        function finalize_allocation(memPtr, size)\n        {\n            let newFreePtr := add(memPtr, round_up_to_mul_of(size))\n            if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n            mstore(64, newFreePtr)\n        }\n        function allocate_memory(size) -> memPtr\n        {\n            memPtr := allocate_unbounded()\n            finalize_allocation(memPtr, size)\n        }\n        function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b()\n        { revert(0, 0) }\n        function cleanup_uint160(value) -> cleaned\n        {\n            cleaned := and(value, sub(shl(160, 1), 1))\n        }\n        function cleanup_address(value) -> cleaned\n        {\n            cleaned := cleanup_uint160(value)\n        }\n        function cleanup_contract_IERC20(value) -> cleaned\n        {\n            cleaned := cleanup_address(value)\n        }\n        function validator_revert_contract_IERC20(value)\n        {\n            if iszero(eq(value, cleanup_contract_IERC20(value))) { revert(0, 0) }\n        }\n        function abi_decode_contract_IERC20_fromMemory(offset, end) -> value\n        {\n            value := mload(offset)\n            validator_revert_contract_IERC20(value)\n        }\n        function abi_decode_contract_IERC20t_contract_IERC20_fromMemory(headStart, dataEnd) -> value0, value1\n        {\n            if slt(sub(dataEnd, headStart), 64)\n            {\n                revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b()\n            }\n            let offset := 0\n            value0 := abi_decode_contract_IERC20_fromMemory(add(headStart, offset), dataEnd)\n            let offset_1 := 32\n            value1 := abi_decode_contract_IERC20_fromMemory(add(headStart, offset_1), dataEnd)\n        }\n        function copy_arguments_for_constructor_object_LendingPool() -> ret_param, ret_param_1\n        {\n            let programSize := datasize(\"LendingPool_301\")\n            let argSize := sub(codesize(), programSize)\n            let memoryDataOffset := allocate_memory(argSize)\n            codecopy(memoryDataOffset, programSize, argSize)\n            ret_param, ret_param_1 := abi_decode_contract_IERC20t_contract_IERC20_fromMemory(memoryDataOffset, add(memoryDataOffset, argSize))\n        }\n        /// @ast-id 117 @src 1:694:825  \"constructor(IERC20 _collateral, IERC20 _borrowAsset) {...\"\n        function constructor_LendingPool(var_collateral_address, var_borrowAsset_address)\n        {\n            /// @src 1:771:782  \"_collateral\"\n            let _4_address := var_collateral_address\n            let expr_address := _4_address\n            /// @src 1:757:782  \"collateral  = _collateral\"\n            let _5_address := expr_address\n            mstore(128, _5_address)\n            /// @src 1:806:818  \"_borrowAsset\"\n            let _address := var_borrowAsset_address\n            let expr_113_address := _address\n            /// @src 1:792:818  \"borrowAsset = _borrowAsset\"\n            let _7_address := expr_113_address\n            mstore(160, _7_address)\n        }\n    }\n    /// @use-src 1:\"contracts/LendingPool.sol\"\n    object \"LendingPool_301_deployed\" {\n        code {\n            {\n                /// @src 1:246:3369  \"contract LendingPool {...\"\n                mstore(64, memoryguard(0x80))\n                if iszero(lt(calldatasize(), 4))\n                {\n                    let selector := shift_right_unsigned(calldataload(0))\n                    switch selector\n                    case 0x17f49e05 {\n                        external_fun_COLLATERAL_FACTOR()\n                    }\n                    case 0x2e1a7d4d { external_fun_withdraw() }\n                    case 0x371fd8e6 { external_fun_repay() }\n                    case 0x446456e5 { external_fun_borrowAsset() }\n                    case 0x54a5706f { external_fun_borrows() }\n                    case 0x57a343d6 { external_fun_crossBorrow() }\n                    case 0xb6b55f25 { external_fun_deposit() }\n                    case 0xc5ebeaec { external_fun_borrow() }\n                    case 0xd8dfeb45 { external_fun_collateral() }\n                    case 0xfc7e286d { external_fun_deposits() }\n                    default { }\n                }\n                revert_error_42b3090547df1d2001c96683413b8cf91c1b902ef5e3cb8d9f6f304cf7446f74()\n            }\n            function shift_right_unsigned(value) -> newValue\n            { newValue := shr(224, value) }\n            function allocate_unbounded() -> memPtr\n            { memPtr := mload(64) }\n            function revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb()\n            { revert(0, 0) }\n            function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b()\n            { revert(0, 0) }\n            function abi_decode(headStart, dataEnd)\n            {\n                if slt(sub(dataEnd, headStart), 0)\n                {\n                    revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b()\n                }\n            }\n            function cleanup_rational_by_1(value) -> cleaned\n            { cleaned := value }\n            function cleanup_uint256(value) -> cleaned\n            { cleaned := value }\n            function identity(value) -> ret\n            { ret := value }\n            function convert_rational_by_to_uint256(value) -> converted\n            {\n                converted := cleanup_uint256(identity(cleanup_rational_by_1(value)))\n            }\n            /// @src 1:354:400  \"uint256 public constant COLLATERAL_FACTOR = 50\"\n            function constant_COLLATERAL_FACTOR() -> ret\n            {\n                /// @src 1:398:400  \"50\"\n                let expr := 0x32\n                let _1 := convert_rational_by_to_uint256(expr)\n                ret := _1\n            }\n            /// @ast-id 90 @src 1:354:400  \"uint256 public constant COLLATERAL_FACTOR = 50\"\n            function getter_fun_COLLATERAL_FACTOR() -> ret\n            {\n                ret := constant_COLLATERAL_FACTOR()\n            }\n            /// @src 1:246:3369  \"contract LendingPool {...\"\n            function abi_encode_uint256_to_uint256(value, pos)\n            {\n                mstore(pos, cleanup_uint256(value))\n            }\n            function abi_encode_uint256(headStart, value0) -> tail\n            {\n                tail := add(headStart, 32)\n                abi_encode_uint256_to_uint256(value0, add(headStart, 0))\n            }\n            function external_fun_COLLATERAL_FACTOR()\n            {\n                if callvalue()\n                {\n                    revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb()\n                }\n                abi_decode(4, calldatasize())\n                let ret := getter_fun_COLLATERAL_FACTOR()\n                let memPos := allocate_unbounded()\n                let memEnd := abi_encode_uint256(memPos, ret)\n                return(memPos, sub(memEnd, memPos))\n            }\n            function validator_revert_uint256(value)\n            {\n                if iszero(eq(value, cleanup_uint256(value))) { revert(0, 0) }\n            }\n            function abi_decode_uint256(offset, end) -> value\n            {\n                value := calldataload(offset)\n                validator_revert_uint256(value)\n            }\n            function abi_decode_tuple_uint256(headStart, dataEnd) -> value0\n            {\n                if slt(sub(dataEnd, headStart), 32)\n                {\n                    revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b()\n                }\n                let offset := 0\n                value0 := abi_decode_uint256(add(headStart, offset), dataEnd)\n            }\n            function abi_encode_tuple(headStart) -> tail\n            { tail := add(headStart, 0) }\n            function external_fun_withdraw()\n            {\n                if callvalue()\n                {\n                    revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb()\n                }\n                let param := abi_decode_tuple_uint256(4, calldatasize())\n                fun_withdraw(param)\n                let memPos := allocate_unbounded()\n                let memEnd := abi_encode_tuple(memPos)\n                return(memPos, sub(memEnd, memPos))\n            }\n            function external_fun_repay()\n            {\n                if callvalue()\n                {\n                    revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb()\n                }\n                let param := abi_decode_tuple_uint256(4, calldatasize())\n                fun_repay(param)\n                let memPos := allocate_unbounded()\n                let memEnd := abi_encode_tuple(memPos)\n                return(memPos, sub(memEnd, memPos))\n            }\n            /// @ast-id 87 @src 1:313:348  \"IERC20 public immutable borrowAsset\"\n            function getter_fun_borrowAsset() -> rval\n            { rval := loadimmutable(\"87\") }\n            /// @src 1:246:3369  \"contract LendingPool {...\"\n            function cleanup_uint160(value) -> cleaned\n            {\n                cleaned := and(value, sub(shl(160, 1), 1))\n            }\n            function convert_uint160_to_uint160(value) -> converted\n            {\n                converted := cleanup_uint160(identity(cleanup_uint160(value)))\n            }\n            function convert_uint160_to_address(value) -> converted\n            {\n                converted := convert_uint160_to_uint160(value)\n            }\n            function convert_contract_IERC20_to_address(value) -> converted\n            {\n                converted := convert_uint160_to_address(value)\n            }\n            function abi_encode_contract_IERC20(value, pos)\n            {\n                mstore(pos, convert_contract_IERC20_to_address(value))\n            }\n            function abi_encode_tuple_contract_IERC20(headStart, value0) -> tail\n            {\n                tail := add(headStart, 32)\n                abi_encode_contract_IERC20(value0, add(headStart, 0))\n            }\n            function external_fun_borrowAsset()\n            {\n                if callvalue()\n                {\n                    revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb()\n                }\n                abi_decode(4, calldatasize())\n                let ret := getter_fun_borrowAsset()\n                let memPos := allocate_unbounded()\n                let memEnd := abi_encode_tuple_contract_IERC20(memPos, ret)\n                return(memPos, sub(memEnd, memPos))\n            }\n            function cleanup_address(value) -> cleaned\n            {\n                cleaned := cleanup_uint160(value)\n            }\n            function validator_revert_address(value)\n            {\n                if iszero(eq(value, cleanup_address(value))) { revert(0, 0) }\n            }\n            function abi_decode_address(offset, end) -> value\n            {\n                value := calldataload(offset)\n                validator_revert_address(value)\n            }\n            function abi_decode_tuple_address(headStart, dataEnd) -> value0\n            {\n                if slt(sub(dataEnd, headStart), 32)\n                {\n                    revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b()\n                }\n                let offset := 0\n                value0 := abi_decode_address(add(headStart, offset), dataEnd)\n            }\n            function convert_address_to_address(value) -> converted\n            {\n                converted := convert_uint160_to_address(value)\n            }\n            function mapping_index_access_mapping_address_uint256_of_address(slot, key) -> dataSlot\n            {\n                mstore(0, convert_address_to_address(key))\n                mstore(0x20, slot)\n                dataSlot := keccak256(0, 0x40)\n            }\n            function shift_right_unsigned_dynamic(bits, value) -> newValue\n            { newValue := shr(bits, value) }\n            function cleanup_from_storage_uint256(value) -> cleaned\n            { cleaned := value }\n            function extract_from_storage_value_dynamict_uint256(slot_value, offset) -> value\n            {\n                value := cleanup_from_storage_uint256(shift_right_unsigned_dynamic(mul(offset, 8), slot_value))\n            }\n            function read_from_storage_split_dynamic_uint256(slot, offset) -> value\n            {\n                value := extract_from_storage_value_dynamict_uint256(sload(slot), offset)\n            }\n            /// @ast-id 98 @src 1:539:581  \"mapping(address => uint256) public borrows\"\n            function getter_fun_borrows(key) -> ret\n            {\n                let slot := 1\n                let offset := 0\n                slot := mapping_index_access_mapping_address_uint256_of_address(slot, key)\n                ret := read_from_storage_split_dynamic_uint256(slot, offset)\n            }\n            /// @src 1:246:3369  \"contract LendingPool {...\"\n            function external_fun_borrows()\n            {\n                if callvalue()\n                {\n                    revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb()\n                }\n                let param := abi_decode_tuple_address(4, calldatasize())\n                let ret := getter_fun_borrows(param)\n                let memPos := allocate_unbounded()\n                let memEnd := abi_encode_uint256(memPos, ret)\n                return(memPos, sub(memEnd, memPos))\n            }\n            function cleanup_bytes32(value) -> cleaned\n            { cleaned := value }\n            function validator_revert_bytes32(value)\n            {\n                if iszero(eq(value, cleanup_bytes32(value))) { revert(0, 0) }\n            }\n            function abi_decode_bytes32(offset, end) -> value\n            {\n                value := calldataload(offset)\n                validator_revert_bytes32(value)\n            }\n            function abi_decode_uint256t_bytes32(headStart, dataEnd) -> value0, value1\n            {\n                if slt(sub(dataEnd, headStart), 64)\n                {\n                    revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b()\n                }\n                let offset := 0\n                value0 := abi_decode_uint256(add(headStart, offset), dataEnd)\n                let offset_1 := 32\n                value1 := abi_decode_bytes32(add(headStart, offset_1), dataEnd)\n            }\n            function external_fun_crossBorrow()\n            {\n                if callvalue()\n                {\n                    revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb()\n                }\n                let param, param_1 := abi_decode_uint256t_bytes32(4, calldatasize())\n                fun_crossBorrow(param, param_1)\n                let memPos := allocate_unbounded()\n                let memEnd := abi_encode_tuple(memPos)\n                return(memPos, sub(memEnd, memPos))\n            }\n            function external_fun_deposit()\n            {\n                if callvalue()\n                {\n                    revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb()\n                }\n                let param := abi_decode_tuple_uint256(4, calldatasize())\n                fun_deposit(param)\n                let memPos := allocate_unbounded()\n                let memEnd := abi_encode_tuple(memPos)\n                return(memPos, sub(memEnd, memPos))\n            }\n            function external_fun_borrow()\n            {\n                if callvalue()\n                {\n                    revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb()\n                }\n                let param := abi_decode_tuple_uint256(4, calldatasize())\n                fun_borrow(param)\n                let memPos := allocate_unbounded()\n                let memEnd := abi_encode_tuple(memPos)\n                return(memPos, sub(memEnd, memPos))\n            }\n            /// @ast-id 84 @src 1:273:307  \"IERC20 public immutable collateral\"\n            function getter_fun_collateral() -> rval\n            { rval := loadimmutable(\"84\") }\n            /// @src 1:246:3369  \"contract LendingPool {...\"\n            function external_fun_collateral()\n            {\n                if callvalue()\n                {\n                    revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb()\n                }\n                abi_decode(4, calldatasize())\n                let ret := getter_fun_collateral()\n                let memPos := allocate_unbounded()\n                let memEnd := abi_encode_tuple_contract_IERC20(memPos, ret)\n                return(memPos, sub(memEnd, memPos))\n            }\n            /// @ast-id 94 @src 1:458:501  \"mapping(address => uint256) public deposits\"\n            function getter_fun_deposits(key) -> ret\n            {\n                let slot := 0\n                let offset := 0\n                slot := mapping_index_access_mapping_address_uint256_of_address(slot, key)\n                ret := read_from_storage_split_dynamic_uint256(slot, offset)\n            }\n            /// @src 1:246:3369  \"contract LendingPool {...\"\n            function external_fun_deposits()\n            {\n                if callvalue()\n                {\n                    revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb()\n                }\n                let param := abi_decode_tuple_address(4, calldatasize())\n                let ret := getter_fun_deposits(param)\n                let memPos := allocate_unbounded()\n                let memEnd := abi_encode_uint256(memPos, ret)\n                return(memPos, sub(memEnd, memPos))\n            }\n            function revert_error_42b3090547df1d2001c96683413b8cf91c1b902ef5e3cb8d9f6f304cf7446f74()\n            { revert(0, 0) }\n            function shift_right_0_unsigned(value) -> newValue\n            { newValue := shr(0, value) }\n            function extract_from_storage_value_offset_uint256(slot_value) -> value\n            {\n                value := cleanup_from_storage_uint256(shift_right_0_unsigned(slot_value))\n            }\n            function read_from_storage_split_offset_uint256(slot) -> value\n            {\n                value := extract_from_storage_value_offset_uint256(sload(slot))\n            }\n            function cleanup_t_rational_by(value) -> cleaned\n            { cleaned := value }\n            function convert_rational_0_by_1_to_uint256(value) -> converted\n            {\n                converted := cleanup_uint256(identity(cleanup_t_rational_by(value)))\n            }\n            function array_storeLengthForEncoding_string(pos, length) -> updated_pos\n            {\n                mstore(pos, length)\n                updated_pos := add(pos, 0x20)\n            }\n            function store_literal_in_memory_813cbb911779968ec8fda0e012d191010f03e7ed84e37ad667d1ebf6689fc21d(memPtr)\n            {\n                mstore(add(memPtr, 0), \"Outstanding borrow exists\")\n            }\n            function abi_encode_stringliteral_813c(pos) -> end\n            {\n                pos := array_storeLengthForEncoding_string(pos, 25)\n                store_literal_in_memory_813cbb911779968ec8fda0e012d191010f03e7ed84e37ad667d1ebf6689fc21d(pos)\n                end := add(pos, 32)\n            }\n            function abi_encode_tuple_stringliteral_813c(headStart) -> tail\n            {\n                tail := add(headStart, 32)\n                mstore(add(headStart, 0), sub(tail, headStart))\n                tail := abi_encode_stringliteral_813c(tail)\n            }\n            function require_helper_stringliteral_813c(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := allocate_unbounded()\n                    mstore(memPtr, shl(229, 4594637))\n                    let end := abi_encode_tuple_stringliteral_813c(add(memPtr, 4))\n                    revert(memPtr, sub(end, memPtr))\n                }\n            }\n            function store_literal_in_memory_44af46024e160da774031d633432a12654226cc4b8e96011e287c1d892606f8f(memPtr)\n            {\n                mstore(add(memPtr, 0), \"Withdraw exceeds deposit\")\n            }\n            function abi_encode_stringliteral_44af(pos) -> end\n            {\n                pos := array_storeLengthForEncoding_string(pos, 24)\n                store_literal_in_memory_44af46024e160da774031d633432a12654226cc4b8e96011e287c1d892606f8f(pos)\n                end := add(pos, 32)\n            }\n            function abi_encode_tuple_stringliteral_44af(headStart) -> tail\n            {\n                tail := add(headStart, 32)\n                mstore(add(headStart, 0), sub(tail, headStart))\n                tail := abi_encode_stringliteral_44af(tail)\n            }\n            function require_helper_stringliteral_44af(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := allocate_unbounded()\n                    mstore(memPtr, shl(229, 4594637))\n                    let end := abi_encode_tuple_stringliteral_44af(add(memPtr, 4))\n                    revert(memPtr, sub(end, memPtr))\n                }\n            }\n            function panic_error_0x11()\n            {\n                mstore(0, shl(224, 0x4e487b71))\n                mstore(4, 0x11)\n                revert(0, 0x24)\n            }\n            function checked_sub_uint256(x, y) -> diff\n            {\n                x := cleanup_uint256(x)\n                y := cleanup_uint256(y)\n                diff := sub(x, y)\n                if gt(diff, x) { panic_error_0x11() }\n            }\n            function shift_left(value) -> newValue\n            { newValue := shl(0, value) }\n            function update_byte_slice_shift(value, toInsert) -> result\n            {\n                let mask := not(0)\n                toInsert := shift_left(toInsert)\n                value := and(value, not(mask))\n                result := or(value, and(toInsert, mask))\n            }\n            function convert_uint256_to_uint256(value) -> converted\n            {\n                converted := cleanup_uint256(identity(cleanup_uint256(value)))\n            }\n            function prepare_store_uint256(value) -> ret\n            { ret := value }\n            function update_storage_value_offset_uint256_to_uint256(slot, value)\n            {\n                let convertedValue := convert_uint256_to_uint256(value)\n                sstore(slot, update_byte_slice_shift(sload(slot), prepare_store_uint256(convertedValue)))\n            }\n            function round_up_to_mul_of(value) -> result\n            {\n                result := and(add(value, 31), not(31))\n            }\n            function panic_error_0x41()\n            {\n                mstore(0, shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(0, 0x24)\n            }\n            function finalize_allocation(memPtr, size)\n            {\n                let newFreePtr := add(memPtr, round_up_to_mul_of(size))\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n                mstore(64, newFreePtr)\n            }\n            function shift_left_224(value) -> newValue\n            { newValue := shl(224, value) }\n            function cleanup_bool(value) -> cleaned\n            {\n                cleaned := iszero(iszero(value))\n            }\n            function validator_revert_bool(value)\n            {\n                if iszero(eq(value, cleanup_bool(value))) { revert(0, 0) }\n            }\n            function abi_decode_t_bool_fromMemory(offset, end) -> value\n            {\n                value := mload(offset)\n                validator_revert_bool(value)\n            }\n            function abi_decode_bool_fromMemory(headStart, dataEnd) -> value0\n            {\n                if slt(sub(dataEnd, headStart), 32)\n                {\n                    revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b()\n                }\n                let offset := 0\n                value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n            }\n            function abi_encode_address(value, pos)\n            {\n                mstore(pos, cleanup_address(value))\n            }\n            function abi_encode_address_uint256(headStart, value0, value1) -> tail\n            {\n                tail := add(headStart, 64)\n                abi_encode_address(value0, add(headStart, 0))\n                abi_encode_uint256_to_uint256(value1, add(headStart, 32))\n            }\n            function revert_forward()\n            {\n                let pos := allocate_unbounded()\n                returndatacopy(pos, 0, returndatasize())\n                revert(pos, returndatasize())\n            }\n            function store_literal_in_memory_718af1fb337594ef8ce96c809dc966c89781a99c8248d472a4af6ee23c2cc56a(memPtr)\n            {\n                mstore(add(memPtr, 0), \"Withdraw transfer failed\")\n            }\n            function abi_encode_stringliteral_718af1fb337594ef8ce96c809dc966c89781a99c8248d472a4af6ee23c2cc56a(pos) -> end\n            {\n                pos := array_storeLengthForEncoding_string(pos, 24)\n                store_literal_in_memory_718af1fb337594ef8ce96c809dc966c89781a99c8248d472a4af6ee23c2cc56a(pos)\n                end := add(pos, 32)\n            }\n            function abi_encode_stringliteral_718a(headStart) -> tail\n            {\n                tail := add(headStart, 32)\n                mstore(add(headStart, 0), sub(tail, headStart))\n                tail := abi_encode_stringliteral_718af1fb337594ef8ce96c809dc966c89781a99c8248d472a4af6ee23c2cc56a(tail)\n            }\n            function require_helper_stringliteral_718a(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := allocate_unbounded()\n                    mstore(memPtr, shl(229, 4594637))\n                    let end := abi_encode_stringliteral_718a(add(memPtr, 4))\n                    revert(memPtr, sub(end, memPtr))\n                }\n            }\n            /// @ast-id 275 @src 1:2047:2474  \"function withdraw(uint256 amount) external {...\"\n            function fun_withdraw(var_amount)\n            {\n                /// @src 1:2121:2128  \"borrows\"\n                let _2_slot := 0x01\n                let expr_238_slot := _2_slot\n                /// @src 1:2129:2139  \"msg.sender\"\n                let expr := caller()\n                /// @src 1:2121:2140  \"borrows[msg.sender]\"\n                let _1 := mapping_index_access_mapping_address_uint256_of_address(expr_238_slot, expr)\n                let _2 := read_from_storage_split_offset_uint256(_1)\n                let expr_1 := _2\n                /// @src 1:2144:2145  \"0\"\n                let expr_2 := 0x00\n                /// @src 1:2121:2145  \"borrows[msg.sender] == 0\"\n                let expr_3 := eq(cleanup_uint256(expr_1), convert_rational_0_by_1_to_uint256(expr_2))\n                /// @src 1:2100:2196  \"require(...\"\n                require_helper_stringliteral_813c(expr_3)\n                /// @src 1:2227:2235  \"deposits\"\n                let _5_slot := 0x00\n                let expr_248_slot := _5_slot\n                /// @src 1:2236:2246  \"msg.sender\"\n                let expr_4 := caller()\n                /// @src 1:2227:2247  \"deposits[msg.sender]\"\n                let _3 := mapping_index_access_mapping_address_uint256_of_address(expr_248_slot, expr_4)\n                let _4 := read_from_storage_split_offset_uint256(_3)\n                let expr_5 := _4\n                /// @src 1:2251:2257  \"amount\"\n                let _5 := var_amount\n                let expr_6 := _5\n                /// @src 1:2227:2257  \"deposits[msg.sender] >= amount\"\n                let expr_7 := iszero(lt(cleanup_uint256(expr_5), cleanup_uint256(expr_6)))\n                /// @src 1:2206:2307  \"require(...\"\n                require_helper_stringliteral_44af(expr_7)\n                /// @src 1:2341:2347  \"amount\"\n                let _6 := var_amount\n                let expr_8 := _6\n                /// @src 1:2317:2325  \"deposits\"\n                let _10_slot := 0x00\n                let expr_257_slot := _10_slot\n                /// @src 1:2326:2336  \"msg.sender\"\n                let expr_9 := caller()\n                /// @src 1:2317:2337  \"deposits[msg.sender]\"\n                let _7 := mapping_index_access_mapping_address_uint256_of_address(expr_257_slot, expr_9)\n                /// @src 1:2317:2347  \"deposits[msg.sender] -= amount\"\n                let _8 := read_from_storage_split_offset_uint256(_7)\n                let expr_10 := checked_sub_uint256(_8, expr_8)\n                update_storage_value_offset_uint256_to_uint256(_7, expr_10)\n                /// @src 1:2378:2388  \"collateral\"\n                let _address := loadimmutable(\"84\")\n                let expr_265_address := _address\n                /// @src 1:2378:2397  \"collateral.transfer\"\n                let expr_266_address := convert_contract_IERC20_to_address(expr_265_address)\n                let expr_266_functionSelector := 0xa9059cbb\n                /// @src 1:2398:2408  \"msg.sender\"\n                let expr_11 := caller()\n                /// @src 1:2410:2416  \"amount\"\n                let _9 := var_amount\n                let expr_12 := _9\n                /// @src 1:2378:2417  \"collateral.transfer(msg.sender, amount)\"\n                let _10 := allocate_unbounded()\n                mstore(_10, shift_left_224(expr_266_functionSelector))\n                let _11 := abi_encode_address_uint256(add(_10, 4), expr_11, expr_12)\n                let _12 := call(gas(), expr_266_address, 0, _10, sub(_11, _10), _10, 32)\n                if iszero(_12) { revert_forward() }\n                let expr_13\n                if _12\n                {\n                    let _13 := 32\n                    if gt(_13, returndatasize()) { _13 := returndatasize() }\n                    finalize_allocation(_10, _13)\n                    expr_13 := abi_decode_bool_fromMemory(_10, add(_10, _13))\n                }\n                /// @src 1:2357:2467  \"require(...\"\n                require_helper_stringliteral_718a(expr_13)\n            }\n            /// @src 1:246:3369  \"contract LendingPool {...\"\n            function store_literal_in_memory_7f89479c4204fbf52e0ecac2b3c2a4e0352a42800729113859cefbf34a40674f(memPtr)\n            {\n                mstore(add(memPtr, 0), \"Repay exceeds borrowed amount\")\n            }\n            function abi_encode_stringliteral_7f89479c4204fbf52e0ecac2b3c2a4e0352a42800729113859cefbf34a40674f(pos) -> end\n            {\n                pos := array_storeLengthForEncoding_string(pos, 29)\n                store_literal_in_memory_7f89479c4204fbf52e0ecac2b3c2a4e0352a42800729113859cefbf34a40674f(pos)\n                end := add(pos, 32)\n            }\n            function abi_encode_stringliteral_7f89(headStart) -> tail\n            {\n                tail := add(headStart, 32)\n                mstore(add(headStart, 0), sub(tail, headStart))\n                tail := abi_encode_stringliteral_7f89479c4204fbf52e0ecac2b3c2a4e0352a42800729113859cefbf34a40674f(tail)\n            }\n            function require_helper_stringliteral_7f89(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := allocate_unbounded()\n                    mstore(memPtr, shl(229, 4594637))\n                    let end := abi_encode_stringliteral_7f89(add(memPtr, 4))\n                    revert(memPtr, sub(end, memPtr))\n                }\n            }\n            function convert_contract_LendingPool_to_address(value) -> converted\n            {\n                converted := convert_uint160_to_address(value)\n            }\n            function abi_encode_address_address_uint256(headStart, value0, value1, value2) -> tail\n            {\n                tail := add(headStart, 96)\n                abi_encode_address(value0, add(headStart, 0))\n                abi_encode_address(value1, add(headStart, 32))\n                abi_encode_uint256_to_uint256(value2, add(headStart, 64))\n            }\n            function store_literal_in_memory_e6c3b6f31e8316cdf6362b383ed26b0b5974c4130c83a39c93a2602a3e7189c1(memPtr)\n            {\n                mstore(add(memPtr, 0), \"Repay transfer failed\")\n            }\n            function abi_encode_stringliteral_e6c3b6f31e8316cdf6362b383ed26b0b5974c4130c83a39c93a2602a3e7189c1(pos) -> end\n            {\n                pos := array_storeLengthForEncoding_string(pos, 21)\n                store_literal_in_memory_e6c3b6f31e8316cdf6362b383ed26b0b5974c4130c83a39c93a2602a3e7189c1(pos)\n                end := add(pos, 32)\n            }\n            function abi_encode_stringliteral_e6c3(headStart) -> tail\n            {\n                tail := add(headStart, 32)\n                mstore(add(headStart, 0), sub(tail, headStart))\n                tail := abi_encode_stringliteral_e6c3b6f31e8316cdf6362b383ed26b0b5974c4130c83a39c93a2602a3e7189c1(tail)\n            }\n            function require_helper_stringliteral_e6c3(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := allocate_unbounded()\n                    mstore(memPtr, shl(229, 4594637))\n                    let end := abi_encode_stringliteral_e6c3(add(memPtr, 4))\n                    revert(memPtr, sub(end, memPtr))\n                }\n            }\n            /// @ast-id 231 @src 1:1639:1977  \"function repay(uint256 amount) external {...\"\n            function fun_repay(var_amount)\n            {\n                /// @src 1:1710:1717  \"borrows\"\n                let _19_slot := 0x01\n                let expr_200_slot := _19_slot\n                /// @src 1:1718:1728  \"msg.sender\"\n                let expr := caller()\n                /// @src 1:1710:1729  \"borrows[msg.sender]\"\n                let _1 := mapping_index_access_mapping_address_uint256_of_address(expr_200_slot, expr)\n                let _2 := read_from_storage_split_offset_uint256(_1)\n                let expr_1 := _2\n                /// @src 1:1733:1739  \"amount\"\n                let _3 := var_amount\n                let expr_2 := _3\n                /// @src 1:1710:1739  \"borrows[msg.sender] >= amount\"\n                let expr_3 := iszero(lt(cleanup_uint256(expr_1), cleanup_uint256(expr_2)))\n                /// @src 1:1689:1794  \"require(...\"\n                require_helper_stringliteral_7f89(expr_3)\n                /// @src 1:1827:1833  \"amount\"\n                let _4 := var_amount\n                let expr_4 := _4\n                /// @src 1:1804:1811  \"borrows\"\n                let _24_slot := 0x01\n                let expr_209_slot := _24_slot\n                /// @src 1:1812:1822  \"msg.sender\"\n                let expr_5 := caller()\n                /// @src 1:1804:1823  \"borrows[msg.sender]\"\n                let _5 := mapping_index_access_mapping_address_uint256_of_address(expr_209_slot, expr_5)\n                /// @src 1:1804:1833  \"borrows[msg.sender] -= amount\"\n                let _6 := read_from_storage_split_offset_uint256(_5)\n                let expr_6 := checked_sub_uint256(_6, expr_4)\n                update_storage_value_offset_uint256_to_uint256(_5, expr_6)\n                /// @src 1:1864:1875  \"borrowAsset\"\n                let _27_address := loadimmutable(\"87\")\n                let expr_217_address := _27_address\n                /// @src 1:1864:1888  \"borrowAsset.transferFrom\"\n                let expr_address := convert_contract_IERC20_to_address(expr_217_address)\n                let expr_functionSelector := 0x23b872dd\n                /// @src 1:1889:1899  \"msg.sender\"\n                let expr_7 := caller()\n                /// @src 1:1909:1913  \"this\"\n                let expr_223_address := address()\n                /// @src 1:1901:1914  \"address(this)\"\n                let expr_8 := convert_contract_LendingPool_to_address(expr_223_address)\n                /// @src 1:1916:1922  \"amount\"\n                let _7 := var_amount\n                let expr_9 := _7\n                /// @src 1:1864:1923  \"borrowAsset.transferFrom(msg.sender, address(this), amount)\"\n                let _8 := allocate_unbounded()\n                mstore(_8, shift_left_224(expr_functionSelector))\n                let _9 := abi_encode_address_address_uint256(add(_8, 4), expr_7, expr_8, expr_9)\n                let _10 := call(gas(), expr_address, 0, _8, sub(_9, _8), _8, 32)\n                if iszero(_10) { revert_forward() }\n                let expr_10\n                if _10\n                {\n                    let _11 := 32\n                    if gt(_11, returndatasize()) { _11 := returndatasize() }\n                    finalize_allocation(_8, _11)\n                    expr_10 := abi_decode_bool_fromMemory(_8, add(_8, _11))\n                }\n                /// @src 1:1843:1970  \"require(...\"\n                require_helper_stringliteral_e6c3(expr_10)\n            }\n            /// @src 1:246:3369  \"contract LendingPool {...\"\n            function abi_encode_bytes32(value, pos)\n            {\n                mstore(pos, cleanup_bytes32(value))\n            }\n            function abi_encode_uint256_bytes32(headStart, value0, value1) -> tail\n            {\n                tail := add(headStart, 64)\n                abi_encode_uint256_to_uint256(value0, add(headStart, 0))\n                abi_encode_bytes32(value1, add(headStart, 32))\n            }\n            /// @ast-id 300 @src 1:2957:3131  \"function crossBorrow(...\"\n            function fun_crossBorrow(var_amount, var_destParaId)\n            {\n                /// @src 1:3093:3103  \"msg.sender\"\n                let expr := caller()\n                /// @src 1:3105:3111  \"amount\"\n                let _1 := var_amount\n                let expr_1 := _1\n                /// @src 1:3113:3123  \"destParaId\"\n                let _2 := var_destParaId\n                let expr_2 := _2\n                /// @src 1:3072:3124  \"CrossBorrowRequested(msg.sender, amount, destParaId)\"\n                let _3 := 0xa496dd7765004b2bfed294b621796f809f2530120a58450b366ab7011e982abf\n                let _4 := convert_address_to_address(expr)\n                let _5 := allocate_unbounded()\n                let _6 := abi_encode_uint256_bytes32(_5, expr_1, expr_2)\n                log2(_5, sub(_6, _5), _3, _4)\n            }\n            /// @src 1:246:3369  \"contract LendingPool {...\"\n            function checked_add_uint256(x, y) -> sum\n            {\n                x := cleanup_uint256(x)\n                y := cleanup_uint256(y)\n                sum := add(x, y)\n                if gt(x, sum) { panic_error_0x11() }\n            }\n            function store_literal_in_memory_6688cb8a28c83c825d376ee3aee513c2b794dfe9908b9522640403cf6a3f042e(memPtr)\n            {\n                mstore(add(memPtr, 0), \"Collateral transfer failed\")\n            }\n            function abi_encode_stringliteral_6688(pos) -> end\n            {\n                pos := array_storeLengthForEncoding_string(pos, 26)\n                store_literal_in_memory_6688cb8a28c83c825d376ee3aee513c2b794dfe9908b9522640403cf6a3f042e(pos)\n                end := add(pos, 32)\n            }\n            function abi_encode_stringliteral(headStart) -> tail\n            {\n                tail := add(headStart, 32)\n                mstore(add(headStart, 0), sub(tail, headStart))\n                tail := abi_encode_stringliteral_6688(tail)\n            }\n            function require_helper_stringliteral(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := allocate_unbounded()\n                    mstore(memPtr, shl(229, 4594637))\n                    let end := abi_encode_stringliteral(add(memPtr, 4))\n                    revert(memPtr, sub(end, memPtr))\n                }\n            }\n            /// @ast-id 145 @src 1:880:1110  \"function deposit(uint256 amount) external {...\"\n            function fun_deposit(var_amount)\n            {\n                /// @src 1:956:962  \"amount\"\n                let _1 := var_amount\n                let expr := _1\n                /// @src 1:932:940  \"deposits\"\n                let _slot := 0x00\n                let expr_123_slot := _slot\n                /// @src 1:941:951  \"msg.sender\"\n                let expr_1 := caller()\n                /// @src 1:932:952  \"deposits[msg.sender]\"\n                let _2 := mapping_index_access_mapping_address_uint256_of_address(expr_123_slot, expr_1)\n                /// @src 1:932:962  \"deposits[msg.sender] += amount\"\n                let _3 := read_from_storage_split_offset_uint256(_2)\n                let expr_2 := checked_add_uint256(_3, expr)\n                update_storage_value_offset_uint256_to_uint256(_2, expr_2)\n                /// @src 1:993:1003  \"collateral\"\n                let _43_address := loadimmutable(\"84\")\n                let expr_131_address := _43_address\n                /// @src 1:993:1016  \"collateral.transferFrom\"\n                let expr_132_address := convert_contract_IERC20_to_address(expr_131_address)\n                let expr_132_functionSelector := 0x23b872dd\n                /// @src 1:1017:1027  \"msg.sender\"\n                let expr_3 := caller()\n                /// @src 1:1037:1041  \"this\"\n                let expr_137_address := address()\n                /// @src 1:1029:1042  \"address(this)\"\n                let expr_4 := convert_contract_LendingPool_to_address(expr_137_address)\n                /// @src 1:1044:1050  \"amount\"\n                let _4 := var_amount\n                let expr_5 := _4\n                /// @src 1:993:1051  \"collateral.transferFrom(msg.sender, address(this), amount)\"\n                let _5 := allocate_unbounded()\n                mstore(_5, shift_left_224(expr_132_functionSelector))\n                let _6 := abi_encode_address_address_uint256(add(_5, 4), expr_3, expr_4, expr_5)\n                let _7 := call(gas(), expr_132_address, 0, _5, sub(_6, _5), _5, 32)\n                if iszero(_7) { revert_forward() }\n                let expr_6\n                if _7\n                {\n                    let _8 := 32\n                    if gt(_8, returndatasize()) { _8 := returndatasize() }\n                    finalize_allocation(_5, _8)\n                    expr_6 := abi_decode_bool_fromMemory(_5, add(_5, _8))\n                }\n                /// @src 1:972:1103  \"require(...\"\n                require_helper_stringliteral(expr_6)\n            }\n            /// @src 1:246:3369  \"contract LendingPool {...\"\n            function checked_mul_uint256(x, y) -> product\n            {\n                x := cleanup_uint256(x)\n                y := cleanup_uint256(y)\n                let product_raw := mul(x, y)\n                product := cleanup_uint256(product_raw)\n                if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n            }\n            function cleanup_rational_by(value) -> cleaned\n            { cleaned := value }\n            function convert_t_rational_by_to_t_uint256(value) -> converted\n            {\n                converted := cleanup_uint256(identity(cleanup_rational_by(value)))\n            }\n            function panic_error_0x12()\n            {\n                mstore(0, shl(224, 0x4e487b71))\n                mstore(4, 0x12)\n                revert(0, 0x24)\n            }\n            function checked_div_uint256(x, y) -> r\n            {\n                x := cleanup_uint256(x)\n                y := cleanup_uint256(y)\n                if iszero(y) { panic_error_0x12() }\n                r := div(x, y)\n            }\n            function store_literal_in_memory_d15233e36f8cdab5470509225517a9223a9294312faa5e1e9c9b91c200a4d10d(memPtr)\n            {\n                mstore(add(memPtr, 0), \"Exceeds collateral factor\")\n            }\n            function abi_encode_stringliteral_d152(pos) -> end\n            {\n                pos := array_storeLengthForEncoding_string(pos, 25)\n                store_literal_in_memory_d15233e36f8cdab5470509225517a9223a9294312faa5e1e9c9b91c200a4d10d(pos)\n                end := add(pos, 32)\n            }\n            function abi_encode_tuple_stringliteral_d152(headStart) -> tail\n            {\n                tail := add(headStart, 32)\n                mstore(add(headStart, 0), sub(tail, headStart))\n                tail := abi_encode_stringliteral_d152(tail)\n            }\n            function require_helper_stringliteral_d152(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := allocate_unbounded()\n                    mstore(memPtr, shl(229, 4594637))\n                    let end := abi_encode_tuple_stringliteral_d152(add(memPtr, 4))\n                    revert(memPtr, sub(end, memPtr))\n                }\n            }\n            function store_literal_in_memory_6efe5333371c4bc0463f6cf9de06313792174a2b8dc0e34950938284936deb62(memPtr)\n            {\n                mstore(add(memPtr, 0), \"Borrow transfer failed\")\n            }\n            function abi_encode_stringliteral_6efe5333371c4bc0463f6cf9de06313792174a2b8dc0e34950938284936deb62(pos) -> end\n            {\n                pos := array_storeLengthForEncoding_string(pos, 22)\n                store_literal_in_memory_6efe5333371c4bc0463f6cf9de06313792174a2b8dc0e34950938284936deb62(pos)\n                end := add(pos, 32)\n            }\n            function abi_encode_stringliteral_6efe(headStart) -> tail\n            {\n                tail := add(headStart, 32)\n                mstore(add(headStart, 0), sub(tail, headStart))\n                tail := abi_encode_stringliteral_6efe5333371c4bc0463f6cf9de06313792174a2b8dc0e34950938284936deb62(tail)\n            }\n            function require_helper_stringliteral_6efe(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := allocate_unbounded()\n                    mstore(memPtr, shl(229, 4594637))\n                    let end := abi_encode_stringliteral_6efe(add(memPtr, 4))\n                    revert(memPtr, sub(end, memPtr))\n                }\n            }\n            /// @ast-id 193 @src 1:1188:1595  \"function borrow(uint256 amount) external {...\"\n            function fun_borrow(var_amount)\n            {\n                /// @src 1:1260:1268  \"deposits\"\n                let _49_slot := 0x00\n                let expr_slot := _49_slot\n                /// @src 1:1269:1279  \"msg.sender\"\n                let expr := caller()\n                /// @src 1:1260:1280  \"deposits[msg.sender]\"\n                let _1 := mapping_index_access_mapping_address_uint256_of_address(expr_slot, expr)\n                let _2 := read_from_storage_split_offset_uint256(_1)\n                let expr_1 := _2\n                /// @src 1:1283:1300  \"COLLATERAL_FACTOR\"\n                let expr_2 := constant_COLLATERAL_FACTOR()\n                /// @src 1:1260:1300  \"deposits[msg.sender] * COLLATERAL_FACTOR\"\n                let expr_3 := checked_mul_uint256(expr_1, expr_2)\n                /// @src 1:1259:1301  \"(deposits[msg.sender] * COLLATERAL_FACTOR)\"\n                let expr_4 := expr_3\n                /// @src 1:1304:1307  \"100\"\n                let expr_5 := 0x64\n                /// @src 1:1259:1307  \"(deposits[msg.sender] * COLLATERAL_FACTOR) / 100\"\n                let expr_6 := checked_div_uint256(expr_4, convert_t_rational_by_to_t_uint256(expr_5))\n                /// @src 1:1239:1307  \"uint256 maxBorrow = (deposits[msg.sender] * COLLATERAL_FACTOR) / 100\"\n                let var_maxBorrow := expr_6\n                /// @src 1:1338:1345  \"borrows\"\n                let _52_slot := 0x01\n                let expr_164_slot := _52_slot\n                /// @src 1:1346:1356  \"msg.sender\"\n                let expr_7 := caller()\n                /// @src 1:1338:1357  \"borrows[msg.sender]\"\n                let _3 := mapping_index_access_mapping_address_uint256_of_address(expr_164_slot, expr_7)\n                let _4 := read_from_storage_split_offset_uint256(_3)\n                let expr_8 := _4\n                /// @src 1:1360:1366  \"amount\"\n                let _5 := var_amount\n                let expr_9 := _5\n                /// @src 1:1338:1366  \"borrows[msg.sender] + amount\"\n                let expr_10 := checked_add_uint256(expr_8, expr_9)\n                /// @src 1:1370:1379  \"maxBorrow\"\n                let _6 := var_maxBorrow\n                let expr_11 := _6\n                /// @src 1:1338:1379  \"borrows[msg.sender] + amount <= maxBorrow\"\n                let expr_12 := iszero(gt(cleanup_uint256(expr_10), cleanup_uint256(expr_11)))\n                /// @src 1:1317:1430  \"require(...\"\n                require_helper_stringliteral_d152(expr_12)\n                /// @src 1:1463:1469  \"amount\"\n                let _7 := var_amount\n                let expr_13 := _7\n                /// @src 1:1440:1447  \"borrows\"\n                let _58_slot := 0x01\n                let expr_175_slot := _58_slot\n                /// @src 1:1448:1458  \"msg.sender\"\n                let expr_14 := caller()\n                /// @src 1:1440:1459  \"borrows[msg.sender]\"\n                let _8 := mapping_index_access_mapping_address_uint256_of_address(expr_175_slot, expr_14)\n                /// @src 1:1440:1469  \"borrows[msg.sender] += amount\"\n                let _9 := read_from_storage_split_offset_uint256(_8)\n                let expr_15 := checked_add_uint256(_9, expr_13)\n                update_storage_value_offset_uint256_to_uint256(_8, expr_15)\n                /// @src 1:1500:1511  \"borrowAsset\"\n                let _61_address := loadimmutable(\"87\")\n                let expr_183_address := _61_address\n                /// @src 1:1500:1520  \"borrowAsset.transfer\"\n                let expr_184_address := convert_contract_IERC20_to_address(expr_183_address)\n                let expr_184_functionSelector := 0xa9059cbb\n                /// @src 1:1521:1531  \"msg.sender\"\n                let expr_16 := caller()\n                /// @src 1:1533:1539  \"amount\"\n                let _10 := var_amount\n                let expr_17 := _10\n                /// @src 1:1500:1540  \"borrowAsset.transfer(msg.sender, amount)\"\n                let _11 := allocate_unbounded()\n                mstore(_11, shift_left_224(expr_184_functionSelector))\n                let _12 := abi_encode_address_uint256(add(_11, 4), expr_16, expr_17)\n                let _13 := call(gas(), expr_184_address, 0, _11, sub(_12, _11), _11, 32)\n                if iszero(_13) { revert_forward() }\n                let expr_18\n                if _13\n                {\n                    let _14 := 32\n                    if gt(_14, returndatasize()) { _14 := returndatasize() }\n                    finalize_allocation(_11, _14)\n                    expr_18 := abi_decode_bool_fromMemory(_11, add(_11, _14))\n                }\n                /// @src 1:1479:1588  \"require(...\"\n                require_helper_stringliteral_6efe(expr_18)\n            }\n        }\n        data \".metadata\" hex\"a2646970667358221220c400be7006688e4eabc90e2fda3e9166b70016d6c3e3786ec0928ae12f9c2aee64736f6c634300081c0033\"\n    }\n}\n",
					"hash": "82d09962c954ed2cf7bf2cdaaa97fa9f27d41ae23f47706bc3fe7d4132b901e7",
					"factoryDependencies": {}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"id": 0,
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						]
					},
					"id": 78,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:0",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 77,
							"linearizedBaseContracts": [
								77
							],
							"name": "IERC20",
							"nameLocation": "214:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 11,
									"name": "Transfer",
									"nameLocation": "396:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "405:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "427:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "447:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:0"
									},
									"src": "390:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 20,
									"name": "Approval",
									"nameLocation": "627:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "636:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "659:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 18,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "684:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 17,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:0"
									},
									"src": "621:78:0"
								},
								{
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:0",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "821:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 23,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:0"
									},
									"scope": 77,
									"src": "775:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:0",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 34,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "931:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "971:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:0"
									},
									"scope": 77,
									"src": "912:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:0",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1222:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1234:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1267:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:0"
									},
									"scope": 77,
									"src": "1204:69:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 54,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1567:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1582:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:0"
									},
									"returnParameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1622:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:0"
									},
									"scope": 77,
									"src": "1548:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:0",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 64,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2326:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2343:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2376:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 61,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:0"
									},
									"scope": 77,
									"src": "2309:73:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:0",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 76,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2712:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2726:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2738:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 70,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2771:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 73,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:0"
									},
									"scope": 77,
									"src": "2690:87:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 78,
							"src": "204:2575:0",
							"usedErrors": [],
							"usedEvents": [
								11,
								20
							]
						}
					],
					"src": "106:2674:0"
				}
			},
			"contracts/LendingPool.sol": {
				"id": 1,
				"ast": {
					"absolutePath": "contracts/LendingPool.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						],
						"LendingPool": [
							301
						]
					},
					"id": 302,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 79,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".18"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 80,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 302,
							"sourceUnit": 78,
							"src": "58:56:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "LendingPool",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 81,
								"nodeType": "StructuredDocumentation",
								"src": "116:130:1",
								"text": "@notice Minimal hackathon‐style lending pool\n @dev Single‐collateral, fixed 50% collateral factor, no interest accrual"
							},
							"fullyImplemented": true,
							"id": 301,
							"linearizedBaseContracts": [
								301
							],
							"name": "LendingPool",
							"nameLocation": "255:11:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "d8dfeb45",
									"id": 84,
									"mutability": "immutable",
									"name": "collateral",
									"nameLocation": "297:10:1",
									"nodeType": "VariableDeclaration",
									"scope": 301,
									"src": "273:34:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$77",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 83,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 82,
											"name": "IERC20",
											"nameLocations": [
												"273:6:1"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 77,
											"src": "273:6:1"
										},
										"referencedDeclaration": 77,
										"src": "273:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$77",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "446456e5",
									"id": 87,
									"mutability": "immutable",
									"name": "borrowAsset",
									"nameLocation": "337:11:1",
									"nodeType": "VariableDeclaration",
									"scope": 301,
									"src": "313:35:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$77",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 86,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 85,
											"name": "IERC20",
											"nameLocations": [
												"313:6:1"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 77,
											"src": "313:6:1"
										},
										"referencedDeclaration": 77,
										"src": "313:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$77",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "17f49e05",
									"id": 90,
									"mutability": "constant",
									"name": "COLLATERAL_FACTOR",
									"nameLocation": "378:17:1",
									"nodeType": "VariableDeclaration",
									"scope": 301,
									"src": "354:46:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 88,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "354:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3530",
										"id": 89,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "398:2:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_50_by_1",
											"typeString": "int_const 50"
										},
										"value": "50"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "fc7e286d",
									"id": 94,
									"mutability": "mutable",
									"name": "deposits",
									"nameLocation": "493:8:1",
									"nodeType": "VariableDeclaration",
									"scope": 301,
									"src": "458:43:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 93,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 91,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "466:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "458:27:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 92,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "477:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "54a5706f",
									"id": 98,
									"mutability": "mutable",
									"name": "borrows",
									"nameLocation": "574:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 301,
									"src": "539:42:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 97,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 95,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "547:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "539:27:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 96,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "558:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 116,
										"nodeType": "Block",
										"src": "747:78:1",
										"statements": [
											{
												"expression": {
													"id": 110,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 108,
														"name": "collateral",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "757:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$77",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 109,
														"name": "_collateral",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 102,
														"src": "771:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$77",
															"typeString": "contract IERC20"
														}
													},
													"src": "757:25:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"id": 111,
												"nodeType": "ExpressionStatement",
												"src": "757:25:1"
											},
											{
												"expression": {
													"id": 114,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 112,
														"name": "borrowAsset",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 87,
														"src": "792:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$77",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 113,
														"name": "_borrowAsset",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 105,
														"src": "806:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$77",
															"typeString": "contract IERC20"
														}
													},
													"src": "792:26:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"id": 115,
												"nodeType": "ExpressionStatement",
												"src": "792:26:1"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "588:101:1",
										"text": "@param _collateral   ERC20 used as collateral\n @param _borrowAsset  ERC20 users can borrow"
									},
									"id": 117,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 102,
												"mutability": "mutable",
												"name": "_collateral",
												"nameLocation": "713:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 117,
												"src": "706:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 101,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 100,
														"name": "IERC20",
														"nameLocations": [
															"706:6:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "706:6:1"
													},
													"referencedDeclaration": 77,
													"src": "706:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 105,
												"mutability": "mutable",
												"name": "_borrowAsset",
												"nameLocation": "733:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 117,
												"src": "726:19:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 104,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 103,
														"name": "IERC20",
														"nameLocations": [
															"726:6:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "726:6:1"
													},
													"referencedDeclaration": 77,
													"src": "726:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "705:41:1"
									},
									"returnParameters": {
										"id": 107,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "747:0:1"
									},
									"scope": 301,
									"src": "694:131:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 144,
										"nodeType": "Block",
										"src": "922:188:1",
										"statements": [
											{
												"expression": {
													"id": 128,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 123,
															"name": "deposits",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 94,
															"src": "932:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 126,
														"indexExpression": {
															"expression": {
																"id": 124,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "941:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 125,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "945:6:1",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "941:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "932:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 127,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 120,
														"src": "956:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "932:30:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 129,
												"nodeType": "ExpressionStatement",
												"src": "932:30:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 133,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1017:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 134,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1021:6:1",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1017:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 137,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "1037:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_LendingPool_$301",
																				"typeString": "contract LendingPool"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_LendingPool_$301",
																				"typeString": "contract LendingPool"
																			}
																		],
																		"id": 136,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1029:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 135,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "1029:7:1",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 138,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1029:13:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 139,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 120,
																	"src": "1044:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 131,
																	"name": "collateral",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 84,
																	"src": "993:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 132,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1004:12:1",
																"memberName": "transferFrom",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 76,
																"src": "993:23:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256) external returns (bool)"
																}
															},
															"id": 140,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "993:58:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "436f6c6c61746572616c207472616e73666572206661696c6564",
															"id": 141,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1065:28:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6688cb8a28c83c825d376ee3aee513c2b794dfe9908b9522640403cf6a3f042e",
																"typeString": "literal_string \"Collateral transfer failed\""
															},
															"value": "Collateral transfer failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6688cb8a28c83c825d376ee3aee513c2b794dfe9908b9522640403cf6a3f042e",
																"typeString": "literal_string \"Collateral transfer failed\""
															}
														],
														"id": 130,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "972:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 142,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "972:131:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 143,
												"nodeType": "ExpressionStatement",
												"src": "972:131:1"
											}
										]
									},
									"documentation": {
										"id": 118,
										"nodeType": "StructuredDocumentation",
										"src": "831:44:1",
										"text": "@notice Deposit collateral into the pool"
									},
									"functionSelector": "b6b55f25",
									"id": 145,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "deposit",
									"nameLocation": "889:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 120,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "905:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 145,
												"src": "897:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 119,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "897:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "896:16:1"
									},
									"returnParameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "922:0:1"
									},
									"scope": 301,
									"src": "880:230:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 192,
										"nodeType": "Block",
										"src": "1229:366:1",
										"statements": [
											{
												"assignments": [
													152
												],
												"declarations": [
													{
														"constant": false,
														"id": 152,
														"mutability": "mutable",
														"name": "maxBorrow",
														"nameLocation": "1247:9:1",
														"nodeType": "VariableDeclaration",
														"scope": 192,
														"src": "1239:17:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 151,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1239:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 162,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 161,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 158,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 153,
																		"name": "deposits",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 94,
																		"src": "1260:8:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 156,
																	"indexExpression": {
																		"expression": {
																			"id": 154,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "1269:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 155,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1273:6:1",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "1269:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1260:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 157,
																	"name": "COLLATERAL_FACTOR",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 90,
																	"src": "1283:17:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1260:40:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 159,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1259:42:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "313030",
														"id": 160,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1304:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100_by_1",
															"typeString": "int_const 100"
														},
														"value": "100"
													},
													"src": "1259:48:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1239:68:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 171,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 169,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 164,
																		"name": "borrows",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 98,
																		"src": "1338:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 167,
																	"indexExpression": {
																		"expression": {
																			"id": 165,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "1346:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 166,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1350:6:1",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "1346:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1338:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 168,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 148,
																	"src": "1360:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1338:28:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 170,
																"name": "maxBorrow",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 152,
																"src": "1370:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1338:41:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4578636565647320636f6c6c61746572616c20666163746f72",
															"id": 172,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1393:27:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d15233e36f8cdab5470509225517a9223a9294312faa5e1e9c9b91c200a4d10d",
																"typeString": "literal_string \"Exceeds collateral factor\""
															},
															"value": "Exceeds collateral factor"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d15233e36f8cdab5470509225517a9223a9294312faa5e1e9c9b91c200a4d10d",
																"typeString": "literal_string \"Exceeds collateral factor\""
															}
														],
														"id": 163,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1317:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 173,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1317:113:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 174,
												"nodeType": "ExpressionStatement",
												"src": "1317:113:1"
											},
											{
												"expression": {
													"id": 180,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 175,
															"name": "borrows",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 98,
															"src": "1440:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 178,
														"indexExpression": {
															"expression": {
																"id": 176,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1448:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 177,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1452:6:1",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1448:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1440:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 179,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 148,
														"src": "1463:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1440:29:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 181,
												"nodeType": "ExpressionStatement",
												"src": "1440:29:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 185,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1521:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 186,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1525:6:1",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1521:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 187,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 148,
																	"src": "1533:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 183,
																	"name": "borrowAsset",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 87,
																	"src": "1500:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 184,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1512:8:1",
																"memberName": "transfer",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 44,
																"src": "1500:20:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,uint256) external returns (bool)"
																}
															},
															"id": 188,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1500:40:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "426f72726f77207472616e73666572206661696c6564",
															"id": 189,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1554:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6efe5333371c4bc0463f6cf9de06313792174a2b8dc0e34950938284936deb62",
																"typeString": "literal_string \"Borrow transfer failed\""
															},
															"value": "Borrow transfer failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6efe5333371c4bc0463f6cf9de06313792174a2b8dc0e34950938284936deb62",
																"typeString": "literal_string \"Borrow transfer failed\""
															}
														],
														"id": 182,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1479:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 190,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1479:109:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 191,
												"nodeType": "ExpressionStatement",
												"src": "1479:109:1"
											}
										]
									},
									"documentation": {
										"id": 146,
										"nodeType": "StructuredDocumentation",
										"src": "1116:67:1",
										"text": "@notice Borrow up to COLLATERAL_FACTOR% of your deposited value"
									},
									"functionSelector": "c5ebeaec",
									"id": 193,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "borrow",
									"nameLocation": "1197:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 149,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 148,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1212:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "1204:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 147,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1204:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1203:16:1"
									},
									"returnParameters": {
										"id": 150,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1229:0:1"
									},
									"scope": 301,
									"src": "1188:407:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 230,
										"nodeType": "Block",
										"src": "1679:298:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 205,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 200,
																	"name": "borrows",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 98,
																	"src": "1710:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 203,
																"indexExpression": {
																	"expression": {
																		"id": 201,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1718:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 202,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1722:6:1",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1718:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1710:19:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 204,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 196,
																"src": "1733:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1710:29:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265706179206578636565647320626f72726f77656420616d6f756e74",
															"id": 206,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1753:31:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7f89479c4204fbf52e0ecac2b3c2a4e0352a42800729113859cefbf34a40674f",
																"typeString": "literal_string \"Repay exceeds borrowed amount\""
															},
															"value": "Repay exceeds borrowed amount"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7f89479c4204fbf52e0ecac2b3c2a4e0352a42800729113859cefbf34a40674f",
																"typeString": "literal_string \"Repay exceeds borrowed amount\""
															}
														],
														"id": 199,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1689:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 207,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1689:105:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 208,
												"nodeType": "ExpressionStatement",
												"src": "1689:105:1"
											},
											{
												"expression": {
													"id": 214,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 209,
															"name": "borrows",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 98,
															"src": "1804:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 212,
														"indexExpression": {
															"expression": {
																"id": 210,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1812:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 211,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1816:6:1",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1812:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1804:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 213,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 196,
														"src": "1827:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1804:29:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 215,
												"nodeType": "ExpressionStatement",
												"src": "1804:29:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 219,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1889:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 220,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1893:6:1",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1889:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 223,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "1909:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_LendingPool_$301",
																				"typeString": "contract LendingPool"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_LendingPool_$301",
																				"typeString": "contract LendingPool"
																			}
																		],
																		"id": 222,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1901:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 221,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "1901:7:1",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 224,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1901:13:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 225,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 196,
																	"src": "1916:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 217,
																	"name": "borrowAsset",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 87,
																	"src": "1864:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 218,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1876:12:1",
																"memberName": "transferFrom",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 76,
																"src": "1864:24:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256) external returns (bool)"
																}
															},
															"id": 226,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1864:59:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265706179207472616e73666572206661696c6564",
															"id": 227,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1937:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e6c3b6f31e8316cdf6362b383ed26b0b5974c4130c83a39c93a2602a3e7189c1",
																"typeString": "literal_string \"Repay transfer failed\""
															},
															"value": "Repay transfer failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e6c3b6f31e8316cdf6362b383ed26b0b5974c4130c83a39c93a2602a3e7189c1",
																"typeString": "literal_string \"Repay transfer failed\""
															}
														],
														"id": 216,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1843:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 228,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1843:127:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 229,
												"nodeType": "ExpressionStatement",
												"src": "1843:127:1"
											}
										]
									},
									"documentation": {
										"id": 194,
										"nodeType": "StructuredDocumentation",
										"src": "1601:33:1",
										"text": "@notice Repay borrowed tokens"
									},
									"functionSelector": "371fd8e6",
									"id": 231,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "repay",
									"nameLocation": "1648:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 197,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 196,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1662:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "1654:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 195,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1654:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1653:16:1"
									},
									"returnParameters": {
										"id": 198,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1679:0:1"
									},
									"scope": 301,
									"src": "1639:338:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 274,
										"nodeType": "Block",
										"src": "2090:384:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 243,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 238,
																	"name": "borrows",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 98,
																	"src": "2121:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 241,
																"indexExpression": {
																	"expression": {
																		"id": 239,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2129:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 240,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2133:6:1",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2129:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2121:19:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 242,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2144:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2121:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f75747374616e64696e6720626f72726f7720657869737473",
															"id": 244,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2159:27:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_813cbb911779968ec8fda0e012d191010f03e7ed84e37ad667d1ebf6689fc21d",
																"typeString": "literal_string \"Outstanding borrow exists\""
															},
															"value": "Outstanding borrow exists"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_813cbb911779968ec8fda0e012d191010f03e7ed84e37ad667d1ebf6689fc21d",
																"typeString": "literal_string \"Outstanding borrow exists\""
															}
														],
														"id": 237,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2100:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 245,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2100:96:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 246,
												"nodeType": "ExpressionStatement",
												"src": "2100:96:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 253,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 248,
																	"name": "deposits",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 94,
																	"src": "2227:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 251,
																"indexExpression": {
																	"expression": {
																		"id": 249,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2236:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 250,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2240:6:1",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2236:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2227:20:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 252,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 234,
																"src": "2251:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2227:30:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "57697468647261772065786365656473206465706f736974",
															"id": 254,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2271:26:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_44af46024e160da774031d633432a12654226cc4b8e96011e287c1d892606f8f",
																"typeString": "literal_string \"Withdraw exceeds deposit\""
															},
															"value": "Withdraw exceeds deposit"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_44af46024e160da774031d633432a12654226cc4b8e96011e287c1d892606f8f",
																"typeString": "literal_string \"Withdraw exceeds deposit\""
															}
														],
														"id": 247,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2206:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 255,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2206:101:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 256,
												"nodeType": "ExpressionStatement",
												"src": "2206:101:1"
											},
											{
												"expression": {
													"id": 262,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 257,
															"name": "deposits",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 94,
															"src": "2317:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 260,
														"indexExpression": {
															"expression": {
																"id": 258,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2326:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 259,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2330:6:1",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2326:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2317:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 261,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 234,
														"src": "2341:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2317:30:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 263,
												"nodeType": "ExpressionStatement",
												"src": "2317:30:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 267,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2398:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 268,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2402:6:1",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2398:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 269,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 234,
																	"src": "2410:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 265,
																	"name": "collateral",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 84,
																	"src": "2378:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 266,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2389:8:1",
																"memberName": "transfer",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 44,
																"src": "2378:19:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,uint256) external returns (bool)"
																}
															},
															"id": 270,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2378:39:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5769746864726177207472616e73666572206661696c6564",
															"id": 271,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2431:26:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_718af1fb337594ef8ce96c809dc966c89781a99c8248d472a4af6ee23c2cc56a",
																"typeString": "literal_string \"Withdraw transfer failed\""
															},
															"value": "Withdraw transfer failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_718af1fb337594ef8ce96c809dc966c89781a99c8248d472a4af6ee23c2cc56a",
																"typeString": "literal_string \"Withdraw transfer failed\""
															}
														],
														"id": 264,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2357:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 272,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:110:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 273,
												"nodeType": "ExpressionStatement",
												"src": "2357:110:1"
											}
										]
									},
									"documentation": {
										"id": 232,
										"nodeType": "StructuredDocumentation",
										"src": "1983:59:1",
										"text": "@notice Withdraw your collateral (only if fully repaid)"
									},
									"functionSelector": "2e1a7d4d",
									"id": 275,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nameLocation": "2056:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2073:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 275,
												"src": "2065:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 233,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2065:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2064:16:1"
									},
									"returnParameters": {
										"id": 236,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2090:0:1"
									},
									"scope": 301,
									"src": "2047:427:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 276,
										"nodeType": "StructuredDocumentation",
										"src": "2680:58:1",
										"text": "@notice Emitted when a cross-chain borrow is requested"
									},
									"eventSelector": "a496dd7765004b2bfed294b621796f809f2530120a58450b366ab7011e982abf",
									"id": 284,
									"name": "CrossBorrowRequested",
									"nameLocation": "2749:20:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 283,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 278,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "2795:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 284,
												"src": "2779:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 277,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2779:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 280,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2825:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 284,
												"src": "2809:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 279,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2809:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 282,
												"indexed": false,
												"mutability": "mutable",
												"name": "destParaId",
												"nameLocation": "2857:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 284,
												"src": "2841:26:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 281,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2841:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:104:1"
									},
									"src": "2743:131:1"
								},
								{
									"body": {
										"id": 299,
										"nodeType": "Block",
										"src": "3057:74:1",
										"statements": [
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 293,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3093:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 294,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3097:6:1",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3093:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 295,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 287,
															"src": "3105:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 296,
															"name": "destParaId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 289,
															"src": "3113:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 292,
														"name": "CrossBorrowRequested",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 284,
														"src": "3072:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_bytes32_$returns$__$",
															"typeString": "function (address,uint256,bytes32)"
														}
													},
													"id": 297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3072:52:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 298,
												"nodeType": "EmitStatement",
												"src": "3067:57:1"
											}
										]
									},
									"documentation": {
										"id": 285,
										"nodeType": "StructuredDocumentation",
										"src": "2880:72:1",
										"text": "@notice Stub function for off-chain relayer to capture and later XCM"
									},
									"functionSelector": "57a343d6",
									"id": 300,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "crossBorrow",
									"nameLocation": "2966:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 290,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 287,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2995:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 300,
												"src": "2987:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 286,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2987:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 289,
												"mutability": "mutable",
												"name": "destParaId",
												"nameLocation": "3019:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 300,
												"src": "3011:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 288,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3011:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2977:58:1"
									},
									"returnParameters": {
										"id": 291,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3057:0:1"
									},
									"scope": 301,
									"src": "2957:174:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 302,
							"src": "246:3123:1",
							"usedErrors": [],
							"usedEvents": [
								284
							]
						}
					],
					"src": "32:3338:1"
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": null,
				"formattedMessage": "\nWarning: It looks like you are using '<address payable>.send/transfer(<X>)'.\nUsing '<address payable>.send/transfer(<X>)' is deprecated and strongly discouraged!\nThe resolc compiler uses a heuristic to detect '<address payable>.send/transfer(<X>)' calls,\nwhich disables call re-entrancy and supplies all remaining gas instead of the 2300 gas stipend.\nHowever, detection is not guaranteed. You are advised to carefully test this, employ\nre-entrancy guards or use the withdrawal pattern instead!\nLearn more on https://docs.soliditylang.org/en/latest/security-considerations.html#reentrancy\nand https://docs.soliditylang.org/en/latest/common-patterns.html#withdrawal-from-contracts\n\n--> contracts/LendingPool.sol\n",
				"message": "\nWarning: It looks like you are using '<address payable>.send/transfer(<X>)'.\nUsing '<address payable>.send/transfer(<X>)' is deprecated and strongly discouraged!\nThe resolc compiler uses a heuristic to detect '<address payable>.send/transfer(<X>)' calls,\nwhich disables call re-entrancy and supplies all remaining gas instead of the 2300 gas stipend.\nHowever, detection is not guaranteed. You are advised to carefully test this, employ\nre-entrancy guards or use the withdrawal pattern instead!\nLearn more on https://docs.soliditylang.org/en/latest/security-considerations.html#reentrancy\nand https://docs.soliditylang.org/en/latest/common-patterns.html#withdrawal-from-contracts\n",
				"severity": "warning",
				"sourceLocation": {
					"file": "1",
					"start": 1500,
					"end": 1540
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": null,
				"formattedMessage": "\nWarning: It looks like you are using '<address payable>.send/transfer(<X>)'.\nUsing '<address payable>.send/transfer(<X>)' is deprecated and strongly discouraged!\nThe resolc compiler uses a heuristic to detect '<address payable>.send/transfer(<X>)' calls,\nwhich disables call re-entrancy and supplies all remaining gas instead of the 2300 gas stipend.\nHowever, detection is not guaranteed. You are advised to carefully test this, employ\nre-entrancy guards or use the withdrawal pattern instead!\nLearn more on https://docs.soliditylang.org/en/latest/security-considerations.html#reentrancy\nand https://docs.soliditylang.org/en/latest/common-patterns.html#withdrawal-from-contracts\n\n--> contracts/LendingPool.sol\n",
				"message": "\nWarning: It looks like you are using '<address payable>.send/transfer(<X>)'.\nUsing '<address payable>.send/transfer(<X>)' is deprecated and strongly discouraged!\nThe resolc compiler uses a heuristic to detect '<address payable>.send/transfer(<X>)' calls,\nwhich disables call re-entrancy and supplies all remaining gas instead of the 2300 gas stipend.\nHowever, detection is not guaranteed. You are advised to carefully test this, employ\nre-entrancy guards or use the withdrawal pattern instead!\nLearn more on https://docs.soliditylang.org/en/latest/security-considerations.html#reentrancy\nand https://docs.soliditylang.org/en/latest/common-patterns.html#withdrawal-from-contracts\n",
				"severity": "warning",
				"sourceLocation": {
					"file": "1",
					"start": 2378,
					"end": 2417
				},
				"type": "Warning"
			}
		],
		"version": "0.8.28",
		"long_version": "0.8.28+commit.7893614a.Emscripten.clang",
		"revive_version": "0.1.0-dev.12+commit.66f9a4d.llvm-18.1.8"
	}
}
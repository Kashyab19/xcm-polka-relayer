{
	"id": "65cb08e1082912d3bbbe120be5c1d710",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.28",
	"solcLongVersion": "0.8.28+commit.7893614a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/MockERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.18;\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\n\ncontract MockERC20 is ERC20 {\n    constructor(string memory name, string memory symbol) ERC20(name, symbol) {\n        _mint(msg.sender, 1e24); // 1 M tokens with 18 decimals\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * Both values are immutable: they can only be set once during construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.deployedBytecode",
						"evm.methodIdentifiers"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":false},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					},
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"evm": {
						"bytecode": {
							"object": ""
						},
						"deployedBytecode": {
							"object": ""
						},
						"methodIdentifiers": {}
					},
					"irOptimized": ""
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":false},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					},
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"evm": {
						"bytecode": {
							"object": ""
						},
						"deployedBytecode": {
							"object": ""
						},
						"methodIdentifiers": {}
					},
					"irOptimized": ""
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":false},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					},
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"evm": {
						"bytecode": {
							"object": ""
						},
						"deployedBytecode": {
							"object": ""
						},
						"methodIdentifiers": {}
					},
					"irOptimized": ""
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":false},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80b0992a11b2fd1f75ced2971696d07bbd1d19ce6761dd50d8b6d48aa435f42a\",\"dweb:/ipfs/QmZDe5xd2gXHjVEjv9t8C1KQ68K5T8qFwdinwQgmP3rF3x\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					},
					"storageLayout": {
						"storage": [
							{
								"astId": 159,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 165,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 167,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 169,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 171,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"evm": {
						"bytecode": {
							"object": ""
						},
						"deployedBytecode": {
							"object": ""
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"irOptimized": ""
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":false},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					},
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"evm": {
						"bytecode": {
							"object": ""
						},
						"deployedBytecode": {
							"object": ""
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"irOptimized": ""
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":false},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}",
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					},
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"evm": {
						"bytecode": {
							"object": ""
						},
						"deployedBytecode": {
							"object": ""
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"irOptimized": ""
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":false},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					},
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"evm": {
						"bytecode": {
							"object": ""
						},
						"deployedBytecode": {
							"object": ""
						},
						"methodIdentifiers": {}
					},
					"irOptimized": ""
				}
			},
			"contracts/MockERC20.sol": {
				"MockERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"metadata": {
						"optimizer_settings": {
							"is_debug_logging_enabled": false,
							"is_fallback_to_size_enabled": false,
							"is_verify_each_enabled": false,
							"level_back_end": "Aggressive",
							"level_middle_end": "Aggressive",
							"level_middle_end_size": "Zero"
						},
						"revive_pallet_version": null,
						"revive_version": "0.1.0-dev.12+commit.66f9a4d.llvm-18.1.8",
						"solc_metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MockERC20.sol\":\"MockERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":false},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80b0992a11b2fd1f75ced2971696d07bbd1d19ce6761dd50d8b6d48aa435f42a\",\"dweb:/ipfs/QmZDe5xd2gXHjVEjv9t8C1KQ68K5T8qFwdinwQgmP3rF3x\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/MockERC20.sol\":{\"keccak256\":\"0xc9f0eaf61c4b0bfbd450d241e7efdf905a5ba032de25272845f2931e26ae7575\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://147a33758f727fd8807e03fd0177fd924fec069c0e1818d281d5e0d0598904f1\",\"dweb:/ipfs/QmXq3C7WceT3G22xppkw8kxWMN7WjA3jBriCeTz6Nd7Sjw\"]}},\"version\":1}",
						"solc_version": "0.8.28+commit.7893614a.Emscripten.clang"
					},
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					},
					"storageLayout": {
						"storage": [
							{
								"astId": 159,
								"contract": "contracts/MockERC20.sol:MockERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 165,
								"contract": "contracts/MockERC20.sol:MockERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 167,
								"contract": "contracts/MockERC20.sol:MockERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 169,
								"contract": "contracts/MockERC20.sol:MockERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 171,
								"contract": "contracts/MockERC20.sol:MockERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"evm": {
						"assembly": "// RO data = 0/0 bytes\n// RW data = 64/65616 bytes\n// Stack size = 16384 bytes\n\n// Instructions = 11561\n// Code size = 36135 bytes\n\n      : @0 (gas: 2)\n     0: i32 a2 = a0 >> 0x10\n     3: jump @6 if a2 != 0\n      : @1 (gas: 2)\n     6: a2 = 0x10001\n    11: jump @6 if a1 >=u a2\n      : @2 (gas: 4)\n    14: a1 = a1 + a0\n    17: i32 a1 = a1 + 0x1f\n    20: a1 = a1 & 0xffffffffffffffe0\n    23: jump @7 if a1 >=u 65537\n      : @3 (gas: 2)\n    29: a3 = i32 [0x20040]\n    34: jump @5 if a3 >=u a1\n      : @4 (gas: 4)\n    37: u32 [0x20040] = a1\n    42: a1 = 0x20050\n    47: a0 = a0 + a1\n    50: ret\n      : @5 (gas: 3)\n    52: a1 = 0x20050\n    57: a0 = a0 + a1\n    60: ret\n      : @6 (gas: 1)\n    62: trap\n      : @7 (gas: 1)\n    63: trap\n      : @8 (gas: 1)\n    64: jump @22 if a0 == a1\n      : @9 (gas: 9)\n    67: a3 = a1 << 0x20\n    70: a3 = a3 >> 0x20\n    73: a4 = a0 << 0x20\n    76: a4 = a4 >> 0x20\n    79: a4 = a4 + a2\n    82: a3 = a3 - a4\n    85: a4 = a2 << 0x1\n    88: a4 = -a4\n    90: jump @15 if a4 >=u a3\n      : @10 (gas: 1)\n    93: jump @19 if a0 >=u a1\n      : @11 (gas: 1)\n    96: jump @22 if a2 == 0\n      : @12 (gas: 3)\n    99: a2 = a2 + a0\n   102: a3 = a0\n   104: fallthrough\n      : @13 (gas: 6)\n   105: a4 = u8 [a1]\n   107: a1 = a1 + 0x1\n   110: a5 = a3 + 0x1\n   113: u8 [a3] = a4\n   115: a3 = a5\n   117: jump @13 if a5 != a2\n      : @14 (gas: 1)\n   120: jump @22\n      : @15 (gas: 1)\n   122: jump @22 if a2 == 0\n      : @16 (gas: 3)\n   125: a2 = a2 + a0\n   128: a3 = a0\n   130: fallthrough\n      : @17 (gas: 6)\n   131: a4 = u8 [a1]\n   133: a1 = a1 + 0x1\n   136: a5 = a3 + 0x1\n   139: u8 [a3] = a4\n   141: a3 = a5\n   143: jump @17 if a5 != a2\n      : @18 (gas: 1)\n   146: jump @22\n      : @19 (gas: 1)\n   148: jump @22 if a2 == 0\n      : @20 (gas: 2)\n   151: i32 a3 = a2 + 0xffffffffffffffff\n   154: fallthrough\n      : @21 (gas: 7)\n   155: a4 = a1 + a3\n   158: a4 = u8 [a4]\n   160: a2 = a2 + 0xffffffffffffffff\n   163: a5 = a0 + a3\n   166: u8 [a5] = a4\n   168: i32 a3 = a3 + 0xffffffffffffffff\n   171: jump @21 if a2 != 0\n      : @22 (gas: 1)\n   174: ret\n      : @23 (gas: 13)\n   176: sp = sp + 0xffffffffffffffd8\n   179: u64 [sp + 0x20] = ra\n   182: u64 [sp + 0x18] = s0\n   185: u64 [sp + 0x10] = s1\n   188: a2 = u64 [a1]\n   190: u64 [sp + 0x8] = a2\n   193: a2 = u64 [a1 + 0x8]\n   196: u64 [sp] = a2\n   198: s0 = u64 [a1 + 0x10]\n   201: s1 = u64 [a1 + 0x18]\n   204: i32 a0 = a0 + 0\n   206: a1 = 0x20\n   209: ra = 2, jump @0\n      : @24 [@dyn 1] (gas: 71)\n   214: a1 = reverse s1\n   216: a2 = reverse s0\n   218: a3 = u64 [sp]\n   220: a3 = reverse a3\n   222: a4 = u64 [sp + 0x8]\n   225: a4 = reverse a4\n   227: u8 [a0 + 0x18] = a4\n   230: u8 [a0 + 0x10] = a3\n   233: u8 [a0 + 0x8] = a2\n   236: u8 [a0] = a1\n   238: a5 = a4 >> 0x38\n   241: u8 [a0 + 0x1f] = a5\n   244: a5 = a4 >> 0x30\n   247: u8 [a0 + 0x1e] = a5\n   250: a5 = a4 >> 0x28\n   253: u8 [a0 + 0x1d] = a5\n   256: a5 = a4 >> 0x20\n   259: u8 [a0 + 0x1c] = a5\n   262: a5 = a4 >> 0x18\n   265: u8 [a0 + 0x1b] = a5\n   268: a5 = a4 >> 0x10\n   271: u8 [a0 + 0x1a] = a5\n   274: a4 = a4 >> 0x8\n   277: u8 [a0 + 0x19] = a4\n   280: a4 = a3 >> 0x38\n   283: u8 [a0 + 0x17] = a4\n   286: a4 = a3 >> 0x30\n   289: u8 [a0 + 0x16] = a4\n   292: a4 = a3 >> 0x28\n   295: u8 [a0 + 0x15] = a4\n   298: a4 = a3 >> 0x20\n   301: u8 [a0 + 0x14] = a4\n   304: a4 = a3 >> 0x18\n   307: u8 [a0 + 0x13] = a4\n   310: a4 = a3 >> 0x10\n   313: u8 [a0 + 0x12] = a4\n   316: a3 = a3 >> 0x8\n   319: u8 [a0 + 0x11] = a3\n   322: a3 = a2 >> 0x38\n   325: u8 [a0 + 0xf] = a3\n   328: a3 = a2 >> 0x30\n   331: u8 [a0 + 0xe] = a3\n   334: a3 = a2 >> 0x28\n   337: u8 [a0 + 0xd] = a3\n   340: a3 = a2 >> 0x20\n   343: u8 [a0 + 0xc] = a3\n   346: a3 = a2 >> 0x18\n   349: u8 [a0 + 0xb] = a3\n   352: a3 = a2 >> 0x10\n   355: u8 [a0 + 0xa] = a3\n   358: a2 = a2 >> 0x8\n   361: u8 [a0 + 0x9] = a2\n   364: a2 = a1 >> 0x38\n   367: u8 [a0 + 0x7] = a2\n   370: a2 = a1 >> 0x30\n   373: u8 [a0 + 0x6] = a2\n   376: a2 = a1 >> 0x28\n   379: u8 [a0 + 0x5] = a2\n   382: a2 = a1 >> 0x20\n   385: u8 [a0 + 0x4] = a2\n   388: a2 = a1 >> 0x18\n   391: u8 [a0 + 0x3] = a2\n   394: a2 = a1 >> 0x10\n   397: u8 [a0 + 0x2] = a2\n   400: a1 = a1 >> 0x8\n   403: u8 [a0 + 0x1] = a1\n   406: ra = u64 [sp + 0x20]\n   409: s0 = u64 [sp + 0x18]\n   412: s1 = u64 [sp + 0x10]\n   415: sp = sp + 0x28\n   418: ret\n      : @25 (gas: 6)\n   420: sp = sp + 0xfffffffffffffff0\n   423: u64 [sp + 0x8] = ra\n   426: u64 [sp] = s0\n   428: s0 = a0 & 0x1\n   431: ecalli 2 // 'call_data_size'\n   433: fallthrough\n      : @26 (gas: 2)\n   434: u32 [0x20044] = a0\n   439: jump @28 if s0 == 0\n      : @27 (gas: 1)\n   442: ra = 4, jump @29\n      : @28 [@dyn 2] (gas: 1)\n   446: ra = 6, jump @48\n      : @29 [@dyn 3] (gas: 9)\n   451: sp = sp + 0xfffffffffffffe80\n   455: u64 [sp + 0x178] = ra\n   459: u64 [sp + 0x170] = s0\n   463: u64 [sp + 0x168] = s1\n   467: s0 = sp + 0x180\n   471: sp = sp & 0xffffffffffffffe0\n   474: a0 = 0x40\n   477: a1 = 0x20\n   480: ra = 8, jump @0\n      : @30 [@dyn 4] (gas: 39)\n   485: u8 [a0 + 31] = 0x80\n   490: u8 [a0 + 30] = 0\n   493: u8 [a0 + 29] = 0\n   496: u8 [a0 + 28] = 0\n   499: u8 [a0 + 27] = 0\n   502: u8 [a0 + 26] = 0\n   505: u8 [a0 + 25] = 0\n   508: u8 [a0 + 24] = 0\n   511: u8 [a0 + 23] = 0\n   514: u8 [a0 + 22] = 0\n   517: u8 [a0 + 21] = 0\n   520: u8 [a0 + 20] = 0\n   523: u8 [a0 + 19] = 0\n   526: u8 [a0 + 18] = 0\n   529: u8 [a0 + 17] = 0\n   532: u8 [a0 + 16] = 0\n   535: u8 [a0 + 15] = 0\n   538: u8 [a0 + 14] = 0\n   541: u8 [a0 + 13] = 0\n   544: u8 [a0 + 12] = 0\n   547: u8 [a0 + 11] = 0\n   550: u8 [a0 + 10] = 0\n   553: u8 [a0 + 9] = 0\n   556: u8 [a0 + 8] = 0\n   559: u8 [a0 + 7] = 0\n   562: u8 [a0 + 6] = 0\n   565: u8 [a0 + 5] = 0\n   568: u8 [a0 + 4] = 0\n   571: u8 [a0 + 3] = 0\n   574: u8 [a0 + 2] = 0\n   577: u8 [a0 + 1] = 0\n   580: u8 [a0 + 0] = 0\n   582: u64 [sp + 344] = 0\n   586: u64 [sp + 320] = 0\n   590: u64 [sp + 328] = 0\n   594: u64 [sp + 336] = 0\n   598: i32 a0 = sp + 0x140\n   602: ecalli 10 // 'value_transferred'\n   604: fallthrough\n      : @31 (gas: 8)\n   605: a0 = u64 [sp + 0x150]\n   609: a1 = u64 [sp + 0x158]\n   613: a2 = u64 [sp + 0x148]\n   617: a3 = u64 [sp + 0x140]\n   621: a1 = a1 | a2\n   624: a0 = a0 | a3\n   627: a0 = a0 | a1\n   630: jump @40 if a0 != 0\n      : @32 (gas: 12)\n   634: a0 = i32 [0x20044]\n   639: u64 [sp + 0x38] = a0\n   642: a0 = a0 << 0x20\n   645: a2 = a0 >> 0x20\n   648: u64 [sp + 280] = 0\n   652: u64 [sp + 272] = 0\n   656: u64 [sp + 264] = 0\n   660: a0 = sp + 0x120\n   664: a1 = sp + 0x100\n   668: u64 [sp + 0x30] = a2\n   671: u64 [sp + 0x100] = a2\n   675: ra = 10, jump @75\n      : @33 [@dyn 5] (gas: 12)\n   680: a4 = u64 [sp + 0x138]\n   684: s1 = u64 [sp + 0x130]\n   688: a3 = u64 [sp + 0x128]\n   692: a2 = u64 [sp + 0x120]\n   696: a0 = a3 | a4\n   699: a1 = a2 | s1\n   702: a1 = a1 | a0\n   705: a1 = a1 >> 0x20\n   708: a0 = a0 | s1\n   711: a0 = a0 << 0x20\n   714: a0 = a0 | a1\n   717: jump @39 if a0 != 0\n      : @34 (gas: 6)\n   721: i32 a0 = a2 + 0\n   723: a1 = u64 [sp + 0x38]\n   726: u64 [sp + 0x18] = a2\n   729: u64 [sp + 0x20] = a3\n   732: u64 [sp + 0x28] = a4\n   735: ra = 12, jump @0\n      : @35 [@dyn 6] (gas: 29)\n   740: i32 a0 = a0 + 0\n   742: a1 = u64 [sp + 0x38]\n   745: a2 = 0\n   747: ecalli 0 // 'call_data_copy'\n   748: a0 = u64 [sp + 0x30]\n   751: a2 = u64 [sp + 0x18]\n   754: a0 = a0 + a2\n   757: a1 = a0 <u a2\n   760: t1 = a2\n   762: a4 = u64 [sp + 0x20]\n   765: a2 = a4 + a1\n   768: a3 = a2 <u a4\n   771: a3 = a1 if a1 == 0\n   774: a3 = a3 + s1\n   777: a1 = a3 <u s1\n   780: a5 = u64 [sp + 0x28]\n   783: t0 = a5 + a1\n   786: u64 [sp + 0x88] = a2\n   790: u64 [sp + 0x80] = a0\n   794: u64 [sp + 0xb8] = a5\n   798: u64 [sp + 0xb0] = s1\n   802: u64 [sp + 0xa8] = a4\n   806: u64 [sp + 0xa0] = t1\n   810: u64 [sp + 0x90] = a3\n   814: a0 = sp + 0xc0\n   818: a1 = sp + 0xa0\n   822: a2 = sp + 0x80\n   826: u64 [sp + 0x98] = t0\n   830: ra = 14, jump @131\n      : @36 [@dyn 7] (gas: 48)\n   835: t0 = u64 [sp + 0xc0]\n   839: a0 = u64 [sp + 0xc8]\n   843: a1 = u64 [sp + 0xd0]\n   847: a3 = u64 [sp + 0xd8]\n   851: a4 = u64 [sp + 0xe0]\n   855: a5 = u64 [sp + 0xe8]\n   859: s1 = u64 [sp + 0xf0]\n   863: a2 = u64 [sp + 0xf8]\n   867: u64 [sp + 0x58] = a2\n   870: u64 [sp + 0x50] = s1\n   873: u64 [sp + 0x48] = a5\n   876: u64 [sp + 0x40] = a4\n   879: u64 [sp + 0x78] = a3\n   882: u64 [sp + 0x70] = a1\n   885: u64 [sp + 0x68] = a0\n   888: a0 = sp + 0x60\n   891: a1 = sp + 0x40\n   894: u64 [sp + 0x60] = t0\n   897: ra = 0x10\n   900: sp = sp + 0xfffffffffffffec0\n   904: u64 [sp + 0x138] = ra\n   908: u64 [sp + 0x130] = s0\n   912: u64 [sp + 0x128] = s1\n   916: s0 = sp + 0x140\n   920: sp = sp & 0xffffffffffffffe0\n   923: a2 = u64 [a1]\n   925: u64 [sp + 0x18] = a2\n   928: a2 = u64 [a1 + 0x8]\n   931: u64 [sp + 0x10] = a2\n   934: a2 = u64 [a1 + 0x10]\n   937: u64 [sp + 0x8] = a2\n   940: s1 = u64 [a1 + 0x18]\n   943: a2 = u64 [a0]\n   945: a1 = u64 [a0 + 0x8]\n   948: a3 = u64 [a0 + 0x10]\n   951: a0 = u64 [a0 + 0x18]\n   954: u64 [sp + 248] = 0\n   958: u64 [sp + 240] = 0\n   962: u64 [sp + 232] = 0\n   966: u64 [sp + 224] = 0x3\n   971: u64 [sp + 0xd8] = a0\n   975: u64 [sp + 0xd0] = a3\n   979: u64 [sp + 0xc8] = a1\n   983: a0 = sp + 0xe0\n   987: a1 = sp + 0xc0\n   991: u64 [sp + 0xc0] = a2\n   995: ra = 0x88\n   999: jump @179\n      : @37 [@dyn 8] (gas: 3)\n  1002: a0 = 0x40\n  1005: a1 = 0x20\n  1008: ra = 18, jump @0\n      : @38 [@dyn 9] (gas: 100)\n  1013: a1 = u8 [a0 + 0x11]\n  1016: a2 = u8 [a0 + 0x10]\n  1019: a3 = u8 [a0 + 0x12]\n  1022: a4 = u8 [a0 + 0x13]\n  1025: a1 = a1 << 0x8\n  1028: a1 = a1 | a2\n  1031: a3 = a3 << 0x10\n  1034: a4 = a4 << 0x18\n  1037: a3 = a3 | a4\n  1040: a1 = a1 | a3\n  1043: a2 = u8 [a0 + 0x15]\n  1046: a3 = u8 [a0 + 0x14]\n  1049: a4 = u8 [a0 + 0x16]\n  1052: a5 = u8 [a0 + 0x17]\n  1055: a2 = a2 << 0x8\n  1058: a2 = a2 | a3\n  1061: a4 = a4 << 0x10\n  1064: a5 = a5 << 0x18\n  1067: a4 = a4 | a5\n  1070: a2 = a2 | a4\n  1073: a2 = a2 << 0x20\n  1076: t0 = a2 | a1\n  1079: a2 = u8 [a0 + 0x1]\n  1082: a3 = u8 [a0]\n  1084: a4 = u8 [a0 + 0x2]\n  1087: a5 = u8 [a0 + 0x3]\n  1090: a2 = a2 << 0x8\n  1093: a2 = a2 | a3\n  1096: a4 = a4 << 0x10\n  1099: a5 = a5 << 0x18\n  1102: a4 = a4 | a5\n  1105: a2 = a2 | a4\n  1108: a3 = u8 [a0 + 0x5]\n  1111: a4 = u8 [a0 + 0x4]\n  1114: a5 = u8 [a0 + 0x6]\n  1117: s1 = u8 [a0 + 0x7]\n  1120: a3 = a3 << 0x8\n  1123: a3 = a3 | a4\n  1126: a5 = a5 << 0x10\n  1129: s1 = s1 << 0x18\n  1132: a5 = a5 | s1\n  1135: a3 = a3 | a5\n  1138: a3 = a3 << 0x20\n  1141: a2 = a2 | a3\n  1144: a3 = u8 [a0 + 0x19]\n  1147: a4 = u8 [a0 + 0x18]\n  1150: a5 = u8 [a0 + 0x1a]\n  1153: s1 = u8 [a0 + 0x1b]\n  1156: a3 = a3 << 0x8\n  1159: a3 = a3 | a4\n  1162: a5 = a5 << 0x10\n  1165: s1 = s1 << 0x18\n  1168: a5 = a5 | s1\n  1171: a3 = a3 | a5\n  1174: a4 = u8 [a0 + 0x1d]\n  1177: a5 = u8 [a0 + 0x1c]\n  1180: s1 = u8 [a0 + 0x1e]\n  1183: a1 = u8 [a0 + 0x1f]\n  1186: a4 = a4 << 0x8\n  1189: a4 = a4 | a5\n  1192: s1 = s1 << 0x10\n  1195: a1 = a1 << 0x18\n  1198: a1 = a1 | s1\n  1201: a1 = a1 | a4\n  1204: a1 = a1 << 0x20\n  1207: a3 = a3 | a1\n  1210: a1 = u8 [a0 + 0x9]\n  1213: a4 = u8 [a0 + 0x8]\n  1216: a5 = u8 [a0 + 0xa]\n  1219: s1 = u8 [a0 + 0xb]\n  1222: a1 = a1 << 0x8\n  1225: a1 = a1 | a4\n  1228: a5 = a5 << 0x10\n  1231: s1 = s1 << 0x18\n  1234: a5 = a5 | s1\n  1237: a1 = a1 | a5\n  1240: a4 = u8 [a0 + 0xd]\n  1243: a5 = u8 [a0 + 0xc]\n  1246: s1 = u8 [a0 + 0xe]\n  1249: a0 = u8 [a0 + 0xf]\n  1252: a4 = a4 << 0x8\n  1255: a4 = a4 | a5\n  1258: s1 = s1 << 0x10\n  1261: a0 = a0 << 0x18\n  1264: a0 = a0 | s1\n  1267: a0 = a0 | a4\n  1270: a0 = a0 << 0x20\n  1273: a0 = a0 | a1\n  1276: a0 = reverse a0\n  1278: s1 = reverse a3\n  1280: a1 = reverse a2\n  1282: a2 = reverse t0\n  1284: a1 = a1 | a2\n  1287: a2 = s1 | a0\n  1290: a2 = a2 | a1\n  1293: a2 = a2 >> 0x20\n  1296: a0 = a0 | a1\n  1299: a0 = a0 << 0x20\n  1302: a0 = a0 | a2\n  1305: jump @42 if a0 == 0\n      : @39 (gas: 1)\n  1308: trap\n      : @40 (gas: 3)\n  1309: a0 = 0\n  1311: a1 = 0\n  1313: ra = 20, jump @0\n      : @41 [@dyn 10] (gas: 5)\n  1318: i32 a1 = a0 + 0\n  1320: a0 = 0x1\n  1323: a2 = 0\n  1325: ecalli 7 // 'seal_return'\n  1327: fallthrough\n      : @42 (gas: 4)\n  1328: i32 s1 = s1 + 0\n  1330: a0 = s1\n  1332: a1 = 0\n  1334: ra = 22, jump @0\n      : @43 [@dyn 11] (gas: 5)\n  1339: i32 a0 = a0 + 0\n  1341: a1 = 0\n  1343: a2 = 0\n  1345: ecalli 0 // 'call_data_copy'\n  1346: fallthrough\n      : @44 (gas: 2)\n  1347: a1 = i32 [0x20048]\n  1352: jump @46 if a1 == 0\n      : @45 (gas: 4)\n  1355: a0 = 0x30050\n  1360: i32 a0 = a0 + 0\n  1362: ecalli 8 // 'set_immutable_data'\n  1364: fallthrough\n      : @46 (gas: 3)\n  1365: a0 = s1\n  1367: a1 = 0\n  1369: ra = 24, jump @0\n      : @47 [@dyn 12] (gas: 6)\n  1374: i32 a1 = a0 + 0\n  1376: a0 = 0\n  1378: a2 = 0\n  1380: ra = 0x1a\n  1383: ecalli 7 // 'seal_return'\n  1385: fallthrough\n      : @48 [@dyn 13] (gas: 8)\n  1386: sp = sp + 0xffffffffffffffc0\n  1389: u64 [sp + 0x38] = ra\n  1392: u64 [sp + 0x30] = s0\n  1395: s0 = sp + 0x40\n  1398: sp = sp & 0xffffffffffffffe0\n  1401: a0 = 0x40\n  1404: a1 = 0x20\n  1407: ra = 28, jump @0\n      : @49 [@dyn 14] (gas: 34)\n  1412: u8 [a0 + 31] = 0x80\n  1417: u8 [a0 + 30] = 0\n  1420: u8 [a0 + 29] = 0\n  1423: u8 [a0 + 28] = 0\n  1426: u8 [a0 + 27] = 0\n  1429: u8 [a0 + 26] = 0\n  1432: u8 [a0 + 25] = 0\n  1435: u8 [a0 + 24] = 0\n  1438: u8 [a0 + 23] = 0\n  1441: u8 [a0 + 22] = 0\n  1444: u8 [a0 + 21] = 0\n  1447: u8 [a0 + 20] = 0\n  1450: u8 [a0 + 19] = 0\n  1453: u8 [a0 + 18] = 0\n  1456: u8 [a0 + 17] = 0\n  1459: u8 [a0 + 16] = 0\n  1462: u8 [a0 + 15] = 0\n  1465: u8 [a0 + 14] = 0\n  1468: u8 [a0 + 13] = 0\n  1471: u8 [a0 + 12] = 0\n  1474: u8 [a0 + 11] = 0\n  1477: u8 [a0 + 10] = 0\n  1480: u8 [a0 + 9] = 0\n  1483: u8 [a0 + 8] = 0\n  1486: u8 [a0 + 7] = 0\n  1489: u8 [a0 + 3] = 0\n  1492: u8 [a0 + 2] = 0\n  1495: u8 [a0 + 1] = 0\n  1498: u8 [a0 + 0] = 0\n  1500: a1 = i32 [0x20044]\n  1505: u8 [a0 + 6] = 0\n  1508: u8 [a0 + 5] = 0\n  1511: u8 [a0 + 4] = 0\n  1514: jump @67 if a1 <u 4\n      : @50 (gas: 4)\n  1519: i32 a0 = sp + 0\n  1521: a1 = 0\n  1523: ecalli 1 // 'call_data_load'\n  1525: fallthrough\n      : @51 (gas: 2)\n  1526: a0 = i32 [sp + 0x1c]\n  1529: jump @57 if a0 <=s 157198258\n      : @52 (gas: 1)\n  1536: jump @64 if a0 <=s 599290588\n      : @53 (gas: 1)\n  1544: jump @70 if a0 == 599290589\n      : @54 (gas: 1)\n  1552: jump @72 if a0 == 826074471\n      : @55 (gas: 1)\n  1560: jump @67 if a0 != 1889567281\n      : @56 (gas: 1)\n  1568: ra = 30, jump @377\n      : @57 [@dyn 15] (gas: 2)\n  1573: a1 = 0xffffffffdd62f000\n  1579: jump @61 if a0 >s 3714247997\n      : @58 (gas: 1)\n  1586: jump @68 if a0 == 2514000705\n      : @59 (gas: 1)\n  1593: jump @67 if a0 != 2835717307\n      : @60 (gas: 1)\n  1600: ra = 32, jump @408\n      : @61 [@dyn 16] (gas: 2)\n  1605: i32 a1 = a1 + 0xfffffffffffffd3e\n  1609: jump @69 if a0 == a1\n      : @62 (gas: 1)\n  1612: jump @67 if a0 != 117300739\n      : @63 (gas: 14)\n  1619: ra = 0x22\n  1622: sp = sp + 0xfffffffffffffec0\n  1626: u64 [sp + 0x138] = ra\n  1630: u64 [sp + 0x130] = s0\n  1634: u64 [sp + 0x128] = s1\n  1638: s0 = sp + 0x140\n  1642: sp = sp & 0xffffffffffffffe0\n  1645: u64 [sp + 280] = 0\n  1649: u64 [sp + 272] = 0\n  1653: u64 [sp + 264] = 0\n  1657: u64 [sp + 256] = 0\n  1661: i32 a0 = sp + 0x100\n  1665: ecalli 10 // 'value_transferred'\n  1667: jump @276\n      : @64 [@dyn 17] (gas: 1)\n  1670: jump @71 if a0 == 157198259\n      : @65 (gas: 1)\n  1677: jump @67 if a0 != 404098525\n      : @66 (gas: 1)\n  1684: ra = 36, jump @322\n      : @67 [@dyn 18] (gas: 1)\n  1689: ra = 38, jump @84\n      : @68 [@dyn 19] (gas: 1)\n  1694: ra = 40, jump @394\n      : @69 [@dyn 20] (gas: 1)\n  1699: ra = 42, jump @431\n      : @70 [@dyn 21] (gas: 1)\n  1704: ra = 44, jump @345\n      : @71 [@dyn 22] (gas: 14)\n  1709: ra = 0x2e\n  1712: sp = sp + 0xfffffffffffffe60\n  1716: u64 [sp + 0x198] = ra\n  1720: u64 [sp + 0x190] = s0\n  1724: u64 [sp + 0x188] = s1\n  1728: s0 = sp + 0x1a0\n  1732: sp = sp & 0xffffffffffffffe0\n  1735: u64 [sp + 344] = 0\n  1739: u64 [sp + 336] = 0\n  1743: u64 [sp + 328] = 0\n  1747: u64 [sp + 320] = 0\n  1751: i32 a0 = sp + 0x140\n  1755: ecalli 10 // 'value_transferred'\n  1757: jump @311\n      : @72 [@dyn 23] (gas: 14)\n  1760: ra = 0x30\n  1763: sp = sp + 0xffffffffffffffc0\n  1766: u64 [sp + 0x38] = ra\n  1769: u64 [sp + 0x30] = s0\n  1772: u64 [sp + 0x28] = s1\n  1775: s0 = sp + 0x40\n  1778: sp = sp & 0xffffffffffffffe0\n  1781: u64 [sp + 24] = 0\n  1784: u64 [sp + 16] = 0\n  1787: u64 [sp + 8] = 0\n  1790: u64 [sp + 0] = 0\n  1792: i32 a0 = sp + 0\n  1794: ecalli 10 // 'value_transferred'\n  1796: jump @359\n      : @73 [@dyn 24] (gas: 7)\n  1799: sp = sp + 0xfffffffffffffff0\n  1802: u64 [sp + 0x8] = ra\n  1805: u64 [sp] = s0\n  1807: s0 = a0\n  1809: a0 = 0x40\n  1812: a1 = 0x20\n  1815: ra = 50, jump @0\n      : @74 [@dyn 25] (gas: 100)\n  1820: a1 = u8 [a0 + 0x1]\n  1823: a2 = u8 [a0]\n  1825: a3 = u8 [a0 + 0x2]\n  1828: a4 = u8 [a0 + 0x3]\n  1831: a1 = a1 << 0x8\n  1834: a1 = a1 | a2\n  1837: a3 = a3 << 0x10\n  1840: a4 = a4 << 0x18\n  1843: a3 = a3 | a4\n  1846: a1 = a1 | a3\n  1849: a2 = u8 [a0 + 0x5]\n  1852: a3 = u8 [a0 + 0x4]\n  1855: a4 = u8 [a0 + 0x6]\n  1858: a5 = u8 [a0 + 0x7]\n  1861: a2 = a2 << 0x8\n  1864: a2 = a2 | a3\n  1867: a4 = a4 << 0x10\n  1870: a5 = a5 << 0x18\n  1873: a4 = a4 | a5\n  1876: a2 = a2 | a4\n  1879: a2 = a2 << 0x20\n  1882: t0 = a2 | a1\n  1885: a2 = u8 [a0 + 0x9]\n  1888: a3 = u8 [a0 + 0x8]\n  1891: a4 = u8 [a0 + 0xa]\n  1894: a5 = u8 [a0 + 0xb]\n  1897: a2 = a2 << 0x8\n  1900: a2 = a2 | a3\n  1903: a4 = a4 << 0x10\n  1906: a5 = a5 << 0x18\n  1909: a4 = a4 | a5\n  1912: a2 = a2 | a4\n  1915: a3 = u8 [a0 + 0xd]\n  1918: a4 = u8 [a0 + 0xc]\n  1921: a5 = u8 [a0 + 0xe]\n  1924: a1 = u8 [a0 + 0xf]\n  1927: a3 = a3 << 0x8\n  1930: a3 = a3 | a4\n  1933: a5 = a5 << 0x10\n  1936: a1 = a1 << 0x18\n  1939: a1 = a1 | a5\n  1942: a1 = a1 | a3\n  1945: a1 = a1 << 0x20\n  1948: t1 = a1 | a2\n  1951: a1 = u8 [a0 + 0x11]\n  1954: a3 = u8 [a0 + 0x10]\n  1957: a4 = u8 [a0 + 0x12]\n  1960: a5 = u8 [a0 + 0x13]\n  1963: a1 = a1 << 0x8\n  1966: a1 = a1 | a3\n  1969: a4 = a4 << 0x10\n  1972: a5 = a5 << 0x18\n  1975: a4 = a4 | a5\n  1978: a1 = a1 | a4\n  1981: a3 = u8 [a0 + 0x15]\n  1984: a4 = u8 [a0 + 0x14]\n  1987: a5 = u8 [a0 + 0x16]\n  1990: a2 = u8 [a0 + 0x17]\n  1993: a3 = a3 << 0x8\n  1996: a3 = a3 | a4\n  1999: a5 = a5 << 0x10\n  2002: a2 = a2 << 0x18\n  2005: a2 = a2 | a5\n  2008: a2 = a2 | a3\n  2011: a2 = a2 << 0x20\n  2014: a3 = a2 | a1\n  2017: a1 = u8 [a0 + 0x19]\n  2020: a2 = u8 [a0 + 0x18]\n  2023: a4 = u8 [a0 + 0x1a]\n  2026: a5 = u8 [a0 + 0x1b]\n  2029: a1 = a1 << 0x8\n  2032: a1 = a1 | a2\n  2035: a4 = a4 << 0x10\n  2038: a5 = a5 << 0x18\n  2041: a4 = a4 | a5\n  2044: a1 = a1 | a4\n  2047: a2 = u8 [a0 + 0x1d]\n  2050: a4 = u8 [a0 + 0x1c]\n  2053: a5 = u8 [a0 + 0x1e]\n  2056: a0 = u8 [a0 + 0x1f]\n  2059: a2 = a2 << 0x8\n  2062: a2 = a2 | a4\n  2065: a5 = a5 << 0x10\n  2068: a0 = a0 << 0x18\n  2071: a0 = a0 | a5\n  2074: a0 = a0 | a2\n  2077: a0 = a0 << 0x20\n  2080: a0 = a0 | a1\n  2083: a0 = reverse a0\n  2085: a1 = reverse a3\n  2087: a2 = reverse t1\n  2089: a3 = reverse t0\n  2091: u64 [s0 + 0x18] = a3\n  2094: u64 [s0 + 0x10] = a2\n  2097: u64 [s0 + 0x8] = a1\n  2100: u64 [s0] = a0\n  2102: ra = u64 [sp + 0x8]\n  2105: s0 = u64 [sp]\n  2107: sp = sp + 0x10\n  2110: ret\n      : @75 (gas: 18)\n  2112: sp = sp + 0xffffffffffffff60\n  2116: u64 [sp + 0x98] = ra\n  2120: u64 [sp + 0x90] = s0\n  2124: u64 [sp + 0x88] = s1\n  2128: s0 = sp + 0xa0\n  2132: sp = sp & 0xfffffffffffffff0\n  2135: a2 = u64 [a1 + 0x18]\n  2138: u64 [sp + 0x30] = a2\n  2141: a2 = u64 [a1 + 0x10]\n  2144: u64 [sp + 0x28] = a2\n  2147: a2 = u64 [a1 + 0x8]\n  2150: u64 [sp + 0x20] = a2\n  2153: a1 = u64 [a1]\n  2155: u64 [sp + 0x18] = a1\n  2158: u64 [sp + 0x38] = a0\n  2161: a0 = 0x40\n  2164: a1 = 0x20\n  2167: ra = 52, jump @0\n      : @76 [@dyn 26] (gas: 130)\n  2172: a1 = u8 [a0 + 0x19]\n  2175: a2 = u8 [a0 + 0x18]\n  2178: a3 = u8 [a0 + 0x1a]\n  2181: a4 = u8 [a0 + 0x1b]\n  2184: a1 = a1 << 0x8\n  2187: a1 = a1 | a2\n  2190: a3 = a3 << 0x10\n  2193: a4 = a4 << 0x18\n  2196: a3 = a3 | a4\n  2199: a1 = a1 | a3\n  2202: a2 = u8 [a0 + 0x1d]\n  2205: a3 = u8 [a0 + 0x1c]\n  2208: a4 = u8 [a0 + 0x1e]\n  2211: a5 = u8 [a0 + 0x1f]\n  2214: a2 = a2 << 0x8\n  2217: a2 = a2 | a3\n  2220: a4 = a4 << 0x10\n  2223: a5 = a5 << 0x18\n  2226: a4 = a4 | a5\n  2229: a2 = a2 | a4\n  2232: a2 = a2 << 0x20\n  2235: t0 = a2 | a1\n  2238: a2 = u8 [a0 + 0x11]\n  2241: a3 = u8 [a0 + 0x10]\n  2244: a4 = u8 [a0 + 0x12]\n  2247: a5 = u8 [a0 + 0x13]\n  2250: a2 = a2 << 0x8\n  2253: a2 = a2 | a3\n  2256: a4 = a4 << 0x10\n  2259: a5 = a5 << 0x18\n  2262: a4 = a4 | a5\n  2265: a2 = a2 | a4\n  2268: a3 = u8 [a0 + 0x15]\n  2271: a4 = u8 [a0 + 0x14]\n  2274: a5 = u8 [a0 + 0x16]\n  2277: s1 = u8 [a0 + 0x17]\n  2280: a3 = a3 << 0x8\n  2283: a3 = a3 | a4\n  2286: a5 = a5 << 0x10\n  2289: s1 = s1 << 0x18\n  2292: a5 = a5 | s1\n  2295: a3 = a3 | a5\n  2298: a3 = a3 << 0x20\n  2301: a2 = a2 | a3\n  2304: a3 = u8 [a0 + 0x9]\n  2307: a4 = u8 [a0 + 0x8]\n  2310: a5 = u8 [a0 + 0xa]\n  2313: s1 = u8 [a0 + 0xb]\n  2316: a3 = a3 << 0x8\n  2319: a3 = a3 | a4\n  2322: a5 = a5 << 0x10\n  2325: s1 = s1 << 0x18\n  2328: a5 = a5 | s1\n  2331: a3 = a3 | a5\n  2334: a4 = u8 [a0 + 0xd]\n  2337: a5 = u8 [a0 + 0xc]\n  2340: s1 = u8 [a0 + 0xe]\n  2343: a1 = u8 [a0 + 0xf]\n  2346: a4 = a4 << 0x8\n  2349: a4 = a4 | a5\n  2352: s1 = s1 << 0x10\n  2355: a1 = a1 << 0x18\n  2358: a1 = a1 | s1\n  2361: a1 = a1 | a4\n  2364: a1 = a1 << 0x20\n  2367: a3 = a3 | a1\n  2370: a1 = u8 [a0 + 0x1]\n  2373: a4 = u8 [a0]\n  2375: a5 = u8 [a0 + 0x2]\n  2378: s1 = u8 [a0 + 0x3]\n  2381: a1 = a1 << 0x8\n  2384: a1 = a1 | a4\n  2387: a5 = a5 << 0x10\n  2390: s1 = s1 << 0x18\n  2393: a5 = a5 | s1\n  2396: a1 = a1 | a5\n  2399: a4 = u8 [a0 + 0x5]\n  2402: a5 = u8 [a0 + 0x4]\n  2405: s1 = u8 [a0 + 0x6]\n  2408: a0 = u8 [a0 + 0x7]\n  2411: a4 = a4 << 0x8\n  2414: a4 = a4 | a5\n  2417: s1 = s1 << 0x10\n  2420: a0 = a0 << 0x18\n  2423: a0 = a0 | s1\n  2426: a0 = a0 | a4\n  2429: a0 = a0 << 0x20\n  2432: a0 = a0 | a1\n  2435: t1 = reverse a0\n  2437: t2 = reverse a3\n  2439: s1 = reverse a2\n  2441: a5 = reverse t0\n  2443: a1 = u64 [sp + 0x18]\n  2446: a0 = a1 + 0x1f\n  2449: a1 = a0 <u a1\n  2452: a3 = u64 [sp + 0x20]\n  2455: a2 = a3 + a1\n  2458: a3 = a2 <u a3\n  2461: a3 = a1 if a1 == 0\n  2464: a1 = u64 [sp + 0x28]\n  2467: a3 = a3 + a1\n  2470: a1 = a3 <u a1\n  2473: a4 = u64 [sp + 0x30]\n  2476: a1 = a1 + a4\n  2479: a0 = a0 & 0xffffffffffffffe0\n  2482: a0 = a0 + a5\n  2485: u64 [sp + 0x28] = a5\n  2488: u64 [sp + 0x10] = a0\n  2491: a4 = a0 <u a5\n  2494: a2 = a2 + s1\n  2497: a5 = a2 + a4\n  2500: a2 = a5 ^ s1\n  2503: u64 [sp + 0x30] = s1\n  2506: a0 = a5 <u s1\n  2509: a0 = a4 if a2 == 0\n  2512: a3 = a3 + t2\n  2515: a4 = a3 + a0\n  2518: s1 = a4 <u a3\n  2521: a2 = a3 <u t2\n  2524: a1 = a1 + t1\n  2527: a1 = a1 + a2\n  2530: s1 = s1 + a1\n  2533: a1 = a4 >u 0\n  2535: a2 = s1 >u 0\n  2537: a2 = a1 if s1 == 0\n  2540: a1 = a4 | s1\n  2543: u64 [sp + 0x8] = a5\n  2546: a3 = a5 >u 0\n  2548: a3 = a2 if a1 != 0\n  2551: jump @80 if a3 != 0\n      : @77 (gas: 8)\n  2555: a1 = a4 <u t2\n  2558: a2 = s1 ^ t1\n  2561: a3 = s1 <u t1\n  2564: a3 = a1 if a2 == 0\n  2567: a1 = a4 ^ t2\n  2570: a1 = a1 | a2\n  2573: a0 = a3 if a1 != 0\n  2576: jump @80 if a0 != 0\n      : @78 (gas: 6)\n  2580: a0 = 0x40\n  2583: a1 = 0x20\n  2586: u64 [sp + 0x20] = t2\n  2589: u64 [sp + 0x18] = t1\n  2592: u64 [sp] = a4\n  2594: ra = 54, jump @0\n      : @79 [@dyn 27] (gas: 82)\n  2599: a1 = reverse s1\n  2601: a2 = u64 [sp]\n  2603: a2 = reverse a2\n  2605: a3 = u64 [sp + 0x8]\n  2608: a3 = reverse a3\n  2610: a4 = u64 [sp + 0x10]\n  2613: a4 = reverse a4\n  2615: u8 [a0 + 0x18] = a4\n  2618: a5 = a4 >> 0x38\n  2621: u8 [a0 + 0x1f] = a5\n  2624: a5 = a4 >> 0x30\n  2627: u8 [a0 + 0x1e] = a5\n  2630: a5 = a4 >> 0x28\n  2633: u8 [a0 + 0x1d] = a5\n  2636: a5 = a4 >> 0x20\n  2639: u8 [a0 + 0x1c] = a5\n  2642: a5 = a4 >> 0x18\n  2645: u8 [a0 + 0x1b] = a5\n  2648: a5 = a4 >> 0x10\n  2651: u8 [a0 + 0x1a] = a5\n  2654: a4 = a4 >> 0x8\n  2657: u8 [a0 + 0x19] = a4\n  2660: u8 [a0 + 0x10] = a3\n  2663: a4 = a3 >> 0x38\n  2666: u8 [a0 + 0x17] = a4\n  2669: a4 = a3 >> 0x30\n  2672: u8 [a0 + 0x16] = a4\n  2675: a4 = a3 >> 0x28\n  2678: u8 [a0 + 0x15] = a4\n  2681: a4 = a3 >> 0x20\n  2684: u8 [a0 + 0x14] = a4\n  2687: a4 = a3 >> 0x18\n  2690: u8 [a0 + 0x13] = a4\n  2693: a4 = a3 >> 0x10\n  2696: u8 [a0 + 0x12] = a4\n  2699: a3 = a3 >> 0x8\n  2702: u8 [a0 + 0x11] = a3\n  2705: u8 [a0 + 0x8] = a2\n  2708: a3 = a2 >> 0x38\n  2711: u8 [a0 + 0xf] = a3\n  2714: a3 = a2 >> 0x30\n  2717: u8 [a0 + 0xe] = a3\n  2720: a3 = a2 >> 0x28\n  2723: u8 [a0 + 0xd] = a3\n  2726: a3 = a2 >> 0x20\n  2729: u8 [a0 + 0xc] = a3\n  2732: a3 = a2 >> 0x18\n  2735: u8 [a0 + 0xb] = a3\n  2738: a3 = a2 >> 0x10\n  2741: u8 [a0 + 0xa] = a3\n  2744: a2 = a2 >> 0x8\n  2747: u8 [a0 + 0x9] = a2\n  2750: u8 [a0] = a1\n  2752: a2 = a1 >> 0x38\n  2755: u8 [a0 + 0x7] = a2\n  2758: a2 = a1 >> 0x30\n  2761: u8 [a0 + 0x6] = a2\n  2764: a2 = a1 >> 0x28\n  2767: u8 [a0 + 0x5] = a2\n  2770: a2 = a1 >> 0x20\n  2773: u8 [a0 + 0x4] = a2\n  2776: a2 = a1 >> 0x18\n  2779: u8 [a0 + 0x3] = a2\n  2782: a2 = a1 >> 0x10\n  2785: u8 [a0 + 0x2] = a2\n  2788: a1 = a1 >> 0x8\n  2791: u8 [a0 + 0x1] = a1\n  2794: a0 = u64 [sp + 0x38]\n  2797: a1 = u64 [sp + 0x28]\n  2800: u64 [a0] = a1\n  2802: a1 = u64 [sp + 0x18]\n  2805: u64 [a0 + 0x18] = a1\n  2808: a1 = u64 [sp + 0x30]\n  2811: u64 [a0 + 0x8] = a1\n  2814: a1 = u64 [sp + 0x20]\n  2817: u64 [a0 + 0x10] = a1\n  2820: sp = s0 + 0xffffffffffffff60\n  2824: ra = u64 [sp + 0x98]\n  2828: s0 = u64 [sp + 0x90]\n  2832: s1 = u64 [sp + 0x88]\n  2836: sp = sp + 0xa0\n  2840: ret\n      : @80 (gas: 8)\n  2842: u64 [sp + 112] = 0\n  2845: u64 [sp + 104] = 0\n  2848: u64 [sp + 96] = 0\n  2851: a0 = 0x4e487b7100000000\n  2861: a1 = sp + 0x60\n  2864: u64 [sp + 0x78] = a0\n  2867: a0 = 0\n  2869: ra = 56, jump @23\n      : @81 [@dyn 28] (gas: 7)\n  2874: u64 [sp + 88] = 0\n  2877: u64 [sp + 80] = 0\n  2880: u64 [sp + 64] = 0x41\n  2884: a0 = 0x4\n  2887: a1 = sp + 0x40\n  2890: u64 [sp + 72] = 0\n  2893: ra = 58, jump @23\n      : @82 [@dyn 29] (gas: 3)\n  2898: a1 = 0x24\n  2901: a0 = 0\n  2903: ra = 60, jump @0\n      : @83 [@dyn 30] (gas: 6)\n  2908: i32 a1 = a0 + 0\n  2910: a0 = 0x1\n  2913: a2 = 0x24\n  2916: ra = 0x3e\n  2919: ecalli 7 // 'seal_return'\n  2921: fallthrough\n      : @84 [@dyn 31] (gas: 5)\n  2922: sp = sp + 0xfffffffffffffff8\n  2925: u64 [sp] = ra\n  2927: a0 = 0\n  2929: a1 = 0\n  2931: ra = 64, jump @0\n      : @85 [@dyn 32] (gas: 6)\n  2936: i32 a1 = a0 + 0\n  2938: a0 = 0x1\n  2941: a2 = 0\n  2943: ra = 0x42\n  2946: ecalli 7 // 'seal_return'\n  2948: fallthrough\n      : @86 [@dyn 33] (gas: 7)\n  2949: a3 = u64 [a1 + 0x18]\n  2952: a4 = u64 [a1 + 0x10]\n  2955: a2 = u64 [a1 + 0x8]\n  2958: a3 = a3 | a4\n  2961: a4 = a2 <u 0x1\n  2964: a4 = 0 if a3 != 0\n  2966: jump @88 if a4 == 0\n      : @87 (gas: 16)\n  2969: a1 = u64 [a1]\n  2971: a3 = a1 + 0x1f\n  2974: a1 = a3 <u a1\n  2977: a1 = a1 + a2\n  2980: a1 = a1 & 0x1\n  2983: a3 = a3 & 0xffffffffffffffe0\n  2986: a2 = a3 + 0x20\n  2989: a3 = a2 <u a3\n  2992: a4 = a1 + a3\n  2995: a1 = a4 <u a1\n  2998: a1 = a3 if a3 == 0\n  3001: u64 [a0 + 24] = 0\n  3004: u64 [a0] = a2\n  3006: u64 [a0 + 0x8] = a4\n  3009: u64 [a0 + 0x10] = a1\n  3012: ret\n      : @88 (gas: 13)\n  3014: sp = sp + 0xffffffffffffffb0\n  3017: u64 [sp + 0x48] = ra\n  3020: u64 [sp + 0x40] = s0\n  3023: s0 = sp + 0x50\n  3026: sp = sp & 0xfffffffffffffff0\n  3029: u64 [sp + 48] = 0\n  3032: u64 [sp + 40] = 0\n  3035: u64 [sp + 32] = 0\n  3038: a0 = 0x4e487b7100000000\n  3048: a1 = sp + 0x20\n  3051: u64 [sp + 0x38] = a0\n  3054: a0 = 0\n  3056: ra = 68, jump @23\n      : @89 [@dyn 34] (gas: 7)\n  3061: u64 [sp + 24] = 0\n  3064: u64 [sp + 16] = 0\n  3067: u64 [sp + 0] = 0x41\n  3070: a0 = 0x4\n  3073: a1 = sp\n  3075: u64 [sp + 8] = 0\n  3078: ra = 70, jump @23\n      : @90 [@dyn 35] (gas: 3)\n  3083: a1 = 0x24\n  3086: a0 = 0\n  3088: ra = 72, jump @0\n      : @91 [@dyn 36] (gas: 6)\n  3093: i32 a1 = a0 + 0\n  3095: a0 = 0x1\n  3098: a2 = 0x24\n  3101: ra = 0x4a\n  3104: ecalli 7 // 'seal_return'\n  3106: fallthrough\n      : @92 [@dyn 37] (gas: 16)\n  3107: sp = sp + 0xffffffffffffffa0\n  3110: u64 [sp + 0x58] = ra\n  3113: u64 [sp + 0x50] = s0\n  3116: u64 [sp + 0x48] = s1\n  3119: s1 = u64 [a1 + 0x10]\n  3122: t0 = u64 [a1 + 0x18]\n  3125: s0 = u64 [a1 + 0x8]\n  3128: t1 = u64 [a1]\n  3130: a1 = s0 | t0\n  3133: a3 = t1 | s1\n  3136: a3 = a3 | a1\n  3139: a3 = a3 >> 0x20\n  3142: a1 = a1 | s1\n  3145: a1 = a1 << 0x20\n  3148: a1 = a1 | a3\n  3151: jump @101 if a1 != 0\n      : @93 (gas: 12)\n  3155: a1 = u64 [a0 + 0x18]\n  3158: a3 = u64 [a0 + 0x10]\n  3161: a5 = u64 [a0]\n  3163: a0 = u64 [a0 + 0x8]\n  3166: a4 = a5 | a3\n  3169: a0 = a0 | a1\n  3172: a4 = a4 | a0\n  3175: a4 = a4 >> 0x20\n  3178: a0 = a0 | a3\n  3181: a0 = a0 << 0x20\n  3184: a0 = a0 | a4\n  3187: jump @101 if a0 != 0\n      : @94 (gas: 19)\n  3191: u64 [sp + 0x10] = a5\n  3194: u64 [sp + 0x30] = s0\n  3197: u64 [sp + 0x38] = s1\n  3200: u64 [sp + 0x40] = t0\n  3203: a1 = u64 [a2 + 0x18]\n  3206: a3 = u64 [a2 + 0x10]\n  3209: s0 = u64 [a2]\n  3211: a2 = u64 [a2 + 0x8]\n  3214: a0 = s0 | a3\n  3217: u64 [sp + 0x28] = a1\n  3220: u64 [sp + 0x18] = a2\n  3223: a1 = a1 | a2\n  3226: a0 = a0 | a1\n  3229: a0 = a0 >> 0x20\n  3232: u64 [sp + 0x20] = a3\n  3235: a1 = a1 | a3\n  3238: a1 = a1 << 0x20\n  3241: a0 = a0 | a1\n  3244: jump @101 if a0 != 0\n      : @95 (gas: 5)\n  3248: i32 a0 = t1 + 0\n  3250: i32 s1 = s0 + 0\n  3252: a1 = s1\n  3254: u64 [sp + 0x8] = t1\n  3257: ra = 76, jump @0\n      : @96 [@dyn 38] (gas: 4)\n  3262: u64 [sp] = a0\n  3264: a0 = i32 [sp + 0x10]\n  3267: a1 = s1\n  3269: ra = 78, jump @0\n      : @97 [@dyn 39] (gas: 4)\n  3274: a1 = a0\n  3276: a0 = u64 [sp]\n  3278: a2 = s0\n  3280: ra = 80, jump @8\n      : @98 [@dyn 40] (gas: 29)\n  3285: a0 = u64 [sp + 0x8]\n  3288: a0 = a0 + s0\n  3291: a1 = a0 <u s0\n  3294: a2 = u64 [sp + 0x30]\n  3297: a4 = u64 [sp + 0x18]\n  3300: a2 = a2 + a4\n  3303: a2 = a2 + a1\n  3306: a3 = a2 ^ a4\n  3309: a4 = a2 <u a4\n  3312: a4 = a1 if a3 == 0\n  3315: a1 = u64 [sp + 0x38]\n  3318: a5 = u64 [sp + 0x20]\n  3321: a1 = a1 + a5\n  3324: a4 = a4 + a1\n  3327: a3 = a4 <u a1\n  3330: a1 = a1 <u a5\n  3333: a5 = u64 [sp + 0x40]\n  3336: s1 = u64 [sp + 0x28]\n  3339: a5 = a5 + s1\n  3342: a1 = a1 + a5\n  3345: a1 = a1 + a3\n  3348: a3 = a0 | a4\n  3351: a1 = a1 | a2\n  3354: a3 = a3 | a1\n  3357: a3 = a3 >> 0x20\n  3360: a1 = a1 | a4\n  3363: a1 = a1 << 0x20\n  3366: a1 = a1 | a3\n  3369: jump @101 if a1 != 0\n      : @99 (gas: 3)\n  3372: i32 a0 = a0 + 0\n  3374: a1 = 0x20\n  3377: ra = 82, jump @0\n      : @100 [@dyn 41] (gas: 37)\n  3382: u8 [a0 + 31] = 0\n  3385: u8 [a0 + 30] = 0\n  3388: u8 [a0 + 29] = 0\n  3391: u8 [a0 + 28] = 0\n  3394: u8 [a0 + 27] = 0\n  3397: u8 [a0 + 26] = 0\n  3400: u8 [a0 + 25] = 0\n  3403: u8 [a0 + 24] = 0\n  3406: u8 [a0 + 23] = 0\n  3409: u8 [a0 + 22] = 0\n  3412: u8 [a0 + 21] = 0\n  3415: u8 [a0 + 20] = 0\n  3418: u8 [a0 + 19] = 0\n  3421: u8 [a0 + 18] = 0\n  3424: u8 [a0 + 17] = 0\n  3427: u8 [a0 + 16] = 0\n  3430: u8 [a0 + 15] = 0\n  3433: u8 [a0 + 14] = 0\n  3436: u8 [a0 + 13] = 0\n  3439: u8 [a0 + 12] = 0\n  3442: u8 [a0 + 11] = 0\n  3445: u8 [a0 + 10] = 0\n  3448: u8 [a0 + 9] = 0\n  3451: u8 [a0 + 8] = 0\n  3454: u8 [a0 + 7] = 0\n  3457: u8 [a0 + 6] = 0\n  3460: u8 [a0 + 5] = 0\n  3463: u8 [a0 + 4] = 0\n  3466: u8 [a0 + 3] = 0\n  3469: u8 [a0 + 2] = 0\n  3472: u8 [a0 + 1] = 0\n  3475: u8 [a0 + 0] = 0\n  3477: ra = u64 [sp + 0x58]\n  3480: s0 = u64 [sp + 0x50]\n  3483: s1 = u64 [sp + 0x48]\n  3486: sp = sp + 0x60\n  3489: ret\n      : @101 (gas: 1)\n  3491: trap\n      : @102 (gas: 16)\n  3492: sp = sp + 0xfffffffffffffed0\n  3496: u64 [sp + 0x128] = ra\n  3500: u64 [sp + 0x120] = s0\n  3504: u64 [sp + 0x118] = s1\n  3508: s0 = sp + 0x130\n  3512: sp = sp & 0xfffffffffffffff0\n  3515: a4 = u64 [a2 + 0x18]\n  3518: a5 = u64 [a2 + 0x10]\n  3521: s1 = u64 [a2 + 0x8]\n  3524: u64 [sp + 0x80] = a4\n  3528: u64 [sp + 0x58] = a5\n  3531: a4 = a4 | a5\n  3534: a5 = s1 <u 0x1\n  3537: a5 = 0 if a4 != 0\n  3539: u64 [sp + 0x8] = a0\n  3542: jump @117 if a5 == 0\n      : @103 (gas: 36)\n  3546: a0 = u64 [a3 + 0x18]\n  3549: u64 [sp + 0x20] = a0\n  3552: a0 = u64 [a3 + 0x10]\n  3555: u64 [sp + 0x28] = a0\n  3558: a0 = u64 [a3 + 0x8]\n  3561: u64 [sp + 0x10] = a0\n  3564: a0 = u64 [a3]\n  3566: u64 [sp + 0x18] = a0\n  3569: a2 = u64 [a2]\n  3571: a0 = u64 [a1 + 0x18]\n  3574: u64 [sp + 0x68] = a0\n  3577: a0 = u64 [a1 + 0x10]\n  3580: u64 [sp + 0x70] = a0\n  3583: a0 = u64 [a1 + 0x8]\n  3586: u64 [sp + 0x60] = a0\n  3589: a0 = u64 [a1]\n  3591: u64 [sp + 0x88] = a0\n  3595: a0 = a2 + 0x1f\n  3598: u64 [sp + 0x50] = a2\n  3601: a1 = a0 <u a2\n  3604: a1 = a1 + s1\n  3607: a1 = a1 & 0x1\n  3610: a0 = a0 & 0xffffffffffffffe0\n  3613: a2 = a0 + 0x20\n  3616: a0 = a2 <u a0\n  3619: a3 = a1 + a0\n  3622: a4 = a3 <u a1\n  3625: a4 = a0 if a0 == 0\n  3628: u64 [sp + 232] = 0\n  3632: u64 [sp + 0xd0] = a2\n  3636: u64 [sp + 0xd8] = a3\n  3640: a0 = sp + 0xf0\n  3644: a1 = sp + 0xd0\n  3648: u64 [sp + 0xe0] = a4\n  3652: u64 [sp + 0x48] = s1\n  3655: ra = 84, jump @75\n      : @104 [@dyn 42] (gas: 15)\n  3660: a0 = u64 [sp + 0x108]\n  3664: a2 = u64 [sp + 0x100]\n  3668: a1 = u64 [sp + 0xf8]\n  3672: a3 = u64 [sp + 0xf0]\n  3676: u64 [sp + 0x78] = a0\n  3679: u64 [sp + 0x38] = a1\n  3682: a0 = a0 | a1\n  3685: a1 = a3 | a2\n  3688: a1 = a1 | a0\n  3691: a1 = a1 >> 0x20\n  3694: u64 [sp + 0x40] = a2\n  3697: a0 = a0 | a2\n  3700: a0 = a0 << 0x20\n  3703: a0 = a0 | a1\n  3706: jump @116 if a0 != 0\n      : @105 (gas: 4)\n  3710: i32 a0 = a3 + 0\n  3712: a1 = 0x20\n  3715: u64 [sp + 0x30] = a3\n  3718: ra = 86, jump @0\n      : @106 [@dyn 43] (gas: 105)\n  3723: ra = u64 [sp + 0x50]\n  3726: a1 = u64 [sp + 0x88]\n  3730: a1 = a1 + ra\n  3733: a3 = a1 <u ra\n  3736: s1 = u64 [sp + 0x48]\n  3739: a2 = u64 [sp + 0x60]\n  3742: a2 = a2 + s1\n  3745: a4 = a2 + a3\n  3748: a5 = a4 ^ s1\n  3751: a2 = a4 <u s1\n  3754: a2 = a3 if a5 == 0\n  3757: a5 = u64 [sp + 0x10]\n  3760: t1 = a4 ^ a5\n  3763: a4 = a5 <u a4\n  3766: a5 = u64 [sp + 0x18]\n  3769: t0 = a5 <u a1\n  3772: a1 = u64 [sp + 0x58]\n  3775: a5 = u64 [sp + 0x70]\n  3778: a5 = a5 + a1\n  3781: t0 = a4 if t1 != 0\n  3784: a3 = a5 <u a1\n  3787: t2 = u64 [sp + 0x80]\n  3791: a4 = u64 [sp + 0x68]\n  3794: a4 = a4 + t2\n  3797: a3 = a3 + a4\n  3800: a2 = a2 + a5\n  3803: a4 = a2 <u a5\n  3806: a3 = a3 + a4\n  3809: a5 = u64 [sp + 0x20]\n  3812: a4 = a3 ^ a5\n  3815: a3 = a5 <u a3\n  3818: t1 = u64 [sp + 0x28]\n  3821: a5 = t1 <u a2\n  3824: a3 = a5 if a4 == 0\n  3827: a2 = a2 ^ t1\n  3830: a2 = a2 | a4\n  3833: t0 = a3 if a2 != 0\n  3836: a2 = reverse ra\n  3838: a3 = a2 >> 0x38\n  3841: u8 [a0 + 0x1f] = a3\n  3844: a3 = a2 >> 0x30\n  3847: u8 [a0 + 0x1e] = a3\n  3850: a3 = a2 >> 0x28\n  3853: u8 [a0 + 0x1d] = a3\n  3856: a3 = a2 >> 0x20\n  3859: u8 [a0 + 0x1c] = a3\n  3862: a3 = a2 >> 0x18\n  3865: u8 [a0 + 0x1b] = a3\n  3868: a3 = a2 >> 0x10\n  3871: u8 [a0 + 0x1a] = a3\n  3874: a3 = a2 >> 0x8\n  3877: u8 [a0 + 0x19] = a3\n  3880: a3 = reverse s1\n  3882: u8 [a0 + 0x18] = a2\n  3885: a2 = a3 >> 0x38\n  3888: u8 [a0 + 0x17] = a2\n  3891: a2 = a3 >> 0x30\n  3894: u8 [a0 + 0x16] = a2\n  3897: a2 = a3 >> 0x28\n  3900: u8 [a0 + 0x15] = a2\n  3903: a2 = a3 >> 0x20\n  3906: u8 [a0 + 0x14] = a2\n  3909: a2 = a3 >> 0x18\n  3912: u8 [a0 + 0x13] = a2\n  3915: a2 = a3 >> 0x10\n  3918: u8 [a0 + 0x12] = a2\n  3921: a2 = reverse a1\n  3923: u8 [a0 + 0x10] = a3\n  3926: a3 = a3 >> 0x8\n  3929: u8 [a0 + 0x11] = a3\n  3932: a3 = a2 >> 0x38\n  3935: u8 [a0 + 0xf] = a3\n  3938: a3 = a2 >> 0x30\n  3941: u8 [a0 + 0xe] = a3\n  3944: a3 = a2 >> 0x28\n  3947: u8 [a0 + 0xd] = a3\n  3950: a3 = a2 >> 0x20\n  3953: u8 [a0 + 0xc] = a3\n  3956: a3 = a2 >> 0x18\n  3959: u8 [a0 + 0xb] = a3\n  3962: a3 = a2 >> 0x10\n  3965: u8 [a0 + 0xa] = a3\n  3968: a3 = reverse t2\n  3970: u8 [a0 + 0x8] = a2\n  3973: a2 = a2 >> 0x8\n  3976: u8 [a0 + 0x9] = a2\n  3979: a2 = a3 >> 0x38\n  3982: u8 [a0 + 0x7] = a2\n  3985: a2 = a3 >> 0x30\n  3988: u8 [a0 + 0x6] = a2\n  3991: a2 = a3 >> 0x28\n  3994: u8 [a0 + 0x5] = a2\n  3997: a2 = a3 >> 0x20\n  4000: u8 [a0 + 0x4] = a2\n  4003: a2 = a3 >> 0x18\n  4006: u8 [a0 + 0x3] = a2\n  4009: a2 = a3 >> 0x10\n  4012: u8 [a0 + 0x2] = a2\n  4015: u8 [a0] = a3\n  4017: a3 = a3 >> 0x8\n  4020: u8 [a0 + 0x1] = a3\n  4023: t2 = s1\n  4025: s1 = u64 [sp + 0x88]\n  4029: a5 = u64 [sp + 0x70]\n  4032: jump @121 if t0 != 0\n      : @107 (gas: 11)\n  4036: t1 = a1\n  4038: a2 = u64 [sp + 0x40]\n  4041: a0 = u64 [sp + 0x78]\n  4044: a0 = a0 | a2\n  4047: a1 = 0xffffffe0\n  4057: a4 = u64 [sp + 0x30]\n  4060: a1 = a4 <u a1\n  4063: a3 = u64 [sp + 0x38]\n  4066: a1 = 0 if a3 != 0\n  4068: a1 = 0 if a0 != 0\n  4070: jump @116 if a1 == 0\n      : @108 (gas: 10)\n  4074: a0 = s1 | a5\n  4077: a1 = u64 [sp + 0x68]\n  4080: t0 = u64 [sp + 0x60]\n  4083: a1 = t0 | a1\n  4086: a0 = a0 | a1\n  4089: a0 = a0 >> 0x20\n  4092: a1 = a1 | a5\n  4095: a1 = a1 << 0x20\n  4098: a0 = a0 | a1\n  4101: jump @116 if a0 != 0\n      : @109 (gas: 9)\n  4105: a0 = ra | t1\n  4108: a1 = u64 [sp + 0x80]\n  4112: a1 = t2 | a1\n  4115: a0 = a0 | a1\n  4118: a0 = a0 >> 0x20\n  4121: a1 = a1 | t1\n  4124: a1 = a1 << 0x20\n  4127: a0 = a0 | a1\n  4130: jump @116 if a0 != 0\n      : @110 (gas: 15)\n  4134: a5 = a4 + 0x20\n  4137: u64 [sp + 0x28] = a5\n  4140: a0 = a5 <u a4\n  4143: a1 = a3 + a0\n  4146: u64 [sp + 0x60] = a1\n  4149: a1 = a1 <u a3\n  4152: a1 = a0 if a0 == 0\n  4155: a1 = a1 + a2\n  4158: u64 [sp + 0x68] = a1\n  4161: a0 = a1 <u a2\n  4164: u64 [sp + 0x70] = a0\n  4167: i32 a0 = a5 + 0\n  4169: i32 s1 = ra + 0\n  4171: a1 = s1\n  4173: ra = 88, jump @0\n      : @111 [@dyn 44] (gas: 4)\n  4178: u64 [sp + 0x20] = a0\n  4181: a0 = i32 [sp + 0x88]\n  4185: a1 = s1\n  4187: ra = 90, jump @0\n      : @112 [@dyn 45] (gas: 5)\n  4192: a1 = a0\n  4194: a0 = u64 [sp + 0x20]\n  4197: s1 = u64 [sp + 0x50]\n  4200: a2 = s1\n  4202: ra = 92, jump @8\n      : @113 [@dyn 46] (gas: 31)\n  4207: a1 = u64 [sp + 0x28]\n  4210: a0 = a1 + s1\n  4213: a1 = a0 <u a1\n  4216: a2 = u64 [sp + 0x48]\n  4219: a4 = u64 [sp + 0x60]\n  4222: a2 = a2 + a4\n  4225: a2 = a2 + a1\n  4228: a3 = a2 ^ a4\n  4231: a4 = a2 <u a4\n  4234: a4 = a1 if a3 == 0\n  4237: a1 = u64 [sp + 0x58]\n  4240: a5 = u64 [sp + 0x68]\n  4243: a1 = a1 + a5\n  4246: a4 = a4 + a1\n  4249: a3 = a4 <u a1\n  4252: a1 = a1 <u a5\n  4255: a5 = u64 [sp + 0x80]\n  4259: s1 = u64 [sp + 0x78]\n  4262: a5 = a5 + s1\n  4265: s1 = u64 [sp + 0x70]\n  4268: a5 = a5 + s1\n  4271: a1 = a1 + a5\n  4274: a1 = a1 + a3\n  4277: a3 = a0 | a4\n  4280: a1 = a1 | a2\n  4283: a3 = a3 | a1\n  4286: a3 = a3 >> 0x20\n  4289: a1 = a1 | a4\n  4292: a1 = a1 << 0x20\n  4295: a1 = a1 | a3\n  4298: jump @116 if a1 != 0\n      : @114 (gas: 3)\n  4302: i32 a0 = a0 + 0\n  4304: a1 = 0x20\n  4307: ra = 94, jump @0\n      : @115 [@dyn 47] (gas: 47)\n  4312: u8 [a0 + 31] = 0\n  4315: u8 [a0 + 30] = 0\n  4318: u8 [a0 + 29] = 0\n  4321: u8 [a0 + 28] = 0\n  4324: u8 [a0 + 27] = 0\n  4327: u8 [a0 + 26] = 0\n  4330: u8 [a0 + 25] = 0\n  4333: u8 [a0 + 24] = 0\n  4336: u8 [a0 + 23] = 0\n  4339: u8 [a0 + 22] = 0\n  4342: u8 [a0 + 21] = 0\n  4345: u8 [a0 + 20] = 0\n  4348: u8 [a0 + 19] = 0\n  4351: u8 [a0 + 18] = 0\n  4354: u8 [a0 + 17] = 0\n  4357: u8 [a0 + 16] = 0\n  4360: u8 [a0 + 15] = 0\n  4363: u8 [a0 + 14] = 0\n  4366: u8 [a0 + 13] = 0\n  4369: u8 [a0 + 12] = 0\n  4372: u8 [a0 + 11] = 0\n  4375: u8 [a0 + 10] = 0\n  4378: u8 [a0 + 9] = 0\n  4381: u8 [a0 + 8] = 0\n  4384: u8 [a0 + 7] = 0\n  4387: u8 [a0 + 6] = 0\n  4390: u8 [a0 + 5] = 0\n  4393: u8 [a0 + 4] = 0\n  4396: u8 [a0 + 3] = 0\n  4399: u8 [a0 + 2] = 0\n  4402: u8 [a0 + 1] = 0\n  4405: u8 [a0 + 0] = 0\n  4407: a0 = u64 [sp + 0x8]\n  4410: a1 = u64 [sp + 0x30]\n  4413: u64 [a0] = a1\n  4415: a1 = u64 [sp + 0x78]\n  4418: u64 [a0 + 0x18] = a1\n  4421: a1 = u64 [sp + 0x38]\n  4424: u64 [a0 + 0x8] = a1\n  4427: a1 = u64 [sp + 0x40]\n  4430: u64 [a0 + 0x10] = a1\n  4433: sp = s0 + 0xfffffffffffffed0\n  4437: ra = u64 [sp + 0x128]\n  4441: s0 = u64 [sp + 0x120]\n  4445: s1 = u64 [sp + 0x118]\n  4449: sp = sp + 0x130\n  4453: ret\n      : @116 (gas: 1)\n  4455: trap\n      : @117 (gas: 8)\n  4456: u64 [sp + 192] = 0\n  4460: u64 [sp + 184] = 0\n  4464: u64 [sp + 176] = 0\n  4468: a0 = 0x4e487b7100000000\n  4478: a1 = sp + 0xb0\n  4482: u64 [sp + 0xc8] = a0\n  4486: a0 = 0\n  4488: ra = 96, jump @23\n      : @118 [@dyn 48] (gas: 7)\n  4493: u64 [sp + 168] = 0\n  4497: u64 [sp + 160] = 0\n  4501: u64 [sp + 144] = 0x41\n  4506: a0 = 0x4\n  4509: a1 = sp + 0x90\n  4513: u64 [sp + 152] = 0\n  4517: ra = 98, jump @23\n      : @119 [@dyn 49] (gas: 3)\n  4522: a1 = 0x24\n  4525: a0 = 0\n  4527: ra = 100, jump @0\n      : @120 [@dyn 50] (gas: 5)\n  4532: i32 a1 = a0 + 0\n  4534: a0 = 0x1\n  4537: a2 = 0x24\n  4540: ecalli 7 // 'seal_return'\n  4542: fallthrough\n      : @121 (gas: 3)\n  4543: a0 = 0\n  4545: a1 = 0\n  4547: ra = 102, jump @0\n      : @122 [@dyn 51] (gas: 6)\n  4552: i32 a1 = a0 + 0\n  4554: a0 = 0x1\n  4557: a2 = 0\n  4559: ra = 0x68\n  4562: ecalli 7 // 'seal_return'\n  4564: fallthrough\n      : @123 [@dyn 52] (gas: 37)\n  4565: sp = sp + 0xffffffffffffff20\n  4569: u64 [sp + 0xd8] = ra\n  4573: u64 [sp + 0xd0] = s0\n  4577: u64 [sp + 0xc8] = s1\n  4581: s0 = sp + 0xe0\n  4585: sp = sp & 0xfffffffffffffff0\n  4588: ra = u64 [a1]\n  4590: t1 = u64 [a2 + 0x8]\n  4593: t2 = u64 [a1 + 0x8]\n  4596: a4 = u64 [a2]\n  4598: a3 = ra + 0x1f\n  4601: t0 = a3 <u ra\n  4604: a5 = t2 + t0\n  4607: u64 [sp + 0x20] = a4\n  4610: a3 = a3 <u a4\n  4613: s1 = a5 ^ t1\n  4616: a4 = a5 <u t1\n  4619: a4 = a3 if s1 == 0\n  4622: s1 = u64 [a1 + 0x10]\n  4625: u64 [sp + 0x38] = t2\n  4628: a3 = a5 <u t2\n  4631: a3 = t0 if t0 == 0\n  4634: t0 = u64 [a2 + 0x18]\n  4637: a5 = u64 [a1 + 0x18]\n  4640: t2 = u64 [a2 + 0x10]\n  4643: a3 = a3 + s1\n  4646: a1 = a3 <u s1\n  4649: u64 [sp + 0x30] = a5\n  4652: a1 = a1 + a5\n  4655: a2 = a1 ^ t0\n  4658: a1 = a1 <s t0\n  4661: a5 = a3 <u t2\n  4664: a1 = a5 if a2 == 0\n  4667: a3 = a3 ^ t2\n  4670: a2 = a2 | a3\n  4673: a4 = a1 if a2 != 0\n  4676: jump @129 if a4 == 0\n      : @124 (gas: 15)\n  4680: u64 [sp] = t2\n  4682: u64 [sp + 0x8] = t0\n  4685: u64 [sp + 0x18] = a0\n  4688: u64 [sp + 0x28] = t1\n  4691: a0 = ra | s1\n  4694: a1 = u64 [sp + 0x38]\n  4697: a2 = u64 [sp + 0x30]\n  4700: a1 = a1 | a2\n  4703: a0 = a0 | a1\n  4706: a0 = a0 >> 0x20\n  4709: u64 [sp + 0x10] = s1\n  4712: a1 = a1 | s1\n  4715: a1 = a1 << 0x20\n  4718: a0 = a0 | a1\n  4721: jump @128 if a0 != 0\n      : @125 (gas: 4)\n  4725: i32 a0 = ra + 0\n  4727: a1 = 0x20\n  4730: s1 = ra\n  4732: ra = 106, jump @0\n      : @126 [@dyn 53] (gas: 124)\n  4737: a1 = u8 [a0 + 0x1]\n  4740: a2 = u8 [a0]\n  4742: a3 = u8 [a0 + 0x2]\n  4745: a4 = u8 [a0 + 0x3]\n  4748: a1 = a1 << 0x8\n  4751: a1 = a1 | a2\n  4754: a3 = a3 << 0x10\n  4757: a4 = a4 << 0x18\n  4760: a3 = a3 | a4\n  4763: a1 = a1 | a3\n  4766: a2 = u8 [a0 + 0x5]\n  4769: a3 = u8 [a0 + 0x4]\n  4772: a4 = u8 [a0 + 0x6]\n  4775: a5 = u8 [a0 + 0x7]\n  4778: a2 = a2 << 0x8\n  4781: a2 = a2 | a3\n  4784: a4 = a4 << 0x10\n  4787: a5 = a5 << 0x18\n  4790: a4 = a4 | a5\n  4793: a2 = a2 | a4\n  4796: a2 = a2 << 0x20\n  4799: t0 = a2 | a1\n  4802: a2 = u8 [a0 + 0x9]\n  4805: a3 = u8 [a0 + 0x8]\n  4808: a4 = u8 [a0 + 0xa]\n  4811: a5 = u8 [a0 + 0xb]\n  4814: a2 = a2 << 0x8\n  4817: a2 = a2 | a3\n  4820: a4 = a4 << 0x10\n  4823: a5 = a5 << 0x18\n  4826: a4 = a4 | a5\n  4829: a2 = a2 | a4\n  4832: a3 = u8 [a0 + 0xd]\n  4835: a4 = u8 [a0 + 0xc]\n  4838: a5 = u8 [a0 + 0xe]\n  4841: a1 = u8 [a0 + 0xf]\n  4844: a3 = a3 << 0x8\n  4847: a3 = a3 | a4\n  4850: a5 = a5 << 0x10\n  4853: a1 = a1 << 0x18\n  4856: a1 = a1 | a5\n  4859: a1 = a1 | a3\n  4862: a1 = a1 << 0x20\n  4865: t1 = a1 | a2\n  4868: a1 = u8 [a0 + 0x11]\n  4871: a3 = u8 [a0 + 0x10]\n  4874: a4 = u8 [a0 + 0x12]\n  4877: a5 = u8 [a0 + 0x13]\n  4880: a1 = a1 << 0x8\n  4883: a1 = a1 | a3\n  4886: a4 = a4 << 0x10\n  4889: a5 = a5 << 0x18\n  4892: a4 = a4 | a5\n  4895: a1 = a1 | a4\n  4898: a3 = u8 [a0 + 0x15]\n  4901: a4 = u8 [a0 + 0x14]\n  4904: a5 = u8 [a0 + 0x16]\n  4907: a2 = u8 [a0 + 0x17]\n  4910: a3 = a3 << 0x8\n  4913: a3 = a3 | a4\n  4916: a5 = a5 << 0x10\n  4919: a2 = a2 << 0x18\n  4922: a2 = a2 | a5\n  4925: a2 = a2 | a3\n  4928: a2 = a2 << 0x20\n  4931: a3 = a2 | a1\n  4934: a1 = u8 [a0 + 0x19]\n  4937: a2 = u8 [a0 + 0x18]\n  4940: a4 = u8 [a0 + 0x1a]\n  4943: a5 = u8 [a0 + 0x1b]\n  4946: a1 = a1 << 0x8\n  4949: a1 = a1 | a2\n  4952: a4 = a4 << 0x10\n  4955: a5 = a5 << 0x18\n  4958: a4 = a4 | a5\n  4961: a1 = a1 | a4\n  4964: a2 = u8 [a0 + 0x1d]\n  4967: a4 = u8 [a0 + 0x1c]\n  4970: a5 = u8 [a0 + 0x1e]\n  4973: a0 = u8 [a0 + 0x1f]\n  4976: a2 = a2 << 0x8\n  4979: a2 = a2 | a4\n  4982: a5 = a5 << 0x10\n  4985: a0 = a0 << 0x18\n  4988: a0 = a0 | a5\n  4991: a0 = a0 | a2\n  4994: a0 = a0 << 0x20\n  4997: a0 = a0 | a1\n  5000: t2 = reverse a0\n  5002: ra = reverse a3\n  5004: a1 = reverse t1\n  5006: a2 = reverse t0\n  5008: a3 = s1 + 0x20\n  5011: a5 = a3 <u s1\n  5014: a0 = u64 [sp + 0x38]\n  5017: a4 = a0 + a5\n  5020: s1 = a4 <u a0\n  5023: s1 = a5 if a5 == 0\n  5026: a0 = u64 [sp + 0x10]\n  5029: s1 = s1 + a0\n  5032: a5 = s1 <u a0\n  5035: a0 = u64 [sp + 0x30]\n  5038: a5 = a5 + a0\n  5041: a0 = u64 [sp + 0x8]\n  5044: u64 [sp + 0x58] = a0\n  5047: a0 = u64 [sp]\n  5049: u64 [sp + 0x50] = a0\n  5052: a0 = u64 [sp + 0x28]\n  5055: u64 [sp + 0x48] = a0\n  5058: a0 = u64 [sp + 0x20]\n  5061: u64 [sp + 0x40] = a0\n  5064: u64 [sp + 0x88] = a4\n  5068: u64 [sp + 0x80] = a3\n  5072: u64 [sp + 0x90] = s1\n  5076: u64 [sp + 0x98] = a5\n  5080: u64 [sp + 0x78] = a2\n  5083: u64 [sp + 0x70] = a1\n  5086: u64 [sp + 0x68] = ra\n  5089: a0 = sp + 0xa0\n  5093: a1 = sp + 0x80\n  5097: a2 = sp + 0x60\n  5100: a3 = sp + 0x40\n  5103: u64 [sp + 0x60] = t2\n  5106: ra = 108, jump @102\n      : @127 [@dyn 54] (gas: 15)\n  5111: a0 = u64 [sp + 0xb0]\n  5115: a1 = u64 [sp + 0xb8]\n  5119: a2 = u64 [sp + 0xa0]\n  5123: a3 = u64 [sp + 0xa8]\n  5127: a4 = u64 [sp + 0x18]\n  5130: u64 [a4 + 0x10] = a0\n  5133: u64 [a4 + 0x18] = a1\n  5136: u64 [a4] = a2\n  5138: u64 [a4 + 0x8] = a3\n  5141: sp = s0 + 0xffffffffffffff20\n  5145: ra = u64 [sp + 0xd8]\n  5149: s0 = u64 [sp + 0xd0]\n  5153: s1 = u64 [sp + 0xc8]\n  5157: sp = sp + 0xe0\n  5161: ret\n      : @128 (gas: 1)\n  5163: trap\n      : @129 (gas: 3)\n  5164: a0 = 0\n  5166: a1 = 0\n  5168: ra = 110, jump @0\n      : @130 [@dyn 55] (gas: 6)\n  5173: i32 a1 = a0 + 0\n  5175: a0 = 0x1\n  5178: a2 = 0\n  5180: ra = 0x70\n  5183: ecalli 7 // 'seal_return'\n  5185: fallthrough\n      : @131 [@dyn 56] (gas: 42)\n  5186: sp = sp + 0xfffffffffffffe70\n  5190: u64 [sp + 0x188] = ra\n  5194: u64 [sp + 0x180] = s0\n  5198: u64 [sp + 0x178] = s1\n  5202: s0 = sp + 0x190\n  5206: sp = sp & 0xfffffffffffffff0\n  5209: s1 = u64 [a2 + 0x8]\n  5212: t2 = u64 [a1 + 0x8]\n  5215: a5 = u64 [a2]\n  5217: ra = u64 [a1]\n  5219: t1 = u64 [a2 + 0x10]\n  5222: a4 = s1 ^ t2\n  5225: a3 = s1 <u t2\n  5228: t0 = a5 <u ra\n  5231: a3 = t0 if a4 == 0\n  5234: u64 [sp + 0x68] = s1\n  5237: a4 = s1 - t2\n  5240: a4 = a4 - t0\n  5243: u64 [sp + 0x60] = a5\n  5246: a5 = a5 - ra\n  5249: a5 = a5 <u 0x40\n  5252: a5 = a5 ^ 0x1\n  5255: t0 = u64 [a1 + 0x10]\n  5258: s1 = a4 >u 0\n  5260: a5 = s1 if a4 != 0\n  5263: a4 = u64 [a2 + 0x18]\n  5266: s1 = u64 [a1 + 0x18]\n  5269: a1 = t1 - t0\n  5272: a2 = a1 - a3\n  5275: a1 = a1 <u a3\n  5278: u64 [sp + 0x58] = t1\n  5281: a3 = t1 <u t0\n  5284: u64 [sp + 0x50] = a4\n  5287: a4 = a4 - s1\n  5290: a4 = a4 - a3\n  5293: a4 = a4 - a1\n  5296: a1 = a4 >s 0\n  5298: a3 = a2 >u 0\n  5300: a3 = a1 if a4 != 0\n  5303: a2 = a2 | a4\n  5306: a5 = a3 if a2 != 0\n  5309: jump @148 if a5 == 0\n      : @132 (gas: 12)\n  5313: u64 [sp + 0x10] = a0\n  5316: a0 = ra | t0\n  5319: u64 [sp + 0x48] = t2\n  5322: u64 [sp + 0x38] = s1\n  5325: a1 = t2 | s1\n  5328: a0 = a0 | a1\n  5331: a0 = a0 >> 0x20\n  5334: u64 [sp + 0x40] = t0\n  5337: a1 = a1 | t0\n  5340: a1 = a1 << 0x20\n  5343: a0 = a0 | a1\n  5346: jump @147 if a0 != 0\n      : @133 (gas: 5)\n  5350: i32 a0 = ra + 0\n  5352: a1 = 0x20\n  5355: u64 [sp + 0x8] = a0\n  5358: u64 [sp + 0x30] = ra\n  5361: ra = 114, jump @0\n      : @134 [@dyn 57] (gas: 73)\n  5366: a1 = u8 [a0 + 0x9]\n  5369: a2 = u8 [a0 + 0x8]\n  5372: a3 = u8 [a0 + 0xa]\n  5375: a4 = u8 [a0 + 0xb]\n  5378: a1 = a1 << 0x8\n  5381: a1 = a1 | a2\n  5384: a3 = a3 << 0x10\n  5387: a4 = a4 << 0x18\n  5390: a3 = a3 | a4\n  5393: a1 = a1 | a3\n  5396: a2 = u8 [a0 + 0xd]\n  5399: a3 = u8 [a0 + 0xc]\n  5402: a4 = u8 [a0 + 0xe]\n  5405: a5 = u8 [a0 + 0xf]\n  5408: a2 = a2 << 0x8\n  5411: a2 = a2 | a3\n  5414: a4 = a4 << 0x10\n  5417: a5 = a5 << 0x18\n  5420: a4 = a4 | a5\n  5423: a2 = a2 | a4\n  5426: a2 = a2 << 0x20\n  5429: t0 = a2 | a1\n  5432: a2 = u8 [a0 + 0x1]\n  5435: a3 = u8 [a0]\n  5437: a4 = u8 [a0 + 0x2]\n  5440: a5 = u8 [a0 + 0x3]\n  5443: a2 = a2 << 0x8\n  5446: a2 = a2 | a3\n  5449: a4 = a4 << 0x10\n  5452: a5 = a5 << 0x18\n  5455: a4 = a4 | a5\n  5458: a2 = a2 | a4\n  5461: a3 = u8 [a0 + 0x5]\n  5464: a4 = u8 [a0 + 0x4]\n  5467: a5 = u8 [a0 + 0x6]\n  5470: s1 = u8 [a0 + 0x7]\n  5473: a3 = a3 << 0x8\n  5476: a3 = a3 | a4\n  5479: a5 = a5 << 0x10\n  5482: s1 = s1 << 0x18\n  5485: a5 = a5 | s1\n  5488: a3 = a3 | a5\n  5491: a3 = a3 << 0x20\n  5494: a2 = a2 | a3\n  5497: a3 = u8 [a0 + 0x11]\n  5500: a4 = u8 [a0 + 0x10]\n  5503: a5 = u8 [a0 + 0x12]\n  5506: s1 = u8 [a0 + 0x13]\n  5509: a3 = a3 << 0x8\n  5512: a3 = a3 | a4\n  5515: a5 = a5 << 0x10\n  5518: s1 = s1 << 0x18\n  5521: a5 = a5 | s1\n  5524: a3 = a3 | a5\n  5527: a4 = u8 [a0 + 0x15]\n  5530: a5 = u8 [a0 + 0x14]\n  5533: s1 = u8 [a0 + 0x16]\n  5536: a1 = u8 [a0 + 0x17]\n  5539: a4 = a4 << 0x8\n  5542: a4 = a4 | a5\n  5545: s1 = s1 << 0x10\n  5548: a1 = a1 << 0x18\n  5551: a1 = a1 | s1\n  5554: a1 = a1 | a4\n  5557: a1 = a1 << 0x20\n  5560: a1 = a1 | a3\n  5563: a3 = reverse a1\n  5565: t1 = reverse a2\n  5567: a1 = reverse t0\n  5569: a4 = a1 | t1\n  5572: a5 = a3 <u 0x1\n  5575: a5 = 0 if a4 != 0\n  5577: jump @148 if a5 == 0\n      : @135 (gas: 65)\n  5581: a4 = u8 [a0 + 0x19]\n  5584: a5 = u8 [a0 + 0x18]\n  5587: s1 = u8 [a0 + 0x1a]\n  5590: a2 = u8 [a0 + 0x1b]\n  5593: a4 = a4 << 0x8\n  5596: a4 = a4 | a5\n  5599: s1 = s1 << 0x10\n  5602: a2 = a2 << 0x18\n  5605: a2 = a2 | s1\n  5608: a2 = a2 | a4\n  5611: a4 = u8 [a0 + 0x1d]\n  5614: a5 = u8 [a0 + 0x1c]\n  5617: s1 = u8 [a0 + 0x1e]\n  5620: a0 = u8 [a0 + 0x1f]\n  5623: a4 = a4 << 0x8\n  5626: a4 = a4 | a5\n  5629: s1 = s1 << 0x10\n  5632: a0 = a0 << 0x18\n  5635: a0 = a0 | s1\n  5638: a0 = a0 | a4\n  5641: a0 = a0 << 0x20\n  5644: a0 = a0 | a2\n  5647: a0 = reverse a0\n  5649: t0 = u64 [sp + 0x30]\n  5652: t0 = t0 + a0\n  5655: a0 = t0 <u a0\n  5658: a2 = u64 [sp + 0x48]\n  5661: a2 = a2 + a3\n  5664: t2 = a2 + a0\n  5667: a2 = t2 ^ a3\n  5670: s1 = t2 <u a3\n  5673: s1 = a0 if a2 == 0\n  5676: a0 = u64 [sp + 0x40]\n  5679: a0 = a0 + a1\n  5682: s1 = s1 + a0\n  5685: a2 = s1 <u a0\n  5688: a0 = a0 <u a1\n  5691: a1 = u64 [sp + 0x38]\n  5694: t1 = t1 + a1\n  5697: a0 = a0 + t1\n  5700: ra = a0 + a2\n  5703: a0 = t0 + 0x1f\n  5706: a1 = a0 <u t0\n  5709: a2 = t2 + a1\n  5712: a3 = a2 <u t2\n  5715: a3 = a1 if a1 == 0\n  5718: t1 = s1 + a3\n  5721: a1 = t1 <u s1\n  5724: a1 = a1 + ra\n  5727: a5 = u64 [sp + 0x68]\n  5730: a4 = a2 ^ a5\n  5733: a2 = a2 <u a5\n  5736: a5 = u64 [sp + 0x60]\n  5739: a0 = a0 <u a5\n  5742: a0 = a2 if a4 != 0\n  5745: a5 = u64 [sp + 0x58]\n  5748: a2 = t1 <u a5\n  5751: a4 = u64 [sp + 0x50]\n  5754: a3 = a1 ^ a4\n  5757: a1 = a1 <s a4\n  5760: a1 = a2 if a3 == 0\n  5763: a2 = t1 ^ a5\n  5766: a2 = a2 | a3\n  5769: a0 = a1 if a2 != 0\n  5772: jump @149 if a0 == 0\n      : @136 (gas: 11)\n  5776: a0 = t0 | s1\n  5779: u64 [sp + 0x28] = t2\n  5782: u64 [sp + 0x18] = ra\n  5785: a1 = t2 | ra\n  5788: a0 = a0 | a1\n  5791: a0 = a0 >> 0x20\n  5794: u64 [sp + 0x20] = s1\n  5797: a1 = a1 | s1\n  5800: a1 = a1 << 0x20\n  5803: a0 = a0 | a1\n  5806: jump @147 if a0 != 0\n      : @137 (gas: 4)\n  5810: i32 a0 = t0 + 0\n  5812: a1 = 0x20\n  5815: s1 = t0\n  5817: ra = 116, jump @0\n      : @138 [@dyn 58] (gas: 124)\n  5822: a1 = u8 [a0 + 0x1]\n  5825: a2 = u8 [a0]\n  5827: a3 = u8 [a0 + 0x2]\n  5830: a4 = u8 [a0 + 0x3]\n  5833: a1 = a1 << 0x8\n  5836: a1 = a1 | a2\n  5839: a3 = a3 << 0x10\n  5842: a4 = a4 << 0x18\n  5845: a3 = a3 | a4\n  5848: a1 = a1 | a3\n  5851: a2 = u8 [a0 + 0x5]\n  5854: a3 = u8 [a0 + 0x4]\n  5857: a4 = u8 [a0 + 0x6]\n  5860: a5 = u8 [a0 + 0x7]\n  5863: a2 = a2 << 0x8\n  5866: a2 = a2 | a3\n  5869: a4 = a4 << 0x10\n  5872: a5 = a5 << 0x18\n  5875: a4 = a4 | a5\n  5878: a2 = a2 | a4\n  5881: a2 = a2 << 0x20\n  5884: t0 = a2 | a1\n  5887: a2 = u8 [a0 + 0x9]\n  5890: a3 = u8 [a0 + 0x8]\n  5893: a4 = u8 [a0 + 0xa]\n  5896: a5 = u8 [a0 + 0xb]\n  5899: a2 = a2 << 0x8\n  5902: a2 = a2 | a3\n  5905: a4 = a4 << 0x10\n  5908: a5 = a5 << 0x18\n  5911: a4 = a4 | a5\n  5914: a2 = a2 | a4\n  5917: a3 = u8 [a0 + 0xd]\n  5920: a4 = u8 [a0 + 0xc]\n  5923: a5 = u8 [a0 + 0xe]\n  5926: a1 = u8 [a0 + 0xf]\n  5929: a3 = a3 << 0x8\n  5932: a3 = a3 | a4\n  5935: a5 = a5 << 0x10\n  5938: a1 = a1 << 0x18\n  5941: a1 = a1 | a5\n  5944: a1 = a1 | a3\n  5947: a1 = a1 << 0x20\n  5950: t1 = a1 | a2\n  5953: a1 = u8 [a0 + 0x11]\n  5956: a3 = u8 [a0 + 0x10]\n  5959: a4 = u8 [a0 + 0x12]\n  5962: a5 = u8 [a0 + 0x13]\n  5965: a1 = a1 << 0x8\n  5968: a1 = a1 | a3\n  5971: a4 = a4 << 0x10\n  5974: a5 = a5 << 0x18\n  5977: a4 = a4 | a5\n  5980: a1 = a1 | a4\n  5983: a3 = u8 [a0 + 0x15]\n  5986: a4 = u8 [a0 + 0x14]\n  5989: a5 = u8 [a0 + 0x16]\n  5992: a2 = u8 [a0 + 0x17]\n  5995: a3 = a3 << 0x8\n  5998: a3 = a3 | a4\n  6001: a5 = a5 << 0x10\n  6004: a2 = a2 << 0x18\n  6007: a2 = a2 | a5\n  6010: a2 = a2 | a3\n  6013: a2 = a2 << 0x20\n  6016: a3 = a2 | a1\n  6019: a1 = u8 [a0 + 0x19]\n  6022: a2 = u8 [a0 + 0x18]\n  6025: a4 = u8 [a0 + 0x1a]\n  6028: a5 = u8 [a0 + 0x1b]\n  6031: a1 = a1 << 0x8\n  6034: a1 = a1 | a2\n  6037: a4 = a4 << 0x10\n  6040: a5 = a5 << 0x18\n  6043: a4 = a4 | a5\n  6046: a1 = a1 | a4\n  6049: a2 = u8 [a0 + 0x1d]\n  6052: a4 = u8 [a0 + 0x1c]\n  6055: a5 = u8 [a0 + 0x1e]\n  6058: a0 = u8 [a0 + 0x1f]\n  6061: a2 = a2 << 0x8\n  6064: a2 = a2 | a4\n  6067: a5 = a5 << 0x10\n  6070: a0 = a0 << 0x18\n  6073: a0 = a0 | a5\n  6076: a0 = a0 | a2\n  6079: a0 = a0 << 0x20\n  6082: a0 = a0 | a1\n  6085: t2 = reverse a0\n  6087: ra = reverse a3\n  6089: a1 = reverse t1\n  6091: a2 = reverse t0\n  6093: a3 = s1 + 0x20\n  6096: a5 = a3 <u s1\n  6099: a0 = u64 [sp + 0x28]\n  6102: a4 = a0 + a5\n  6105: s1 = a4 <u a0\n  6108: s1 = a5 if a5 == 0\n  6111: a0 = u64 [sp + 0x20]\n  6114: s1 = s1 + a0\n  6117: a5 = s1 <u a0\n  6120: a0 = u64 [sp + 0x18]\n  6123: a5 = a5 + a0\n  6126: a0 = u64 [sp + 0x50]\n  6129: u64 [sp + 0x108] = a0\n  6133: a0 = u64 [sp + 0x58]\n  6136: u64 [sp + 0x100] = a0\n  6140: a0 = u64 [sp + 0x68]\n  6143: u64 [sp + 0xf8] = a0\n  6147: a0 = u64 [sp + 0x60]\n  6150: u64 [sp + 0xf0] = a0\n  6154: u64 [sp + 0x138] = a4\n  6158: u64 [sp + 0x130] = a3\n  6162: u64 [sp + 0x140] = s1\n  6166: u64 [sp + 0x148] = a5\n  6170: u64 [sp + 0x128] = a2\n  6174: u64 [sp + 0x120] = a1\n  6178: u64 [sp + 0x118] = ra\n  6182: a0 = sp + 0x150\n  6186: a1 = sp + 0x130\n  6190: a2 = sp + 0x110\n  6194: a3 = sp + 0xf0\n  6198: u64 [sp + 0x110] = t2\n  6202: ra = 118, jump @102\n      : @139 [@dyn 59] (gas: 10)\n  6207: a0 = u64 [sp + 0x40]\n  6210: a1 = u64 [sp + 0x38]\n  6213: a0 = a0 | a1\n  6216: a1 = 0xffffffe0\n  6226: a2 = u64 [sp + 0x30]\n  6229: a1 = a2 <u a1\n  6232: a2 = u64 [sp + 0x48]\n  6235: a1 = 0 if a2 != 0\n  6237: a1 = 0 if a0 != 0\n  6239: jump @147 if a1 == 0\n      : @140 (gas: 12)\n  6243: a0 = u64 [sp + 0x168]\n  6247: u64 [sp + 0x20] = a0\n  6250: a0 = u64 [sp + 0x160]\n  6254: u64 [sp] = a0\n  6256: a0 = u64 [sp + 0x158]\n  6260: u64 [sp + 0x28] = a0\n  6263: a0 = u64 [sp + 0x150]\n  6267: u64 [sp + 0x18] = a0\n  6270: a0 = u64 [sp + 0x8]\n  6273: i32 a0 = a0 + 0x20\n  6276: a1 = 0x20\n  6279: ra = 120, jump @0\n      : @141 [@dyn 60] (gas: 73)\n  6284: a1 = u8 [a0 + 0x9]\n  6287: a2 = u8 [a0 + 0x8]\n  6290: a3 = u8 [a0 + 0xa]\n  6293: a4 = u8 [a0 + 0xb]\n  6296: a1 = a1 << 0x8\n  6299: a1 = a1 | a2\n  6302: a3 = a3 << 0x10\n  6305: a4 = a4 << 0x18\n  6308: a3 = a3 | a4\n  6311: a1 = a1 | a3\n  6314: a2 = u8 [a0 + 0xd]\n  6317: a3 = u8 [a0 + 0xc]\n  6320: a4 = u8 [a0 + 0xe]\n  6323: a5 = u8 [a0 + 0xf]\n  6326: a2 = a2 << 0x8\n  6329: a2 = a2 | a3\n  6332: a4 = a4 << 0x10\n  6335: a5 = a5 << 0x18\n  6338: a4 = a4 | a5\n  6341: a2 = a2 | a4\n  6344: a2 = a2 << 0x20\n  6347: t0 = a2 | a1\n  6350: a2 = u8 [a0 + 0x1]\n  6353: a3 = u8 [a0]\n  6355: a4 = u8 [a0 + 0x2]\n  6358: a5 = u8 [a0 + 0x3]\n  6361: a2 = a2 << 0x8\n  6364: a2 = a2 | a3\n  6367: a4 = a4 << 0x10\n  6370: a5 = a5 << 0x18\n  6373: a4 = a4 | a5\n  6376: a2 = a2 | a4\n  6379: a3 = u8 [a0 + 0x5]\n  6382: a4 = u8 [a0 + 0x4]\n  6385: a5 = u8 [a0 + 0x6]\n  6388: s1 = u8 [a0 + 0x7]\n  6391: a3 = a3 << 0x8\n  6394: a3 = a3 | a4\n  6397: a5 = a5 << 0x10\n  6400: s1 = s1 << 0x18\n  6403: a5 = a5 | s1\n  6406: a3 = a3 | a5\n  6409: a3 = a3 << 0x20\n  6412: a2 = a2 | a3\n  6415: a3 = u8 [a0 + 0x11]\n  6418: a4 = u8 [a0 + 0x10]\n  6421: a5 = u8 [a0 + 0x12]\n  6424: s1 = u8 [a0 + 0x13]\n  6427: a3 = a3 << 0x8\n  6430: a3 = a3 | a4\n  6433: a5 = a5 << 0x10\n  6436: s1 = s1 << 0x18\n  6439: a5 = a5 | s1\n  6442: a3 = a3 | a5\n  6445: a4 = u8 [a0 + 0x15]\n  6448: a5 = u8 [a0 + 0x14]\n  6451: s1 = u8 [a0 + 0x16]\n  6454: a1 = u8 [a0 + 0x17]\n  6457: a4 = a4 << 0x8\n  6460: a4 = a4 | a5\n  6463: s1 = s1 << 0x10\n  6466: a1 = a1 << 0x18\n  6469: a1 = a1 | s1\n  6472: a1 = a1 | a4\n  6475: a1 = a1 << 0x20\n  6478: a1 = a1 | a3\n  6481: a3 = reverse a1\n  6483: t1 = reverse a2\n  6485: a1 = reverse t0\n  6487: a4 = a1 | t1\n  6490: a5 = a3 <u 0x1\n  6493: a5 = 0 if a4 != 0\n  6495: jump @148 if a5 == 0\n      : @142 (gas: 65)\n  6499: a4 = u8 [a0 + 0x19]\n  6502: a5 = u8 [a0 + 0x18]\n  6505: s1 = u8 [a0 + 0x1a]\n  6508: a2 = u8 [a0 + 0x1b]\n  6511: a4 = a4 << 0x8\n  6514: a4 = a4 | a5\n  6517: s1 = s1 << 0x10\n  6520: a2 = a2 << 0x18\n  6523: a2 = a2 | s1\n  6526: a2 = a2 | a4\n  6529: a4 = u8 [a0 + 0x1d]\n  6532: a5 = u8 [a0 + 0x1c]\n  6535: s1 = u8 [a0 + 0x1e]\n  6538: a0 = u8 [a0 + 0x1f]\n  6541: a4 = a4 << 0x8\n  6544: a4 = a4 | a5\n  6547: s1 = s1 << 0x10\n  6550: a0 = a0 << 0x18\n  6553: a0 = a0 | s1\n  6556: a0 = a0 | a4\n  6559: a0 = a0 << 0x20\n  6562: a0 = a0 | a2\n  6565: a0 = reverse a0\n  6567: a2 = u64 [sp + 0x30]\n  6570: t0 = a0 + a2\n  6573: a0 = t0 <u a0\n  6576: a2 = u64 [sp + 0x48]\n  6579: a2 = a2 + a3\n  6582: t2 = a2 + a0\n  6585: a2 = t2 ^ a3\n  6588: s1 = t2 <u a3\n  6591: s1 = a0 if a2 == 0\n  6594: a0 = u64 [sp + 0x40]\n  6597: a0 = a0 + a1\n  6600: s1 = s1 + a0\n  6603: a2 = s1 <u a0\n  6606: a0 = a0 <u a1\n  6609: a1 = u64 [sp + 0x38]\n  6612: t1 = t1 + a1\n  6615: a0 = a0 + t1\n  6618: ra = a0 + a2\n  6621: a0 = t0 + 0x1f\n  6624: a1 = a0 <u t0\n  6627: a2 = t2 + a1\n  6630: a3 = a2 <u t2\n  6633: a3 = a1 if a1 == 0\n  6636: t1 = s1 + a3\n  6639: a1 = t1 <u s1\n  6642: a1 = a1 + ra\n  6645: a5 = u64 [sp + 0x68]\n  6648: a4 = a2 ^ a5\n  6651: a2 = a2 <u a5\n  6654: a5 = u64 [sp + 0x60]\n  6657: a0 = a0 <u a5\n  6660: a0 = a2 if a4 != 0\n  6663: a5 = u64 [sp + 0x58]\n  6666: a2 = t1 <u a5\n  6669: a4 = u64 [sp + 0x50]\n  6672: a3 = a1 ^ a4\n  6675: a1 = a1 <u a4\n  6678: a1 = a2 if a3 == 0\n  6681: a2 = t1 ^ a5\n  6684: a2 = a2 | a3\n  6687: a0 = a1 if a2 != 0\n  6690: jump @149 if a0 == 0\n      : @143 (gas: 11)\n  6694: a0 = t0 | s1\n  6697: u64 [sp + 0x48] = t2\n  6700: u64 [sp + 0x38] = ra\n  6703: a1 = t2 | ra\n  6706: a0 = a0 | a1\n  6709: a0 = a0 >> 0x20\n  6712: u64 [sp + 0x40] = s1\n  6715: a1 = a1 | s1\n  6718: a1 = a1 << 0x20\n  6721: a0 = a0 | a1\n  6724: jump @147 if a0 != 0\n      : @144 (gas: 4)\n  6728: i32 a0 = t0 + 0\n  6730: a1 = 0x20\n  6733: s1 = t0\n  6735: ra = 122, jump @0\n      : @145 [@dyn 61] (gas: 124)\n  6740: a1 = u8 [a0 + 0x1]\n  6743: a2 = u8 [a0]\n  6745: a3 = u8 [a0 + 0x2]\n  6748: a4 = u8 [a0 + 0x3]\n  6751: a1 = a1 << 0x8\n  6754: a1 = a1 | a2\n  6757: a3 = a3 << 0x10\n  6760: a4 = a4 << 0x18\n  6763: a3 = a3 | a4\n  6766: a1 = a1 | a3\n  6769: a2 = u8 [a0 + 0x5]\n  6772: a3 = u8 [a0 + 0x4]\n  6775: a4 = u8 [a0 + 0x6]\n  6778: a5 = u8 [a0 + 0x7]\n  6781: a2 = a2 << 0x8\n  6784: a2 = a2 | a3\n  6787: a4 = a4 << 0x10\n  6790: a5 = a5 << 0x18\n  6793: a4 = a4 | a5\n  6796: a2 = a2 | a4\n  6799: a2 = a2 << 0x20\n  6802: t0 = a2 | a1\n  6805: a2 = u8 [a0 + 0x9]\n  6808: a3 = u8 [a0 + 0x8]\n  6811: a4 = u8 [a0 + 0xa]\n  6814: a5 = u8 [a0 + 0xb]\n  6817: a2 = a2 << 0x8\n  6820: a2 = a2 | a3\n  6823: a4 = a4 << 0x10\n  6826: a5 = a5 << 0x18\n  6829: a4 = a4 | a5\n  6832: a2 = a2 | a4\n  6835: a3 = u8 [a0 + 0xd]\n  6838: a4 = u8 [a0 + 0xc]\n  6841: a5 = u8 [a0 + 0xe]\n  6844: a1 = u8 [a0 + 0xf]\n  6847: a3 = a3 << 0x8\n  6850: a3 = a3 | a4\n  6853: a5 = a5 << 0x10\n  6856: a1 = a1 << 0x18\n  6859: a1 = a1 | a5\n  6862: a1 = a1 | a3\n  6865: a1 = a1 << 0x20\n  6868: t1 = a1 | a2\n  6871: a1 = u8 [a0 + 0x11]\n  6874: a3 = u8 [a0 + 0x10]\n  6877: a4 = u8 [a0 + 0x12]\n  6880: a5 = u8 [a0 + 0x13]\n  6883: a1 = a1 << 0x8\n  6886: a1 = a1 | a3\n  6889: a4 = a4 << 0x10\n  6892: a5 = a5 << 0x18\n  6895: a4 = a4 | a5\n  6898: a1 = a1 | a4\n  6901: a3 = u8 [a0 + 0x15]\n  6904: a4 = u8 [a0 + 0x14]\n  6907: a5 = u8 [a0 + 0x16]\n  6910: a2 = u8 [a0 + 0x17]\n  6913: a3 = a3 << 0x8\n  6916: a3 = a3 | a4\n  6919: a5 = a5 << 0x10\n  6922: a2 = a2 << 0x18\n  6925: a2 = a2 | a5\n  6928: a2 = a2 | a3\n  6931: a2 = a2 << 0x20\n  6934: a3 = a2 | a1\n  6937: a1 = u8 [a0 + 0x19]\n  6940: a2 = u8 [a0 + 0x18]\n  6943: a4 = u8 [a0 + 0x1a]\n  6946: a5 = u8 [a0 + 0x1b]\n  6949: a1 = a1 << 0x8\n  6952: a1 = a1 | a2\n  6955: a4 = a4 << 0x10\n  6958: a5 = a5 << 0x18\n  6961: a4 = a4 | a5\n  6964: a1 = a1 | a4\n  6967: a2 = u8 [a0 + 0x1d]\n  6970: a4 = u8 [a0 + 0x1c]\n  6973: a5 = u8 [a0 + 0x1e]\n  6976: a0 = u8 [a0 + 0x1f]\n  6979: a2 = a2 << 0x8\n  6982: a2 = a2 | a4\n  6985: a5 = a5 << 0x10\n  6988: a0 = a0 << 0x18\n  6991: a0 = a0 | a5\n  6994: a0 = a0 | a2\n  6997: a0 = a0 << 0x20\n  7000: a0 = a0 | a1\n  7003: t2 = reverse a0\n  7005: ra = reverse a3\n  7007: a1 = reverse t1\n  7009: a2 = reverse t0\n  7011: a3 = s1 + 0x20\n  7014: a5 = a3 <u s1\n  7017: a0 = u64 [sp + 0x48]\n  7020: a4 = a0 + a5\n  7023: s1 = a4 <u a0\n  7026: s1 = a5 if a5 == 0\n  7029: a0 = u64 [sp + 0x40]\n  7032: s1 = s1 + a0\n  7035: a5 = s1 <u a0\n  7038: a0 = u64 [sp + 0x38]\n  7041: a5 = a5 + a0\n  7044: a0 = u64 [sp + 0x50]\n  7047: u64 [sp + 0x88] = a0\n  7051: a0 = u64 [sp + 0x58]\n  7054: u64 [sp + 0x80] = a0\n  7058: a0 = u64 [sp + 0x68]\n  7061: u64 [sp + 0x78] = a0\n  7064: a0 = u64 [sp + 0x60]\n  7067: u64 [sp + 0x70] = a0\n  7070: u64 [sp + 0xb8] = a4\n  7074: u64 [sp + 0xb0] = a3\n  7078: u64 [sp + 0xc0] = s1\n  7082: u64 [sp + 0xc8] = a5\n  7086: u64 [sp + 0xa8] = a2\n  7090: u64 [sp + 0xa0] = a1\n  7094: u64 [sp + 0x98] = ra\n  7098: a0 = sp + 0xd0\n  7102: a1 = sp + 0xb0\n  7106: a2 = sp + 0x90\n  7110: a3 = sp + 0x70\n  7113: u64 [sp + 0x90] = t2\n  7117: ra = 124, jump @102\n      : @146 [@dyn 62] (gas: 23)\n  7122: a0 = u64 [sp + 0xe0]\n  7126: a1 = u64 [sp + 0xe8]\n  7130: a2 = u64 [sp + 0xd0]\n  7134: a3 = u64 [sp + 0xd8]\n  7138: a4 = u64 [sp + 0x10]\n  7141: u64 [a4 + 0x30] = a0\n  7144: u64 [a4 + 0x38] = a1\n  7147: u64 [a4 + 0x20] = a2\n  7150: u64 [a4 + 0x28] = a3\n  7153: a0 = u64 [sp]\n  7155: u64 [a4 + 0x10] = a0\n  7158: a0 = u64 [sp + 0x20]\n  7161: u64 [a4 + 0x18] = a0\n  7164: a0 = u64 [sp + 0x18]\n  7167: u64 [a4] = a0\n  7169: a0 = u64 [sp + 0x28]\n  7172: u64 [a4 + 0x8] = a0\n  7175: sp = s0 + 0xfffffffffffffe70\n  7179: ra = u64 [sp + 0x188]\n  7183: s0 = u64 [sp + 0x180]\n  7187: s1 = u64 [sp + 0x178]\n  7191: sp = sp + 0x190\n  7195: ret\n      : @147 (gas: 1)\n  7197: trap\n      : @148 (gas: 4)\n  7198: a0 = 0\n  7200: a1 = 0\n  7202: ra = 0x7e\n  7205: jump @0\n      : @149 (gas: 2)\n  7208: a1 = 0\n  7210: ra = 126, jump @0\n      : @150 [@dyn 63] (gas: 6)\n  7215: i32 a1 = a0 + 0\n  7217: a0 = 0x1\n  7220: a2 = 0\n  7222: ra = 0x80\n  7226: ecalli 7 // 'seal_return'\n  7228: fallthrough\n      : @151 [@dyn 64] (gas: 19)\n  7229: sp = sp + 0xfffffffffffffef0\n  7233: u64 [sp + 0x108] = ra\n  7237: u64 [sp + 0x100] = s0\n  7241: u64 [sp + 0xf8] = s1\n  7245: s0 = sp + 0x110\n  7249: sp = sp & 0xfffffffffffffff0\n  7252: a1 = i32 [0x20044]\n  7257: u64 [sp + 0x28] = a0\n  7260: s1 = a1\n  7262: a0 = a1 << 0x20\n  7265: a2 = a0 >> 0x20\n  7268: u64 [sp + 200] = 0\n  7272: u64 [sp + 192] = 0\n  7276: u64 [sp + 184] = 0\n  7280: a0 = sp + 0xd0\n  7284: a1 = sp + 0xb0\n  7288: u64 [sp + 0x20] = a2\n  7291: u64 [sp + 0xb0] = a2\n  7295: ra = 130, jump @75\n      : @152 [@dyn 65] (gas: 15)\n  7301: a1 = u64 [sp + 0xe8]\n  7305: a3 = u64 [sp + 0xe0]\n  7309: a0 = u64 [sp + 0xd8]\n  7313: a2 = u64 [sp + 0xd0]\n  7317: u64 [sp + 0x18] = a0\n  7320: u64 [sp + 0x8] = a1\n  7323: a0 = a0 | a1\n  7326: a1 = a2 | a3\n  7329: a1 = a1 | a0\n  7332: a1 = a1 >> 0x20\n  7335: u64 [sp + 0x10] = a3\n  7338: a0 = a0 | a3\n  7341: a0 = a0 << 0x20\n  7344: a0 = a0 | a1\n  7347: jump @156 if a0 != 0\n      : @153 (gas: 4)\n  7351: i32 a0 = a2 + 0\n  7353: a1 = s1\n  7355: u64 [sp] = a2\n  7357: ra = 132, jump @0\n      : @154 [@dyn 66] (gas: 30)\n  7363: i32 a0 = a0 + 0\n  7365: a1 = s1\n  7367: a2 = 0\n  7369: ecalli 0 // 'call_data_copy'\n  7370: a0 = u64 [sp + 0x20]\n  7373: a2 = u64 [sp]\n  7375: a0 = a0 + a2\n  7378: a1 = a0 <u a2\n  7381: t1 = a2\n  7383: a5 = u64 [sp + 0x18]\n  7386: a2 = a5 + a1\n  7389: a3 = a2 <u a5\n  7392: a3 = a1 if a1 == 0\n  7395: s1 = u64 [sp + 0x10]\n  7398: a3 = a3 + s1\n  7401: a1 = a3 <u s1\n  7404: a4 = u64 [sp + 0x8]\n  7407: t0 = a4 + a1\n  7410: u64 [sp + 0x38] = a2\n  7413: u64 [sp + 0x30] = a0\n  7416: u64 [sp + 0x68] = a4\n  7419: u64 [sp + 0x60] = s1\n  7422: u64 [sp + 0x58] = a5\n  7425: u64 [sp + 0x50] = t1\n  7428: u64 [sp + 0x40] = a3\n  7431: a0 = sp + 0x70\n  7434: a1 = sp + 0x50\n  7437: a2 = sp + 0x30\n  7440: u64 [sp + 0x48] = t0\n  7443: ra = 134, jump @131\n      : @155 [@dyn 67] (gas: 23)\n  7449: t0 = u64 [sp + 0x78]\n  7452: t1 = u64 [sp + 0x70]\n  7455: a2 = u64 [sp + 0x88]\n  7459: a3 = u64 [sp + 0x80]\n  7463: a4 = u64 [sp + 0xa0]\n  7467: a5 = u64 [sp + 0xa8]\n  7471: s1 = u64 [sp + 0x90]\n  7475: a0 = u64 [sp + 0x98]\n  7479: a1 = u64 [sp + 0x28]\n  7482: u64 [a1 + 0x30] = a4\n  7485: u64 [a1 + 0x38] = a5\n  7488: u64 [a1 + 0x20] = s1\n  7491: u64 [a1 + 0x28] = a0\n  7494: u64 [a1 + 0x10] = a3\n  7497: u64 [a1 + 0x18] = a2\n  7500: u64 [a1] = t1\n  7502: u64 [a1 + 0x8] = t0\n  7505: sp = s0 + 0xfffffffffffffef0\n  7509: ra = u64 [sp + 0x108]\n  7513: s0 = u64 [sp + 0x100]\n  7517: s1 = u64 [sp + 0xf8]\n  7521: sp = sp + 0x110\n  7525: ret\n      : @156 (gas: 1)\n  7527: trap\n      : @157 [@dyn 68] (gas: 14)\n  7528: u64 [sp + 0x98] = s1\n  7532: a0 = u64 [sp + 0x8]\n  7535: u64 [sp + 0x90] = a0\n  7539: a0 = u64 [sp + 0x10]\n  7542: u64 [sp + 0x88] = a0\n  7546: a0 = u64 [sp + 0x18]\n  7549: u64 [sp + 0x80] = a0\n  7553: u64 [sp + 184] = 0\n  7557: u64 [sp + 176] = 0\n  7561: u64 [sp + 168] = 0\n  7565: a0 = sp + 0xa0\n  7569: a1 = sp + 0x80\n  7573: u64 [sp + 160] = 0x4\n  7578: ra = 138, jump @179\n      : @158 [@dyn 69] (gas: 3)\n  7584: i32 a0 = sp + 0x100\n  7588: ecalli 3 // 'caller'\n  7590: fallthrough\n      : @159 (gas: 6)\n  7591: a1 = u32 [sp + 0x110]\n  7595: a0 = u64 [sp + 0x100]\n  7599: a2 = u64 [sp + 0x108]\n  7603: a3 = a0 | a1\n  7606: a3 = a3 | a2\n  7609: jump @162 if a3 == 0\n      : @160 (gas: 27)\n  7612: a2 = reverse a2\n  7614: a3 = a2 << 0x20\n  7617: a1 = reverse a1\n  7619: a1 = a1 >> 0x20\n  7622: a3 = a3 | a1\n  7625: a0 = reverse a0\n  7627: a1 = a0 << 0x20\n  7630: a2 = a2 >> 0x20\n  7633: a1 = a1 | a2\n  7636: a0 = a0 >> 0x20\n  7639: u64 [sp + 56] = 0\n  7642: u64 [sp + 48] = 0\n  7645: u64 [sp + 88] = 0\n  7648: u64 [sp + 120] = 0\n  7651: u64 [sp + 112] = 0\n  7654: u64 [sp + 104] = 0\n  7657: u64 [sp + 96] = 0\n  7660: u64 [sp + 40] = 0xd3c2\n  7666: u64 [sp + 0x50] = a0\n  7669: a0 = 0x1bcecceda1000000\n  7679: u64 [sp + 0x20] = a0\n  7682: u64 [sp + 0x48] = a1\n  7685: a0 = sp + 0x60\n  7688: a1 = sp + 0x40\n  7691: a2 = sp + 0x20\n  7694: u64 [sp + 0x40] = a3\n  7697: ra = 140, jump @226\n      : @161 [@dyn 70] (gas: 6)\n  7703: sp = s0 + 0xfffffffffffffec0\n  7707: ra = u64 [sp + 0x138]\n  7711: s0 = u64 [sp + 0x130]\n  7715: s1 = u64 [sp + 0x128]\n  7719: sp = sp + 0x140\n  7723: ret\n      : @162 (gas: 3)\n  7725: a1 = 0x20\n  7728: a0 = 0\n  7730: ra = 142, jump @0\n      : @163 [@dyn 71] (gas: 35)\n  7736: u8 [a0 + 31] = 0\n  7739: u8 [a0 + 30] = 0\n  7742: u8 [a0 + 29] = 0\n  7745: u8 [a0 + 28] = 0\n  7748: u8 [a0 + 27] = 0\n  7751: u8 [a0 + 26] = 0\n  7754: u8 [a0 + 25] = 0\n  7757: u8 [a0 + 24] = 0\n  7760: u8 [a0 + 23] = 0\n  7763: u8 [a0 + 22] = 0\n  7766: u8 [a0 + 21] = 0\n  7769: u8 [a0 + 20] = 0\n  7772: u8 [a0 + 19] = 0\n  7775: u8 [a0 + 18] = 0\n  7778: u8 [a0 + 17] = 0\n  7781: u8 [a0 + 16] = 0\n  7784: u8 [a0 + 15] = 0\n  7787: u8 [a0 + 14] = 0\n  7790: u8 [a0 + 13] = 0\n  7793: u8 [a0 + 12] = 0\n  7796: u8 [a0 + 11] = 0\n  7799: u8 [a0 + 10] = 0\n  7802: u8 [a0 + 9] = 0\n  7805: u8 [a0 + 8] = 0\n  7808: u8 [a0 + 7] = 0\n  7811: u8 [a0 + 6] = 0\n  7814: u8 [a0 + 5] = 0\n  7817: u8 [a0 + 4] = 0\n  7820: u8 [a0 + 3] = 0x5\n  7824: u8 [a0 + 2] = 0x2f\n  7828: u8 [a0 + 1] = 0x44\n  7832: u8 [a0 + 0] = 0xec\n  7836: a0 = 0x4\n  7839: a1 = 0x20\n  7842: ra = 144, jump @0\n      : @164 [@dyn 72] (gas: 35)\n  7848: u8 [a0 + 31] = 0\n  7851: u8 [a0 + 30] = 0\n  7854: u8 [a0 + 29] = 0\n  7857: u8 [a0 + 28] = 0\n  7860: u8 [a0 + 27] = 0\n  7863: u8 [a0 + 26] = 0\n  7866: u8 [a0 + 25] = 0\n  7869: u8 [a0 + 24] = 0\n  7872: u8 [a0 + 23] = 0\n  7875: u8 [a0 + 22] = 0\n  7878: u8 [a0 + 21] = 0\n  7881: u8 [a0 + 20] = 0\n  7884: u8 [a0 + 19] = 0\n  7887: u8 [a0 + 18] = 0\n  7890: u8 [a0 + 17] = 0\n  7893: u8 [a0 + 16] = 0\n  7896: u8 [a0 + 15] = 0\n  7899: u8 [a0 + 14] = 0\n  7902: u8 [a0 + 13] = 0\n  7905: u8 [a0 + 12] = 0\n  7908: u8 [a0 + 11] = 0\n  7911: u8 [a0 + 10] = 0\n  7914: u8 [a0 + 9] = 0\n  7917: u8 [a0 + 8] = 0\n  7920: u8 [a0 + 7] = 0\n  7923: u8 [a0 + 6] = 0\n  7926: u8 [a0 + 5] = 0\n  7929: u8 [a0 + 4] = 0\n  7932: u8 [a0 + 3] = 0\n  7935: u8 [a0 + 2] = 0\n  7938: u8 [a0 + 1] = 0\n  7941: u8 [a0 + 0] = 0\n  7943: a1 = 0x24\n  7946: a0 = 0\n  7948: ra = 146, jump @0\n      : @165 [@dyn 73] (gas: 6)\n  7954: i32 a1 = a0 + 0\n  7956: a0 = 0x1\n  7959: a2 = 0x24\n  7962: ra = 0x94\n  7966: ecalli 7 // 'seal_return'\n  7968: fallthrough\n      : @166 [@dyn 74] (gas: 12)\n  7969: a2 = u64 [a1 + 0x10]\n  7972: a3 = u64 [a1 + 0x18]\n  7975: a4 = u64 [a1 + 0x8]\n  7978: a1 = u64 [a1]\n  7980: a3 = a3 | a4\n  7983: a4 = a1 | a2\n  7986: a4 = a4 | a3\n  7989: a4 = a4 >> 0x20\n  7992: a2 = a2 | a3\n  7995: a2 = a2 << 0x20\n  7998: a2 = a2 | a4\n  8001: jump @169 if a2 != 0\n      : @167 (gas: 7)\n  8005: sp = sp + 0xfffffffffffffff0\n  8008: u64 [sp + 0x8] = ra\n  8011: u64 [sp] = s0\n  8013: s0 = a0\n  8015: i32 a0 = a1 + 0\n  8017: a1 = 0x20\n  8020: ra = 150, jump @0\n      : @168 [@dyn 75] (gas: 100)\n  8026: a1 = u8 [a0 + 0x1]\n  8029: a2 = u8 [a0]\n  8031: a3 = u8 [a0 + 0x2]\n  8034: a4 = u8 [a0 + 0x3]\n  8037: a1 = a1 << 0x8\n  8040: a1 = a1 | a2\n  8043: a3 = a3 << 0x10\n  8046: a4 = a4 << 0x18\n  8049: a3 = a3 | a4\n  8052: a1 = a1 | a3\n  8055: a2 = u8 [a0 + 0x5]\n  8058: a3 = u8 [a0 + 0x4]\n  8061: a4 = u8 [a0 + 0x6]\n  8064: a5 = u8 [a0 + 0x7]\n  8067: a2 = a2 << 0x8\n  8070: a2 = a2 | a3\n  8073: a4 = a4 << 0x10\n  8076: a5 = a5 << 0x18\n  8079: a4 = a4 | a5\n  8082: a2 = a2 | a4\n  8085: a2 = a2 << 0x20\n  8088: t0 = a2 | a1\n  8091: a2 = u8 [a0 + 0x9]\n  8094: a3 = u8 [a0 + 0x8]\n  8097: a4 = u8 [a0 + 0xa]\n  8100: a5 = u8 [a0 + 0xb]\n  8103: a2 = a2 << 0x8\n  8106: a2 = a2 | a3\n  8109: a4 = a4 << 0x10\n  8112: a5 = a5 << 0x18\n  8115: a4 = a4 | a5\n  8118: a2 = a2 | a4\n  8121: a3 = u8 [a0 + 0xd]\n  8124: a4 = u8 [a0 + 0xc]\n  8127: a5 = u8 [a0 + 0xe]\n  8130: a1 = u8 [a0 + 0xf]\n  8133: a3 = a3 << 0x8\n  8136: a3 = a3 | a4\n  8139: a5 = a5 << 0x10\n  8142: a1 = a1 << 0x18\n  8145: a1 = a1 | a5\n  8148: a1 = a1 | a3\n  8151: a1 = a1 << 0x20\n  8154: t1 = a1 | a2\n  8157: a1 = u8 [a0 + 0x11]\n  8160: a3 = u8 [a0 + 0x10]\n  8163: a4 = u8 [a0 + 0x12]\n  8166: a5 = u8 [a0 + 0x13]\n  8169: a1 = a1 << 0x8\n  8172: a1 = a1 | a3\n  8175: a4 = a4 << 0x10\n  8178: a5 = a5 << 0x18\n  8181: a4 = a4 | a5\n  8184: a1 = a1 | a4\n  8187: a3 = u8 [a0 + 0x15]\n  8190: a4 = u8 [a0 + 0x14]\n  8193: a5 = u8 [a0 + 0x16]\n  8196: a2 = u8 [a0 + 0x17]\n  8199: a3 = a3 << 0x8\n  8202: a3 = a3 | a4\n  8205: a5 = a5 << 0x10\n  8208: a2 = a2 << 0x18\n  8211: a2 = a2 | a5\n  8214: a2 = a2 | a3\n  8217: a2 = a2 << 0x20\n  8220: a3 = a2 | a1\n  8223: a1 = u8 [a0 + 0x19]\n  8226: a2 = u8 [a0 + 0x18]\n  8229: a4 = u8 [a0 + 0x1a]\n  8232: a5 = u8 [a0 + 0x1b]\n  8235: a1 = a1 << 0x8\n  8238: a1 = a1 | a2\n  8241: a4 = a4 << 0x10\n  8244: a5 = a5 << 0x18\n  8247: a4 = a4 | a5\n  8250: a1 = a1 | a4\n  8253: a2 = u8 [a0 + 0x1d]\n  8256: a4 = u8 [a0 + 0x1c]\n  8259: a5 = u8 [a0 + 0x1e]\n  8262: a0 = u8 [a0 + 0x1f]\n  8265: a2 = a2 << 0x8\n  8268: a2 = a2 | a4\n  8271: a5 = a5 << 0x10\n  8274: a0 = a0 << 0x18\n  8277: a0 = a0 | a5\n  8280: a0 = a0 | a2\n  8283: a0 = a0 << 0x20\n  8286: a0 = a0 | a1\n  8289: a0 = reverse a0\n  8291: a1 = reverse a3\n  8293: a2 = reverse t1\n  8295: a3 = reverse t0\n  8297: u64 [s0 + 0x18] = a3\n  8300: u64 [s0 + 0x10] = a2\n  8303: u64 [s0 + 0x8] = a1\n  8306: u64 [s0] = a0\n  8308: ra = u64 [sp + 0x8]\n  8311: s0 = u64 [sp]\n  8313: sp = sp + 0x10\n  8316: ret\n      : @169 (gas: 1)\n  8318: trap\n      : @170 (gas: 15)\n  8319: sp = sp + 0xffffffffffffff20\n  8323: u64 [sp + 0xd8] = ra\n  8327: u64 [sp + 0xd0] = s0\n  8331: u64 [sp + 0xc8] = s1\n  8335: s0 = sp + 0xe0\n  8339: sp = sp & 0xffffffffffffffe0\n  8342: t0 = u64 [a1 + 0x18]\n  8345: a5 = u64 [a1 + 0x10]\n  8348: a4 = u64 [a1]\n  8350: s1 = u64 [a1 + 0x8]\n  8353: a1 = a5 | t0\n  8356: a3 = a4 <u 0x20\n  8359: a3 = 0 if s1 != 0\n  8361: a3 = 0 if a1 != 0\n  8363: jump @178 if a3 != 0\n      : @171 (gas: 23)\n  8367: a1 = u64 [a2 + 0x18]\n  8370: u64 [sp + 0x50] = a1\n  8373: a1 = u64 [a2 + 0x10]\n  8376: u64 [sp + 0x40] = a1\n  8379: a1 = u64 [a2 + 0x8]\n  8382: u64 [sp + 0x58] = a1\n  8385: a1 = u64 [a2]\n  8387: u64 [sp + 0x20] = a1\n  8390: a1 = u64 [a0 + 0x18]\n  8393: u64 [sp] = a1\n  8395: a1 = u64 [a0 + 0x10]\n  8398: u64 [sp + 0x8] = a1\n  8401: a1 = u64 [a0 + 0x8]\n  8404: u64 [sp + 0x10] = a1\n  8407: a0 = u64 [a0]\n  8409: u64 [sp + 0x18] = a0\n  8412: a1 = 0x20\n  8415: a0 = 0\n  8417: u64 [sp + 0x28] = t0\n  8420: u64 [sp + 0x48] = a5\n  8423: u64 [sp + 0x38] = s1\n  8426: u64 [sp + 0x30] = a4\n  8429: ra = 152, jump @0\n      : @172 [@dyn 76] (gas: 71)\n  8435: a1 = u64 [sp]\n  8437: a1 = reverse a1\n  8439: a2 = u64 [sp + 0x8]\n  8442: a2 = reverse a2\n  8444: a3 = u64 [sp + 0x10]\n  8447: a3 = reverse a3\n  8449: a4 = u64 [sp + 0x18]\n  8452: a4 = reverse a4\n  8454: a5 = a4 >> 0x38\n  8457: u8 [a0 + 0x1f] = a5\n  8460: a5 = a4 >> 0x30\n  8463: u8 [a0 + 0x1e] = a5\n  8466: a5 = a4 >> 0x28\n  8469: u8 [a0 + 0x1d] = a5\n  8472: a5 = a4 >> 0x20\n  8475: u8 [a0 + 0x1c] = a5\n  8478: a5 = a4 >> 0x18\n  8481: u8 [a0 + 0x1b] = a5\n  8484: a5 = a4 >> 0x10\n  8487: u8 [a0 + 0x1a] = a5\n  8490: a5 = a4 >> 0x8\n  8493: u8 [a0 + 0x19] = a5\n  8496: u8 [a0 + 0x18] = a4\n  8499: u8 [a0 + 0x10] = a3\n  8502: a4 = a3 >> 0x38\n  8505: u8 [a0 + 0x17] = a4\n  8508: a4 = a3 >> 0x30\n  8511: u8 [a0 + 0x16] = a4\n  8514: a4 = a3 >> 0x28\n  8517: u8 [a0 + 0x15] = a4\n  8520: a4 = a3 >> 0x20\n  8523: u8 [a0 + 0x14] = a4\n  8526: a4 = a3 >> 0x18\n  8529: u8 [a0 + 0x13] = a4\n  8532: a4 = a3 >> 0x10\n  8535: u8 [a0 + 0x12] = a4\n  8538: a3 = a3 >> 0x8\n  8541: u8 [a0 + 0x11] = a3\n  8544: u8 [a0 + 0x8] = a2\n  8547: a3 = a2 >> 0x38\n  8550: u8 [a0 + 0xf] = a3\n  8553: a3 = a2 >> 0x30\n  8556: u8 [a0 + 0xe] = a3\n  8559: a3 = a2 >> 0x28\n  8562: u8 [a0 + 0xd] = a3\n  8565: a3 = a2 >> 0x20\n  8568: u8 [a0 + 0xc] = a3\n  8571: a3 = a2 >> 0x18\n  8574: u8 [a0 + 0xb] = a3\n  8577: a3 = a2 >> 0x10\n  8580: u8 [a0 + 0xa] = a3\n  8583: a2 = a2 >> 0x8\n  8586: u8 [a0 + 0x9] = a2\n  8589: u8 [a0] = a1\n  8591: a2 = a1 >> 0x38\n  8594: u8 [a0 + 0x7] = a2\n  8597: a2 = a1 >> 0x30\n  8600: u8 [a0 + 0x6] = a2\n  8603: a2 = a1 >> 0x28\n  8606: u8 [a0 + 0x5] = a2\n  8609: a2 = a1 >> 0x20\n  8612: u8 [a0 + 0x4] = a2\n  8615: a2 = a1 >> 0x18\n  8618: u8 [a0 + 0x3] = a2\n  8621: a2 = a1 >> 0x10\n  8624: u8 [a0 + 0x2] = a2\n  8627: a1 = a1 >> 0x8\n  8630: u8 [a0 + 0x1] = a1\n  8633: a1 = 0x20\n  8636: a0 = 0\n  8638: ra = 154, jump @0\n      : @173 [@dyn 77] (gas: 5)\n  8644: i32 a0 = a0 + 0\n  8646: i32 a2 = sp + 0xa0\n  8650: a1 = 0x20\n  8653: ecalli 6 // 'hash_keccak_256'\n  8655: fallthrough\n      : @174 (gas: 112)\n  8656: a2 = u64 [sp + 0x20]\n  8659: a1 = a2 + 0x1f\n  8662: a0 = a1 <u a2\n  8665: t1 = a2\n  8667: a4 = u64 [sp + 0x58]\n  8670: a3 = a4 + a0\n  8673: a2 = a3 <u a4\n  8676: t0 = a4\n  8678: a2 = a0 if a0 == 0\n  8681: s1 = u64 [sp + 0x40]\n  8684: a2 = a2 + s1\n  8687: u64 [sp + 0x18] = a2\n  8690: a2 = a2 << 0x3b\n  8693: a4 = a3 >> 0x5\n  8696: a2 = a2 | a4\n  8699: a3 = a3 << 0x3b\n  8702: a1 = a1 >> 0x5\n  8705: a5 = a1 | a3\n  8708: a1 = t1 <u 0x20\n  8711: a1 = 0 if t0 != 0\n  8713: a3 = u64 [sp + 0xb8]\n  8717: t1 = u64 [sp + 0xb0]\n  8721: a0 = u64 [sp + 0x50]\n  8724: a4 = s1 | a0\n  8727: a1 = 0 if a4 != 0\n  8729: a4 = reverse a3\n  8731: s1 = reverse t1\n  8733: a2 = 0 if a1 != 0\n  8735: a5 = 0 if a1 != 0\n  8737: a5 = a5 + a4\n  8740: u64 [sp + 0x58] = a5\n  8743: a5 = a5 <u a4\n  8746: a3 = s1 + a5\n  8749: t0 = a3 + a2\n  8752: a3 = t0 ^ s1\n  8755: ra = t0 <u s1\n  8758: ra = a5 if a3 == 0\n  8761: a0 = u64 [sp + 0x30]\n  8764: t2 = a0 + 0x1f\n  8767: a0 = t2 <u a0\n  8770: a2 = u64 [sp + 0x38]\n  8773: a3 = a2 + a0\n  8776: a5 = a3 <u a2\n  8779: a5 = a0 if a0 == 0\n  8782: a0 = u64 [sp + 0x48]\n  8785: a5 = a5 + a0\n  8788: a0 = a5 << 0x3b\n  8791: a2 = a3 >> 0x5\n  8794: a0 = a0 | a2\n  8797: a3 = a3 << 0x3b\n  8800: a2 = t2 >> 0x5\n  8803: a2 = a2 | a3\n  8806: t2 = a4 + a2\n  8809: a2 = t2 <u a4\n  8812: a3 = s1 + a2\n  8815: t1 = a3 + a0\n  8818: a0 = t1 ^ s1\n  8821: a3 = t1 <u s1\n  8824: a3 = a2 if a0 == 0\n  8827: a4 = u64 [sp + 0x18]\n  8830: a0 = u64 [sp + 0x40]\n  8833: a0 = a4 <u a0\n  8836: a2 = u64 [sp + 0x50]\n  8839: a0 = a0 + a2\n  8842: a2 = a4 >> 0x5\n  8845: a4 = a0 << 0x3b\n  8848: a2 = a2 | a4\n  8851: a0 = a0 >> 0x5\n  8854: a4 = u64 [sp + 0xa8]\n  8858: s1 = u64 [sp + 0xa0]\n  8862: a2 = 0 if a1 != 0\n  8864: a0 = 0 if a1 != 0\n  8866: a1 = reverse a4\n  8868: a4 = reverse s1\n  8870: u64 [sp + 0x50] = a4\n  8873: a0 = a0 + a4\n  8876: a2 = a2 + a1\n  8879: s1 = a2 <u a1\n  8882: a0 = a0 + s1\n  8885: a4 = a2 + ra\n  8888: s1 = a4 <u a2\n  8891: s1 = s1 + a0\n  8894: a0 = u64 [sp + 0x48]\n  8897: a0 = a5 <u a0\n  8900: a2 = u64 [sp + 0x28]\n  8903: a0 = a0 + a2\n  8906: a5 = a5 >> 0x5\n  8909: a2 = a0 << 0x3b\n  8912: a2 = a2 | a5\n  8915: a5 = u64 [sp + 0x58]\n  8918: a0 = a0 >> 0x5\n  8921: a2 = a2 + a1\n  8924: ra = a2 + a3\n  8927: a1 = a2 <u a1\n  8930: a2 = ra <u a2\n  8933: a3 = u64 [sp + 0x50]\n  8936: a0 = a0 + a3\n  8939: a0 = a0 + a1\n  8942: a3 = a0 + a2\n  8945: a0 = t0 ^ t1\n  8948: a1 = t0 <u t1\n  8951: a2 = a5 <u t2\n  8954: a2 = a1 if a0 != 0\n  8957: a0 = a4 <u ra\n  8960: a1 = s1 ^ a3\n  8963: u64 [sp + 0x40] = a3\n  8966: a3 = s1 <u a3\n  8969: a3 = a0 if a1 == 0\n  8972: a0 = a4 ^ ra\n  8975: a0 = a0 | a1\n  8978: a2 = a3 if a0 != 0\n  8981: jump @178 if a2 == 0\n      : @175 (gas: 5)\n  8985: a0 = a4\n  8987: u64 [sp + 0x38] = t2\n  8990: u64 [sp + 0x30] = t1\n  8993: u64 [sp + 0x28] = ra\n  8996: fallthrough\n      : @176 (gas: 36)\n  8997: u64 [sp + 0x48] = a0\n  9000: u64 [sp + 0x50] = t0\n  9003: u64 [sp + 0x58] = a5\n  9006: u64 [sp + 0x90] = a0\n  9010: u64 [sp + 0x88] = t0\n  9014: u64 [sp + 0x80] = a5\n  9018: u64 [sp + 0x98] = s1\n  9022: u64 [sp + 184] = 0\n  9026: u64 [sp + 176] = 0\n  9030: u64 [sp + 168] = 0\n  9034: u64 [sp + 160] = 0\n  9038: u32 [sp + 96] = 0x20\n  9042: i32 a1 = sp + 0x80\n  9046: i32 a3 = sp + 0xa0\n  9050: i32 a4 = sp + 0x60\n  9053: a2 = 0xffffffffffffffff\n  9056: a0 = 0\n  9058: ecalli 5 // 'get_storage'\n  9060: u64 [sp + 0x98] = s1\n  9064: a0 = u64 [sp + 0x48]\n  9067: u64 [sp + 0x90] = a0\n  9071: a0 = u64 [sp + 0x50]\n  9074: u64 [sp + 0x88] = a0\n  9078: a0 = u64 [sp + 0x58]\n  9081: u64 [sp + 0x80] = a0\n  9085: u64 [sp + 184] = 0\n  9089: u64 [sp + 176] = 0\n  9093: u64 [sp + 168] = 0\n  9097: u64 [sp + 160] = 0\n  9101: i32 a1 = sp + 0x80\n  9105: i32 a3 = sp + 0xa0\n  9109: a2 = 0xffffffffffffffff\n  9112: a4 = 0x20\n  9115: a0 = 0\n  9117: ecalli 9 // 'set_storage'\n  9119: fallthrough\n      : @177 (gas: 27)\n  9120: ra = u64 [sp + 0x28]\n  9123: t1 = u64 [sp + 0x30]\n  9126: t2 = u64 [sp + 0x38]\n  9129: t0 = u64 [sp + 0x50]\n  9132: a5 = u64 [sp + 0x58]\n  9135: a5 = a5 + 0x1\n  9138: a0 = a5 <u 0x1\n  9141: t0 = t0 + a0\n  9144: a0 = a5 | t0\n  9147: a0 = a0 <u 0x1\n  9150: a1 = u64 [sp + 0x48]\n  9153: a0 = a0 + a1\n  9156: a1 = a0 <u a1\n  9159: s1 = s1 + a1\n  9162: a1 = a5 <u t2\n  9165: a2 = t0 ^ t1\n  9168: a3 = t0 <u t1\n  9171: a3 = a1 if a2 == 0\n  9174: a1 = a0 <u ra\n  9177: a4 = u64 [sp + 0x40]\n  9180: a2 = s1 ^ a4\n  9183: a4 = s1 <u a4\n  9186: a4 = a1 if a2 == 0\n  9189: a1 = a0 ^ ra\n  9192: a1 = a1 | a2\n  9195: a4 = a3 if a1 == 0\n  9198: jump @176 if a4 != 0\n      : @178 (gas: 6)\n  9202: sp = s0 + 0xffffffffffffff20\n  9206: ra = u64 [sp + 0xd8]\n  9210: s0 = u64 [sp + 0xd0]\n  9214: s1 = u64 [sp + 0xc8]\n  9218: sp = sp + 0xe0\n  9222: ret\n      : @179 (gas: 21)\n  9224: sp = sp + 0xfffffffffffffd40\n  9228: u64 [sp + 0x2b8] = ra\n  9232: u64 [sp + 0x2b0] = s0\n  9236: u64 [sp + 0x2a8] = s1\n  9240: s0 = sp + 0x2c0\n  9244: sp = sp & 0xffffffffffffffe0\n  9247: a3 = u64 [a1 + 0x10]\n  9250: a2 = u64 [a1 + 0x18]\n  9253: a4 = u64 [a1 + 0x8]\n  9256: a5 = u64 [a1]\n  9258: u64 [sp + 0x98] = a2\n  9262: u64 [sp + 0x88] = a4\n  9266: a1 = a4 | a2\n  9269: a2 = a5 | a3\n  9272: a2 = a2 | a1\n  9275: a2 = a2 >> 0x20\n  9278: u64 [sp + 0x90] = a3\n  9282: a1 = a1 | a3\n  9285: a1 = a1 << 0x20\n  9288: a1 = a1 | a2\n  9291: jump @209 if a1 != 0\n      : @180 (gas: 13)\n  9295: a1 = u64 [a0 + 0x18]\n  9298: u64 [sp + 0x40] = a1\n  9301: a1 = u64 [a0 + 0x10]\n  9304: u64 [sp + 0x58] = a1\n  9307: a1 = u64 [a0 + 0x8]\n  9310: u64 [sp + 0x48] = a1\n  9313: a0 = u64 [a0]\n  9315: u64 [sp + 0x50] = a0\n  9318: u64 [sp + 0x80] = a5\n  9322: i32 a0 = a5 + 0\n  9324: a1 = 0x20\n  9327: u64 [sp + 0x18] = a0\n  9330: ra = 156, jump @0\n      : @181 [@dyn 78] (gas: 80)\n  9336: a1 = u8 [a0 + 0x9]\n  9339: a2 = u8 [a0 + 0x8]\n  9342: a3 = u8 [a0 + 0xa]\n  9345: a4 = u8 [a0 + 0xb]\n  9348: a1 = a1 << 0x8\n  9351: a1 = a1 | a2\n  9354: a3 = a3 << 0x10\n  9357: a4 = a4 << 0x18\n  9360: a3 = a3 | a4\n  9363: a1 = a1 | a3\n  9366: a2 = u8 [a0 + 0xd]\n  9369: a3 = u8 [a0 + 0xc]\n  9372: a4 = u8 [a0 + 0xe]\n  9375: a5 = u8 [a0 + 0xf]\n  9378: a2 = a2 << 0x8\n  9381: a2 = a2 | a3\n  9384: a4 = a4 << 0x10\n  9387: a5 = a5 << 0x18\n  9390: a4 = a4 | a5\n  9393: a2 = a2 | a4\n  9396: a2 = a2 << 0x20\n  9399: t0 = a2 | a1\n  9402: a1 = u8 [a0 + 0x1]\n  9405: a2 = u8 [a0]\n  9407: a3 = u8 [a0 + 0x2]\n  9410: a4 = u8 [a0 + 0x3]\n  9413: a1 = a1 << 0x8\n  9416: a1 = a1 | a2\n  9419: a3 = a3 << 0x10\n  9422: a4 = a4 << 0x18\n  9425: a3 = a3 | a4\n  9428: a1 = a1 | a3\n  9431: a2 = u8 [a0 + 0x5]\n  9434: a3 = u8 [a0 + 0x4]\n  9437: a4 = u8 [a0 + 0x6]\n  9440: a5 = u8 [a0 + 0x7]\n  9443: a2 = a2 << 0x8\n  9446: a2 = a2 | a3\n  9449: a4 = a4 << 0x10\n  9452: a5 = a5 << 0x18\n  9455: a4 = a4 | a5\n  9458: a2 = a2 | a4\n  9461: a2 = a2 << 0x20\n  9464: s1 = a2 | a1\n  9467: a1 = u8 [a0 + 0x11]\n  9470: a2 = u8 [a0 + 0x10]\n  9473: a3 = u8 [a0 + 0x12]\n  9476: a4 = u8 [a0 + 0x13]\n  9479: a1 = a1 << 0x8\n  9482: a1 = a1 | a2\n  9485: a3 = a3 << 0x10\n  9488: a4 = a4 << 0x18\n  9491: a3 = a3 | a4\n  9494: a1 = a1 | a3\n  9497: a2 = u8 [a0 + 0x15]\n  9500: a3 = u8 [a0 + 0x14]\n  9503: a4 = u8 [a0 + 0x16]\n  9506: a5 = u8 [a0 + 0x17]\n  9509: a2 = a2 << 0x8\n  9512: a2 = a2 | a3\n  9515: a4 = a4 << 0x10\n  9518: a5 = a5 << 0x18\n  9521: a4 = a4 | a5\n  9524: a2 = a2 | a4\n  9527: a2 = a2 << 0x20\n  9530: a1 = a1 | a2\n  9533: u64 [sp + 0x60] = a1\n  9536: a1 = reverse a1\n  9538: u64 [sp + 0x68] = s1\n  9541: a3 = reverse s1\n  9543: u64 [sp + 0x70] = t0\n  9546: a2 = reverse t0\n  9548: u64 [sp + 0x30] = a2\n  9551: u64 [sp + 0x28] = a3\n  9554: a2 = a2 | a3\n  9557: u64 [sp + 0x38] = a1\n  9560: a1 = a1 <u 0x1\n  9563: u64 [sp + 0xd8] = a2\n  9567: a1 = 0 if a2 != 0\n  9569: jump @210 if a1 == 0\n      : @182 (gas: 36)\n  9573: a1 = u8 [a0 + 0x18]\n  9576: u64 [sp + 0xb8] = a1\n  9580: a1 = u8 [a0 + 0x19]\n  9583: u64 [sp + 0x78] = a1\n  9586: a1 = u8 [a0 + 0x1a]\n  9589: u64 [sp + 0xa8] = a1\n  9593: a1 = u8 [a0 + 0x1b]\n  9596: u64 [sp + 0xa0] = a1\n  9600: a1 = u8 [a0 + 0x1c]\n  9603: u64 [sp + 0xd0] = a1\n  9607: a1 = u8 [a0 + 0x1d]\n  9610: u64 [sp + 0xb0] = a1\n  9614: a1 = u8 [a0 + 0x1e]\n  9617: u64 [sp + 0xc8] = a1\n  9621: a0 = u8 [a0 + 0x1f]\n  9624: u64 [sp + 0xc0] = a0\n  9628: u32 [sp + 576] = 0x20\n  9633: a0 = u64 [sp + 0x58]\n  9636: u64 [sp + 0x270] = a0\n  9640: a0 = u64 [sp + 0x48]\n  9643: u64 [sp + 0x268] = a0\n  9647: a0 = u64 [sp + 0x50]\n  9650: u64 [sp + 0x260] = a0\n  9654: s1 = u64 [sp + 0x40]\n  9657: u64 [sp + 0x278] = s1\n  9661: u64 [sp + 664] = 0\n  9665: u64 [sp + 656] = 0\n  9669: u64 [sp + 648] = 0\n  9673: u64 [sp + 640] = 0\n  9677: i32 a1 = sp + 0x260\n  9681: i32 a3 = sp + 0x280\n  9685: i32 a4 = sp + 0x240\n  9689: a2 = 0xffffffffffffffff\n  9692: a0 = 0\n  9694: ecalli 5 // 'get_storage'\n  9696: fallthrough\n      : @183 (gas: 28)\n  9697: a0 = u64 [sp + 0x290]\n  9701: a1 = u64 [sp + 0x288]\n  9705: a2 = u64 [sp + 0x280]\n  9709: a3 = u64 [sp + 0x298]\n  9713: a4 = a0 << 0x3f\n  9716: a5 = a1 >> 0x1\n  9719: a4 = a4 | a5\n  9722: a5 = a3 << 0x3f\n  9725: a0 = a0 >> 0x1\n  9728: t2 = s1\n  9730: s1 = a0 | a5\n  9733: a1 = a1 << 0x3f\n  9736: a5 = a2 >> 0x1\n  9739: a1 = a1 | a5\n  9742: a5 = a3 >> 0x1\n  9745: a2 = a2 & 0x1\n  9748: a0 = -a2\n  9750: t0 = a2 <u 0x1\n  9753: a3 = a1 & 0x7f\n  9756: t1 = a0 & s1\n  9759: a4 = a4 & a0\n  9762: a3 = a1 if a2 != 0\n  9765: a1 = a0 & a5\n  9768: a0 = a3 <u 0x20\n  9771: a0 = 0 if a4 != 0\n  9773: a2 = t1 | a1\n  9776: a0 = 0 if a2 != 0\n  9778: jump @212 if t0 != a0\n      : @184 (gas: 47)\n  9782: a0 = u64 [sp + 0x78]\n  9785: a0 = a0 << 0x8\n  9788: a2 = u64 [sp + 0xb8]\n  9792: a0 = a0 | a2\n  9795: a2 = u64 [sp + 0xa8]\n  9799: a2 = a2 << 0x10\n  9802: a5 = u64 [sp + 0xa0]\n  9806: a5 = a5 << 0x18\n  9809: a2 = a2 | a5\n  9812: a0 = a0 | a2\n  9815: a2 = u64 [sp + 0xb0]\n  9819: a2 = a2 << 0x8\n  9822: a5 = u64 [sp + 0xd0]\n  9826: a2 = a2 | a5\n  9829: a5 = u64 [sp + 0xc8]\n  9833: a5 = a5 << 0x10\n  9836: s1 = u64 [sp + 0xc0]\n  9840: s1 = s1 << 0x18\n  9843: a5 = a5 | s1\n  9846: a2 = a2 | a5\n  9849: a2 = a2 << 0x20\n  9852: a0 = a0 | a2\n  9855: u64 [sp + 0xd0] = a0\n  9859: a0 = reverse a0\n  9861: u64 [sp + 0x20] = a0\n  9864: u64 [sp + 0x1e0] = a0\n  9868: u64 [sp + 0x200] = a3\n  9872: a0 = u64 [sp + 0x50]\n  9875: u64 [sp + 0x220] = a0\n  9879: a0 = u64 [sp + 0x38]\n  9882: u64 [sp + 0x1e8] = a0\n  9886: u64 [sp + 0x208] = a4\n  9890: a0 = u64 [sp + 0x48]\n  9893: u64 [sp + 0x228] = a0\n  9897: a0 = u64 [sp + 0x30]\n  9900: u64 [sp + 0x1f0] = a0\n  9904: u64 [sp + 0x210] = t1\n  9908: a0 = u64 [sp + 0x58]\n  9911: u64 [sp + 0x230] = a0\n  9915: s1 = u64 [sp + 0x28]\n  9918: u64 [sp + 0x1f8] = s1\n  9922: u64 [sp + 0x218] = a1\n  9926: a0 = sp + 0x220\n  9930: a1 = sp + 0x200\n  9934: a2 = sp + 0x1e0\n  9938: u64 [sp + 0x238] = t2\n  9942: ra = 158, jump @170\n      : @185 [@dyn 79] (gas: 16)\n  9948: a3 = u64 [sp + 0x20]\n  9951: a2 = u64 [sp + 0x38]\n  9954: a0 = a2 >u 0\n  9956: a1 = a3 <u 0x20\n  9959: a1 = a1 ^ 0x1\n  9962: a1 = a0 if a2 != 0\n  9965: a0 = u64 [sp + 0x30]\n  9968: a0 = a0 >u 0\n  9970: a2 = s1 >u 0\n  9972: a2 = a0 if s1 == 0\n  9975: a0 = u64 [sp + 0xd8]\n  9979: a2 = a1 if a0 == 0\n  9982: a4 = u64 [sp + 0x40]\n  9985: a5 = u64 [sp + 0x58]\n  9988: s1 = u64 [sp + 0x50]\n  9991: jump @196 if a2 == 0\n      : @186 (gas: 5)\n  9995: a3 = a3 & 0xffffffffffffffe0\n  9998: u64 [sp + 0x18] = a3\n 10001: a1 = 0x20\n 10004: a0 = 0\n 10006: ra = 160, jump @0\n      : @187 [@dyn 80] (gas: 70)\n 10012: a1 = u64 [sp + 0x40]\n 10015: a1 = reverse a1\n 10017: a2 = u64 [sp + 0x58]\n 10020: a2 = reverse a2\n 10022: a3 = u64 [sp + 0x48]\n 10025: a3 = reverse a3\n 10027: a4 = reverse s1\n 10029: a5 = a4 >> 0x38\n 10032: u8 [a0 + 0x1f] = a5\n 10035: a5 = a4 >> 0x30\n 10038: u8 [a0 + 0x1e] = a5\n 10041: a5 = a4 >> 0x28\n 10044: u8 [a0 + 0x1d] = a5\n 10047: a5 = a4 >> 0x20\n 10050: u8 [a0 + 0x1c] = a5\n 10053: a5 = a4 >> 0x18\n 10056: u8 [a0 + 0x1b] = a5\n 10059: a5 = a4 >> 0x10\n 10062: u8 [a0 + 0x1a] = a5\n 10065: a5 = a4 >> 0x8\n 10068: u8 [a0 + 0x19] = a5\n 10071: u8 [a0 + 0x18] = a4\n 10074: u8 [a0 + 0x10] = a3\n 10077: a4 = a3 >> 0x38\n 10080: u8 [a0 + 0x17] = a4\n 10083: a4 = a3 >> 0x30\n 10086: u8 [a0 + 0x16] = a4\n 10089: a4 = a3 >> 0x28\n 10092: u8 [a0 + 0x15] = a4\n 10095: a4 = a3 >> 0x20\n 10098: u8 [a0 + 0x14] = a4\n 10101: a4 = a3 >> 0x18\n 10104: u8 [a0 + 0x13] = a4\n 10107: a4 = a3 >> 0x10\n 10110: u8 [a0 + 0x12] = a4\n 10113: a3 = a3 >> 0x8\n 10116: u8 [a0 + 0x11] = a3\n 10119: u8 [a0 + 0x8] = a2\n 10122: a3 = a2 >> 0x38\n 10125: u8 [a0 + 0xf] = a3\n 10128: a3 = a2 >> 0x30\n 10131: u8 [a0 + 0xe] = a3\n 10134: a3 = a2 >> 0x28\n 10137: u8 [a0 + 0xd] = a3\n 10140: a3 = a2 >> 0x20\n 10143: u8 [a0 + 0xc] = a3\n 10146: a3 = a2 >> 0x18\n 10149: u8 [a0 + 0xb] = a3\n 10152: a3 = a2 >> 0x10\n 10155: u8 [a0 + 0xa] = a3\n 10158: a2 = a2 >> 0x8\n 10161: u8 [a0 + 0x9] = a2\n 10164: u8 [a0] = a1\n 10166: a2 = a1 >> 0x38\n 10169: u8 [a0 + 0x7] = a2\n 10172: a2 = a1 >> 0x30\n 10175: u8 [a0 + 0x6] = a2\n 10178: a2 = a1 >> 0x28\n 10181: u8 [a0 + 0x5] = a2\n 10184: a2 = a1 >> 0x20\n 10187: u8 [a0 + 0x4] = a2\n 10190: a2 = a1 >> 0x18\n 10193: u8 [a0 + 0x3] = a2\n 10196: a2 = a1 >> 0x10\n 10199: u8 [a0 + 0x2] = a2\n 10202: a1 = a1 >> 0x8\n 10205: u8 [a0 + 0x1] = a1\n 10208: a1 = 0x20\n 10211: a0 = 0\n 10213: ra = 162, jump @0\n      : @188 [@dyn 81] (gas: 5)\n 10219: i32 a0 = a0 + 0\n 10221: i32 a2 = sp + 0x280\n 10225: a1 = 0x20\n 10228: ecalli 6 // 'hash_keccak_256'\n 10230: fallthrough\n      : @189 (gas: 13)\n 10231: a0 = u64 [sp + 0x280]\n 10235: a1 = u64 [sp + 0x288]\n 10239: a2 = u64 [sp + 0x290]\n 10243: a3 = u64 [sp + 0x298]\n 10247: a0 = reverse a0\n 10249: u64 [sp + 0xd0] = a0\n 10253: t0 = reverse a1\n 10255: a0 = reverse a2\n 10257: u64 [sp + 0xd8] = a0\n 10261: a0 = reverse a3\n 10263: u64 [sp + 0xc0] = a0\n 10267: a0 = u64 [sp + 0x18]\n 10270: jump @200 if a0 == 0\n      : @190 (gas: 118)\n 10274: u64 [sp + 176] = 0\n 10278: u64 [sp + 184] = 0\n 10282: u64 [sp + 168] = 0\n 10286: ra = u64 [sp + 0x80]\n 10290: s1 = ra + 0x20\n 10293: a0 = s1 <u ra\n 10296: t2 = u64 [sp + 0x88]\n 10300: a2 = t2 + a0\n 10303: a3 = a2 <u t2\n 10306: a3 = a0 if a0 == 0\n 10309: t1 = u64 [sp + 0x90]\n 10313: a3 = a3 + t1\n 10316: a0 = a3 <u t1\n 10319: u64 [sp + 0xc8] = t0\n 10323: t0 = u64 [sp + 0x98]\n 10327: t0 = t0 + a0\n 10330: a4 = a3 >u 0\n 10332: a5 = t0 >u 0\n 10334: a5 = a4 if t0 == 0\n 10337: a4 = 0x100000000\n 10347: a1 = s1\n 10349: a0 = maxu(s1, a4)\n 10352: s1 = a4 if a5 == 0\n 10355: a1 = a4 if a2 == 0\n 10358: a0 = a1 if a2 != 0\n 10361: a1 = a3 | t0\n 10364: a0 = s1 if a1 != 0\n 10367: a4 = a2\n 10369: a4 = 0 if a5 == 0\n 10371: a4 = a2 if a1 == 0\n 10374: a1 = a3\n 10376: a1 = 0 if t0 == 0\n 10378: a1 = a3 if t0 == 0\n 10381: a2 = t2 ^ 0xffffffffffffffff\n 10384: a4 = a4 + a2\n 10387: a3 = ra ^ 0xffffffffffffffff\n 10390: a0 = a0 + a3\n 10393: a3 = a0 <u a3\n 10396: a4 = a4 + a3\n 10399: a5 = a4 ^ a2\n 10402: a2 = a4 <u a2\n 10405: a2 = a3 if a5 == 0\n 10408: a5 = t1 ^ 0xffffffffffffffff\n 10411: u64 [sp + 0x78] = a5\n 10414: a5 = a5 + a1\n 10417: s1 = a5 + a2\n 10420: a1 = s1 << 0x3b\n 10423: a2 = a4 >> 0x5\n 10426: a1 = a1 | a2\n 10429: a4 = a4 << 0x3b\n 10432: a0 = a0 >> 0x5\n 10435: a2 = a0 | a4\n 10438: u64 [sp + 0xa0] = a2\n 10442: a4 = u64 [sp + 0x18]\n 10445: a0 = a4 <u 0x1\n 10448: a3 = -a0\n 10450: ra = a0 << 0x3b\n 10453: a4 = a4 + 0xffffffffffffffff\n 10456: a4 = a4 >> 0x5\n 10459: a0 = a4 - ra\n 10462: t2 = a1 ^ a3\n 10465: a4 = a1 <u a3\n 10468: t1 = a2 <u a0\n 10471: t1 = a4 if t2 != 0\n 10474: a2 = u64 [sp + 0x98]\n 10478: a4 = a2 ^ 0xffffffffffffffff\n 10481: t0 = t0 + a4\n 10484: a2 = u64 [sp + 0x78]\n 10487: a4 = a5 <u a2\n 10490: a4 = a4 + t0\n 10493: a5 = s1 <u a5\n 10496: a4 = a4 + a5\n 10499: s1 = s1 >> 0x5\n 10502: a5 = a4 << 0x3b\n 10505: a5 = a5 | s1\n 10508: a4 = a4 >> 0x5\n 10511: s1 = a3 >> 0x5\n 10514: t0 = s1 - ra\n 10517: a2 = a5 <u t0\n 10520: t2 = a4 ^ s1\n 10523: ra = a4 <u s1\n 10526: ra = a2 if t2 == 0\n 10529: a2 = a5 ^ t0\n 10532: a2 = a2 | t2\n 10535: ra = t1 if a2 == 0\n 10538: a2 = u64 [sp + 0xa0]\n 10542: a2 = a0 if ra == 0\n 10545: a1 = a3 if ra == 0\n 10548: a4 = s1 if ra == 0\n 10551: a5 = t0 if ra == 0\n 10554: a0 = a5 >> 0x3b\n 10557: a4 = a4 << 0x5\n 10560: t0 = a4 | a0\n 10563: a4 = u64 [sp + 0xb0]\n 10567: a0 = a1 >> 0x3b\n 10570: a5 = a5 << 0x5\n 10573: t2 = a5 | a0\n 10576: a5 = u64 [sp + 0xb8]\n 10580: a3 = a2 >> 0x3b\n 10583: a1 = a1 << 0x5\n 10586: a0 = a1 | a3\n 10589: t1 = a2 << 0x5\n 10592: a3 = t1 + 0x40\n 10595: u64 [sp + 0x78] = a3\n 10598: a3 = a3 <u t1\n 10601: s1 = u64 [sp + 0xa8]\n 10605: a1 = a0 + a3\n 10608: u64 [sp + 0x70] = a1\n 10611: a1 = a1 <u a0\n 10614: a1 = a3 if a3 == 0\n 10617: a1 = a1 + t2\n 10620: u64 [sp + 0x68] = a1\n 10623: a1 = a1 <u t2\n 10626: a1 = a1 + t0\n 10629: u64 [sp + 0x60] = a1\n 10632: a2 = 0x20\n 10635: a3 = u64 [sp + 0xc8]\n 10639: fallthrough\n      : @191 (gas: 31)\n 10640: u64 [sp + 0xa8] = s1\n 10644: u64 [sp + 0xc8] = a3\n 10648: a0 = u64 [sp + 0x80]\n 10652: a0 = a0 + a2\n 10655: u64 [sp + 0xa0] = a2\n 10659: a1 = a0 <u a2\n 10662: a2 = u64 [sp + 0x88]\n 10666: a2 = a2 + a4\n 10669: a2 = a2 + a1\n 10672: a3 = a2 ^ a4\n 10675: u64 [sp + 0xb0] = a4\n 10679: a4 = a2 <u a4\n 10682: a4 = a1 if a3 == 0\n 10685: a1 = u64 [sp + 0x90]\n 10689: a1 = a1 + a5\n 10692: u64 [sp + 0xb8] = a5\n 10696: a3 = a1 <u a5\n 10699: a5 = u64 [sp + 0x98]\n 10703: a5 = a5 + s1\n 10706: a3 = a3 + a5\n 10709: a4 = a4 + a1\n 10712: a1 = a4 <u a1\n 10715: a1 = a1 + a3\n 10718: a1 = a1 | a2\n 10721: a2 = a0 | a4\n 10724: a2 = a2 | a1\n 10727: a1 = a1 | a4\n 10730: a2 = a2 >> 0x20\n 10733: a1 = a1 << 0x20\n 10736: a1 = a1 | a2\n 10739: jump @209 if a1 != 0\n      : @192 (gas: 3)\n 10743: i32 a0 = a0 + 0\n 10745: a1 = 0x20\n 10748: ra = 164, jump @0\n      : @193 [@dyn 82] (gas: 111)\n 10754: a1 = u8 [a0 + 0x1]\n 10757: a2 = u8 [a0]\n 10759: a3 = u8 [a0 + 0x2]\n 10762: a4 = u8 [a0 + 0x3]\n 10765: a1 = a1 << 0x8\n 10768: a1 = a1 | a2\n 10771: a3 = a3 << 0x10\n 10774: a4 = a4 << 0x18\n 10777: a3 = a3 | a4\n 10780: a1 = a1 | a3\n 10783: a2 = u8 [a0 + 0x5]\n 10786: a3 = u8 [a0 + 0x4]\n 10789: a4 = u8 [a0 + 0x6]\n 10792: a5 = u8 [a0 + 0x7]\n 10795: a2 = a2 << 0x8\n 10798: a2 = a2 | a3\n 10801: a4 = a4 << 0x10\n 10804: a5 = a5 << 0x18\n 10807: a4 = a4 | a5\n 10810: a2 = a2 | a4\n 10813: a2 = a2 << 0x20\n 10816: t0 = a2 | a1\n 10819: a2 = u8 [a0 + 0x9]\n 10822: a3 = u8 [a0 + 0x8]\n 10825: a4 = u8 [a0 + 0xa]\n 10828: a5 = u8 [a0 + 0xb]\n 10831: a2 = a2 << 0x8\n 10834: a2 = a2 | a3\n 10837: a4 = a4 << 0x10\n 10840: a5 = a5 << 0x18\n 10843: a4 = a4 | a5\n 10846: a2 = a2 | a4\n 10849: a3 = u8 [a0 + 0xd]\n 10852: a4 = u8 [a0 + 0xc]\n 10855: a5 = u8 [a0 + 0xe]\n 10858: s1 = u8 [a0 + 0xf]\n 10861: a3 = a3 << 0x8\n 10864: a3 = a3 | a4\n 10867: a5 = a5 << 0x10\n 10870: s1 = s1 << 0x18\n 10873: a5 = a5 | s1\n 10876: a3 = a3 | a5\n 10879: a3 = a3 << 0x20\n 10882: a2 = a2 | a3\n 10885: a3 = u8 [a0 + 0x11]\n 10888: a4 = u8 [a0 + 0x10]\n 10891: a5 = u8 [a0 + 0x12]\n 10894: s1 = u8 [a0 + 0x13]\n 10897: a3 = a3 << 0x8\n 10900: a3 = a3 | a4\n 10903: a5 = a5 << 0x10\n 10906: s1 = s1 << 0x18\n 10909: a5 = a5 | s1\n 10912: a3 = a3 | a5\n 10915: a4 = u8 [a0 + 0x15]\n 10918: a5 = u8 [a0 + 0x14]\n 10921: s1 = u8 [a0 + 0x16]\n 10924: a1 = u8 [a0 + 0x17]\n 10927: a4 = a4 << 0x8\n 10930: a4 = a4 | a5\n 10933: s1 = s1 << 0x10\n 10936: a1 = a1 << 0x18\n 10939: a1 = a1 | s1\n 10942: a1 = a1 | a4\n 10945: a1 = a1 << 0x20\n 10948: a3 = a3 | a1\n 10951: a1 = u8 [a0 + 0x19]\n 10954: a4 = u8 [a0 + 0x18]\n 10957: a5 = u8 [a0 + 0x1a]\n 10960: s1 = u8 [a0 + 0x1b]\n 10963: a1 = a1 << 0x8\n 10966: a1 = a1 | a4\n 10969: a5 = a5 << 0x10\n 10972: s1 = s1 << 0x18\n 10975: a5 = a5 | s1\n 10978: a1 = a1 | a5\n 10981: a4 = u8 [a0 + 0x1d]\n 10984: a5 = u8 [a0 + 0x1c]\n 10987: s1 = u8 [a0 + 0x1e]\n 10990: a0 = u8 [a0 + 0x1f]\n 10993: a4 = a4 << 0x8\n 10996: a4 = a4 | a5\n 10999: s1 = s1 << 0x10\n 11002: a0 = a0 << 0x18\n 11005: a0 = a0 | s1\n 11008: a0 = a0 | a4\n 11011: a0 = a0 << 0x20\n 11014: a0 = a0 | a1\n 11017: a0 = reverse a0\n 11019: a1 = reverse a3\n 11021: a2 = reverse a2\n 11023: a3 = reverse t0\n 11025: a4 = u64 [sp + 0xd0]\n 11029: u64 [sp + 0x278] = a4\n 11033: a4 = u64 [sp + 0xc8]\n 11037: u64 [sp + 0x270] = a4\n 11041: a4 = u64 [sp + 0xd8]\n 11045: u64 [sp + 0x268] = a4\n 11049: s1 = u64 [sp + 0xc0]\n 11053: u64 [sp + 0x260] = s1\n 11057: u64 [sp + 0x298] = a3\n 11061: u64 [sp + 0x290] = a2\n 11065: u64 [sp + 0x288] = a1\n 11069: u64 [sp + 0x280] = a0\n 11073: i32 a1 = sp + 0x260\n 11077: i32 a3 = sp + 0x280\n 11081: a2 = 0xffffffffffffffff\n 11084: a4 = 0x20\n 11087: a0 = 0\n 11089: ecalli 9 // 'set_storage'\n 11091: fallthrough\n      : @194 (gas: 42)\n 11092: s1 = s1 + 0x1\n 11095: a0 = s1 <u 0x1\n 11098: a1 = u64 [sp + 0xd8]\n 11102: a1 = a1 + a0\n 11105: u64 [sp + 0xc0] = s1\n 11109: u64 [sp + 0xd8] = a1\n 11113: a0 = s1 | a1\n 11116: a0 = a0 <u 0x1\n 11119: a1 = u64 [sp + 0xc8]\n 11123: t0 = a1 + a0\n 11126: a2 = t0 <u a1\n 11129: a0 = u64 [sp + 0xa0]\n 11133: a1 = a0 + 0x20\n 11136: a0 = a1 <u a0\n 11139: a3 = u64 [sp + 0xb0]\n 11143: t2 = a3 + a0\n 11146: a3 = t2 <u a3\n 11149: a3 = a0 if a0 == 0\n 11152: a4 = u64 [sp + 0xb8]\n 11156: a0 = a4 + a3\n 11159: a3 = a0 <u a4\n 11162: s1 = u64 [sp + 0xa8]\n 11166: s1 = s1 + a3\n 11169: a3 = u64 [sp + 0x68]\n 11172: a3 = a3 ^ a0\n 11175: a4 = u64 [sp + 0x78]\n 11178: a4 = a4 ^ a1\n 11181: a3 = a3 | a4\n 11184: a4 = u64 [sp + 0x60]\n 11187: a4 = a4 ^ s1\n 11190: a5 = u64 [sp + 0x70]\n 11193: a5 = t2 ^ a5\n 11196: a4 = a4 | a5\n 11199: t1 = a3 | a4\n 11202: a3 = u64 [sp + 0xd0]\n 11206: a3 = a3 + a2\n 11209: u64 [sp + 0xd0] = a3\n 11213: a2 = a1\n 11215: a4 = t2\n 11217: a5 = a0\n 11219: a3 = t0\n 11221: jump @191 if t1 != 0\n      : @195 (gas: 1)\n 11225: jump @201\n      : @196 (gas: 8)\n 11228: a0 = u64 [sp + 0x68]\n 11231: a1 = u64 [sp + 0x60]\n 11234: a0 = a0 | a1\n 11237: a1 = u64 [sp + 0x70]\n 11240: a2 = u64 [sp + 0xd0]\n 11244: a1 = a1 | a2\n 11247: a0 = a0 | a1\n 11250: jump @206 if a0 == 0\n      : @197 (gas: 10)\n 11254: a0 = u64 [sp + 0x98]\n 11258: a1 = u64 [sp + 0x90]\n 11262: a0 = a0 | a1\n 11265: a1 = 0xffffffe0\n 11275: a2 = u64 [sp + 0x80]\n 11279: a1 = a2 <u a1\n 11282: a2 = u64 [sp + 0x88]\n 11286: a1 = 0 if a2 != 0\n 11288: a1 = 0 if a0 != 0\n 11290: jump @209 if a1 == 0\n      : @198 (gas: 4)\n 11294: a0 = u64 [sp + 0x18]\n 11297: i32 a0 = a0 + 0x20\n 11300: a1 = 0x20\n 11303: ra = 166, jump @0\n      : @199 [@dyn 83] (gas: 280)\n 11309: a1 = u8 [a0 + 0x19]\n 11312: a2 = u8 [a0 + 0x18]\n 11315: a3 = u8 [a0 + 0x1a]\n 11318: a4 = u8 [a0 + 0x1b]\n 11321: a1 = a1 << 0x8\n 11324: a1 = a1 | a2\n 11327: a3 = a3 << 0x10\n 11330: a4 = a4 << 0x18\n 11333: a3 = a3 | a4\n 11336: a1 = a1 | a3\n 11339: a2 = u8 [a0 + 0x1d]\n 11342: a3 = u8 [a0 + 0x1c]\n 11345: a4 = u8 [a0 + 0x1e]\n 11348: a5 = u8 [a0 + 0x1f]\n 11351: a2 = a2 << 0x8\n 11354: a2 = a2 | a3\n 11357: a4 = a4 << 0x10\n 11360: a5 = a5 << 0x18\n 11363: a4 = a4 | a5\n 11366: a2 = a2 | a4\n 11369: a2 = a2 << 0x20\n 11372: t0 = a2 | a1\n 11375: a1 = u8 [a0 + 0x11]\n 11378: a2 = u8 [a0 + 0x10]\n 11381: a3 = u8 [a0 + 0x12]\n 11384: a4 = u8 [a0 + 0x13]\n 11387: a1 = a1 << 0x8\n 11390: a1 = a1 | a2\n 11393: a3 = a3 << 0x10\n 11396: a4 = a4 << 0x18\n 11399: a3 = a3 | a4\n 11402: a1 = a1 | a3\n 11405: a2 = u8 [a0 + 0x15]\n 11408: a3 = u8 [a0 + 0x14]\n 11411: a4 = u8 [a0 + 0x16]\n 11414: a5 = u8 [a0 + 0x17]\n 11417: a2 = a2 << 0x8\n 11420: a2 = a2 | a3\n 11423: a4 = a4 << 0x10\n 11426: a5 = a5 << 0x18\n 11429: a4 = a4 | a5\n 11432: a2 = a2 | a4\n 11435: a2 = a2 << 0x20\n 11438: a1 = a1 | a2\n 11441: u64 [sp + 0xd8] = a1\n 11445: a1 = u8 [a0 + 0x9]\n 11448: a3 = u8 [a0 + 0x8]\n 11451: a4 = u8 [a0 + 0xa]\n 11454: a5 = u8 [a0 + 0xb]\n 11457: a1 = a1 << 0x8\n 11460: a1 = a1 | a3\n 11463: a4 = a4 << 0x10\n 11466: a5 = a5 << 0x18\n 11469: a4 = a4 | a5\n 11472: a1 = a1 | a4\n 11475: a3 = u8 [a0 + 0xd]\n 11478: a4 = u8 [a0 + 0xc]\n 11481: a5 = u8 [a0 + 0xe]\n 11484: s1 = u8 [a0 + 0xf]\n 11487: a3 = a3 << 0x8\n 11490: a3 = a3 | a4\n 11493: a5 = a5 << 0x10\n 11496: s1 = s1 << 0x18\n 11499: a5 = a5 | s1\n 11502: a3 = a3 | a5\n 11505: a3 = a3 << 0x20\n 11508: a1 = a1 | a3\n 11511: u64 [sp + 0xd0] = a1\n 11515: a1 = u8 [a0 + 0x1]\n 11518: a4 = u8 [a0]\n 11520: a5 = u8 [a0 + 0x2]\n 11523: s1 = u8 [a0 + 0x3]\n 11526: a1 = a1 << 0x8\n 11529: a1 = a1 | a4\n 11532: a5 = a5 << 0x10\n 11535: s1 = s1 << 0x18\n 11538: a5 = a5 | s1\n 11541: a1 = a1 | a5\n 11544: a4 = u8 [a0 + 0x5]\n 11547: a5 = u8 [a0 + 0x4]\n 11550: s1 = u8 [a0 + 0x6]\n 11553: a0 = u8 [a0 + 0x7]\n 11556: a4 = a4 << 0x8\n 11559: a4 = a4 | a5\n 11562: s1 = s1 << 0x10\n 11565: a0 = a0 << 0x18\n 11568: a0 = a0 | s1\n 11571: a0 = a0 | a4\n 11574: a0 = a0 << 0x20\n 11577: ra = a0 | a1\n 11580: u8 [sp + 479] = 0\n 11584: u8 [sp + 478] = 0\n 11588: u8 [sp + 477] = 0\n 11592: u8 [sp + 476] = 0\n 11596: u8 [sp + 475] = 0\n 11600: u8 [sp + 474] = 0\n 11604: u8 [sp + 473] = 0\n 11608: u8 [sp + 472] = 0\n 11612: u8 [sp + 471] = 0\n 11616: u8 [sp + 470] = 0\n 11620: u8 [sp + 469] = 0\n 11624: u8 [sp + 468] = 0\n 11628: u8 [sp + 467] = 0\n 11632: u8 [sp + 466] = 0\n 11636: u8 [sp + 465] = 0\n 11640: u8 [sp + 464] = 0\n 11644: u8 [sp + 463] = 0\n 11648: u8 [sp + 462] = 0\n 11652: u8 [sp + 461] = 0\n 11656: u8 [sp + 460] = 0\n 11660: u8 [sp + 459] = 0\n 11664: u8 [sp + 458] = 0\n 11668: u8 [sp + 457] = 0\n 11672: u8 [sp + 456] = 0\n 11676: u8 [sp + 455] = 0\n 11680: u8 [sp + 454] = 0\n 11684: u8 [sp + 453] = 0\n 11688: u8 [sp + 452] = 0\n 11692: u8 [sp + 451] = 0\n 11696: u8 [sp + 450] = 0\n 11700: u8 [sp + 449] = 0\n 11704: u8 [sp + 448] = 0\n 11708: u8 [sp + 447] = 0xff\n 11714: u8 [sp + 446] = 0xff\n 11720: u8 [sp + 445] = 0xff\n 11726: u8 [sp + 443] = 0xff\n 11732: u8 [sp + 440] = 0xffffffffffffffff\n 11737: u8 [sp + 439] = 0xff\n 11743: u8 [sp + 438] = 0xff\n 11749: u8 [sp + 437] = 0xff\n 11755: u8 [sp + 435] = 0xff\n 11761: u8 [sp + 432] = 0xffffffffffffffff\n 11766: u8 [sp + 431] = 0xff\n 11772: u8 [sp + 430] = 0xff\n 11778: u8 [sp + 429] = 0xff\n 11784: u8 [sp + 427] = 0xff\n 11790: u8 [sp + 424] = 0xffffffffffffffff\n 11795: u8 [sp + 423] = 0xff\n 11801: u8 [sp + 422] = 0xff\n 11807: u8 [sp + 421] = 0xff\n 11813: u8 [sp + 419] = 0xff\n 11819: u8 [sp + 416] = 0xffffffffffffffff\n 11824: a1 = 0xffffffff\n 11834: u8 [sp + 0x1bc] = a1\n 11838: a5 = 0xffffffffffff\n 11848: u8 [sp + 0x1ba] = a5\n 11852: a4 = 0xffffffffffffff\n 11862: u8 [sp + 0x1b9] = a4\n 11866: u8 [sp + 0x1b4] = a1\n 11870: u8 [sp + 0x1b2] = a5\n 11874: u8 [sp + 0x1b1] = a4\n 11878: u8 [sp + 0x1ac] = a1\n 11882: u8 [sp + 0x1aa] = a5\n 11886: u8 [sp + 0x1a9] = a4\n 11890: u8 [sp + 0x1a4] = a1\n 11894: u8 [sp + 0x1a2] = a5\n 11898: u8 [sp + 0x1a1] = a4\n 11902: t2 = u64 [sp + 0x20]\n 11905: a4 = t2 & 0x1f\n 11908: a1 = sp + 0x1a0\n 11912: a4 = a4 + a1\n 11915: a1 = u8 [a4 + 0x19]\n 11918: a5 = u8 [a4 + 0x18]\n 11921: s1 = u8 [a4 + 0x1a]\n 11924: a2 = u8 [a4 + 0x1b]\n 11927: a1 = a1 << 0x8\n 11930: a1 = a1 | a5\n 11933: s1 = s1 << 0x10\n 11936: a2 = a2 << 0x18\n 11939: a2 = a2 | s1\n 11942: a1 = a1 | a2\n 11945: a2 = u8 [a4 + 0x1d]\n 11948: a5 = u8 [a4 + 0x1c]\n 11951: s1 = u8 [a4 + 0x1e]\n 11954: a3 = u8 [a4 + 0x1f]\n 11957: a2 = a2 << 0x8\n 11960: a2 = a2 | a5\n 11963: s1 = s1 << 0x10\n 11966: a3 = a3 << 0x18\n 11969: a3 = a3 | s1\n 11972: a2 = a2 | a3\n 11975: a2 = a2 << 0x20\n 11978: t1 = a2 | a1\n 11981: a1 = u8 [a4 + 0x11]\n 11984: a2 = u8 [a4 + 0x10]\n 11987: a3 = u8 [a4 + 0x12]\n 11990: s1 = u8 [a4 + 0x13]\n 11993: a1 = a1 << 0x8\n 11996: a1 = a1 | a2\n 11999: a3 = a3 << 0x10\n 12002: s1 = s1 << 0x18\n 12005: a3 = a3 | s1\n 12008: a1 = a1 | a3\n 12011: a2 = u8 [a4 + 0x15]\n 12014: a3 = u8 [a4 + 0x14]\n 12017: s1 = u8 [a4 + 0x16]\n 12020: a0 = u8 [a4 + 0x17]\n 12023: a2 = a2 << 0x8\n 12026: a2 = a2 | a3\n 12029: s1 = s1 << 0x10\n 12032: a0 = a0 << 0x18\n 12035: a0 = a0 | s1\n 12038: a0 = a0 | a2\n 12041: a0 = a0 << 0x20\n 12044: s1 = a0 | a1\n 12047: a0 = u8 [a4 + 0x9]\n 12050: a1 = u8 [a4 + 0x8]\n 12053: a2 = u8 [a4 + 0xa]\n 12056: a3 = u8 [a4 + 0xb]\n 12059: a0 = a0 << 0x8\n 12062: a0 = a0 | a1\n 12065: a2 = a2 << 0x10\n 12068: a3 = a3 << 0x18\n 12071: a2 = a2 | a3\n 12074: a5 = a2 | a0\n 12077: a1 = u8 [a4 + 0xd]\n 12080: a2 = u8 [a4 + 0xc]\n 12083: a3 = u8 [a4 + 0xe]\n 12086: a0 = u8 [a4 + 0xf]\n 12089: a1 = a1 << 0x8\n 12092: a1 = a1 | a2\n 12095: a3 = a3 << 0x10\n 12098: a0 = a0 << 0x18\n 12101: a0 = a0 | a3\n 12104: a0 = a0 | a1\n 12107: a0 = a0 << 0x20\n 12110: a1 = a0 | a5\n 12113: a0 = u8 [a4 + 0x1]\n 12116: a2 = u8 [a4]\n 12118: a3 = u8 [a4 + 0x2]\n 12121: a5 = u8 [a4 + 0x3]\n 12124: a0 = a0 << 0x8\n 12127: a0 = a0 | a2\n 12130: a3 = a3 << 0x10\n 12133: a5 = a5 << 0x18\n 12136: a3 = a3 | a5\n 12139: a0 = a0 | a3\n 12142: a2 = u8 [a4 + 0x5]\n 12145: a3 = u8 [a4 + 0x4]\n 12148: a5 = u8 [a4 + 0x6]\n 12151: a4 = u8 [a4 + 0x7]\n 12154: a2 = a2 << 0x8\n 12157: a2 = a2 | a3\n 12160: a5 = a5 << 0x10\n 12163: a4 = a4 << 0x18\n 12166: a4 = a4 | a5\n 12169: a2 = a2 | a4\n 12172: a2 = a2 << 0x20\n 12175: a0 = a0 | a2\n 12178: a2 = reverse t0\n 12180: t0 = a2 & ~a0\n 12183: a0 = u64 [sp + 0xd8]\n 12187: a0 = reverse a0\n 12189: a2 = a0 & ~a1\n 12192: a0 = reverse ra\n 12194: a1 = u64 [sp + 0xd0]\n 12198: a1 = reverse a1\n 12200: a1 = a1 & ~s1\n 12203: a0 = a0 & ~t1\n 12206: a4 = t2 >> 0x3f\n 12209: a3 = u64 [sp + 0x38]\n 12212: a5 = a3 << 0x1\n 12215: a4 = a4 | a5\n 12218: a5 = a3 >> 0x3f\n 12221: a3 = u64 [sp + 0x30]\n 12224: s1 = a3 << 0x1\n 12227: a5 = a5 | s1\n 12230: s1 = a3 >> 0x3f\n 12233: a3 = u64 [sp + 0x28]\n 12236: a3 = a3 << 0x1\n 12239: a3 = a3 | s1\n 12242: t1 = a0 | a3\n 12245: a1 = a1 | a5\n 12248: a2 = a2 | a4\n 12251: a3 = t2 << 0x1\n 12254: a3 = t0 | a3\n 12257: a4 = u64 [sp + 0x40]\n 12260: a5 = u64 [sp + 0x58]\n 12263: s1 = u64 [sp + 0x50]\n 12266: jump @207\n      : @200 (gas: 4)\n 12269: t2 = 0\n 12271: s1 = 0\n 12273: a1 = 0x20\n 12276: fallthrough\n      : @201 (gas: 10)\n 12277: a5 = u64 [sp + 0x20]\n 12280: a2 = u64 [sp + 0x18]\n 12283: a2 = a2 ^ a5\n 12286: a3 = u64 [sp + 0x30]\n 12289: a2 = a2 | a3\n 12292: a3 = u64 [sp + 0x38]\n 12295: a4 = u64 [sp + 0x28]\n 12298: a3 = a3 | a4\n 12301: a2 = a2 | a3\n 12304: jump @205 if a2 == 0\n      : @202 (gas: 27)\n 12308: u64 [sp + 0xc8] = t0\n 12312: a2 = u64 [sp + 0x80]\n 12316: a2 = a2 + a1\n 12319: a3 = a2 <u a1\n 12322: a4 = u64 [sp + 0x88]\n 12326: a4 = a4 + t2\n 12329: a4 = a4 + a3\n 12332: a5 = a4 ^ t2\n 12335: a1 = a4 <u t2\n 12338: a1 = a3 if a5 == 0\n 12341: a3 = u64 [sp + 0x90]\n 12345: a3 = a3 + a0\n 12348: a1 = a1 + a3\n 12351: a5 = a1 <u a3\n 12354: a0 = a3 <u a0\n 12357: a3 = u64 [sp + 0x98]\n 12361: a3 = a3 + s1\n 12364: a0 = a0 + a3\n 12367: a0 = a0 + a5\n 12370: a3 = a2 | a1\n 12373: a0 = a0 | a4\n 12376: a3 = a3 | a0\n 12379: a3 = a3 >> 0x20\n 12382: a0 = a0 | a1\n 12385: a0 = a0 << 0x20\n 12388: a0 = a0 | a3\n 12391: jump @209 if a0 != 0\n      : @203 (gas: 3)\n 12395: i32 a0 = a2 + 0\n 12397: a1 = 0x20\n 12400: ra = 168, jump @0\n      : @204 [@dyn 84] (gas: 277)\n 12406: a1 = u8 [a0 + 0x19]\n 12409: a2 = u8 [a0 + 0x18]\n 12412: a3 = u8 [a0 + 0x1a]\n 12415: a4 = u8 [a0 + 0x1b]\n 12418: a1 = a1 << 0x8\n 12421: a1 = a1 | a2\n 12424: a3 = a3 << 0x10\n 12427: a4 = a4 << 0x18\n 12430: a3 = a3 | a4\n 12433: a1 = a1 | a3\n 12436: a2 = u8 [a0 + 0x1d]\n 12439: a3 = u8 [a0 + 0x1c]\n 12442: a4 = u8 [a0 + 0x1e]\n 12445: a5 = u8 [a0 + 0x1f]\n 12448: a2 = a2 << 0x8\n 12451: a2 = a2 | a3\n 12454: a4 = a4 << 0x10\n 12457: a5 = a5 << 0x18\n 12460: a4 = a4 | a5\n 12463: a2 = a2 | a4\n 12466: a2 = a2 << 0x20\n 12469: a1 = a1 | a2\n 12472: u64 [sp + 0xb8] = a1\n 12476: a1 = u8 [a0 + 0x11]\n 12479: a2 = u8 [a0 + 0x10]\n 12482: a3 = u8 [a0 + 0x12]\n 12485: a4 = u8 [a0 + 0x13]\n 12488: a1 = a1 << 0x8\n 12491: a1 = a1 | a2\n 12494: a3 = a3 << 0x10\n 12497: a4 = a4 << 0x18\n 12500: a3 = a3 | a4\n 12503: a1 = a1 | a3\n 12506: a2 = u8 [a0 + 0x15]\n 12509: a3 = u8 [a0 + 0x14]\n 12512: a4 = u8 [a0 + 0x16]\n 12515: a5 = u8 [a0 + 0x17]\n 12518: a2 = a2 << 0x8\n 12521: a2 = a2 | a3\n 12524: a4 = a4 << 0x10\n 12527: a5 = a5 << 0x18\n 12530: a4 = a4 | a5\n 12533: a2 = a2 | a4\n 12536: a2 = a2 << 0x20\n 12539: t1 = a2 | a1\n 12542: a1 = u8 [a0 + 0x9]\n 12545: a3 = u8 [a0 + 0x8]\n 12548: a4 = u8 [a0 + 0xa]\n 12551: a5 = u8 [a0 + 0xb]\n 12554: a1 = a1 << 0x8\n 12557: a1 = a1 | a3\n 12560: a4 = a4 << 0x10\n 12563: a5 = a5 << 0x18\n 12566: a4 = a4 | a5\n 12569: a1 = a1 | a4\n 12572: a3 = u8 [a0 + 0xd]\n 12575: a4 = u8 [a0 + 0xc]\n 12578: a5 = u8 [a0 + 0xe]\n 12581: s1 = u8 [a0 + 0xf]\n 12584: a3 = a3 << 0x8\n 12587: a3 = a3 | a4\n 12590: a5 = a5 << 0x10\n 12593: s1 = s1 << 0x18\n 12596: a5 = a5 | s1\n 12599: a3 = a3 | a5\n 12602: a3 = a3 << 0x20\n 12605: t2 = a3 | a1\n 12608: a1 = u8 [a0 + 0x1]\n 12611: a4 = u8 [a0]\n 12613: a5 = u8 [a0 + 0x2]\n 12616: s1 = u8 [a0 + 0x3]\n 12619: a1 = a1 << 0x8\n 12622: a1 = a1 | a4\n 12625: a5 = a5 << 0x10\n 12628: s1 = s1 << 0x18\n 12631: a5 = a5 | s1\n 12634: a1 = a1 | a5\n 12637: a4 = u8 [a0 + 0x5]\n 12640: a5 = u8 [a0 + 0x4]\n 12643: s1 = u8 [a0 + 0x6]\n 12646: a0 = u8 [a0 + 0x7]\n 12649: a4 = a4 << 0x8\n 12652: a4 = a4 | a5\n 12655: s1 = s1 << 0x10\n 12658: a0 = a0 << 0x18\n 12661: a0 = a0 | s1\n 12664: a0 = a0 | a4\n 12667: a0 = a0 << 0x20\n 12670: ra = a0 | a1\n 12673: u8 [sp + 415] = 0\n 12677: u8 [sp + 414] = 0\n 12681: u8 [sp + 413] = 0\n 12685: u8 [sp + 412] = 0\n 12689: u8 [sp + 411] = 0\n 12693: u8 [sp + 410] = 0\n 12697: u8 [sp + 409] = 0\n 12701: u8 [sp + 408] = 0\n 12705: u8 [sp + 407] = 0\n 12709: u8 [sp + 406] = 0\n 12713: u8 [sp + 405] = 0\n 12717: u8 [sp + 404] = 0\n 12721: u8 [sp + 403] = 0\n 12725: u8 [sp + 402] = 0\n 12729: u8 [sp + 401] = 0\n 12733: u8 [sp + 400] = 0\n 12737: u8 [sp + 399] = 0\n 12741: u8 [sp + 398] = 0\n 12745: u8 [sp + 397] = 0\n 12749: u8 [sp + 396] = 0\n 12753: u8 [sp + 395] = 0\n 12757: u8 [sp + 394] = 0\n 12761: u8 [sp + 393] = 0\n 12765: u8 [sp + 392] = 0\n 12769: u8 [sp + 391] = 0\n 12773: u8 [sp + 390] = 0\n 12777: u8 [sp + 389] = 0\n 12781: u8 [sp + 388] = 0\n 12785: u8 [sp + 387] = 0\n 12789: u8 [sp + 386] = 0\n 12793: u8 [sp + 385] = 0\n 12797: u8 [sp + 384] = 0\n 12801: u8 [sp + 383] = 0xff\n 12807: u8 [sp + 382] = 0xff\n 12813: u8 [sp + 381] = 0xff\n 12819: u8 [sp + 379] = 0xff\n 12825: u8 [sp + 376] = 0xffffffffffffffff\n 12830: u8 [sp + 375] = 0xff\n 12836: u8 [sp + 374] = 0xff\n 12842: u8 [sp + 373] = 0xff\n 12848: u8 [sp + 371] = 0xff\n 12854: u8 [sp + 368] = 0xffffffffffffffff\n 12859: u8 [sp + 367] = 0xff\n 12865: u8 [sp + 366] = 0xff\n 12871: u8 [sp + 365] = 0xff\n 12877: u8 [sp + 363] = 0xff\n 12883: u8 [sp + 360] = 0xffffffffffffffff\n 12888: u8 [sp + 359] = 0xff\n 12894: u8 [sp + 358] = 0xff\n 12900: u8 [sp + 357] = 0xff\n 12906: u8 [sp + 355] = 0xff\n 12912: u8 [sp + 352] = 0xffffffffffffffff\n 12917: a1 = 0xffffffff\n 12927: u8 [sp + 0x17c] = a1\n 12931: a5 = 0xffffffffffff\n 12941: u8 [sp + 0x17a] = a5\n 12945: a4 = 0xffffffffffffff\n 12955: u8 [sp + 0x179] = a4\n 12959: u8 [sp + 0x174] = a1\n 12963: u8 [sp + 0x172] = a5\n 12967: u8 [sp + 0x171] = a4\n 12971: u8 [sp + 0x16c] = a1\n 12975: u8 [sp + 0x16a] = a5\n 12979: u8 [sp + 0x169] = a4\n 12983: u8 [sp + 0x164] = a1\n 12987: u8 [sp + 0x162] = a5\n 12991: u8 [sp + 0x161] = a4\n 12995: a4 = u64 [sp + 0x20]\n 12998: a4 = a4 & 0x1f\n 13001: a1 = sp + 0x160\n 13005: a4 = a4 + a1\n 13008: a1 = u8 [a4 + 0x19]\n 13011: a5 = u8 [a4 + 0x18]\n 13014: s1 = u8 [a4 + 0x1a]\n 13017: a2 = u8 [a4 + 0x1b]\n 13020: a1 = a1 << 0x8\n 13023: a1 = a1 | a5\n 13026: s1 = s1 << 0x10\n 13029: a2 = a2 << 0x18\n 13032: a2 = a2 | s1\n 13035: a1 = a1 | a2\n 13038: a2 = u8 [a4 + 0x1d]\n 13041: a5 = u8 [a4 + 0x1c]\n 13044: s1 = u8 [a4 + 0x1e]\n 13047: a3 = u8 [a4 + 0x1f]\n 13050: a2 = a2 << 0x8\n 13053: a2 = a2 | a5\n 13056: s1 = s1 << 0x10\n 13059: a3 = a3 << 0x18\n 13062: a3 = a3 | s1\n 13065: a2 = a2 | a3\n 13068: a2 = a2 << 0x20\n 13071: t0 = a2 | a1\n 13074: a1 = u8 [a4 + 0x11]\n 13077: a2 = u8 [a4 + 0x10]\n 13080: a3 = u8 [a4 + 0x12]\n 13083: s1 = u8 [a4 + 0x13]\n 13086: a1 = a1 << 0x8\n 13089: a1 = a1 | a2\n 13092: a3 = a3 << 0x10\n 13095: s1 = s1 << 0x18\n 13098: a3 = a3 | s1\n 13101: a1 = a1 | a3\n 13104: a2 = u8 [a4 + 0x15]\n 13107: a3 = u8 [a4 + 0x14]\n 13110: s1 = u8 [a4 + 0x16]\n 13113: a0 = u8 [a4 + 0x17]\n 13116: a2 = a2 << 0x8\n 13119: a2 = a2 | a3\n 13122: s1 = s1 << 0x10\n 13125: a0 = a0 << 0x18\n 13128: a0 = a0 | s1\n 13131: a0 = a0 | a2\n 13134: a0 = a0 << 0x20\n 13137: s1 = a0 | a1\n 13140: a0 = u8 [a4 + 0x9]\n 13143: a1 = u8 [a4 + 0x8]\n 13146: a2 = u8 [a4 + 0xa]\n 13149: a3 = u8 [a4 + 0xb]\n 13152: a0 = a0 << 0x8\n 13155: a0 = a0 | a1\n 13158: a2 = a2 << 0x10\n 13161: a3 = a3 << 0x18\n 13164: a2 = a2 | a3\n 13167: a5 = a2 | a0\n 13170: a1 = u8 [a4 + 0xd]\n 13173: a2 = u8 [a4 + 0xc]\n 13176: a3 = u8 [a4 + 0xe]\n 13179: a0 = u8 [a4 + 0xf]\n 13182: a1 = a1 << 0x8\n 13185: a1 = a1 | a2\n 13188: a3 = a3 << 0x10\n 13191: a0 = a0 << 0x18\n 13194: a0 = a0 | a3\n 13197: a0 = a0 | a1\n 13200: a0 = a0 << 0x20\n 13203: a1 = a0 | a5\n 13206: a0 = u8 [a4 + 0x1]\n 13209: a2 = u8 [a4]\n 13211: a3 = u8 [a4 + 0x2]\n 13214: a5 = u8 [a4 + 0x3]\n 13217: a0 = a0 << 0x8\n 13220: a0 = a0 | a2\n 13223: a3 = a3 << 0x10\n 13226: a5 = a5 << 0x18\n 13229: a3 = a3 | a5\n 13232: a0 = a0 | a3\n 13235: a2 = u8 [a4 + 0x5]\n 13238: a3 = u8 [a4 + 0x4]\n 13241: a5 = u8 [a4 + 0x6]\n 13244: a4 = u8 [a4 + 0x7]\n 13247: a2 = a2 << 0x8\n 13250: a2 = a2 | a3\n 13253: a5 = a5 << 0x10\n 13256: a4 = a4 << 0x18\n 13259: a4 = a4 | a5\n 13262: a2 = a2 | a4\n 13265: a2 = a2 << 0x20\n 13268: a0 = a0 | a2\n 13271: a2 = u64 [sp + 0xb8]\n 13275: a2 = reverse a2\n 13277: a0 = a2 & ~a0\n 13280: a2 = reverse t1\n 13282: a1 = a2 & ~a1\n 13285: a2 = reverse t2\n 13287: a2 = a2 & ~s1\n 13290: a3 = reverse ra\n 13292: a3 = a3 & ~t0\n 13295: a4 = u64 [sp + 0xd0]\n 13299: u64 [sp + 0x278] = a4\n 13303: a4 = u64 [sp + 0xc8]\n 13307: u64 [sp + 0x270] = a4\n 13311: a4 = u64 [sp + 0xd8]\n 13315: u64 [sp + 0x268] = a4\n 13319: a4 = u64 [sp + 0xc0]\n 13323: u64 [sp + 0x260] = a4\n 13327: u64 [sp + 0x298] = a3\n 13331: u64 [sp + 0x290] = a2\n 13335: u64 [sp + 0x288] = a1\n 13339: u64 [sp + 0x280] = a0\n 13343: i32 a1 = sp + 0x260\n 13347: i32 a3 = sp + 0x280\n 13351: a2 = 0xffffffffffffffff\n 13354: a4 = 0x20\n 13357: a0 = 0\n 13359: ecalli 9 // 'set_storage'\n 13361: a5 = u64 [sp + 0x20]\n 13364: fallthrough\n      : @205 (gas: 27)\n 13365: a2 = u64 [sp + 0x30]\n 13368: a0 = a2 >> 0x3f\n 13371: a1 = u64 [sp + 0x28]\n 13374: a1 = a1 << 0x1\n 13377: a0 = a0 | a1\n 13380: a3 = u64 [sp + 0x38]\n 13383: a1 = a3 >> 0x3f\n 13386: a2 = a2 << 0x1\n 13389: a1 = a1 | a2\n 13392: a2 = a5 >> 0x3f\n 13395: a3 = a3 << 0x1\n 13398: a2 = a2 | a3\n 13401: a3 = a5 << 0x1\n 13404: a3 = a3 + 0x1\n 13407: a4 = u64 [sp + 0x48]\n 13410: u64 [sp + 0x268] = a4\n 13414: a4 = u64 [sp + 0x50]\n 13417: u64 [sp + 0x260] = a4\n 13421: a4 = u64 [sp + 0x58]\n 13424: u64 [sp + 0x270] = a4\n 13428: a4 = u64 [sp + 0x40]\n 13431: u64 [sp + 0x278] = a4\n 13435: u64 [sp + 0x280] = a3\n 13439: u64 [sp + 0x288] = a2\n 13443: u64 [sp + 0x290] = a1\n 13447: u64 [sp + 0x298] = a0\n 13451: jump @208\n      : @206 (gas: 5)\n 13453: a3 = 0\n 13455: a2 = 0\n 13457: a1 = 0\n 13459: t1 = 0\n 13461: fallthrough\n      : @207 (gas: 10)\n 13462: a0 = u64 [sp + 0x48]\n 13465: u64 [sp + 0x268] = a0\n 13469: u64 [sp + 0x260] = s1\n 13473: u64 [sp + 0x270] = a5\n 13477: u64 [sp + 0x278] = a4\n 13481: u64 [sp + 0x280] = a3\n 13485: u64 [sp + 0x288] = a2\n 13489: u64 [sp + 0x290] = a1\n 13493: u64 [sp + 0x298] = t1\n 13497: fallthrough\n      : @208 (gas: 12)\n 13498: i32 a1 = sp + 0x260\n 13502: i32 a3 = sp + 0x280\n 13506: a2 = 0xffffffffffffffff\n 13509: a4 = 0x20\n 13512: a0 = 0\n 13514: ecalli 9 // 'set_storage'\n 13516: sp = s0 + 0xfffffffffffffd40\n 13520: ra = u64 [sp + 0x2b8]\n 13524: s0 = u64 [sp + 0x2b0]\n 13528: s1 = u64 [sp + 0x2a8]\n 13532: sp = sp + 0x2c0\n 13536: ret\n      : @209 (gas: 1)\n 13538: trap\n      : @210 (gas: 8)\n 13539: u64 [sp + 272] = 0\n 13543: u64 [sp + 264] = 0\n 13547: u64 [sp + 256] = 0\n 13551: a0 = 0x4e487b7100000000\n 13561: a1 = sp + 0x100\n 13565: u64 [sp + 0x118] = a0\n 13569: a0 = 0\n 13571: ra = 170, jump @23\n      : @211 [@dyn 85] (gas: 8)\n 13577: u64 [sp + 248] = 0\n 13581: u64 [sp + 240] = 0\n 13585: u64 [sp + 224] = 0x41\n 13590: a0 = 0x4\n 13593: a1 = sp + 0xe0\n 13597: u64 [sp + 232] = 0\n 13601: ra = 0xae\n 13605: jump @23\n      : @212 (gas: 8)\n 13608: u64 [sp + 336] = 0\n 13612: u64 [sp + 328] = 0\n 13616: u64 [sp + 320] = 0\n 13620: a0 = 0x4e487b7100000000\n 13630: a1 = sp + 0x140\n 13634: u64 [sp + 0x158] = a0\n 13638: a0 = 0\n 13640: ra = 172, jump @23\n      : @213 [@dyn 86] (gas: 7)\n 13646: u64 [sp + 312] = 0\n 13650: u64 [sp + 304] = 0\n 13654: u64 [sp + 288] = 0x22\n 13659: a0 = 0x4\n 13662: a1 = sp + 0x120\n 13666: u64 [sp + 296] = 0\n 13670: ra = 174, jump @23\n      : @214 [@dyn 87] (gas: 3)\n 13676: a1 = 0x24\n 13679: a0 = 0\n 13681: ra = 176, jump @0\n      : @215 [@dyn 88] (gas: 6)\n 13687: i32 a1 = a0 + 0\n 13689: a0 = 0x1\n 13692: a2 = 0x24\n 13695: ra = 0xb2\n 13699: ecalli 7 // 'seal_return'\n 13701: fallthrough\n      : @216 [@dyn 89] (gas: 24)\n 13702: sp = sp + 0xffffffffffffffb0\n 13705: u64 [sp + 0x48] = ra\n 13708: u64 [sp + 0x40] = s0\n 13711: s0 = sp + 0x50\n 13714: sp = sp & 0xfffffffffffffff0\n 13717: t0 = u64 [a0]\n 13719: t1 = u64 [a0 + 0x8]\n 13722: a4 = u64 [a0 + 0x10]\n 13725: a0 = u64 [a0 + 0x18]\n 13728: a5 = u64 [a1]\n 13730: a2 = u64 [a1 + 0x8]\n 13733: a3 = u64 [a1 + 0x10]\n 13736: a1 = u64 [a1 + 0x18]\n 13739: u64 [sp + 0x18] = a1\n 13742: u64 [sp + 0x10] = a3\n 13745: u64 [sp + 0x8] = a2\n 13748: u64 [sp] = a5\n 13750: u64 [sp + 0x38] = a0\n 13753: u64 [sp + 0x30] = a4\n 13756: u64 [sp + 0x28] = t1\n 13759: a0 = sp + 0x20\n 13762: a1 = sp\n 13764: u64 [sp + 0x20] = t0\n 13767: ra = 180, jump @179\n      : @217 [@dyn 90] (gas: 5)\n 13773: sp = s0 + 0xffffffffffffffb0\n 13776: ra = u64 [sp + 0x48]\n 13779: s0 = u64 [sp + 0x40]\n 13782: sp = sp + 0x50\n 13785: ret\n      : @218 (gas: 21)\n 13787: sp = sp + 0xffffffffffffff70\n 13791: u64 [sp + 0x88] = ra\n 13795: u64 [sp + 0x80] = s0\n 13799: u64 [sp + 0x78] = s1\n 13802: s0 = u64 [a1 + 0x10]\n 13805: t0 = u64 [a1 + 0x18]\n 13808: a5 = u64 [a1 + 0x8]\n 13811: s1 = u64 [a1]\n 13813: u64 [sp + 0x50] = a5\n 13816: u64 [sp + 0x60] = t0\n 13819: a1 = a5 | t0\n 13822: u64 [sp + 0x70] = s1\n 13825: a5 = s1 | s0\n 13828: a5 = a5 | a1\n 13831: a5 = a5 >> 0x20\n 13834: u64 [sp + 0x68] = s0\n 13837: a1 = a1 | s0\n 13840: a1 = a1 << 0x20\n 13843: a1 = a1 | a5\n 13846: u64 [sp + 0x40] = a0\n 13849: jump @225 if a1 != 0\n      : @219 (gas: 26)\n 13853: a0 = u64 [a4 + 0x18]\n 13856: u64 [sp] = a0\n 13858: a0 = u64 [a4 + 0x10]\n 13861: u64 [sp + 0x8] = a0\n 13864: a0 = u64 [a4 + 0x8]\n 13867: u64 [sp + 0x10] = a0\n 13870: a0 = u64 [a4]\n 13872: u64 [sp + 0x18] = a0\n 13875: a0 = u64 [a3 + 0x18]\n 13878: u64 [sp + 0x28] = a0\n 13881: a0 = u64 [a3 + 0x10]\n 13884: u64 [sp + 0x30] = a0\n 13887: a0 = u64 [a3 + 0x8]\n 13890: u64 [sp + 0x38] = a0\n 13893: a0 = u64 [a2 + 0x10]\n 13896: a1 = u64 [a3]\n 13898: u64 [sp + 0x20] = a1\n 13901: s1 = u64 [a2 + 0x8]\n 13904: a1 = u64 [a2]\n 13906: u64 [sp + 0x48] = a1\n 13909: a0 = a0 << 0x20\n 13912: s0 = a0 >> 0x20\n 13915: a0 = i32 [sp + 0x70]\n 13918: a1 = 0x20\n 13921: u64 [sp + 0x58] = a0\n 13924: ra = 182, jump @0\n      : @220 [@dyn 91] (gas: 66)\n 13930: a1 = reverse s0\n 13932: a2 = reverse s1\n 13934: a3 = u64 [sp + 0x48]\n 13937: a3 = reverse a3\n 13939: a4 = a3 >> 0x38\n 13942: u8 [a0 + 0x1f] = a4\n 13945: a4 = a3 >> 0x30\n 13948: u8 [a0 + 0x1e] = a4\n 13951: a4 = a3 >> 0x28\n 13954: u8 [a0 + 0x1d] = a4\n 13957: a4 = a3 >> 0x20\n 13960: u8 [a0 + 0x1c] = a4\n 13963: a4 = a3 >> 0x18\n 13966: u8 [a0 + 0x1b] = a4\n 13969: a4 = a3 >> 0x10\n 13972: u8 [a0 + 0x1a] = a4\n 13975: a4 = a3 >> 0x8\n 13978: u8 [a0 + 0x19] = a4\n 13981: u8 [a0 + 0x18] = a3\n 13984: u8 [a0 + 0x10] = a2\n 13987: u8 [a0 + 11] = 0\n 13990: u8 [a0 + 10] = 0\n 13993: u8 [a0 + 9] = 0\n 13996: u8 [a0 + 7] = 0\n 13999: u8 [a0 + 6] = 0\n 14002: u8 [a0 + 5] = 0\n 14005: u8 [a0 + 4] = 0\n 14008: u8 [a0 + 3] = 0\n 14011: u8 [a0 + 2] = 0\n 14014: u8 [a0 + 1] = 0\n 14017: u8 [a0 + 0] = 0\n 14019: a3 = a2 >> 0x38\n 14022: u8 [a0 + 0x17] = a3\n 14025: a3 = a2 >> 0x30\n 14028: u8 [a0 + 0x16] = a3\n 14031: a3 = a2 >> 0x28\n 14034: u8 [a0 + 0x15] = a3\n 14037: a3 = a2 >> 0x20\n 14040: u8 [a0 + 0x14] = a3\n 14043: a3 = a2 >> 0x18\n 14046: u8 [a0 + 0x13] = a3\n 14049: a3 = a2 >> 0x10\n 14052: u8 [a0 + 0x12] = a3\n 14055: a2 = a2 >> 0x8\n 14058: u8 [a0 + 0x11] = a2\n 14061: u8 [a0 + 0x8] = a1\n 14064: a2 = a1 >> 0x38\n 14067: u8 [a0 + 0xf] = a2\n 14070: a2 = a1 >> 0x30\n 14073: u8 [a0 + 0xe] = a2\n 14076: a2 = a1 >> 0x28\n 14079: u8 [a0 + 0xd] = a2\n 14082: a1 = a1 >> 0x20\n 14085: a2 = u64 [sp + 0x68]\n 14088: a3 = u64 [sp + 0x60]\n 14091: a3 = a3 | a2\n 14094: s1 = 0x100000000\n 14104: a2 = 0xffffffe0\n 14114: a4 = u64 [sp + 0x70]\n 14117: a2 = a4 <u a2\n 14120: s0 = u64 [sp + 0x50]\n 14123: a2 = 0 if s0 != 0\n 14125: u64 [sp + 0x48] = a3\n 14128: a2 = 0 if a3 != 0\n 14130: u8 [a0 + 0xc] = a1\n 14133: jump @225 if a2 == 0\n      : @221 (gas: 4)\n 14137: a0 = u64 [sp + 0x58]\n 14140: i32 a0 = a0 + 0x20\n 14143: a1 = 0x20\n 14146: ra = 184, jump @0\n      : @222 [@dyn 92] (gas: 75)\n 14152: a1 = u64 [sp + 0x28]\n 14155: a1 = reverse a1\n 14157: a2 = u64 [sp + 0x30]\n 14160: a2 = reverse a2\n 14162: a3 = u64 [sp + 0x38]\n 14165: a3 = reverse a3\n 14167: a4 = u64 [sp + 0x20]\n 14170: a4 = reverse a4\n 14172: a5 = a4 >> 0x38\n 14175: u8 [a0 + 0x1f] = a5\n 14178: a5 = a4 >> 0x30\n 14181: u8 [a0 + 0x1e] = a5\n 14184: a5 = a4 >> 0x28\n 14187: u8 [a0 + 0x1d] = a5\n 14190: a5 = a4 >> 0x20\n 14193: u8 [a0 + 0x1c] = a5\n 14196: a5 = a4 >> 0x18\n 14199: u8 [a0 + 0x1b] = a5\n 14202: a5 = a4 >> 0x10\n 14205: u8 [a0 + 0x1a] = a5\n 14208: a5 = a4 >> 0x8\n 14211: u8 [a0 + 0x19] = a5\n 14214: u8 [a0 + 0x18] = a4\n 14217: u8 [a0 + 0x10] = a3\n 14220: a4 = a3 >> 0x38\n 14223: u8 [a0 + 0x17] = a4\n 14226: a4 = a3 >> 0x30\n 14229: u8 [a0 + 0x16] = a4\n 14232: a4 = a3 >> 0x28\n 14235: u8 [a0 + 0x15] = a4\n 14238: a4 = a3 >> 0x20\n 14241: u8 [a0 + 0x14] = a4\n 14244: a4 = a3 >> 0x18\n 14247: u8 [a0 + 0x13] = a4\n 14250: a4 = a3 >> 0x10\n 14253: u8 [a0 + 0x12] = a4\n 14256: a3 = a3 >> 0x8\n 14259: u8 [a0 + 0x11] = a3\n 14262: u8 [a0 + 0x8] = a2\n 14265: a3 = a2 >> 0x38\n 14268: u8 [a0 + 0xf] = a3\n 14271: a3 = a2 >> 0x30\n 14274: u8 [a0 + 0xe] = a3\n 14277: a3 = a2 >> 0x28\n 14280: u8 [a0 + 0xd] = a3\n 14283: a3 = a2 >> 0x20\n 14286: u8 [a0 + 0xc] = a3\n 14289: a3 = a2 >> 0x18\n 14292: u8 [a0 + 0xb] = a3\n 14295: a3 = a2 >> 0x10\n 14298: u8 [a0 + 0xa] = a3\n 14301: a2 = a2 >> 0x8\n 14304: u8 [a0 + 0x9] = a2\n 14307: u8 [a0] = a1\n 14309: a2 = a1 >> 0x38\n 14312: u8 [a0 + 0x7] = a2\n 14315: a2 = a1 >> 0x30\n 14318: u8 [a0 + 0x6] = a2\n 14321: a2 = a1 >> 0x28\n 14324: u8 [a0 + 0x5] = a2\n 14327: a2 = a1 >> 0x20\n 14330: u8 [a0 + 0x4] = a2\n 14333: a2 = a1 >> 0x18\n 14336: u8 [a0 + 0x3] = a2\n 14339: a2 = a1 >> 0x10\n 14342: u8 [a0 + 0x2] = a2\n 14345: a1 = a1 >> 0x8\n 14348: a2 = s1 + 0xffffffffffffffc0\n 14351: a3 = u64 [sp + 0x70]\n 14354: a2 = a3 <u a2\n 14357: a2 = 0 if s0 != 0\n 14359: a3 = u64 [sp + 0x48]\n 14362: a2 = 0 if a3 != 0\n 14364: u8 [a0 + 0x1] = a1\n 14367: jump @225 if a2 == 0\n      : @223 (gas: 18)\n 14371: a0 = u64 [sp + 0x70]\n 14374: a1 = a0 + 0x60\n 14377: u64 [sp + 0x48] = a1\n 14380: a0 = a1 <u a0\n 14383: a1 = s0\n 14385: s0 = s0 + a0\n 14388: s1 = s0 <u a1\n 14391: s1 = a0 if a0 == 0\n 14394: a0 = u64 [sp + 0x68]\n 14397: s1 = s1 + a0\n 14400: a0 = s1 <u a0\n 14403: a1 = u64 [sp + 0x60]\n 14406: a0 = a0 + a1\n 14409: u64 [sp + 0x70] = a0\n 14412: a0 = u64 [sp + 0x58]\n 14415: i32 a0 = a0 + 0x40\n 14418: a1 = 0x20\n 14421: ra = 186, jump @0\n      : @224 [@dyn 93] (gas: 80)\n 14427: a1 = u64 [sp]\n 14429: a1 = reverse a1\n 14431: a2 = u64 [sp + 0x8]\n 14434: a2 = reverse a2\n 14436: a3 = u64 [sp + 0x10]\n 14439: a3 = reverse a3\n 14441: a4 = u64 [sp + 0x18]\n 14444: a4 = reverse a4\n 14446: a5 = a4 >> 0x38\n 14449: u8 [a0 + 0x1f] = a5\n 14452: a5 = a4 >> 0x30\n 14455: u8 [a0 + 0x1e] = a5\n 14458: a5 = a4 >> 0x28\n 14461: u8 [a0 + 0x1d] = a5\n 14464: a5 = a4 >> 0x20\n 14467: u8 [a0 + 0x1c] = a5\n 14470: a5 = a4 >> 0x18\n 14473: u8 [a0 + 0x1b] = a5\n 14476: a5 = a4 >> 0x10\n 14479: u8 [a0 + 0x1a] = a5\n 14482: a5 = a4 >> 0x8\n 14485: u8 [a0 + 0x19] = a5\n 14488: u8 [a0 + 0x18] = a4\n 14491: u8 [a0 + 0x10] = a3\n 14494: a4 = a3 >> 0x38\n 14497: u8 [a0 + 0x17] = a4\n 14500: a4 = a3 >> 0x30\n 14503: u8 [a0 + 0x16] = a4\n 14506: a4 = a3 >> 0x28\n 14509: u8 [a0 + 0x15] = a4\n 14512: a4 = a3 >> 0x20\n 14515: u8 [a0 + 0x14] = a4\n 14518: a4 = a3 >> 0x18\n 14521: u8 [a0 + 0x13] = a4\n 14524: a4 = a3 >> 0x10\n 14527: u8 [a0 + 0x12] = a4\n 14530: a3 = a3 >> 0x8\n 14533: u8 [a0 + 0x11] = a3\n 14536: u8 [a0 + 0x8] = a2\n 14539: a3 = a2 >> 0x38\n 14542: u8 [a0 + 0xf] = a3\n 14545: a3 = a2 >> 0x30\n 14548: u8 [a0 + 0xe] = a3\n 14551: a3 = a2 >> 0x28\n 14554: u8 [a0 + 0xd] = a3\n 14557: a3 = a2 >> 0x20\n 14560: u8 [a0 + 0xc] = a3\n 14563: a3 = a2 >> 0x18\n 14566: u8 [a0 + 0xb] = a3\n 14569: a3 = a2 >> 0x10\n 14572: u8 [a0 + 0xa] = a3\n 14575: a2 = a2 >> 0x8\n 14578: u8 [a0 + 0x9] = a2\n 14581: u8 [a0] = a1\n 14583: a2 = a1 >> 0x38\n 14586: u8 [a0 + 0x7] = a2\n 14589: a2 = a1 >> 0x30\n 14592: u8 [a0 + 0x6] = a2\n 14595: a2 = a1 >> 0x28\n 14598: u8 [a0 + 0x5] = a2\n 14601: a2 = a1 >> 0x20\n 14604: u8 [a0 + 0x4] = a2\n 14607: a2 = a1 >> 0x18\n 14610: u8 [a0 + 0x3] = a2\n 14613: a2 = a1 >> 0x10\n 14616: u8 [a0 + 0x2] = a2\n 14619: a1 = a1 >> 0x8\n 14622: u8 [a0 + 0x1] = a1\n 14625: a0 = u64 [sp + 0x40]\n 14628: a1 = u64 [sp + 0x48]\n 14631: u64 [a0] = a1\n 14633: u64 [a0 + 0x8] = s0\n 14636: u64 [a0 + 0x10] = s1\n 14639: a1 = u64 [sp + 0x70]\n 14642: u64 [a0 + 0x18] = a1\n 14645: ra = u64 [sp + 0x88]\n 14649: s0 = u64 [sp + 0x80]\n 14653: s1 = u64 [sp + 0x78]\n 14656: sp = sp + 0x90\n 14660: ret\n      : @225 (gas: 1)\n 14662: trap\n      : @226 (gas: 34)\n 14663: sp = sp + 0xfffffffffffffd20\n 14667: u64 [sp + 0x2d8] = ra\n 14671: u64 [sp + 0x2d0] = s0\n 14675: u64 [sp + 0x2c8] = s1\n 14679: s0 = sp + 0x2e0\n 14683: sp = sp & 0xffffffffffffffe0\n 14686: a3 = u64 [a2 + 0x18]\n 14689: u64 [sp + 0x120] = a3\n 14693: a3 = u64 [a2 + 0x10]\n 14696: u64 [sp + 0x128] = a3\n 14700: a3 = u64 [a2 + 0x8]\n 14703: u64 [sp + 0x130] = a3\n 14707: a2 = u64 [a2]\n 14709: u64 [sp + 0x138] = a2\n 14713: a2 = u64 [a1 + 0x10]\n 14716: u64 [sp + 0x100] = a2\n 14720: a2 = u64 [a1 + 0x8]\n 14723: u64 [sp + 0xf8] = a2\n 14727: a5 = u64 [a0 + 0x10]\n 14730: a4 = u64 [a0 + 0x8]\n 14733: a3 = u64 [a0]\n 14735: a1 = u64 [a1]\n 14737: u64 [sp + 0xf0] = a1\n 14741: a1 = a5 << 0x20\n 14744: a1 = a1 >> 0x20\n 14747: a2 = a3 | a4\n 14750: a2 = a2 | a1\n 14753: t1 = reverse a1\n 14755: t0 = reverse a4\n 14757: s1 = reverse a3\n 14759: u64 [sp + 0x118] = t1\n 14763: u64 [sp + 0x110] = t0\n 14767: u64 [sp + 0x108] = s1\n 14771: jump @236 if a2 == 0\n      : @227 (gas: 8)\n 14775: u64 [sp + 0x20] = a5\n 14778: u64 [sp + 0x28] = a4\n 14781: u64 [sp + 0x30] = a3\n 14784: a0 = u64 [a0 + 0x18]\n 14787: u64 [sp + 0x18] = a0\n 14790: a1 = 0x20\n 14793: a0 = 0\n 14795: ra = 188, jump @0\n      : @228 [@dyn 94] (gas: 73)\n 14801: a1 = s1 >> 0x38\n 14804: u64 [sp + 0xc8] = a1\n 14808: u8 [a0 + 0x1f] = a1\n 14811: a1 = s1 >> 0x30\n 14814: u64 [sp + 0xc0] = a1\n 14818: u8 [a0 + 0x1e] = a1\n 14821: a1 = s1 >> 0x28\n 14824: u64 [sp + 0xb8] = a1\n 14828: u8 [a0 + 0x1d] = a1\n 14831: a1 = s1 >> 0x20\n 14834: u64 [sp + 0xb0] = a1\n 14838: u8 [a0 + 0x1c] = a1\n 14841: a1 = s1 >> 0x18\n 14844: u64 [sp + 0xa8] = a1\n 14848: u8 [a0 + 0x1b] = a1\n 14851: a1 = s1 >> 0x10\n 14854: u64 [sp + 0xa0] = a1\n 14858: u8 [a0 + 0x1a] = a1\n 14861: a1 = s1 >> 0x8\n 14864: u64 [sp + 0x98] = a1\n 14868: u8 [a0 + 0x19] = a1\n 14871: u8 [a0 + 0x18] = s1\n 14874: a2 = u64 [sp + 0x110]\n 14878: u8 [a0 + 0x10] = a2\n 14881: u8 [a0 + 11] = 0\n 14884: u8 [a0 + 10] = 0\n 14887: u8 [a0 + 9] = 0\n 14890: u8 [a0 + 7] = 0\n 14893: u8 [a0 + 6] = 0\n 14896: u8 [a0 + 5] = 0\n 14899: u8 [a0 + 4] = 0\n 14902: u8 [a0 + 3] = 0\n 14905: u8 [a0 + 2] = 0\n 14908: u8 [a0 + 1] = 0\n 14911: u8 [a0 + 0] = 0\n 14913: a1 = a2 >> 0x38\n 14916: u64 [sp + 0x90] = a1\n 14920: u8 [a0 + 0x17] = a1\n 14923: a1 = a2 >> 0x30\n 14926: u64 [sp + 0x88] = a1\n 14930: u8 [a0 + 0x16] = a1\n 14933: a1 = a2 >> 0x28\n 14936: u64 [sp + 0x80] = a1\n 14940: u8 [a0 + 0x15] = a1\n 14943: a1 = a2 >> 0x20\n 14946: u64 [sp + 0x78] = a1\n 14949: u8 [a0 + 0x14] = a1\n 14952: a1 = a2 >> 0x18\n 14955: u64 [sp + 0x70] = a1\n 14958: u8 [a0 + 0x13] = a1\n 14961: a1 = a2 >> 0x10\n 14964: u64 [sp + 0x68] = a1\n 14967: u8 [a0 + 0x12] = a1\n 14970: a1 = a2 >> 0x8\n 14973: u64 [sp + 0x60] = a1\n 14976: u8 [a0 + 0x11] = a1\n 14979: a2 = u64 [sp + 0x118]\n 14983: u8 [a0 + 0x8] = a2\n 14986: a1 = a2 >> 0x38\n 14989: u64 [sp + 0x58] = a1\n 14992: u8 [a0 + 0xf] = a1\n 14995: a1 = a2 >> 0x30\n 14998: u64 [sp + 0x50] = a1\n 15001: u8 [a0 + 0xe] = a1\n 15004: a1 = a2 >> 0x28\n 15007: u64 [sp + 0x48] = a1\n 15010: u8 [a0 + 0xd] = a1\n 15013: a1 = a2 >> 0x20\n 15016: u64 [sp + 0x40] = a1\n 15019: u8 [a0 + 0xc] = a1\n 15022: a0 = 0x20\n 15025: a1 = 0x20\n 15028: ra = 190, jump @0\n      : @229 [@dyn 95] (gas: 35)\n 15034: u8 [a0 + 31] = 0\n 15037: u8 [a0 + 30] = 0\n 15040: u8 [a0 + 29] = 0\n 15043: u8 [a0 + 28] = 0\n 15046: u8 [a0 + 27] = 0\n 15049: u8 [a0 + 26] = 0\n 15052: u8 [a0 + 25] = 0\n 15055: u8 [a0 + 24] = 0\n 15058: u8 [a0 + 23] = 0\n 15061: u8 [a0 + 22] = 0\n 15064: u8 [a0 + 21] = 0\n 15067: u8 [a0 + 20] = 0\n 15070: u8 [a0 + 19] = 0\n 15073: u8 [a0 + 18] = 0\n 15076: u8 [a0 + 17] = 0\n 15079: u8 [a0 + 16] = 0\n 15082: u8 [a0 + 15] = 0\n 15085: u8 [a0 + 14] = 0\n 15088: u8 [a0 + 13] = 0\n 15091: u8 [a0 + 12] = 0\n 15094: u8 [a0 + 11] = 0\n 15097: u8 [a0 + 10] = 0\n 15100: u8 [a0 + 9] = 0\n 15103: u8 [a0 + 8] = 0\n 15106: u8 [a0 + 7] = 0\n 15109: u8 [a0 + 6] = 0\n 15112: u8 [a0 + 5] = 0\n 15115: u8 [a0 + 4] = 0\n 15118: u8 [a0 + 3] = 0\n 15121: u8 [a0 + 2] = 0\n 15124: u8 [a0 + 1] = 0\n 15127: u8 [a0 + 0] = 0\n 15129: a1 = 0x40\n 15132: a0 = 0\n 15134: ra = 192, jump @0\n      : @230 [@dyn 96] (gas: 28)\n 15140: i32 a0 = a0 + 0\n 15142: i32 a2 = sp + 0x220\n 15146: a1 = 0x40\n 15149: ecalli 6 // 'hash_keccak_256'\n 15151: a0 = u64 [sp + 0x238]\n 15155: a1 = u64 [sp + 0x230]\n 15159: a2 = u64 [sp + 0x228]\n 15163: a3 = u64 [sp + 0x220]\n 15167: a0 = reverse a0\n 15169: a1 = reverse a1\n 15171: a2 = reverse a2\n 15173: a3 = reverse a3\n 15175: u64 [sp + 0x2b8] = a3\n 15179: u64 [sp + 0x2b0] = a2\n 15183: u64 [sp + 0x2a8] = a1\n 15187: u64 [sp + 0x2a0] = a0\n 15191: u64 [sp + 568] = 0\n 15195: u64 [sp + 560] = 0\n 15199: u64 [sp + 552] = 0\n 15203: u64 [sp + 544] = 0\n 15207: u32 [sp + 640] = 0x20\n 15212: i32 a1 = sp + 0x2a0\n 15216: i32 a3 = sp + 0x220\n 15220: i32 a4 = sp + 0x280\n 15224: a2 = 0xffffffffffffffff\n 15227: a0 = 0\n 15229: ecalli 5 // 'get_storage'\n 15231: fallthrough\n      : @231 (gas: 25)\n 15232: a0 = u64 [sp + 0x238]\n 15236: a5 = u64 [sp + 0x230]\n 15240: a1 = u64 [sp + 0x228]\n 15244: t2 = u64 [sp + 0x220]\n 15248: s1 = u64 [sp + 0x120]\n 15252: a3 = a0 ^ s1\n 15255: u64 [sp + 0xe0] = a0\n 15259: a4 = a0 <u s1\n 15262: a0 = u64 [sp + 0x128]\n 15266: a2 = a5 <u a0\n 15269: u64 [sp + 0x38] = a2\n 15272: a4 = a2 if a3 == 0\n 15275: t1 = u64 [sp + 0x130]\n 15279: ra = a1 ^ t1\n 15282: u64 [sp + 0xe8] = a1\n 15286: a2 = a1 <u t1\n 15289: t0 = u64 [sp + 0x138]\n 15293: u64 [sp + 0xd0] = t2\n 15297: a1 = t2 <u t0\n 15300: a2 = a1 if ra == 0\n 15303: u64 [sp + 0xd8] = a5\n 15307: a5 = a5 ^ a0\n 15310: a3 = a3 | a5\n 15313: a4 = a2 if a3 == 0\n 15316: jump @251 if a4 != 0\n      : @232 (gas: 22)\n 15320: a3 = a0\n 15322: a0 = u64 [sp + 0xd8]\n 15326: a3 = a0 - a3\n 15329: a0 = a3 - a2\n 15332: u64 [sp + 0xd8] = a0\n 15336: a2 = a3 <u a2\n 15339: a3 = u64 [sp + 0xe0]\n 15343: a3 = a3 - s1\n 15346: a0 = u64 [sp + 0x38]\n 15349: a3 = a3 - a0\n 15352: a3 = a3 - a2\n 15355: u64 [sp + 0xe0] = a3\n 15359: a0 = u64 [sp + 0xe8]\n 15363: a0 = a0 - t1\n 15366: a0 = a0 - a1\n 15369: u64 [sp + 0xe8] = a0\n 15373: a0 = u64 [sp + 0xd0]\n 15377: a0 = a0 - t0\n 15380: u64 [sp + 0xd0] = a0\n 15384: a1 = 0x20\n 15387: a0 = 0\n 15389: ra = 194, jump @0\n      : @233 [@dyn 97] (gas: 59)\n 15395: a1 = u64 [sp + 0x58]\n 15398: u8 [a0 + 0xf] = a1\n 15401: a1 = u64 [sp + 0x50]\n 15404: u8 [a0 + 0xe] = a1\n 15407: a1 = u64 [sp + 0x48]\n 15410: u8 [a0 + 0xd] = a1\n 15413: a1 = u64 [sp + 0x40]\n 15416: u8 [a0 + 0xc] = a1\n 15419: a2 = u64 [sp + 0x118]\n 15423: a1 = a2 >> 0x18\n 15426: u8 [a0 + 0xb] = a1\n 15429: a1 = a2 >> 0x10\n 15432: u8 [a0 + 0xa] = a1\n 15435: a1 = a2 >> 0x8\n 15438: u8 [a0 + 0x9] = a1\n 15441: a1 = u64 [sp + 0x90]\n 15445: u8 [a0 + 0x17] = a1\n 15448: a1 = u64 [sp + 0x88]\n 15452: u8 [a0 + 0x16] = a1\n 15455: a1 = u64 [sp + 0x80]\n 15459: u8 [a0 + 0x15] = a1\n 15462: a1 = u64 [sp + 0x78]\n 15465: u8 [a0 + 0x14] = a1\n 15468: a1 = u64 [sp + 0x70]\n 15471: u8 [a0 + 0x13] = a1\n 15474: a1 = u64 [sp + 0x68]\n 15477: u8 [a0 + 0x12] = a1\n 15480: a1 = u64 [sp + 0x60]\n 15483: u8 [a0 + 0x11] = a1\n 15486: a1 = u64 [sp + 0xc8]\n 15490: u8 [a0 + 0x1f] = a1\n 15493: a1 = u64 [sp + 0xc0]\n 15497: u8 [a0 + 0x1e] = a1\n 15500: a1 = u64 [sp + 0xb8]\n 15504: u8 [a0 + 0x1d] = a1\n 15507: a1 = u64 [sp + 0xb0]\n 15511: u8 [a0 + 0x1c] = a1\n 15514: a1 = u64 [sp + 0xa8]\n 15518: u8 [a0 + 0x1b] = a1\n 15521: a1 = u64 [sp + 0xa0]\n 15525: u8 [a0 + 0x1a] = a1\n 15528: a1 = u64 [sp + 0x98]\n 15532: u8 [a0 + 0x19] = a1\n 15535: a1 = u64 [sp + 0x110]\n 15539: u8 [a0 + 0x10] = a1\n 15542: u8 [a0 + 0x8] = a2\n 15545: u8 [a0 + 7] = 0\n 15548: u8 [a0 + 6] = 0\n 15551: u8 [a0 + 5] = 0\n 15554: u8 [a0 + 4] = 0\n 15557: u8 [a0 + 3] = 0\n 15560: u8 [a0 + 2] = 0\n 15563: u8 [a0 + 1] = 0\n 15566: u8 [a0 + 0] = 0\n 15568: a1 = u64 [sp + 0x108]\n 15572: u8 [a0 + 0x18] = a1\n 15575: a0 = 0x20\n 15578: a1 = 0x20\n 15581: ra = 196, jump @0\n      : @234 [@dyn 98] (gas: 35)\n 15587: u8 [a0 + 31] = 0\n 15590: u8 [a0 + 30] = 0\n 15593: u8 [a0 + 29] = 0\n 15596: u8 [a0 + 28] = 0\n 15599: u8 [a0 + 27] = 0\n 15602: u8 [a0 + 26] = 0\n 15605: u8 [a0 + 25] = 0\n 15608: u8 [a0 + 24] = 0\n 15611: u8 [a0 + 23] = 0\n 15614: u8 [a0 + 22] = 0\n 15617: u8 [a0 + 21] = 0\n 15620: u8 [a0 + 20] = 0\n 15623: u8 [a0 + 19] = 0\n 15626: u8 [a0 + 18] = 0\n 15629: u8 [a0 + 17] = 0\n 15632: u8 [a0 + 16] = 0\n 15635: u8 [a0 + 15] = 0\n 15638: u8 [a0 + 14] = 0\n 15641: u8 [a0 + 13] = 0\n 15644: u8 [a0 + 12] = 0\n 15647: u8 [a0 + 11] = 0\n 15650: u8 [a0 + 10] = 0\n 15653: u8 [a0 + 9] = 0\n 15656: u8 [a0 + 8] = 0\n 15659: u8 [a0 + 7] = 0\n 15662: u8 [a0 + 6] = 0\n 15665: u8 [a0 + 5] = 0\n 15668: u8 [a0 + 4] = 0\n 15671: u8 [a0 + 3] = 0\n 15674: u8 [a0 + 2] = 0\n 15677: u8 [a0 + 1] = 0\n 15680: u8 [a0 + 0] = 0\n 15682: a1 = 0x40\n 15685: a0 = 0\n 15687: ra = 198, jump @0\n      : @235 [@dyn 99] (gas: 45)\n 15693: i32 a0 = a0 + 0\n 15695: i32 a2 = sp + 0x220\n 15699: a1 = 0x40\n 15702: ecalli 6 // 'hash_keccak_256'\n 15704: a0 = u64 [sp + 0x238]\n 15708: a1 = u64 [sp + 0x230]\n 15712: a2 = u64 [sp + 0x228]\n 15716: a3 = u64 [sp + 0x220]\n 15720: a0 = reverse a0\n 15722: u64 [sp + 0xc8] = a0\n 15726: a1 = reverse a1\n 15728: u64 [sp + 0xc0] = a1\n 15732: a2 = reverse a2\n 15734: u64 [sp + 0xb8] = a2\n 15738: s1 = reverse a3\n 15740: u64 [sp + 0x2b8] = s1\n 15744: u64 [sp + 0x2b0] = a2\n 15748: u64 [sp + 0x2a8] = a1\n 15752: u64 [sp + 0x2a0] = a0\n 15756: u64 [sp + 568] = 0\n 15760: u64 [sp + 560] = 0\n 15764: u64 [sp + 552] = 0\n 15768: u64 [sp + 544] = 0\n 15772: u32 [sp + 640] = 0x20\n 15777: i32 a1 = sp + 0x2a0\n 15781: i32 a3 = sp + 0x220\n 15785: i32 a4 = sp + 0x280\n 15789: a2 = 0xffffffffffffffff\n 15792: a0 = 0\n 15794: ecalli 5 // 'get_storage'\n 15796: u64 [sp + 0x2b8] = s1\n 15800: a0 = u64 [sp + 0xb8]\n 15804: u64 [sp + 0x2b0] = a0\n 15808: a0 = u64 [sp + 0xc0]\n 15812: u64 [sp + 0x2a8] = a0\n 15816: a0 = u64 [sp + 0xc8]\n 15820: u64 [sp + 0x2a0] = a0\n 15824: a0 = u64 [sp + 0xe0]\n 15828: u64 [sp + 0x238] = a0\n 15832: a0 = u64 [sp + 0xd8]\n 15836: u64 [sp + 0x230] = a0\n 15840: a0 = u64 [sp + 0xe8]\n 15844: u64 [sp + 0x228] = a0\n 15848: a0 = u64 [sp + 0xd0]\n 15852: jump @239\n      : @236 (gas: 16)\n 15855: u64 [sp + 696] = 0\n 15859: u64 [sp + 688] = 0\n 15863: u64 [sp + 680] = 0\n 15867: u64 [sp + 672] = 0x2\n 15872: u64 [sp + 568] = 0\n 15876: u64 [sp + 560] = 0\n 15880: u64 [sp + 552] = 0\n 15884: u64 [sp + 544] = 0\n 15888: u32 [sp + 640] = 0x20\n 15893: i32 a1 = sp + 0x2a0\n 15897: i32 a3 = sp + 0x220\n 15901: i32 a4 = sp + 0x280\n 15905: a2 = 0xffffffffffffffff\n 15908: a0 = 0\n 15910: ecalli 5 // 'get_storage'\n 15912: fallthrough\n      : @237 (gas: 39)\n 15913: a4 = u64 [sp + 0x228]\n 15917: a2 = u64 [sp + 0x220]\n 15921: t1 = u64 [sp + 0x238]\n 15925: a0 = u64 [sp + 0x230]\n 15929: a5 = u64 [sp + 0x130]\n 15933: a5 = a5 + a4\n 15936: a1 = u64 [sp + 0x138]\n 15940: a1 = a1 + a2\n 15943: u64 [sp + 0xe8] = a1\n 15947: a3 = a1 <u a2\n 15950: a5 = a5 + a3\n 15953: t0 = a5 ^ a4\n 15956: u64 [sp + 0xe0] = a5\n 15960: a4 = a5 <u a4\n 15963: a5 = u64 [sp + 0x128]\n 15967: a5 = a5 + a0\n 15970: a1 = u64 [sp + 0x120]\n 15974: a1 = a1 + t1\n 15977: a2 = a5 <u a0\n 15980: a1 = a1 + a2\n 15983: a2 = a3\n 15985: a2 = a4 if t0 != 0\n 15988: s1 = a5 + a2\n 15991: a2 = s1 <u a5\n 15994: a5 = a1 + a2\n 15997: a1 = a3 ^ 0x1\n 16000: a2 = a4 ^ 0x1\n 16003: a1 = a2 if t0 != 0\n 16006: a2 = s1 <u a0\n 16009: a3 = a5 ^ t1\n 16012: u64 [sp + 0xd0] = a5\n 16016: a4 = a5 <u t1\n 16019: a4 = a2 if a3 == 0\n 16022: u64 [sp + 0xd8] = s1\n 16026: a0 = a0 ^ s1\n 16029: a0 = a0 | a3\n 16032: a2 = a4 ^ 0x1\n 16035: a1 = a2 if a0 != 0\n 16038: jump @255 if a1 == 0\n      : @238 (gas: 27)\n 16042: u64 [sp + 696] = 0\n 16046: u64 [sp + 688] = 0\n 16050: u64 [sp + 680] = 0\n 16054: u64 [sp + 672] = 0x2\n 16059: u64 [sp + 568] = 0\n 16063: u64 [sp + 560] = 0\n 16067: u64 [sp + 552] = 0\n 16071: u64 [sp + 544] = 0\n 16075: u32 [sp + 640] = 0x20\n 16080: i32 a1 = sp + 0x2a0\n 16084: i32 a3 = sp + 0x220\n 16088: i32 a4 = sp + 0x280\n 16092: a2 = 0xffffffffffffffff\n 16095: a0 = 0\n 16097: ecalli 5 // 'get_storage'\n 16099: u64 [sp + 696] = 0\n 16103: u64 [sp + 688] = 0\n 16107: u64 [sp + 680] = 0\n 16111: u64 [sp + 672] = 0x2\n 16116: a0 = u64 [sp + 0xd0]\n 16120: u64 [sp + 0x238] = a0\n 16124: a0 = u64 [sp + 0xd8]\n 16128: u64 [sp + 0x230] = a0\n 16132: a0 = u64 [sp + 0xe0]\n 16136: u64 [sp + 0x228] = a0\n 16140: a0 = u64 [sp + 0xe8]\n 16144: fallthrough\n      : @239 (gas: 8)\n 16145: u64 [sp + 0x220] = a0\n 16149: i32 a1 = sp + 0x2a0\n 16153: i32 a3 = sp + 0x220\n 16157: a2 = 0xffffffffffffffff\n 16160: a4 = 0x20\n 16163: a0 = 0\n 16165: ecalli 9 // 'set_storage'\n 16167: fallthrough\n      : @240 (gas: 16)\n 16168: a1 = 0xffffffff\n 16178: a2 = u64 [sp + 0xf8]\n 16182: a2 = a2 & 0xffffffffffffffff\n 16185: a3 = u64 [sp + 0xf0]\n 16189: a0 = a3 & 0xffffffffffffffff\n 16192: a3 = u64 [sp + 0x100]\n 16196: a1 = a1 & a3\n 16199: a3 = a0 | a1\n 16202: a3 = a3 | a2\n 16205: a1 = reverse a1\n 16207: a2 = reverse a2\n 16209: s1 = reverse a0\n 16211: u64 [sp + 0x100] = a1\n 16215: u64 [sp + 0xf8] = a2\n 16219: u64 [sp + 0xf0] = s1\n 16223: jump @245 if a3 == 0\n      : @241 (gas: 3)\n 16227: a1 = 0x20\n 16230: a0 = 0\n 16232: ra = 200, jump @0\n      : @242 [@dyn 100] (gas: 55)\n 16238: a1 = s1 >> 0x38\n 16241: u8 [a0 + 0x1f] = a1\n 16244: a1 = s1 >> 0x30\n 16247: u8 [a0 + 0x1e] = a1\n 16250: a1 = s1 >> 0x28\n 16253: u8 [a0 + 0x1d] = a1\n 16256: a1 = s1 >> 0x20\n 16259: u8 [a0 + 0x1c] = a1\n 16262: a1 = s1 >> 0x18\n 16265: u8 [a0 + 0x1b] = a1\n 16268: a1 = s1 >> 0x10\n 16271: u8 [a0 + 0x1a] = a1\n 16274: a1 = s1 >> 0x8\n 16277: u8 [a0 + 0x19] = a1\n 16280: u8 [a0 + 0x18] = s1\n 16283: a2 = u64 [sp + 0xf8]\n 16287: u8 [a0 + 0x10] = a2\n 16290: u8 [a0 + 11] = 0\n 16293: u8 [a0 + 10] = 0\n 16296: u8 [a0 + 9] = 0\n 16299: u8 [a0 + 7] = 0\n 16302: u8 [a0 + 6] = 0\n 16305: u8 [a0 + 5] = 0\n 16308: u8 [a0 + 4] = 0\n 16311: u8 [a0 + 3] = 0\n 16314: u8 [a0 + 2] = 0\n 16317: u8 [a0 + 1] = 0\n 16320: u8 [a0 + 0] = 0\n 16322: a1 = a2 >> 0x38\n 16325: u8 [a0 + 0x17] = a1\n 16328: a1 = a2 >> 0x30\n 16331: u8 [a0 + 0x16] = a1\n 16334: a1 = a2 >> 0x28\n 16337: u8 [a0 + 0x15] = a1\n 16340: a1 = a2 >> 0x20\n 16343: u8 [a0 + 0x14] = a1\n 16346: a1 = a2 >> 0x18\n 16349: u8 [a0 + 0x13] = a1\n 16352: a1 = a2 >> 0x10\n 16355: u8 [a0 + 0x12] = a1\n 16358: a1 = a2 >> 0x8\n 16361: u8 [a0 + 0x11] = a1\n 16364: a2 = u64 [sp + 0x100]\n 16368: u8 [a0 + 0x8] = a2\n 16371: a1 = a2 >> 0x38\n 16374: u8 [a0 + 0xf] = a1\n 16377: a1 = a2 >> 0x30\n 16380: u8 [a0 + 0xe] = a1\n 16383: a1 = a2 >> 0x28\n 16386: u8 [a0 + 0xd] = a1\n 16389: a1 = a2 >> 0x20\n 16392: u8 [a0 + 0xc] = a1\n 16395: a0 = 0x20\n 16398: a1 = 0x20\n 16401: ra = 202, jump @0\n      : @243 [@dyn 101] (gas: 35)\n 16407: u8 [a0 + 31] = 0\n 16410: u8 [a0 + 30] = 0\n 16413: u8 [a0 + 29] = 0\n 16416: u8 [a0 + 28] = 0\n 16419: u8 [a0 + 27] = 0\n 16422: u8 [a0 + 26] = 0\n 16425: u8 [a0 + 25] = 0\n 16428: u8 [a0 + 24] = 0\n 16431: u8 [a0 + 23] = 0\n 16434: u8 [a0 + 22] = 0\n 16437: u8 [a0 + 21] = 0\n 16440: u8 [a0 + 20] = 0\n 16443: u8 [a0 + 19] = 0\n 16446: u8 [a0 + 18] = 0\n 16449: u8 [a0 + 17] = 0\n 16452: u8 [a0 + 16] = 0\n 16455: u8 [a0 + 15] = 0\n 16458: u8 [a0 + 14] = 0\n 16461: u8 [a0 + 13] = 0\n 16464: u8 [a0 + 12] = 0\n 16467: u8 [a0 + 11] = 0\n 16470: u8 [a0 + 10] = 0\n 16473: u8 [a0 + 9] = 0\n 16476: u8 [a0 + 8] = 0\n 16479: u8 [a0 + 7] = 0\n 16482: u8 [a0 + 6] = 0\n 16485: u8 [a0 + 5] = 0\n 16488: u8 [a0 + 4] = 0\n 16491: u8 [a0 + 3] = 0\n 16494: u8 [a0 + 2] = 0\n 16497: u8 [a0 + 1] = 0\n 16500: u8 [a0 + 0] = 0\n 16502: a1 = 0x40\n 16505: a0 = 0\n 16507: ra = 204, jump @0\n      : @244 [@dyn 102] (gas: 92)\n 16513: i32 a0 = a0 + 0\n 16515: i32 a2 = sp + 0x220\n 16519: a1 = 0x40\n 16522: ecalli 6 // 'hash_keccak_256'\n 16524: a0 = u64 [sp + 0x238]\n 16528: a1 = u64 [sp + 0x230]\n 16532: a2 = u64 [sp + 0x228]\n 16536: a3 = u64 [sp + 0x220]\n 16540: a0 = reverse a0\n 16542: u64 [sp + 0xd0] = a0\n 16546: a1 = reverse a1\n 16548: u64 [sp + 0xe8] = a1\n 16552: a2 = reverse a2\n 16554: u64 [sp + 0xe0] = a2\n 16558: a3 = reverse a3\n 16560: u64 [sp + 0xd8] = a3\n 16564: u64 [sp + 0x2b8] = a3\n 16568: u64 [sp + 0x2b0] = a2\n 16572: u64 [sp + 0x2a8] = a1\n 16576: u64 [sp + 0x2a0] = a0\n 16580: u64 [sp + 568] = 0\n 16584: u64 [sp + 560] = 0\n 16588: u64 [sp + 552] = 0\n 16592: u64 [sp + 544] = 0\n 16596: u32 [sp + 640] = 0x20\n 16601: i32 a1 = sp + 0x2a0\n 16605: i32 a3 = sp + 0x220\n 16609: i32 a4 = sp + 0x280\n 16613: a2 = 0xffffffffffffffff\n 16616: a0 = 0\n 16618: ecalli 5 // 'get_storage'\n 16620: a0 = u64 [sp + 0x228]\n 16624: a1 = u64 [sp + 0x220]\n 16628: a2 = u64 [sp + 0x238]\n 16632: a3 = u64 [sp + 0x230]\n 16636: s1 = u64 [sp + 0x130]\n 16640: s1 = s1 + a0\n 16643: a4 = u64 [sp + 0x138]\n 16647: a4 = a4 + a1\n 16650: u64 [sp + 0xc8] = a4\n 16654: a1 = a4 <u a1\n 16657: s1 = s1 + a1\n 16660: u64 [sp + 0xc0] = s1\n 16664: a4 = s1 ^ a0\n 16667: a0 = s1 <u a0\n 16670: a0 = a1 if a4 == 0\n 16673: a1 = u64 [sp + 0x128]\n 16677: a1 = a1 + a3\n 16680: a4 = u64 [sp + 0x120]\n 16684: a2 = a2 + a4\n 16687: a3 = a1 <u a3\n 16690: a2 = a2 + a3\n 16693: a0 = a0 + a1\n 16696: u64 [sp + 0xb8] = a0\n 16700: a0 = a0 <u a1\n 16703: a0 = a0 + a2\n 16706: u64 [sp + 0xb0] = a0\n 16710: u32 [sp + 640] = 0x20\n 16715: a0 = u64 [sp + 0xd8]\n 16719: u64 [sp + 0x2b8] = a0\n 16723: a0 = u64 [sp + 0xe0]\n 16727: u64 [sp + 0x2b0] = a0\n 16731: a0 = u64 [sp + 0xe8]\n 16735: u64 [sp + 0x2a8] = a0\n 16739: s1 = u64 [sp + 0xd0]\n 16743: u64 [sp + 0x2a0] = s1\n 16747: u64 [sp + 568] = 0\n 16751: u64 [sp + 560] = 0\n 16755: u64 [sp + 552] = 0\n 16759: u64 [sp + 544] = 0\n 16763: i32 a1 = sp + 0x2a0\n 16767: i32 a3 = sp + 0x220\n 16771: i32 a4 = sp + 0x280\n 16775: a2 = 0xffffffffffffffff\n 16778: a0 = 0\n 16780: ecalli 5 // 'get_storage'\n 16782: a0 = u64 [sp + 0xd8]\n 16786: u64 [sp + 0x2b8] = a0\n 16790: a0 = u64 [sp + 0xe0]\n 16794: u64 [sp + 0x2b0] = a0\n 16798: a0 = u64 [sp + 0xe8]\n 16802: u64 [sp + 0x2a8] = a0\n 16806: u64 [sp + 0x2a0] = s1\n 16810: a0 = u64 [sp + 0xb0]\n 16814: u64 [sp + 0x238] = a0\n 16818: a0 = u64 [sp + 0xb8]\n 16822: u64 [sp + 0x230] = a0\n 16826: a0 = u64 [sp + 0xc0]\n 16830: u64 [sp + 0x228] = a0\n 16834: a0 = u64 [sp + 0xc8]\n 16838: u64 [sp + 0x220] = a0\n 16842: jump @246\n      : @245 (gas: 67)\n 16845: u64 [sp + 696] = 0\n 16849: u64 [sp + 688] = 0\n 16853: u64 [sp + 680] = 0\n 16857: u64 [sp + 672] = 0x2\n 16862: u64 [sp + 568] = 0\n 16866: u64 [sp + 560] = 0\n 16870: u64 [sp + 552] = 0\n 16874: u64 [sp + 544] = 0\n 16878: u32 [sp + 640] = 0x20\n 16883: i32 a1 = sp + 0x2a0\n 16887: i32 a3 = sp + 0x220\n 16891: i32 a4 = sp + 0x280\n 16895: a2 = 0xffffffffffffffff\n 16898: a0 = 0\n 16900: ecalli 5 // 'get_storage'\n 16902: a1 = u64 [sp + 0x228]\n 16906: t1 = u64 [sp + 0x238]\n 16910: t0 = u64 [sp + 0x220]\n 16914: a0 = u64 [sp + 0x230]\n 16918: a4 = u64 [sp + 0x130]\n 16922: a2 = a1 ^ a4\n 16925: a5 = a1 <u a4\n 16928: ra = u64 [sp + 0x138]\n 16932: t2 = t0 <u ra\n 16935: a5 = t2 if a2 == 0\n 16938: s1 = u64 [sp + 0x128]\n 16942: a3 = a0 - s1\n 16945: a2 = a3 - a5\n 16948: u64 [sp + 0xe8] = a2\n 16952: a5 = a3 <u a5\n 16955: a3 = a0 <u s1\n 16958: a2 = u64 [sp + 0x120]\n 16962: a2 = t1 - a2\n 16965: a2 = a2 - a3\n 16968: a2 = a2 - a5\n 16971: u64 [sp + 0xe0] = a2\n 16975: a1 = a1 - a4\n 16978: a0 = a1 - t2\n 16981: u64 [sp + 0xd8] = a0\n 16985: u32 [sp + 640] = 0x20\n 16990: s1 = t0 - ra\n 16993: u64 [sp + 696] = 0\n 16997: u64 [sp + 688] = 0\n 17001: u64 [sp + 680] = 0\n 17005: u64 [sp + 672] = 0x2\n 17010: u64 [sp + 568] = 0\n 17014: u64 [sp + 560] = 0\n 17018: u64 [sp + 552] = 0\n 17022: u64 [sp + 544] = 0\n 17026: i32 a1 = sp + 0x2a0\n 17030: i32 a3 = sp + 0x220\n 17034: i32 a4 = sp + 0x280\n 17038: a2 = 0xffffffffffffffff\n 17041: a0 = 0\n 17043: ecalli 5 // 'get_storage'\n 17045: u64 [sp + 696] = 0\n 17049: u64 [sp + 688] = 0\n 17053: u64 [sp + 680] = 0\n 17057: u64 [sp + 672] = 0x2\n 17062: a0 = u64 [sp + 0xe0]\n 17066: u64 [sp + 0x238] = a0\n 17070: a0 = u64 [sp + 0xe8]\n 17074: u64 [sp + 0x230] = a0\n 17078: a0 = u64 [sp + 0xd8]\n 17082: u64 [sp + 0x228] = a0\n 17086: u64 [sp + 0x220] = s1\n 17090: fallthrough\n      : @246 (gas: 9)\n 17091: i32 a1 = sp + 0x2a0\n 17095: i32 a3 = sp + 0x220\n 17099: a2 = 0xffffffffffffffff\n 17102: a4 = 0x20\n 17105: a0 = 0\n 17107: ecalli 9 // 'set_storage'\n 17109: a0 = 0x40\n 17112: a1 = 0x20\n 17115: ra = 206, jump @0\n      : @247 [@dyn 103] (gas: 100)\n 17121: a1 = u8 [a0 + 0x11]\n 17124: a2 = u8 [a0 + 0x10]\n 17127: a3 = u8 [a0 + 0x12]\n 17130: a4 = u8 [a0 + 0x13]\n 17133: a1 = a1 << 0x8\n 17136: a1 = a1 | a2\n 17139: a3 = a3 << 0x10\n 17142: a4 = a4 << 0x18\n 17145: a3 = a3 | a4\n 17148: a1 = a1 | a3\n 17151: a2 = u8 [a0 + 0x15]\n 17154: a3 = u8 [a0 + 0x14]\n 17157: a4 = u8 [a0 + 0x16]\n 17160: a5 = u8 [a0 + 0x17]\n 17163: a2 = a2 << 0x8\n 17166: a2 = a2 | a3\n 17169: a4 = a4 << 0x10\n 17172: a5 = a5 << 0x18\n 17175: a4 = a4 | a5\n 17178: a2 = a2 | a4\n 17181: a2 = a2 << 0x20\n 17184: t0 = a2 | a1\n 17187: a2 = u8 [a0 + 0x1]\n 17190: a3 = u8 [a0]\n 17192: a4 = u8 [a0 + 0x2]\n 17195: a5 = u8 [a0 + 0x3]\n 17198: a2 = a2 << 0x8\n 17201: a2 = a2 | a3\n 17204: a4 = a4 << 0x10\n 17207: a5 = a5 << 0x18\n 17210: a4 = a4 | a5\n 17213: a2 = a2 | a4\n 17216: a3 = u8 [a0 + 0x5]\n 17219: a4 = u8 [a0 + 0x4]\n 17222: a5 = u8 [a0 + 0x6]\n 17225: s1 = u8 [a0 + 0x7]\n 17228: a3 = a3 << 0x8\n 17231: a3 = a3 | a4\n 17234: a5 = a5 << 0x10\n 17237: s1 = s1 << 0x18\n 17240: a5 = a5 | s1\n 17243: a3 = a3 | a5\n 17246: a3 = a3 << 0x20\n 17249: a2 = a2 | a3\n 17252: a3 = u8 [a0 + 0x19]\n 17255: a4 = u8 [a0 + 0x18]\n 17258: a5 = u8 [a0 + 0x1a]\n 17261: s1 = u8 [a0 + 0x1b]\n 17264: a3 = a3 << 0x8\n 17267: a3 = a3 | a4\n 17270: a5 = a5 << 0x10\n 17273: s1 = s1 << 0x18\n 17276: a5 = a5 | s1\n 17279: a3 = a3 | a5\n 17282: a4 = u8 [a0 + 0x1d]\n 17285: a5 = u8 [a0 + 0x1c]\n 17288: s1 = u8 [a0 + 0x1e]\n 17291: a1 = u8 [a0 + 0x1f]\n 17294: a4 = a4 << 0x8\n 17297: a4 = a4 | a5\n 17300: s1 = s1 << 0x10\n 17303: a1 = a1 << 0x18\n 17306: a1 = a1 | s1\n 17309: a1 = a1 | a4\n 17312: a1 = a1 << 0x20\n 17315: a3 = a3 | a1\n 17318: a1 = u8 [a0 + 0x9]\n 17321: a4 = u8 [a0 + 0x8]\n 17324: a5 = u8 [a0 + 0xa]\n 17327: s1 = u8 [a0 + 0xb]\n 17330: a1 = a1 << 0x8\n 17333: a1 = a1 | a4\n 17336: a5 = a5 << 0x10\n 17339: s1 = s1 << 0x18\n 17342: a5 = a5 | s1\n 17345: a1 = a1 | a5\n 17348: a4 = u8 [a0 + 0xd]\n 17351: a5 = u8 [a0 + 0xc]\n 17354: s1 = u8 [a0 + 0xe]\n 17357: a0 = u8 [a0 + 0xf]\n 17360: a4 = a4 << 0x8\n 17363: a4 = a4 | a5\n 17366: s1 = s1 << 0x10\n 17369: a0 = a0 << 0x18\n 17372: a0 = a0 | s1\n 17375: a0 = a0 | a4\n 17378: a0 = a0 << 0x20\n 17381: a0 = a0 | a1\n 17384: a0 = reverse a0\n 17386: s1 = reverse a3\n 17388: a1 = reverse a2\n 17390: a2 = reverse t0\n 17392: a1 = a1 | a2\n 17395: a2 = s1 | a0\n 17398: a2 = a2 | a1\n 17401: a2 = a2 >> 0x20\n 17404: a0 = a0 | a1\n 17407: a0 = a0 << 0x20\n 17410: a0 = a0 | a2\n 17413: jump @254 if a0 != 0\n      : @248 (gas: 4)\n 17417: i32 s1 = s1 + 0\n 17419: a1 = 0x20\n 17422: a0 = s1\n 17424: ra = 208, jump @0\n      : @249 [@dyn 104] (gas: 71)\n 17430: a1 = u64 [sp + 0x120]\n 17434: a1 = reverse a1\n 17436: a2 = u64 [sp + 0x128]\n 17440: a2 = reverse a2\n 17442: a3 = u64 [sp + 0x130]\n 17446: a3 = reverse a3\n 17448: a4 = u64 [sp + 0x138]\n 17452: a4 = reverse a4\n 17454: a5 = a4 >> 0x38\n 17457: u8 [a0 + 0x1f] = a5\n 17460: a5 = a4 >> 0x30\n 17463: u8 [a0 + 0x1e] = a5\n 17466: a5 = a4 >> 0x28\n 17469: u8 [a0 + 0x1d] = a5\n 17472: a5 = a4 >> 0x20\n 17475: u8 [a0 + 0x1c] = a5\n 17478: a5 = a4 >> 0x18\n 17481: u8 [a0 + 0x1b] = a5\n 17484: a5 = a4 >> 0x10\n 17487: u8 [a0 + 0x1a] = a5\n 17490: a5 = a4 >> 0x8\n 17493: u8 [a0 + 0x19] = a5\n 17496: u8 [a0 + 0x18] = a4\n 17499: u8 [a0 + 0x10] = a3\n 17502: a4 = a3 >> 0x38\n 17505: u8 [a0 + 0x17] = a4\n 17508: a4 = a3 >> 0x30\n 17511: u8 [a0 + 0x16] = a4\n 17514: a4 = a3 >> 0x28\n 17517: u8 [a0 + 0x15] = a4\n 17520: a4 = a3 >> 0x20\n 17523: u8 [a0 + 0x14] = a4\n 17526: a4 = a3 >> 0x18\n 17529: u8 [a0 + 0x13] = a4\n 17532: a4 = a3 >> 0x10\n 17535: u8 [a0 + 0x12] = a4\n 17538: a3 = a3 >> 0x8\n 17541: u8 [a0 + 0x11] = a3\n 17544: u8 [a0 + 0x8] = a2\n 17547: a3 = a2 >> 0x38\n 17550: u8 [a0 + 0xf] = a3\n 17553: a3 = a2 >> 0x30\n 17556: u8 [a0 + 0xe] = a3\n 17559: a3 = a2 >> 0x28\n 17562: u8 [a0 + 0xd] = a3\n 17565: a3 = a2 >> 0x20\n 17568: u8 [a0 + 0xc] = a3\n 17571: a3 = a2 >> 0x18\n 17574: u8 [a0 + 0xb] = a3\n 17577: a3 = a2 >> 0x10\n 17580: u8 [a0 + 0xa] = a3\n 17583: a2 = a2 >> 0x8\n 17586: u8 [a0 + 0x9] = a2\n 17589: u8 [a0] = a1\n 17591: a2 = a1 >> 0x38\n 17594: u8 [a0 + 0x7] = a2\n 17597: a2 = a1 >> 0x30\n 17600: u8 [a0 + 0x6] = a2\n 17603: a2 = a1 >> 0x28\n 17606: u8 [a0 + 0x5] = a2\n 17609: a2 = a1 >> 0x20\n 17612: u8 [a0 + 0x4] = a2\n 17615: a2 = a1 >> 0x18\n 17618: u8 [a0 + 0x3] = a2\n 17621: a2 = a1 >> 0x10\n 17624: u8 [a0 + 0x2] = a2\n 17627: a1 = a1 >> 0x8\n 17630: u8 [a0 + 0x1] = a1\n 17633: a1 = 0x20\n 17636: a0 = s1\n 17638: ra = 210, jump @0\n      : @250 [@dyn 105] (gas: 33)\n 17644: a1 = u64 [0x20000]\n 17649: a2 = u64 [0x20008]\n 17654: a3 = u64 [0x20010]\n 17659: a4 = u64 [0x20018]\n 17664: u64 [sp + 0x238] = a1\n 17668: u64 [sp + 0x230] = a2\n 17672: u64 [sp + 0x228] = a3\n 17676: u64 [sp + 0x220] = a4\n 17680: a1 = u64 [sp + 0x108]\n 17684: u64 [sp + 0x258] = a1\n 17688: a1 = u64 [sp + 0x110]\n 17692: u64 [sp + 0x250] = a1\n 17696: a1 = u64 [sp + 0x118]\n 17700: u64 [sp + 0x248] = a1\n 17704: u64 [sp + 576] = 0\n 17708: a1 = u64 [sp + 0xf0]\n 17712: u64 [sp + 0x278] = a1\n 17716: a1 = u64 [sp + 0xf8]\n 17720: u64 [sp + 0x270] = a1\n 17724: a1 = u64 [sp + 0x100]\n 17728: u64 [sp + 0x268] = a1\n 17732: u64 [sp + 608] = 0\n 17736: i32 a2 = a0 + 0\n 17738: i32 a0 = sp + 0x220\n 17742: a1 = 0x3\n 17745: a3 = 0x20\n 17748: ecalli 4 // 'deposit_event'\n 17750: sp = s0 + 0xfffffffffffffd20\n 17754: ra = u64 [sp + 0x2d8]\n 17758: s0 = u64 [sp + 0x2d0]\n 17762: s1 = u64 [sp + 0x2c8]\n 17766: sp = sp + 0x2e0\n 17770: ret\n      : @251 (gas: 3)\n 17772: a1 = 0x20\n 17775: a0 = 0\n 17777: ra = 212, jump @0\n      : @252 [@dyn 106] (gas: 65)\n 17783: u8 [a0 + 31] = 0\n 17786: u8 [a0 + 30] = 0\n 17789: u8 [a0 + 29] = 0\n 17792: u8 [a0 + 28] = 0\n 17795: u8 [a0 + 27] = 0\n 17798: u8 [a0 + 26] = 0\n 17801: u8 [a0 + 25] = 0\n 17804: u8 [a0 + 24] = 0\n 17807: u8 [a0 + 23] = 0\n 17810: u8 [a0 + 22] = 0\n 17813: u8 [a0 + 21] = 0\n 17816: u8 [a0 + 20] = 0\n 17819: u8 [a0 + 19] = 0\n 17822: u8 [a0 + 18] = 0\n 17825: u8 [a0 + 17] = 0\n 17828: u8 [a0 + 16] = 0\n 17831: u8 [a0 + 15] = 0\n 17834: u8 [a0 + 14] = 0\n 17837: u8 [a0 + 13] = 0\n 17840: u8 [a0 + 12] = 0\n 17843: u8 [a0 + 11] = 0\n 17846: u8 [a0 + 10] = 0\n 17849: u8 [a0 + 9] = 0\n 17852: u8 [a0 + 8] = 0\n 17855: u8 [a0 + 7] = 0\n 17858: u8 [a0 + 6] = 0\n 17861: u8 [a0 + 5] = 0\n 17864: u8 [a0 + 4] = 0\n 17867: u8 [a0 + 3] = 0x8c\n 17872: u8 [a0 + 2] = 0xd3\n 17877: u8 [a0 + 1] = 0x50\n 17881: u8 [a0 + 0] = 0xe4\n 17885: u64 [sp + 0x198] = s1\n 17889: a0 = u64 [sp + 0x128]\n 17893: u64 [sp + 0x190] = a0\n 17897: a0 = u64 [sp + 0x130]\n 17901: u64 [sp + 0x188] = a0\n 17905: a0 = u64 [sp + 0x138]\n 17909: u64 [sp + 0x180] = a0\n 17913: a0 = u64 [sp + 0xe0]\n 17917: u64 [sp + 0x1b8] = a0\n 17921: a0 = u64 [sp + 0xd8]\n 17925: u64 [sp + 0x1b0] = a0\n 17929: a0 = u64 [sp + 0xe8]\n 17933: u64 [sp + 0x1a8] = a0\n 17937: a0 = u64 [sp + 0xd0]\n 17941: u64 [sp + 0x1a0] = a0\n 17945: a0 = u64 [sp + 0x18]\n 17948: u64 [sp + 0x1d8] = a0\n 17952: a0 = u64 [sp + 0x20]\n 17955: u64 [sp + 0x1d0] = a0\n 17959: a0 = u64 [sp + 0x28]\n 17962: u64 [sp + 0x1c8] = a0\n 17966: a0 = u64 [sp + 0x30]\n 17969: u64 [sp + 0x1c0] = a0\n 17973: u64 [sp + 504] = 0\n 17977: u64 [sp + 496] = 0\n 17981: u64 [sp + 480] = 0x4\n 17986: a0 = sp + 0x200\n 17990: a1 = sp + 0x1e0\n 17994: a2 = sp + 0x1c0\n 17998: a3 = sp + 0x1a0\n 18002: a4 = sp + 0x180\n 18006: u64 [sp + 488] = 0\n 18010: ra = 214, jump @218\n      : @253 [@dyn 107] (gas: 12)\n 18016: a0 = u64 [sp + 0x218]\n 18020: a1 = u64 [sp + 0x210]\n 18024: a2 = u64 [sp + 0x208]\n 18028: s1 = u64 [sp + 0x200]\n 18032: a0 = a0 | a2\n 18035: a2 = s1 | a1\n 18038: a2 = a2 | a0\n 18041: a2 = a2 >> 0x20\n 18044: a0 = a0 | a1\n 18047: a0 = a0 << 0x20\n 18050: a0 = a0 | a2\n 18053: jump @259 if a0 == 0\n      : @254 (gas: 1)\n 18056: trap\n      : @255 (gas: 8)\n 18057: u64 [sp + 368] = 0\n 18061: u64 [sp + 360] = 0\n 18065: u64 [sp + 352] = 0\n 18069: a0 = 0x4e487b7100000000\n 18079: a1 = sp + 0x160\n 18083: u64 [sp + 0x178] = a0\n 18087: a0 = 0\n 18089: ra = 216, jump @23\n      : @256 [@dyn 108] (gas: 7)\n 18095: u64 [sp + 344] = 0\n 18099: u64 [sp + 336] = 0\n 18103: u64 [sp + 320] = 0x11\n 18108: a0 = 0x4\n 18111: a1 = sp + 0x140\n 18115: u64 [sp + 328] = 0\n 18119: ra = 218, jump @23\n      : @257 [@dyn 109] (gas: 3)\n 18125: a1 = 0x24\n 18128: a0 = 0\n 18130: ra = 220, jump @0\n      : @258 [@dyn 110] (gas: 5)\n 18136: i32 a1 = a0 + 0\n 18138: a0 = 0x1\n 18141: a2 = 0x24\n 18144: ecalli 7 // 'seal_return'\n 18146: fallthrough\n      : @259 (gas: 3)\n 18147: i32 s1 = s1 + 0\n 18149: a1 = s1\n 18151: ra = 222, jump @0\n      : @260 [@dyn 111] (gas: 6)\n 18157: i32 a1 = a0 + 0\n 18159: a0 = 0x1\n 18162: a2 = s1\n 18164: ra = 0xe0\n 18168: ecalli 7 // 'seal_return'\n 18170: fallthrough\n      : @261 [@dyn 112] (gas: 6)\n 18171: a1 = u32 [a1 + 0x1c]\n 18174: u64 [a0 + 24] = 0\n 18177: u64 [a0 + 16] = 0\n 18180: u64 [a0 + 8] = 0\n 18183: u64 [a0] = a1\n 18185: ret\n      : @262 (gas: 16)\n 18187: sp = sp + 0xffffffffffffff88\n 18190: u64 [sp + 0x70] = ra\n 18193: u64 [sp + 0x68] = s0\n 18196: u64 [sp + 0x60] = s1\n 18199: a5 = u64 [a1 + 0x10]\n 18202: s1 = u64 [a1 + 0x18]\n 18205: a4 = u64 [a1 + 0x8]\n 18208: s0 = u64 [a1]\n 18210: a1 = a4 | s1\n 18213: a3 = s0 | a5\n 18216: a3 = a3 | a1\n 18219: a3 = a3 >> 0x20\n 18222: a1 = a1 | a5\n 18225: a1 = a1 << 0x20\n 18228: a1 = a1 | a3\n 18231: jump @275 if a1 != 0\n      : @263 (gas: 16)\n 18235: u64 [sp + 0x28] = s1\n 18238: u64 [sp + 0x30] = a5\n 18241: u64 [sp + 0x40] = a4\n 18244: u64 [sp] = a0\n 18246: a0 = u64 [a2 + 0x18]\n 18249: u64 [sp + 0x58] = a0\n 18252: s1 = u64 [a2 + 0x10]\n 18255: a0 = u64 [a2 + 0x8]\n 18258: u64 [sp + 0x50] = a0\n 18261: a0 = u64 [a2]\n 18263: u64 [sp + 0x48] = a0\n 18266: u64 [sp + 0x20] = s0\n 18269: i32 a0 = s0 + 0\n 18271: a1 = 0x20\n 18274: u64 [sp + 0x8] = a0\n 18277: ra = 226, jump @0\n      : @264 [@dyn 113] (gas: 12)\n 18283: t0 = u64 [sp + 0x48]\n 18286: a1 = t0 | s1\n 18289: a2 = u64 [sp + 0x58]\n 18292: a3 = u64 [sp + 0x50]\n 18295: a2 = a2 | a3\n 18298: a1 = a1 | a2\n 18301: a1 = a1 >> 0x20\n 18304: u64 [sp + 0x38] = s1\n 18307: a2 = a2 | s1\n 18310: a2 = a2 << 0x20\n 18313: a1 = a1 | a2\n 18316: jump @275 if a1 != 0\n      : @265 (gas: 93)\n 18320: a1 = u8 [a0 + 0x19]\n 18323: a2 = u8 [a0 + 0x18]\n 18326: a3 = u8 [a0 + 0x1a]\n 18329: a4 = u8 [a0 + 0x1b]\n 18332: a1 = a1 << 0x8\n 18335: a1 = a1 | a2\n 18338: a3 = a3 << 0x10\n 18341: a4 = a4 << 0x18\n 18344: a3 = a3 | a4\n 18347: a1 = a1 | a3\n 18350: a2 = u8 [a0 + 0x1d]\n 18353: a3 = u8 [a0 + 0x1c]\n 18356: a4 = u8 [a0 + 0x1e]\n 18359: a5 = u8 [a0 + 0x1f]\n 18362: a2 = a2 << 0x8\n 18365: a2 = a2 | a3\n 18368: a4 = a4 << 0x10\n 18371: a5 = a5 << 0x18\n 18374: a4 = a4 | a5\n 18377: a2 = a2 | a4\n 18380: a2 = a2 << 0x20\n 18383: a1 = a1 | a2\n 18386: u64 [sp + 0x18] = a1\n 18389: a1 = u8 [a0 + 0x11]\n 18392: a2 = u8 [a0 + 0x10]\n 18395: a3 = u8 [a0 + 0x12]\n 18398: a4 = u8 [a0 + 0x13]\n 18401: a1 = a1 << 0x8\n 18404: a1 = a1 | a2\n 18407: a3 = a3 << 0x10\n 18410: a4 = a4 << 0x18\n 18413: a3 = a3 | a4\n 18416: a1 = a1 | a3\n 18419: a2 = u8 [a0 + 0x15]\n 18422: a3 = u8 [a0 + 0x14]\n 18425: a4 = u8 [a0 + 0x16]\n 18428: a5 = u8 [a0 + 0x17]\n 18431: a2 = a2 << 0x8\n 18434: a2 = a2 | a3\n 18437: a4 = a4 << 0x10\n 18440: a5 = a5 << 0x18\n 18443: a4 = a4 | a5\n 18446: a2 = a2 | a4\n 18449: a2 = a2 << 0x20\n 18452: a1 = a1 | a2\n 18455: u64 [sp + 0x10] = a1\n 18458: a1 = u8 [a0 + 0x9]\n 18461: a2 = u8 [a0 + 0x8]\n 18464: a3 = u8 [a0 + 0xa]\n 18467: a4 = u8 [a0 + 0xb]\n 18470: a1 = a1 << 0x8\n 18473: a1 = a1 | a2\n 18476: a3 = a3 << 0x10\n 18479: a4 = a4 << 0x18\n 18482: a3 = a3 | a4\n 18485: a1 = a1 | a3\n 18488: a2 = u8 [a0 + 0xd]\n 18491: a3 = u8 [a0 + 0xc]\n 18494: a4 = u8 [a0 + 0xe]\n 18497: a5 = u8 [a0 + 0xf]\n 18500: a2 = a2 << 0x8\n 18503: a2 = a2 | a3\n 18506: a4 = a4 << 0x10\n 18509: a5 = a5 << 0x18\n 18512: a4 = a4 | a5\n 18515: a2 = a2 | a4\n 18518: a2 = a2 << 0x20\n 18521: s1 = a2 | a1\n 18524: a1 = u8 [a0 + 0x1]\n 18527: a2 = u8 [a0]\n 18529: a3 = u8 [a0 + 0x2]\n 18532: a4 = u8 [a0 + 0x3]\n 18535: a1 = a1 << 0x8\n 18538: a1 = a1 | a2\n 18541: a3 = a3 << 0x10\n 18544: a4 = a4 << 0x18\n 18547: a3 = a3 | a4\n 18550: a1 = a1 | a3\n 18553: a2 = u8 [a0 + 0x5]\n 18556: a3 = u8 [a0 + 0x4]\n 18559: a4 = u8 [a0 + 0x6]\n 18562: a0 = u8 [a0 + 0x7]\n 18565: a2 = a2 << 0x8\n 18568: a2 = a2 | a3\n 18571: a4 = a4 << 0x10\n 18574: a0 = a0 << 0x18\n 18577: a0 = a0 | a4\n 18580: a0 = a0 | a2\n 18583: a0 = a0 << 0x20\n 18586: s0 = a0 | a1\n 18589: i32 a0 = t0 + 0\n 18591: a1 = 0x20\n 18594: ra = 228, jump @0\n      : @266 [@dyn 114] (gas: 73)\n 18600: a4 = s1\n 18602: a2 = u64 [sp + 0x10]\n 18605: s1 = u64 [sp + 0x18]\n 18608: t0 = u64 [sp + 0x48]\n 18611: a1 = a4 >> 0x38\n 18614: u8 [a0 + 0xf] = a1\n 18617: a1 = a4 >> 0x30\n 18620: u8 [a0 + 0xe] = a1\n 18623: a1 = a4 >> 0x28\n 18626: u8 [a0 + 0xd] = a1\n 18629: a1 = a4 >> 0x20\n 18632: u8 [a0 + 0xc] = a1\n 18635: a1 = a4 >> 0x18\n 18638: u8 [a0 + 0xb] = a1\n 18641: a1 = a4 >> 0x10\n 18644: u8 [a0 + 0xa] = a1\n 18647: a1 = a4 >> 0x8\n 18650: u8 [a0 + 0x9] = a1\n 18653: a1 = s0 >> 0x38\n 18656: u8 [a0 + 0x7] = a1\n 18659: a1 = s0 >> 0x30\n 18662: u8 [a0 + 0x6] = a1\n 18665: a1 = s0 >> 0x28\n 18668: u8 [a0 + 0x5] = a1\n 18671: a1 = s0 >> 0x20\n 18674: u8 [a0 + 0x4] = a1\n 18677: a1 = s0 >> 0x18\n 18680: u8 [a0 + 0x3] = a1\n 18683: a1 = s0 >> 0x10\n 18686: u8 [a0 + 0x2] = a1\n 18689: a1 = s0 >> 0x8\n 18692: u8 [a0 + 0x1] = a1\n 18695: a1 = a2 >> 0x38\n 18698: u8 [a0 + 0x17] = a1\n 18701: a1 = a2 >> 0x30\n 18704: u8 [a0 + 0x16] = a1\n 18707: a1 = a2 >> 0x28\n 18710: u8 [a0 + 0x15] = a1\n 18713: a1 = a2 >> 0x20\n 18716: u8 [a0 + 0x14] = a1\n 18719: a1 = a2 >> 0x18\n 18722: u8 [a0 + 0x13] = a1\n 18725: a1 = a2 >> 0x10\n 18728: u8 [a0 + 0x12] = a1\n 18731: a1 = a2 >> 0x8\n 18734: u8 [a0 + 0x11] = a1\n 18737: a1 = s1 >> 0x38\n 18740: u8 [a0 + 0x1f] = a1\n 18743: a1 = s1 >> 0x30\n 18746: u8 [a0 + 0x1e] = a1\n 18749: a1 = s1 >> 0x28\n 18752: u8 [a0 + 0x1d] = a1\n 18755: a1 = s1 >> 0x20\n 18758: u8 [a0 + 0x1c] = a1\n 18761: a1 = s1 >> 0x18\n 18764: u8 [a0 + 0x1b] = a1\n 18767: a1 = s1 >> 0x10\n 18770: u8 [a0 + 0x1a] = a1\n 18773: a1 = s1 >> 0x8\n 18776: u8 [a0 + 0x19] = a1\n 18779: ra = u64 [sp + 0x58]\n 18782: t2 = u64 [sp + 0x38]\n 18785: t1 = t2 | ra\n 18788: a1 = 0xffffffe0\n 18798: a3 = t0 <u a1\n 18801: a5 = u64 [sp + 0x50]\n 18804: a3 = 0 if a5 != 0\n 18806: a3 = 0 if t1 != 0\n 18808: u8 [a0 + 0x10] = a2\n 18811: u8 [a0 + 0x8] = a4\n 18814: u8 [a0] = s0\n 18816: u8 [a0 + 0x18] = s1\n 18819: jump @275 if a3 == 0\n      : @267 (gas: 9)\n 18823: a0 = u64 [sp + 0x30]\n 18826: a3 = u64 [sp + 0x28]\n 18829: a0 = a0 | a3\n 18832: a3 = u64 [sp + 0x20]\n 18835: a1 = a3 <u a1\n 18838: a3 = u64 [sp + 0x40]\n 18841: a1 = 0 if a3 != 0\n 18843: a1 = 0 if a0 != 0\n 18845: jump @275 if a1 == 0\n      : @268 (gas: 15)\n 18849: a1 = reverse s0\n 18851: a3 = reverse a4\n 18853: a4 = reverse a2\n 18855: s0 = reverse s1\n 18857: a0 = s0 | a3\n 18860: u64 [sp + 0x30] = a1\n 18863: u64 [sp + 0x20] = a4\n 18866: a1 = a1 | a4\n 18869: a0 = a0 | a1\n 18872: a0 = a0 >> 0x20\n 18875: u64 [sp + 0x28] = a3\n 18878: a1 = a1 | a3\n 18881: a1 = a1 << 0x20\n 18884: a0 = a0 | a1\n 18887: jump @275 if a0 != 0\n      : @269 (gas: 19)\n 18891: a3 = t0 + 0x20\n 18894: u64 [sp + 0x40] = a3\n 18897: a0 = a3 <u t0\n 18900: a1 = a5 + a0\n 18903: u64 [sp + 0x48] = a1\n 18906: a1 = a1 <u a5\n 18909: a1 = a0 if a0 == 0\n 18912: a1 = a1 + t2\n 18915: u64 [sp + 0x50] = a1\n 18918: a0 = a1 <u t2\n 18921: a0 = a0 + ra\n 18924: u64 [sp + 0x58] = a0\n 18927: i32 a0 = a3 + 0\n 18929: a1 = u64 [sp + 0x8]\n 18932: i32 a1 = a1 + 0x20\n 18935: u64 [sp + 0x38] = a1\n 18938: i32 s1 = s0 + 0\n 18940: a1 = s1\n 18942: ra = 230, jump @0\n      : @270 [@dyn 115] (gas: 5)\n 18948: u64 [sp + 0x18] = a0\n 18951: a0 = u64 [sp + 0x38]\n 18954: a1 = s1\n 18956: s1 = s0\n 18958: ra = 232, jump @0\n      : @271 [@dyn 116] (gas: 4)\n 18964: a1 = a0\n 18966: a0 = u64 [sp + 0x18]\n 18969: a2 = s0\n 18971: ra = 234, jump @8\n      : @272 [@dyn 117] (gas: 29)\n 18977: a0 = u64 [sp + 0x40]\n 18980: a0 = a0 + s0\n 18983: a1 = a0 <u s0\n 18986: a4 = u64 [sp + 0x20]\n 18989: a2 = u64 [sp + 0x48]\n 18992: a2 = a2 + a4\n 18995: a2 = a2 + a1\n 18998: a3 = a2 ^ a4\n 19001: a4 = a2 <u a4\n 19004: a4 = a1 if a3 == 0\n 19007: a5 = u64 [sp + 0x28]\n 19010: a1 = u64 [sp + 0x50]\n 19013: a1 = a1 + a5\n 19016: a4 = a4 + a1\n 19019: a3 = a4 <u a1\n 19022: a1 = a1 <u a5\n 19025: a5 = u64 [sp + 0x30]\n 19028: s0 = u64 [sp + 0x58]\n 19031: a5 = a5 + s0\n 19034: a1 = a1 + a5\n 19037: a1 = a1 + a3\n 19040: a3 = a0 | a4\n 19043: a1 = a1 | a2\n 19046: a3 = a3 | a1\n 19049: a3 = a3 >> 0x20\n 19052: a1 = a1 | a4\n 19055: a1 = a1 << 0x20\n 19058: a1 = a1 | a3\n 19061: jump @275 if a1 != 0\n      : @273 (gas: 3)\n 19065: i32 a0 = a0 + 0\n 19067: a1 = 0x20\n 19070: ra = 236, jump @0\n      : @274 [@dyn 118] (gas: 56)\n 19076: u8 [a0 + 31] = 0\n 19079: u8 [a0 + 30] = 0\n 19082: u8 [a0 + 29] = 0\n 19085: u8 [a0 + 28] = 0\n 19088: u8 [a0 + 27] = 0\n 19091: u8 [a0 + 26] = 0\n 19094: u8 [a0 + 25] = 0\n 19097: u8 [a0 + 24] = 0\n 19100: u8 [a0 + 23] = 0\n 19103: u8 [a0 + 22] = 0\n 19106: u8 [a0 + 21] = 0\n 19109: u8 [a0 + 20] = 0\n 19112: u8 [a0 + 19] = 0\n 19115: u8 [a0 + 18] = 0\n 19118: u8 [a0 + 17] = 0\n 19121: u8 [a0 + 16] = 0\n 19124: u8 [a0 + 15] = 0\n 19127: u8 [a0 + 14] = 0\n 19130: u8 [a0 + 13] = 0\n 19133: u8 [a0 + 12] = 0\n 19136: u8 [a0 + 11] = 0\n 19139: u8 [a0 + 10] = 0\n 19142: u8 [a0 + 9] = 0\n 19145: u8 [a0 + 8] = 0\n 19148: u8 [a0 + 7] = 0\n 19151: u8 [a0 + 6] = 0\n 19154: u8 [a0 + 5] = 0\n 19157: u8 [a0 + 4] = 0\n 19160: u8 [a0 + 3] = 0\n 19163: u8 [a0 + 2] = 0\n 19166: u8 [a0 + 1] = 0\n 19169: u8 [a0 + 0] = 0\n 19171: a0 = s1 + 0x1f\n 19174: a1 = 0x1ffffffe0\n 19184: a0 = a0 & a1\n 19187: a1 = u64 [sp + 0x40]\n 19190: a1 = a1 + a0\n 19193: a0 = a1 <u a0\n 19196: a2 = u64 [sp + 0x48]\n 19199: a2 = a2 + a0\n 19202: a0 = 0 if a2 != 0\n 19204: a3 = u64 [sp + 0x50]\n 19207: a0 = a0 + a3\n 19210: a3 = a0 <u a3\n 19213: a4 = u64 [sp + 0x58]\n 19216: a3 = a3 + a4\n 19219: a4 = u64 [sp]\n 19221: u64 [a4] = a1\n 19223: u64 [a4 + 0x8] = a2\n 19226: u64 [a4 + 0x10] = a0\n 19229: u64 [a4 + 0x18] = a3\n 19232: ra = u64 [sp + 0x70]\n 19235: s0 = u64 [sp + 0x68]\n 19238: s1 = u64 [sp + 0x60]\n 19241: sp = sp + 0x78\n 19244: ret\n      : @275 (gas: 1)\n 19246: trap\n      : @276 (gas: 8)\n 19247: a0 = u64 [sp + 0x110]\n 19251: a1 = u64 [sp + 0x118]\n 19255: a2 = u64 [sp + 0x108]\n 19259: a3 = u64 [sp + 0x100]\n 19263: a1 = a1 | a2\n 19266: a0 = a0 | a3\n 19269: a0 = a0 | a1\n 19272: jump @285 if a0 != 0\n      : @277 (gas: 2)\n 19276: a1 = i32 [0x20044]\n 19281: jump @285 if a1 <=u 3\n      : @278 (gas: 7)\n 19286: u64 [sp + 216] = 0\n 19290: u64 [sp + 208] = 0\n 19294: u64 [sp + 192] = 0x3\n 19299: a0 = sp + 0xe0\n 19303: a1 = sp + 0xc0\n 19307: u64 [sp + 200] = 0\n 19311: ra = 238, jump @474\n      : @279 [@dyn 119] (gas: 11)\n 19317: a0 = u64 [sp + 0xf8]\n 19321: u64 [sp + 0x40] = a0\n 19324: a0 = u64 [sp + 0xf0]\n 19328: u64 [sp + 0x48] = a0\n 19331: a0 = u64 [sp + 0xe8]\n 19335: u64 [sp + 0x50] = a0\n 19338: a0 = u64 [sp + 0xe0]\n 19342: u64 [sp + 0x58] = a0\n 19345: a0 = 0x40\n 19348: a1 = 0x20\n 19351: ra = 240, jump @0\n      : @280 [@dyn 120] (gas: 100)\n 19357: a1 = u8 [a0 + 0x11]\n 19360: a2 = u8 [a0 + 0x10]\n 19363: a3 = u8 [a0 + 0x12]\n 19366: a4 = u8 [a0 + 0x13]\n 19369: a1 = a1 << 0x8\n 19372: a1 = a1 | a2\n 19375: a3 = a3 << 0x10\n 19378: a4 = a4 << 0x18\n 19381: a3 = a3 | a4\n 19384: a1 = a1 | a3\n 19387: a2 = u8 [a0 + 0x15]\n 19390: a3 = u8 [a0 + 0x14]\n 19393: a4 = u8 [a0 + 0x16]\n 19396: a5 = u8 [a0 + 0x17]\n 19399: a2 = a2 << 0x8\n 19402: a2 = a2 | a3\n 19405: a4 = a4 << 0x10\n 19408: a5 = a5 << 0x18\n 19411: a4 = a4 | a5\n 19414: a2 = a2 | a4\n 19417: a2 = a2 << 0x20\n 19420: t0 = a2 | a1\n 19423: a2 = u8 [a0 + 0x1]\n 19426: a3 = u8 [a0]\n 19428: a4 = u8 [a0 + 0x2]\n 19431: a5 = u8 [a0 + 0x3]\n 19434: a2 = a2 << 0x8\n 19437: a2 = a2 | a3\n 19440: a4 = a4 << 0x10\n 19443: a5 = a5 << 0x18\n 19446: a4 = a4 | a5\n 19449: a2 = a2 | a4\n 19452: a3 = u8 [a0 + 0x5]\n 19455: a4 = u8 [a0 + 0x4]\n 19458: a5 = u8 [a0 + 0x6]\n 19461: s1 = u8 [a0 + 0x7]\n 19464: a3 = a3 << 0x8\n 19467: a3 = a3 | a4\n 19470: a5 = a5 << 0x10\n 19473: s1 = s1 << 0x18\n 19476: a5 = a5 | s1\n 19479: a3 = a3 | a5\n 19482: a3 = a3 << 0x20\n 19485: a2 = a2 | a3\n 19488: a3 = u8 [a0 + 0x19]\n 19491: a4 = u8 [a0 + 0x18]\n 19494: a5 = u8 [a0 + 0x1a]\n 19497: s1 = u8 [a0 + 0x1b]\n 19500: a3 = a3 << 0x8\n 19503: a3 = a3 | a4\n 19506: a5 = a5 << 0x10\n 19509: s1 = s1 << 0x18\n 19512: a5 = a5 | s1\n 19515: a3 = a3 | a5\n 19518: a4 = u8 [a0 + 0x1d]\n 19521: a5 = u8 [a0 + 0x1c]\n 19524: s1 = u8 [a0 + 0x1e]\n 19527: a1 = u8 [a0 + 0x1f]\n 19530: a4 = a4 << 0x8\n 19533: a4 = a4 | a5\n 19536: s1 = s1 << 0x10\n 19539: a1 = a1 << 0x18\n 19542: a1 = a1 | s1\n 19545: a1 = a1 | a4\n 19548: a1 = a1 << 0x20\n 19551: a3 = a3 | a1\n 19554: a1 = u8 [a0 + 0x9]\n 19557: a4 = u8 [a0 + 0x8]\n 19560: a5 = u8 [a0 + 0xa]\n 19563: s1 = u8 [a0 + 0xb]\n 19566: a1 = a1 << 0x8\n 19569: a1 = a1 | a4\n 19572: a5 = a5 << 0x10\n 19575: s1 = s1 << 0x18\n 19578: a5 = a5 | s1\n 19581: a1 = a1 | a5\n 19584: a4 = u8 [a0 + 0xd]\n 19587: a5 = u8 [a0 + 0xc]\n 19590: s1 = u8 [a0 + 0xe]\n 19593: a0 = u8 [a0 + 0xf]\n 19596: a4 = a4 << 0x8\n 19599: a4 = a4 | a5\n 19602: s1 = s1 << 0x10\n 19605: a0 = a0 << 0x18\n 19608: a0 = a0 | s1\n 19611: a0 = a0 | a4\n 19614: a0 = a0 << 0x20\n 19617: a0 = a0 | a1\n 19620: s1 = reverse a0\n 19622: a3 = reverse a3\n 19624: a4 = reverse a2\n 19626: a2 = reverse t0\n 19628: a0 = a2 | a4\n 19631: a1 = a3 | s1\n 19634: a1 = a1 | a0\n 19637: a1 = a1 >> 0x20\n 19640: a0 = a0 | s1\n 19643: a0 = a0 << 0x20\n 19646: a0 = a0 | a1\n 19649: jump @284 if a0 != 0\n      : @281 (gas: 19)\n 19653: a0 = a3 + 0x20\n 19656: u64 [sp + 0x18] = a0\n 19659: a0 = a0 <u a3\n 19662: a1 = a2 + a0\n 19665: u64 [sp + 0x8] = a1\n 19668: a1 = a1 <u a2\n 19671: a1 = a0 if a0 == 0\n 19674: a1 = a1 + s1\n 19677: u64 [sp + 0x10] = a1\n 19680: a0 = a1 <u s1\n 19683: a0 = a0 + a4\n 19686: u64 [sp + 0x20] = a0\n 19689: i32 a0 = a3 + 0\n 19691: a1 = 0x20\n 19694: u64 [sp] = a0\n 19696: u64 [sp + 0x30] = a3\n 19699: u64 [sp + 0x28] = a2\n 19702: u64 [sp + 0x38] = a4\n 19705: ra = 242, jump @0\n      : @282 [@dyn 121] (gas: 52)\n 19711: u8 [a0 + 31] = 0x20\n 19715: u8 [a0 + 30] = 0\n 19718: u8 [a0 + 29] = 0\n 19721: u8 [a0 + 28] = 0\n 19724: u8 [a0 + 27] = 0\n 19727: u8 [a0 + 26] = 0\n 19730: u8 [a0 + 25] = 0\n 19733: u8 [a0 + 24] = 0\n 19736: u8 [a0 + 23] = 0\n 19739: u8 [a0 + 22] = 0\n 19742: u8 [a0 + 21] = 0\n 19745: u8 [a0 + 20] = 0\n 19748: u8 [a0 + 19] = 0\n 19751: u8 [a0 + 18] = 0\n 19754: u8 [a0 + 17] = 0\n 19757: u8 [a0 + 16] = 0\n 19760: u8 [a0 + 15] = 0\n 19763: u8 [a0 + 14] = 0\n 19766: u8 [a0 + 13] = 0\n 19769: u8 [a0 + 12] = 0\n 19772: u8 [a0 + 11] = 0\n 19775: u8 [a0 + 10] = 0\n 19778: u8 [a0 + 9] = 0\n 19781: u8 [a0 + 8] = 0\n 19784: u8 [a0 + 7] = 0\n 19787: u8 [a0 + 6] = 0\n 19790: u8 [a0 + 5] = 0\n 19793: u8 [a0 + 4] = 0\n 19796: u8 [a0 + 3] = 0\n 19799: u8 [a0 + 2] = 0\n 19802: u8 [a0 + 1] = 0\n 19805: u8 [a0 + 0] = 0\n 19807: a0 = u64 [sp + 0x8]\n 19810: u64 [sp + 0x68] = a0\n 19813: a0 = u64 [sp + 0x18]\n 19816: u64 [sp + 0x60] = a0\n 19819: a0 = u64 [sp + 0x40]\n 19822: u64 [sp + 0x98] = a0\n 19826: a0 = u64 [sp + 0x48]\n 19829: u64 [sp + 0x90] = a0\n 19833: a0 = u64 [sp + 0x50]\n 19836: u64 [sp + 0x88] = a0\n 19840: a0 = u64 [sp + 0x58]\n 19843: u64 [sp + 0x80] = a0\n 19847: a0 = u64 [sp + 0x10]\n 19850: u64 [sp + 0x70] = a0\n 19853: a0 = sp + 0xa0\n 19857: a1 = sp + 0x80\n 19861: a2 = sp + 0x60\n 19864: a3 = u64 [sp + 0x20]\n 19867: u64 [sp + 0x78] = a3\n 19870: ra = 244, jump @262\n      : @283 [@dyn 122] (gas: 30)\n 19876: a0 = u64 [sp + 0xa8]\n 19880: t0 = u64 [sp + 0xb8]\n 19884: t1 = u64 [sp + 0xa0]\n 19888: a3 = u64 [sp + 0xb0]\n 19892: a1 = u64 [sp + 0x28]\n 19895: a4 = a0 ^ a1\n 19898: a5 = a0 <u a1\n 19901: t2 = a1\n 19903: a2 = u64 [sp + 0x30]\n 19906: a1 = t1 <u a2\n 19909: a5 = a1 if a4 == 0\n 19912: a4 = a3 - s1\n 19915: a3 = a3 <u s1\n 19918: s1 = u64 [sp + 0x38]\n 19921: s1 = t0 - s1\n 19924: s1 = s1 - a3\n 19927: a3 = a4 <u a5\n 19930: s1 = s1 - a3\n 19933: a4 = a4 - a5\n 19936: a0 = a0 - t2\n 19939: a1 = a0 - a1\n 19942: a0 = t1 - a2\n 19945: a1 = a1 | s1\n 19948: a2 = a0 | a4\n 19951: a2 = a2 | a1\n 19954: a1 = a1 | a4\n 19957: a2 = a2 >> 0x20\n 19960: a1 = a1 << 0x20\n 19963: a1 = a1 | a2\n 19966: jump @287 if a1 == 0\n      : @284 (gas: 1)\n 19969: trap\n      : @285 (gas: 3)\n 19970: a0 = 0\n 19972: a1 = 0\n 19974: ra = 246, jump @0\n      : @286 [@dyn 123] (gas: 5)\n 19980: i32 a1 = a0 + 0\n 19982: a0 = 0x1\n 19985: a2 = 0\n 19987: ecalli 7 // 'seal_return'\n 19989: fallthrough\n      : @287 (gas: 4)\n 19990: i32 s1 = a0 + 0\n 19992: a0 = u64 [sp]\n 19994: a1 = s1\n 19996: ra = 248, jump @0\n      : @288 [@dyn 124] (gas: 6)\n 20002: i32 a1 = a0 + 0\n 20004: a0 = 0\n 20006: a2 = s1\n 20008: ra = 0xfa\n 20012: ecalli 7 // 'seal_return'\n 20014: fallthrough\n      : @289 [@dyn 125] (gas: 10)\n 20015: a1 = u64 [a0 + 0x10]\n 20018: a0 = u64 [a0 + 0x18]\n 20021: a2 = 0x100000000\n 20031: a2 = a2 ^ a1\n 20034: a2 = a2 | a0\n 20037: a1 = a1 >> 0x20\n 20040: a1 = a1 <u 0x1\n 20043: a1 = 0 if a0 != 0\n 20045: a1 = 0 if a2 == 0\n 20047: jump @291 if a1 == 0\n      : @290 (gas: 1)\n 20050: ret\n      : @291 (gas: 4)\n 20052: sp = sp + 0xfffffffffffffff8\n 20055: u64 [sp] = ra\n 20057: a0 = 0\n 20059: ra = 252, jump @0\n      : @292 [@dyn 126] (gas: 6)\n 20065: i32 a1 = a0 + 0\n 20067: a0 = 0x1\n 20070: a2 = 0\n 20072: ra = 0xfe\n 20076: ecalli 7 // 'seal_return'\n 20078: fallthrough\n      : @293 [@dyn 127] (gas: 18)\n 20079: sp = sp + 0xffffffffffffffc0\n 20082: u64 [sp + 0x38] = ra\n 20085: u64 [sp + 0x30] = s0\n 20088: u64 [sp + 0x28] = s1\n 20091: s0 = sp + 0x40\n 20094: sp = sp & 0xffffffffffffffe0\n 20097: a2 = u64 [a1 + 0x10]\n 20100: a3 = u64 [a1 + 0x18]\n 20103: a4 = u64 [a1 + 0x8]\n 20106: a1 = u64 [a1]\n 20108: a3 = a3 | a4\n 20111: a4 = a1 | a2\n 20114: a4 = a4 | a3\n 20117: a4 = a4 >> 0x20\n 20120: a2 = a2 | a3\n 20123: a2 = a2 << 0x20\n 20126: a2 = a2 | a4\n 20129: jump @297 if a2 != 0\n      : @294 (gas: 5)\n 20132: s1 = a0\n 20134: i32 a1 = a1 + 0\n 20136: i32 a0 = sp + 0\n 20138: ecalli 1 // 'call_data_load'\n 20140: fallthrough\n      : @295 (gas: 10)\n 20141: a0 = u64 [sp + 0x10]\n 20144: a1 = u64 [sp + 0x18]\n 20147: a2 = 0x100000000\n 20157: a2 = a2 ^ a0\n 20160: a2 = a2 | a1\n 20163: a3 = a0 >> 0x20\n 20166: a3 = a3 <u 0x1\n 20169: a3 = 0 if a1 != 0\n 20171: a3 = 0 if a2 == 0\n 20173: jump @298 if a3 == 0\n      : @296 (gas: 12)\n 20176: a2 = u64 [sp]\n 20178: a3 = u64 [sp + 0x8]\n 20181: u64 [s1] = a2\n 20183: u64 [s1 + 0x8] = a3\n 20186: u64 [s1 + 0x10] = a0\n 20189: u64 [s1 + 0x18] = a1\n 20192: sp = s0 + 0xffffffffffffffc0\n 20195: ra = u64 [sp + 0x38]\n 20198: s0 = u64 [sp + 0x30]\n 20201: s1 = u64 [sp + 0x28]\n 20204: sp = sp + 0x40\n 20207: ret\n      : @297 (gas: 1)\n 20209: trap\n      : @298 (gas: 3)\n 20210: a0 = 0\n 20212: a1 = 0\n 20214: ra = 256, jump @0\n      : @299 [@dyn 128] (gas: 6)\n 20220: i32 a1 = a0 + 0\n 20222: a0 = 0x1\n 20225: a2 = 0\n 20227: ra = 0x102\n 20231: ecalli 7 // 'seal_return'\n 20233: fallthrough\n      : @300 [@dyn 129] (gas: 9)\n 20234: a2 = u64 [a1 + 0x18]\n 20237: a3 = u64 [a1 + 0x10]\n 20240: a4 = u64 [a1 + 0x8]\n 20243: a1 = u64 [a1]\n 20245: u64 [a0 + 0x18] = a2\n 20248: u64 [a0 + 0x10] = a3\n 20251: u64 [a0 + 0x8] = a4\n 20254: u64 [a0] = a1\n 20256: ret\n      : @301 (gas: 47)\n 20258: sp = sp + 0xffffffffffffff80\n 20261: u64 [sp + 0x78] = ra\n 20264: u64 [sp + 0x70] = s0\n 20267: u64 [sp + 0x68] = s1\n 20270: s0 = sp + 0x80\n 20274: sp = sp & 0xffffffffffffffe0\n 20277: ra = u64 [a1 + 0x10]\n 20280: a5 = u64 [a1 + 0x8]\n 20283: a3 = u64 [a2 + 0x8]\n 20286: t1 = u64 [a1]\n 20288: a4 = u64 [a2]\n 20290: u64 [sp + 0x28] = a4\n 20293: t2 = u64 [a2 + 0x10]\n 20296: t0 = a3 ^ a5\n 20299: s1 = a3 <u a5\n 20302: a4 = a4 <u t1\n 20305: u64 [sp + 0x20] = a4\n 20308: s1 = a4 if t0 == 0\n 20311: t0 = u64 [a1 + 0x18]\n 20314: a1 = u64 [a2 + 0x18]\n 20317: u64 [sp + 0x18] = a1\n 20320: a2 = t2 - ra\n 20323: a1 = a2 - s1\n 20326: u64 [sp + 0x30] = a1\n 20329: a1 = a2 <u s1\n 20332: a4 = t2 <u ra\n 20335: u64 [sp + 0x38] = t0\n 20338: a2 = u64 [sp + 0x18]\n 20341: a2 = a2 - t0\n 20344: a2 = a2 - a4\n 20347: a2 = a2 - a1\n 20350: a1 = a3 - a5\n 20353: a3 = u64 [sp + 0x20]\n 20356: a1 = a1 - a3\n 20359: a3 = u64 [sp + 0x28]\n 20362: a3 = a3 - t1\n 20365: a4 = a1 >u 0\n 20367: a3 = a3 <u 0x40\n 20370: a3 = a3 ^ 0x1\n 20373: a3 = a4 if a1 != 0\n 20376: s1 = a2 >s 0\n 20378: a1 = u64 [sp + 0x30]\n 20381: a4 = a1 >u 0\n 20383: a4 = s1 if a2 != 0\n 20386: a1 = a1 | a2\n 20389: a3 = a4 if a1 != 0\n 20392: jump @308 if a3 == 0\n      : @302 (gas: 12)\n 20396: s1 = a0\n 20398: a0 = t1 | ra\n 20401: u64 [sp + 0x30] = a5\n 20404: a1 = u64 [sp + 0x38]\n 20407: a1 = a1 | a5\n 20410: a0 = a0 | a1\n 20413: a0 = a0 >> 0x20\n 20416: u64 [sp + 0x28] = ra\n 20419: a1 = a1 | ra\n 20422: a1 = a1 << 0x20\n 20425: a0 = a0 | a1\n 20428: jump @307 if a0 != 0\n      : @303 (gas: 6)\n 20432: u64 [sp + 0x20] = t1\n 20435: i32 a1 = t1 + 0\n 20437: i32 a0 = sp + 0x40\n 20440: u64 [sp + 0x8] = a1\n 20443: ecalli 1 // 'call_data_load'\n 20445: fallthrough\n      : @304 (gas: 10)\n 20446: a3 = u64 [sp + 0x50]\n 20449: a4 = u64 [sp + 0x58]\n 20452: a0 = 0x100000000\n 20462: a1 = a3 ^ a0\n 20465: a1 = a1 | a4\n 20468: a2 = a3 >> 0x20\n 20471: a2 = a2 <u 0x1\n 20474: a2 = 0 if a4 != 0\n 20476: a2 = 0 if a1 == 0\n 20478: jump @308 if a2 == 0\n      : @305 (gas: 12)\n 20482: u64 [sp + 0x10] = a4\n 20485: u64 [sp + 0x18] = a3\n 20488: a1 = u64 [sp + 0x28]\n 20491: a2 = u64 [sp + 0x38]\n 20494: a1 = a1 | a2\n 20497: a0 = 0xffffffe0\n 20507: a2 = u64 [sp + 0x20]\n 20510: a0 = a2 <u a0\n 20513: a2 = u64 [sp + 0x30]\n 20516: a0 = 0 if a2 != 0\n 20518: a0 = 0 if a1 != 0\n 20520: jump @307 if a0 == 0\n      : @306 (gas: 30)\n 20523: a0 = u64 [sp + 0x48]\n 20526: u64 [sp + 0x30] = a0\n 20529: a0 = u64 [sp + 0x40]\n 20532: u64 [sp + 0x38] = a0\n 20535: a0 = u64 [sp + 0x8]\n 20538: i32 a1 = a0 + 0x20\n 20541: i32 a0 = sp + 0x40\n 20544: ecalli 1 // 'call_data_load'\n 20546: a0 = u64 [sp + 0x58]\n 20549: a1 = u64 [sp + 0x50]\n 20552: a2 = u64 [sp + 0x48]\n 20555: a3 = u64 [sp + 0x40]\n 20558: u64 [s1 + 0x38] = a0\n 20561: u64 [s1 + 0x30] = a1\n 20564: u64 [s1 + 0x28] = a2\n 20567: u64 [s1 + 0x20] = a3\n 20570: a0 = u64 [sp + 0x10]\n 20573: u64 [s1 + 0x18] = a0\n 20576: a0 = u64 [sp + 0x18]\n 20579: u64 [s1 + 0x10] = a0\n 20582: a0 = u64 [sp + 0x30]\n 20585: u64 [s1 + 0x8] = a0\n 20588: a0 = u64 [sp + 0x38]\n 20591: u64 [s1] = a0\n 20593: sp = s0 + 0xffffffffffffff80\n 20596: ra = u64 [sp + 0x78]\n 20599: s0 = u64 [sp + 0x70]\n 20602: s1 = u64 [sp + 0x68]\n 20605: sp = sp + 0x80\n 20609: ret\n      : @307 (gas: 1)\n 20611: trap\n      : @308 (gas: 3)\n 20612: a0 = 0\n 20614: a1 = 0\n 20616: ra = 260, jump @0\n      : @309 [@dyn 130] (gas: 6)\n 20622: i32 a1 = a0 + 0\n 20624: a0 = 0x1\n 20627: a2 = 0\n 20629: ra = 0x106\n 20633: ecalli 7 // 'seal_return'\n 20635: fallthrough\n      : @310 [@dyn 131] (gas: 13)\n 20636: a2 = u64 [a1 + 0x10]\n 20639: a3 = u64 [a1 + 0x18]\n 20642: a4 = u64 [a1 + 0x8]\n 20645: a1 = u64 [a1]\n 20647: a3 = a3 | a4\n 20650: a1 = a1 | a2\n 20653: a1 = a1 | a3\n 20656: a1 = a1 >u 0\n 20658: u64 [a0 + 24] = 0\n 20661: u64 [a0 + 16] = 0\n 20664: u64 [a0 + 8] = 0\n 20667: u64 [a0] = a1\n 20669: ret\n      : @311 (gas: 8)\n 20671: a0 = u64 [sp + 0x150]\n 20675: a1 = u64 [sp + 0x158]\n 20679: a2 = u64 [sp + 0x148]\n 20683: a3 = u64 [sp + 0x140]\n 20687: a1 = a1 | a2\n 20690: a0 = a0 | a3\n 20693: a0 = a0 | a1\n 20696: jump @317 if a0 != 0\n      : @312 (gas: 13)\n 20700: a0 = u32 [0x20044]\n 20705: u64 [sp + 216] = 0\n 20709: u64 [sp + 208] = 0\n 20713: u64 [sp + 200] = 0\n 20717: u64 [sp + 0xc0] = a0\n 20721: u64 [sp + 248] = 0\n 20725: u64 [sp + 240] = 0\n 20729: u64 [sp + 224] = 0x4\n 20734: a0 = sp + 0x100\n 20738: a1 = sp + 0xe0\n 20742: a2 = sp + 0xc0\n 20746: u64 [sp + 232] = 0\n 20750: ra = 264, jump @301\n      : @313 [@dyn 132] (gas: 58)\n 20756: a0 = u64 [sp + 0x100]\n 20760: u64 [sp + 0x38] = a0\n 20763: a0 = u64 [sp + 0x108]\n 20767: u64 [sp + 0x30] = a0\n 20770: a0 = u64 [sp + 0x110]\n 20774: u64 [sp + 0x28] = a0\n 20777: a0 = u64 [sp + 0x118]\n 20781: u64 [sp + 0x20] = a0\n 20784: a0 = u64 [sp + 0x120]\n 20788: u64 [sp + 0x18] = a0\n 20791: a0 = u64 [sp + 0x128]\n 20795: u64 [sp + 0x10] = a0\n 20798: a0 = u64 [sp + 0x130]\n 20802: u64 [sp + 0x8] = a0\n 20805: s1 = u64 [sp + 0x138]\n 20809: i32 a0 = sp + 0x160\n 20813: ecalli 3 // 'caller'\n 20815: a0 = u64 [sp + 0x168]\n 20819: a1 = i32 [sp + 0x170]\n 20823: a2 = u64 [sp + 0x160]\n 20827: a3 = reverse a0\n 20829: a0 = a3 << 0x20\n 20832: a1 = reverse a1\n 20834: a1 = a1 >> 0x20\n 20837: a0 = a0 | a1\n 20840: a3 = a3 >> 0x20\n 20843: a1 = reverse a2\n 20845: a2 = a1 << 0x20\n 20848: a2 = a2 | a3\n 20851: a1 = a1 >> 0x20\n 20854: u64 [sp + 88] = 0\n 20857: u64 [sp + 80] = 0\n 20860: u64 [sp + 72] = 0\n 20863: u64 [sp + 64] = 0x1\n 20867: u64 [sp + 0x78] = s1\n 20870: a3 = u64 [sp + 0x8]\n 20873: u64 [sp + 0x70] = a3\n 20876: a3 = u64 [sp + 0x10]\n 20879: u64 [sp + 0x68] = a3\n 20882: a3 = u64 [sp + 0x18]\n 20885: u64 [sp + 0x60] = a3\n 20888: a3 = u64 [sp + 0x20]\n 20891: u64 [sp + 0x98] = a3\n 20895: a3 = u64 [sp + 0x28]\n 20898: u64 [sp + 0x90] = a3\n 20902: a3 = u64 [sp + 0x30]\n 20905: u64 [sp + 0x88] = a3\n 20909: a3 = u64 [sp + 0x38]\n 20912: u64 [sp + 0x80] = a3\n 20916: u64 [sp + 0xb0] = a1\n 20920: u64 [sp + 0xa8] = a2\n 20924: u64 [sp + 0xa0] = a0\n 20928: a0 = sp + 0xa0\n 20932: a1 = sp + 0x80\n 20936: a2 = sp + 0x60\n 20939: a3 = sp + 0x40\n 20942: u64 [sp + 184] = 0\n 20946: ra = 266, jump @516\n      : @314 [@dyn 133] (gas: 3)\n 20952: a0 = 0x40\n 20955: a1 = 0x20\n 20958: ra = 268, jump @0\n      : @315 [@dyn 134] (gas: 100)\n 20964: a1 = u8 [a0 + 0x11]\n 20967: a2 = u8 [a0 + 0x10]\n 20970: a3 = u8 [a0 + 0x12]\n 20973: a4 = u8 [a0 + 0x13]\n 20976: a1 = a1 << 0x8\n 20979: a1 = a1 | a2\n 20982: a3 = a3 << 0x10\n 20985: a4 = a4 << 0x18\n 20988: a3 = a3 | a4\n 20991: a1 = a1 | a3\n 20994: a2 = u8 [a0 + 0x15]\n 20997: a3 = u8 [a0 + 0x14]\n 21000: a4 = u8 [a0 + 0x16]\n 21003: a5 = u8 [a0 + 0x17]\n 21006: a2 = a2 << 0x8\n 21009: a2 = a2 | a3\n 21012: a4 = a4 << 0x10\n 21015: a5 = a5 << 0x18\n 21018: a4 = a4 | a5\n 21021: a2 = a2 | a4\n 21024: a2 = a2 << 0x20\n 21027: t0 = a2 | a1\n 21030: a2 = u8 [a0 + 0x1]\n 21033: a3 = u8 [a0]\n 21035: a4 = u8 [a0 + 0x2]\n 21038: a5 = u8 [a0 + 0x3]\n 21041: a2 = a2 << 0x8\n 21044: a2 = a2 | a3\n 21047: a4 = a4 << 0x10\n 21050: a5 = a5 << 0x18\n 21053: a4 = a4 | a5\n 21056: a2 = a2 | a4\n 21059: a3 = u8 [a0 + 0x5]\n 21062: a4 = u8 [a0 + 0x4]\n 21065: a5 = u8 [a0 + 0x6]\n 21068: s1 = u8 [a0 + 0x7]\n 21071: a3 = a3 << 0x8\n 21074: a3 = a3 | a4\n 21077: a5 = a5 << 0x10\n 21080: s1 = s1 << 0x18\n 21083: a5 = a5 | s1\n 21086: a3 = a3 | a5\n 21089: a3 = a3 << 0x20\n 21092: a2 = a2 | a3\n 21095: a3 = u8 [a0 + 0x19]\n 21098: a4 = u8 [a0 + 0x18]\n 21101: a5 = u8 [a0 + 0x1a]\n 21104: s1 = u8 [a0 + 0x1b]\n 21107: a3 = a3 << 0x8\n 21110: a3 = a3 | a4\n 21113: a5 = a5 << 0x10\n 21116: s1 = s1 << 0x18\n 21119: a5 = a5 | s1\n 21122: a3 = a3 | a5\n 21125: a4 = u8 [a0 + 0x1d]\n 21128: a5 = u8 [a0 + 0x1c]\n 21131: s1 = u8 [a0 + 0x1e]\n 21134: a1 = u8 [a0 + 0x1f]\n 21137: a4 = a4 << 0x8\n 21140: a4 = a4 | a5\n 21143: s1 = s1 << 0x10\n 21146: a1 = a1 << 0x18\n 21149: a1 = a1 | s1\n 21152: a1 = a1 | a4\n 21155: a1 = a1 << 0x20\n 21158: a3 = a3 | a1\n 21161: a1 = u8 [a0 + 0x9]\n 21164: a4 = u8 [a0 + 0x8]\n 21167: a5 = u8 [a0 + 0xa]\n 21170: s1 = u8 [a0 + 0xb]\n 21173: a1 = a1 << 0x8\n 21176: a1 = a1 | a4\n 21179: a5 = a5 << 0x10\n 21182: s1 = s1 << 0x18\n 21185: a5 = a5 | s1\n 21188: a1 = a1 | a5\n 21191: a4 = u8 [a0 + 0xd]\n 21194: a5 = u8 [a0 + 0xc]\n 21197: s1 = u8 [a0 + 0xe]\n 21200: a0 = u8 [a0 + 0xf]\n 21203: a4 = a4 << 0x8\n 21206: a4 = a4 | a5\n 21209: s1 = s1 << 0x10\n 21212: a0 = a0 << 0x18\n 21215: a0 = a0 | s1\n 21218: a0 = a0 | a4\n 21221: a0 = a0 << 0x20\n 21224: a0 = a0 | a1\n 21227: a1 = reverse a0\n 21229: a0 = reverse a3\n 21231: a2 = reverse a2\n 21233: a3 = reverse t0\n 21235: a2 = a2 | a3\n 21238: a3 = a0 | a1\n 21241: a3 = a3 | a2\n 21244: a3 = a3 >> 0x20\n 21247: a1 = a1 | a2\n 21250: a1 = a1 << 0x20\n 21253: a1 = a1 | a3\n 21256: jump @319 if a1 == 0\n      : @316 (gas: 1)\n 21259: trap\n      : @317 (gas: 3)\n 21260: a0 = 0\n 21262: a1 = 0\n 21264: ra = 270, jump @0\n      : @318 [@dyn 135] (gas: 5)\n 21270: i32 a1 = a0 + 0\n 21272: a0 = 0x1\n 21275: a2 = 0\n 21277: ecalli 7 // 'seal_return'\n 21279: fallthrough\n      : @319 (gas: 4)\n 21280: i32 s1 = a0 + 0\n 21282: a1 = 0x20\n 21285: a0 = s1\n 21287: ra = 272, jump @0\n      : @320 [@dyn 136] (gas: 35)\n 21293: u8 [a0 + 31] = 0x1\n 21297: u8 [a0 + 30] = 0\n 21300: u8 [a0 + 29] = 0\n 21303: u8 [a0 + 28] = 0\n 21306: u8 [a0 + 27] = 0\n 21309: u8 [a0 + 26] = 0\n 21312: u8 [a0 + 25] = 0\n 21315: u8 [a0 + 24] = 0\n 21318: u8 [a0 + 23] = 0\n 21321: u8 [a0 + 22] = 0\n 21324: u8 [a0 + 21] = 0\n 21327: u8 [a0 + 20] = 0\n 21330: u8 [a0 + 19] = 0\n 21333: u8 [a0 + 18] = 0\n 21336: u8 [a0 + 17] = 0\n 21339: u8 [a0 + 16] = 0\n 21342: u8 [a0 + 15] = 0\n 21345: u8 [a0 + 14] = 0\n 21348: u8 [a0 + 13] = 0\n 21351: u8 [a0 + 12] = 0\n 21354: u8 [a0 + 11] = 0\n 21357: u8 [a0 + 10] = 0\n 21360: u8 [a0 + 9] = 0\n 21363: u8 [a0 + 8] = 0\n 21366: u8 [a0 + 7] = 0\n 21369: u8 [a0 + 6] = 0\n 21372: u8 [a0 + 5] = 0\n 21375: u8 [a0 + 4] = 0\n 21378: u8 [a0 + 3] = 0\n 21381: u8 [a0 + 2] = 0\n 21384: u8 [a0 + 1] = 0\n 21387: u8 [a0 + 0] = 0\n 21389: a1 = 0x20\n 21392: a0 = s1\n 21394: ra = 274, jump @0\n      : @321 [@dyn 137] (gas: 6)\n 21400: i32 a1 = a0 + 0\n 21402: a2 = 0x20\n 21405: a0 = 0\n 21407: ra = 0x114\n 21411: ecalli 7 // 'seal_return'\n 21413: fallthrough\n      : @322 [@dyn 138] (gas: 13)\n 21414: sp = sp + 0xffffffffffffff60\n 21418: u64 [sp + 0x98] = ra\n 21422: u64 [sp + 0x90] = s0\n 21426: u64 [sp + 0x88] = s1\n 21430: s0 = sp + 0xa0\n 21434: sp = sp & 0xffffffffffffffe0\n 21437: u64 [sp + 56] = 0\n 21440: u64 [sp + 48] = 0\n 21443: u64 [sp + 40] = 0\n 21446: u64 [sp + 32] = 0\n 21449: i32 a0 = sp + 0x20\n 21452: ecalli 10 // 'value_transferred'\n 21454: fallthrough\n      : @323 (gas: 8)\n 21455: a0 = u64 [sp + 0x30]\n 21458: a1 = u64 [sp + 0x38]\n 21461: a2 = u64 [sp + 0x28]\n 21464: a3 = u64 [sp + 0x20]\n 21467: a1 = a1 | a2\n 21470: a0 = a0 | a3\n 21473: a0 = a0 | a1\n 21476: jump @328 if a0 != 0\n      : @324 (gas: 2)\n 21480: a0 = i32 [0x20044]\n 21485: jump @328 if a0 <=u 3\n      : @325 (gas: 26)\n 21490: u64 [sp + 88] = 0\n 21493: u64 [sp + 80] = 0\n 21496: u64 [sp + 72] = 0\n 21499: u64 [sp + 64] = 0x2\n 21503: u64 [sp + 120] = 0\n 21506: u64 [sp + 112] = 0\n 21509: u64 [sp + 104] = 0\n 21512: u64 [sp + 96] = 0\n 21515: u32 [sp + 128] = 0x20\n 21520: i32 a1 = sp + 0x40\n 21523: i32 a3 = sp + 0x60\n 21526: i32 a4 = sp + 0x80\n 21530: a2 = 0xffffffffffffffff\n 21533: a0 = 0\n 21535: ecalli 5 // 'get_storage'\n 21537: a0 = u64 [sp + 0x78]\n 21540: u64 [sp] = a0\n 21542: a0 = u64 [sp + 0x70]\n 21545: u64 [sp + 0x8] = a0\n 21548: a0 = u64 [sp + 0x68]\n 21551: u64 [sp + 0x10] = a0\n 21554: a0 = u64 [sp + 0x60]\n 21557: u64 [sp + 0x18] = a0\n 21560: a0 = 0x40\n 21563: a1 = 0x20\n 21566: ra = 278, jump @0\n      : @326 [@dyn 139] (gas: 100)\n 21572: a1 = u8 [a0 + 0x11]\n 21575: a2 = u8 [a0 + 0x10]\n 21578: a3 = u8 [a0 + 0x12]\n 21581: a4 = u8 [a0 + 0x13]\n 21584: a1 = a1 << 0x8\n 21587: a1 = a1 | a2\n 21590: a3 = a3 << 0x10\n 21593: a4 = a4 << 0x18\n 21596: a3 = a3 | a4\n 21599: a1 = a1 | a3\n 21602: a2 = u8 [a0 + 0x15]\n 21605: a3 = u8 [a0 + 0x14]\n 21608: a4 = u8 [a0 + 0x16]\n 21611: a5 = u8 [a0 + 0x17]\n 21614: a2 = a2 << 0x8\n 21617: a2 = a2 | a3\n 21620: a4 = a4 << 0x10\n 21623: a5 = a5 << 0x18\n 21626: a4 = a4 | a5\n 21629: a2 = a2 | a4\n 21632: a2 = a2 << 0x20\n 21635: t0 = a2 | a1\n 21638: a2 = u8 [a0 + 0x1]\n 21641: a3 = u8 [a0]\n 21643: a4 = u8 [a0 + 0x2]\n 21646: a5 = u8 [a0 + 0x3]\n 21649: a2 = a2 << 0x8\n 21652: a2 = a2 | a3\n 21655: a4 = a4 << 0x10\n 21658: a5 = a5 << 0x18\n 21661: a4 = a4 | a5\n 21664: a2 = a2 | a4\n 21667: a3 = u8 [a0 + 0x5]\n 21670: a4 = u8 [a0 + 0x4]\n 21673: a5 = u8 [a0 + 0x6]\n 21676: s1 = u8 [a0 + 0x7]\n 21679: a3 = a3 << 0x8\n 21682: a3 = a3 | a4\n 21685: a5 = a5 << 0x10\n 21688: s1 = s1 << 0x18\n 21691: a5 = a5 | s1\n 21694: a3 = a3 | a5\n 21697: a3 = a3 << 0x20\n 21700: a2 = a2 | a3\n 21703: a3 = u8 [a0 + 0x19]\n 21706: a4 = u8 [a0 + 0x18]\n 21709: a5 = u8 [a0 + 0x1a]\n 21712: s1 = u8 [a0 + 0x1b]\n 21715: a3 = a3 << 0x8\n 21718: a3 = a3 | a4\n 21721: a5 = a5 << 0x10\n 21724: s1 = s1 << 0x18\n 21727: a5 = a5 | s1\n 21730: a3 = a3 | a5\n 21733: a4 = u8 [a0 + 0x1d]\n 21736: a5 = u8 [a0 + 0x1c]\n 21739: s1 = u8 [a0 + 0x1e]\n 21742: a1 = u8 [a0 + 0x1f]\n 21745: a4 = a4 << 0x8\n 21748: a4 = a4 | a5\n 21751: s1 = s1 << 0x10\n 21754: a1 = a1 << 0x18\n 21757: a1 = a1 | s1\n 21760: a1 = a1 | a4\n 21763: a1 = a1 << 0x20\n 21766: a3 = a3 | a1\n 21769: a1 = u8 [a0 + 0x9]\n 21772: a4 = u8 [a0 + 0x8]\n 21775: a5 = u8 [a0 + 0xa]\n 21778: s1 = u8 [a0 + 0xb]\n 21781: a1 = a1 << 0x8\n 21784: a1 = a1 | a4\n 21787: a5 = a5 << 0x10\n 21790: s1 = s1 << 0x18\n 21793: a5 = a5 | s1\n 21796: a1 = a1 | a5\n 21799: a4 = u8 [a0 + 0xd]\n 21802: a5 = u8 [a0 + 0xc]\n 21805: s1 = u8 [a0 + 0xe]\n 21808: a0 = u8 [a0 + 0xf]\n 21811: a4 = a4 << 0x8\n 21814: a4 = a4 | a5\n 21817: s1 = s1 << 0x10\n 21820: a0 = a0 << 0x18\n 21823: a0 = a0 | s1\n 21826: a0 = a0 | a4\n 21829: a0 = a0 << 0x20\n 21832: a0 = a0 | a1\n 21835: a1 = reverse a0\n 21837: a0 = reverse a3\n 21839: a2 = reverse a2\n 21841: a3 = reverse t0\n 21843: a2 = a2 | a3\n 21846: a3 = a0 | a1\n 21849: a3 = a3 | a2\n 21852: a3 = a3 >> 0x20\n 21855: a1 = a1 | a2\n 21858: a1 = a1 << 0x20\n 21861: a1 = a1 | a3\n 21864: jump @330 if a1 == 0\n      : @327 (gas: 1)\n 21867: trap\n      : @328 (gas: 3)\n 21868: a0 = 0\n 21870: a1 = 0\n 21872: ra = 280, jump @0\n      : @329 [@dyn 140] (gas: 5)\n 21878: i32 a1 = a0 + 0\n 21880: a0 = 0x1\n 21883: a2 = 0\n 21885: ecalli 7 // 'seal_return'\n 21887: fallthrough\n      : @330 (gas: 4)\n 21888: i32 s1 = a0 + 0\n 21890: a1 = 0x20\n 21893: a0 = s1\n 21895: ra = 282, jump @0\n      : @331 [@dyn 141] (gas: 71)\n 21901: a1 = u64 [sp]\n 21903: a1 = reverse a1\n 21905: a2 = u64 [sp + 0x8]\n 21908: a2 = reverse a2\n 21910: a3 = u64 [sp + 0x10]\n 21913: a3 = reverse a3\n 21915: a4 = u64 [sp + 0x18]\n 21918: a4 = reverse a4\n 21920: a5 = a4 >> 0x38\n 21923: u8 [a0 + 0x1f] = a5\n 21926: a5 = a4 >> 0x30\n 21929: u8 [a0 + 0x1e] = a5\n 21932: a5 = a4 >> 0x28\n 21935: u8 [a0 + 0x1d] = a5\n 21938: a5 = a4 >> 0x20\n 21941: u8 [a0 + 0x1c] = a5\n 21944: a5 = a4 >> 0x18\n 21947: u8 [a0 + 0x1b] = a5\n 21950: a5 = a4 >> 0x10\n 21953: u8 [a0 + 0x1a] = a5\n 21956: a5 = a4 >> 0x8\n 21959: u8 [a0 + 0x19] = a5\n 21962: u8 [a0 + 0x18] = a4\n 21965: u8 [a0 + 0x10] = a3\n 21968: a4 = a3 >> 0x38\n 21971: u8 [a0 + 0x17] = a4\n 21974: a4 = a3 >> 0x30\n 21977: u8 [a0 + 0x16] = a4\n 21980: a4 = a3 >> 0x28\n 21983: u8 [a0 + 0x15] = a4\n 21986: a4 = a3 >> 0x20\n 21989: u8 [a0 + 0x14] = a4\n 21992: a4 = a3 >> 0x18\n 21995: u8 [a0 + 0x13] = a4\n 21998: a4 = a3 >> 0x10\n 22001: u8 [a0 + 0x12] = a4\n 22004: a3 = a3 >> 0x8\n 22007: u8 [a0 + 0x11] = a3\n 22010: u8 [a0 + 0x8] = a2\n 22013: a3 = a2 >> 0x38\n 22016: u8 [a0 + 0xf] = a3\n 22019: a3 = a2 >> 0x30\n 22022: u8 [a0 + 0xe] = a3\n 22025: a3 = a2 >> 0x28\n 22028: u8 [a0 + 0xd] = a3\n 22031: a3 = a2 >> 0x20\n 22034: u8 [a0 + 0xc] = a3\n 22037: a3 = a2 >> 0x18\n 22040: u8 [a0 + 0xb] = a3\n 22043: a3 = a2 >> 0x10\n 22046: u8 [a0 + 0xa] = a3\n 22049: a2 = a2 >> 0x8\n 22052: u8 [a0 + 0x9] = a2\n 22055: u8 [a0] = a1\n 22057: a2 = a1 >> 0x38\n 22060: u8 [a0 + 0x7] = a2\n 22063: a2 = a1 >> 0x30\n 22066: u8 [a0 + 0x6] = a2\n 22069: a2 = a1 >> 0x28\n 22072: u8 [a0 + 0x5] = a2\n 22075: a2 = a1 >> 0x20\n 22078: u8 [a0 + 0x4] = a2\n 22081: a2 = a1 >> 0x18\n 22084: u8 [a0 + 0x3] = a2\n 22087: a2 = a1 >> 0x10\n 22090: u8 [a0 + 0x2] = a2\n 22093: a1 = a1 >> 0x8\n 22096: u8 [a0 + 0x1] = a1\n 22099: a1 = 0x20\n 22102: a0 = s1\n 22104: ra = 284, jump @0\n      : @332 [@dyn 142] (gas: 6)\n 22110: i32 a1 = a0 + 0\n 22112: a2 = 0x20\n 22115: a0 = 0\n 22117: ra = 0x11e\n 22121: ecalli 7 // 'seal_return'\n 22123: fallthrough\n      : @333 [@dyn 143] (gas: 45)\n 22124: sp = sp + 0xffffffffffffff60\n 22128: u64 [sp + 0x98] = ra\n 22132: u64 [sp + 0x90] = s0\n 22136: u64 [sp + 0x88] = s1\n 22140: s0 = sp + 0xa0\n 22144: sp = sp & 0xffffffffffffffe0\n 22147: ra = u64 [a1 + 0x10]\n 22150: t2 = u64 [a1 + 0x8]\n 22153: t0 = u64 [a2 + 0x8]\n 22156: a5 = u64 [a1]\n 22158: u64 [sp + 0x58] = a5\n 22161: a3 = u64 [a2]\n 22163: u64 [sp + 0x40] = a3\n 22166: a4 = u64 [a2 + 0x10]\n 22169: t1 = t0 ^ t2\n 22172: s1 = t0 <u t2\n 22175: a3 = a3 <u a5\n 22178: s1 = a3 if t1 == 0\n 22181: t1 = u64 [a1 + 0x18]\n 22184: a5 = u64 [a2 + 0x18]\n 22187: a2 = a4 - ra\n 22190: a1 = a2 - s1\n 22193: u64 [sp + 0x48] = a1\n 22196: a1 = a2 <u s1\n 22199: a4 = a4 <u ra\n 22202: u64 [sp + 0x50] = t1\n 22205: a2 = a5 - t1\n 22208: a5 = u64 [sp + 0x58]\n 22211: a2 = a2 - a4\n 22214: a2 = a2 - a1\n 22217: a1 = t0 - t2\n 22220: a1 = a1 - a3\n 22223: a3 = u64 [sp + 0x40]\n 22226: a3 = a3 - a5\n 22229: a4 = a1 >u 0\n 22231: a3 = a3 <u 0x60\n 22234: a3 = a3 ^ 0x1\n 22237: a3 = a4 if a1 != 0\n 22240: s1 = a2 >s 0\n 22242: a1 = u64 [sp + 0x48]\n 22245: a4 = a1 >u 0\n 22247: a4 = s1 if a2 != 0\n 22250: a1 = a1 | a2\n 22253: a3 = a4 if a1 != 0\n 22256: jump @343 if a3 == 0\n      : @334 (gas: 12)\n 22260: s1 = a0\n 22262: a0 = a5 | ra\n 22265: u64 [sp + 0x48] = t2\n 22268: a1 = u64 [sp + 0x50]\n 22271: a1 = t2 | a1\n 22274: a0 = a0 | a1\n 22277: a0 = a0 >> 0x20\n 22280: u64 [sp + 0x38] = ra\n 22283: a1 = a1 | ra\n 22286: a1 = a1 << 0x20\n 22289: a0 = a0 | a1\n 22292: jump @342 if a0 != 0\n      : @335 (gas: 5)\n 22296: i32 a1 = a5 + 0\n 22298: i32 a0 = sp + 0x60\n 22301: u64 [sp + 0x40] = a1\n 22304: ecalli 1 // 'call_data_load'\n 22306: fallthrough\n      : @336 (gas: 10)\n 22307: a3 = u64 [sp + 0x70]\n 22310: a4 = u64 [sp + 0x78]\n 22313: a0 = 0x100000000\n 22323: a1 = a3 ^ a0\n 22326: a1 = a1 | a4\n 22329: a2 = a3 >> 0x20\n 22332: a2 = a2 <u 0x1\n 22335: a2 = 0 if a4 != 0\n 22337: a2 = 0 if a1 == 0\n 22339: jump @343 if a2 == 0\n      : @337 (gas: 13)\n 22343: u64 [sp + 0x28] = a4\n 22346: u64 [sp + 0x30] = a3\n 22349: a1 = u64 [sp + 0x38]\n 22352: a2 = u64 [sp + 0x50]\n 22355: a2 = a2 | a1\n 22358: a0 = 0xffffffe0\n 22368: a1 = u64 [sp + 0x58]\n 22371: a0 = a1 <u a0\n 22374: a1 = u64 [sp + 0x48]\n 22377: a0 = 0 if a1 != 0\n 22379: u64 [sp + 0x50] = a2\n 22382: a0 = 0 if a2 != 0\n 22384: jump @342 if a0 == 0\n      : @338 (gas: 9)\n 22388: a0 = u64 [sp + 0x68]\n 22391: u64 [sp + 0x20] = a0\n 22394: a0 = u64 [sp + 0x60]\n 22397: u64 [sp + 0x38] = a0\n 22400: a0 = u64 [sp + 0x40]\n 22403: i32 a1 = a0 + 0x20\n 22406: i32 a0 = sp + 0x60\n 22409: ecalli 1 // 'call_data_load'\n 22411: fallthrough\n      : @339 (gas: 10)\n 22412: a3 = u64 [sp + 0x70]\n 22415: a4 = u64 [sp + 0x78]\n 22418: a0 = 0x100000000\n 22428: a1 = a3 ^ a0\n 22431: a1 = a1 | a4\n 22434: a2 = a3 >> 0x20\n 22437: a2 = a2 <u 0x1\n 22440: a2 = 0 if a4 != 0\n 22442: a2 = 0 if a1 == 0\n 22444: jump @343 if a2 == 0\n      : @340 (gas: 10)\n 22448: u64 [sp + 0x10] = a4\n 22451: u64 [sp + 0x18] = a3\n 22454: a0 = 0xffffffc0\n 22464: a1 = u64 [sp + 0x58]\n 22467: a0 = a1 <u a0\n 22470: a1 = u64 [sp + 0x48]\n 22473: a0 = 0 if a1 != 0\n 22475: a1 = u64 [sp + 0x50]\n 22478: a0 = 0 if a1 != 0\n 22480: jump @342 if a0 == 0\n      : @341 (gas: 38)\n 22483: a0 = u64 [sp + 0x68]\n 22486: u64 [sp + 0x50] = a0\n 22489: a0 = u64 [sp + 0x60]\n 22492: u64 [sp + 0x58] = a0\n 22495: a0 = u64 [sp + 0x40]\n 22498: i32 a1 = a0 + 0x40\n 22501: i32 a0 = sp + 0x60\n 22504: ecalli 1 // 'call_data_load'\n 22506: a0 = u64 [sp + 0x78]\n 22509: a1 = u64 [sp + 0x70]\n 22512: a2 = u64 [sp + 0x68]\n 22515: a3 = u64 [sp + 0x60]\n 22518: u64 [s1 + 0x58] = a0\n 22521: u64 [s1 + 0x50] = a1\n 22524: u64 [s1 + 0x48] = a2\n 22527: u64 [s1 + 0x40] = a3\n 22530: a0 = u64 [sp + 0x10]\n 22533: u64 [s1 + 0x38] = a0\n 22536: a0 = u64 [sp + 0x18]\n 22539: u64 [s1 + 0x30] = a0\n 22542: a0 = u64 [sp + 0x50]\n 22545: u64 [s1 + 0x28] = a0\n 22548: a0 = u64 [sp + 0x58]\n 22551: u64 [s1 + 0x20] = a0\n 22554: a0 = u64 [sp + 0x28]\n 22557: u64 [s1 + 0x18] = a0\n 22560: a0 = u64 [sp + 0x30]\n 22563: u64 [s1 + 0x10] = a0\n 22566: a0 = u64 [sp + 0x20]\n 22569: u64 [s1 + 0x8] = a0\n 22572: a0 = u64 [sp + 0x38]\n 22575: u64 [s1] = a0\n 22577: sp = s0 + 0xffffffffffffff60\n 22581: ra = u64 [sp + 0x98]\n 22585: s0 = u64 [sp + 0x90]\n 22589: s1 = u64 [sp + 0x88]\n 22593: sp = sp + 0xa0\n 22597: ret\n      : @342 (gas: 1)\n 22599: trap\n      : @343 (gas: 3)\n 22600: a0 = 0\n 22602: a1 = 0\n 22604: ra = 288, jump @0\n      : @344 [@dyn 144] (gas: 6)\n 22610: i32 a1 = a0 + 0\n 22612: a0 = 0x1\n 22615: a2 = 0\n 22617: ra = 0x122\n 22621: ecalli 7 // 'seal_return'\n 22623: fallthrough\n      : @345 [@dyn 145] (gas: 13)\n 22624: sp = sp + 0xfffffffffffffde0\n 22628: u64 [sp + 0x218] = ra\n 22632: u64 [sp + 0x210] = s0\n 22636: u64 [sp + 0x208] = s1\n 22640: s0 = sp + 0x220\n 22644: sp = sp & 0xffffffffffffffe0\n 22647: u64 [sp + 472] = 0\n 22651: u64 [sp + 464] = 0\n 22655: u64 [sp + 456] = 0\n 22659: u64 [sp + 448] = 0\n 22663: i32 a0 = sp + 0x1c0\n 22667: ecalli 10 // 'value_transferred'\n 22669: fallthrough\n      : @346 (gas: 8)\n 22670: a0 = u64 [sp + 0x1d0]\n 22674: a1 = u64 [sp + 0x1d8]\n 22678: a2 = u64 [sp + 0x1c8]\n 22682: a3 = u64 [sp + 0x1c0]\n 22686: a1 = a1 | a2\n 22689: a0 = a0 | a3\n 22692: a0 = a0 | a1\n 22695: jump @353 if a0 != 0\n      : @347 (gas: 13)\n 22699: a0 = u32 [0x20044]\n 22704: u64 [sp + 312] = 0\n 22708: u64 [sp + 304] = 0\n 22712: u64 [sp + 296] = 0\n 22716: u64 [sp + 0x120] = a0\n 22720: u64 [sp + 344] = 0\n 22724: u64 [sp + 336] = 0\n 22728: u64 [sp + 320] = 0x4\n 22733: a0 = sp + 0x160\n 22737: a1 = sp + 0x140\n 22741: a2 = sp + 0x120\n 22745: u64 [sp + 328] = 0\n 22749: ra = 292, jump @333\n      : @348 [@dyn 146] (gas: 105)\n 22755: a0 = u64 [sp + 0x180]\n 22759: u64 [sp + 0x28] = a0\n 22762: a0 = u64 [sp + 0x188]\n 22766: u64 [sp + 0x20] = a0\n 22769: a0 = u64 [sp + 0x190]\n 22773: u64 [sp + 0x18] = a0\n 22776: a0 = u64 [sp + 0x198]\n 22780: u64 [sp + 0x10] = a0\n 22783: a0 = u64 [sp + 0x160]\n 22787: u64 [sp + 0x58] = a0\n 22790: a0 = u64 [sp + 0x168]\n 22794: u64 [sp + 0x38] = a0\n 22797: a0 = u64 [sp + 0x170]\n 22801: u64 [sp + 0x48] = a0\n 22804: a0 = u64 [sp + 0x178]\n 22808: u64 [sp + 0x50] = a0\n 22811: a0 = u64 [sp + 0x1a0]\n 22815: u64 [sp + 0x40] = a0\n 22818: a0 = u64 [sp + 0x1a8]\n 22822: u64 [sp + 0x8] = a0\n 22825: s1 = u64 [sp + 0x1b0]\n 22829: u64 [sp] = s1\n 22831: a0 = u64 [sp + 0x1b8]\n 22835: u64 [sp + 0x30] = a0\n 22838: i32 a0 = sp + 0x1e0\n 22842: ecalli 3 // 'caller'\n 22844: a0 = u64 [sp + 0x1e8]\n 22848: a1 = i32 [sp + 0x1f0]\n 22852: a2 = u64 [sp + 0x1e0]\n 22856: a0 = reverse a0\n 22858: a3 = a0 << 0x20\n 22861: a1 = reverse a1\n 22863: a1 = a1 >> 0x20\n 22866: a3 = a3 | a1\n 22869: a0 = a0 >> 0x20\n 22872: a1 = reverse a2\n 22874: a2 = a1 << 0x20\n 22877: a0 = a0 | a2\n 22880: a1 = a1 >> 0x20\n 22883: a2 = u64 [sp + 0x30]\n 22886: u64 [sp + 0xd8] = a2\n 22890: u64 [sp + 0xd0] = s1\n 22894: s1 = u64 [sp + 0x8]\n 22897: u64 [sp + 0xc8] = s1\n 22901: a2 = u64 [sp + 0x40]\n 22904: u64 [sp + 0xc0] = a2\n 22908: u64 [sp + 248] = 0\n 22912: u64 [sp + 0xf0] = a1\n 22916: a1 = u64 [sp + 0x50]\n 22919: u64 [sp + 0x118] = a1\n 22923: a1 = u64 [sp + 0x48]\n 22926: u64 [sp + 0x110] = a1\n 22930: a1 = u64 [sp + 0x38]\n 22933: u64 [sp + 0x108] = a1\n 22937: a1 = u64 [sp + 0x58]\n 22940: u64 [sp + 0x100] = a1\n 22944: u64 [sp + 0xe8] = a0\n 22948: a0 = sp + 0x100\n 22952: a1 = sp + 0xe0\n 22956: a2 = sp + 0xc0\n 22960: u64 [sp + 0xe0] = a3\n 22964: ra = 0x126\n 22968: sp = sp + 0xfffffffffffffde0\n 22972: u64 [sp + 0x218] = ra\n 22976: u64 [sp + 0x210] = s0\n 22980: u64 [sp + 0x208] = s1\n 22984: s0 = sp + 0x220\n 22988: sp = sp & 0xfffffffffffffff0\n 22991: a3 = u64 [a2 + 0x18]\n 22994: u64 [sp + 0x40] = a3\n 22997: a3 = u64 [a2 + 0x10]\n 23000: u64 [sp + 0x68] = a3\n 23003: a3 = u64 [a2 + 0x8]\n 23006: u64 [sp + 0x70] = a3\n 23009: a2 = u64 [a2]\n 23011: u64 [sp + 0x78] = a2\n 23014: t1 = u64 [a0]\n 23016: t0 = u64 [a0 + 0x8]\n 23019: s1 = u64 [a0 + 0x10]\n 23022: a5 = u64 [a0 + 0x18]\n 23025: a4 = u64 [a1]\n 23027: a2 = u64 [a1 + 0x8]\n 23030: a3 = u64 [a1 + 0x10]\n 23033: a0 = u64 [a1 + 0x18]\n 23036: u64 [sp + 0x60] = a0\n 23039: u64 [sp + 0x1b8] = a0\n 23043: u64 [sp + 0x50] = a3\n 23046: u64 [sp + 0x1b0] = a3\n 23050: u64 [sp + 0x58] = a2\n 23053: u64 [sp + 0x1a8] = a2\n 23057: u64 [sp + 0x48] = a4\n 23060: u64 [sp + 0x1a0] = a4\n 23064: u64 [sp + 0x38] = a5\n 23067: u64 [sp + 0x1d8] = a5\n 23071: u64 [sp + 0x30] = s1\n 23074: u64 [sp + 0x1d0] = s1\n 23078: u64 [sp + 0x28] = t0\n 23081: u64 [sp + 0x1c8] = t0\n 23085: a0 = sp + 0x1e0\n 23089: a1 = sp + 0x1c0\n 23093: a2 = sp + 0x1a0\n 23097: u64 [sp + 0x20] = t1\n 23100: u64 [sp + 0x1c0] = t1\n 23104: ra = 0x1b2\n 23108: jump @486\n      : @349 [@dyn 147] (gas: 27)\n 23111: a0 = u64 [sp + 0x30]\n 23114: u64 [sp + 0x78] = a0\n 23117: a0 = u64 [sp]\n 23119: u64 [sp + 0x70] = a0\n 23122: u64 [sp + 0x68] = s1\n 23125: a0 = u64 [sp + 0x40]\n 23128: u64 [sp + 0x60] = a0\n 23131: a0 = u64 [sp + 0x10]\n 23134: u64 [sp + 0x98] = a0\n 23138: a0 = u64 [sp + 0x18]\n 23141: u64 [sp + 0x90] = a0\n 23145: a0 = u64 [sp + 0x20]\n 23148: u64 [sp + 0x88] = a0\n 23152: a0 = u64 [sp + 0x28]\n 23155: u64 [sp + 0x80] = a0\n 23159: a0 = u64 [sp + 0x50]\n 23162: u64 [sp + 0xb8] = a0\n 23166: a0 = u64 [sp + 0x48]\n 23169: u64 [sp + 0xb0] = a0\n 23173: a0 = u64 [sp + 0x38]\n 23176: u64 [sp + 0xa8] = a0\n 23180: a0 = sp + 0xa0\n 23184: a1 = sp + 0x80\n 23188: a2 = sp + 0x60\n 23191: a3 = u64 [sp + 0x58]\n 23194: u64 [sp + 0xa0] = a3\n 23198: ra = 296, jump @504\n      : @350 [@dyn 148] (gas: 3)\n 23204: a0 = 0x40\n 23207: a1 = 0x20\n 23210: ra = 298, jump @0\n      : @351 [@dyn 149] (gas: 100)\n 23216: a1 = u8 [a0 + 0x11]\n 23219: a2 = u8 [a0 + 0x10]\n 23222: a3 = u8 [a0 + 0x12]\n 23225: a4 = u8 [a0 + 0x13]\n 23228: a1 = a1 << 0x8\n 23231: a1 = a1 | a2\n 23234: a3 = a3 << 0x10\n 23237: a4 = a4 << 0x18\n 23240: a3 = a3 | a4\n 23243: a1 = a1 | a3\n 23246: a2 = u8 [a0 + 0x15]\n 23249: a3 = u8 [a0 + 0x14]\n 23252: a4 = u8 [a0 + 0x16]\n 23255: a5 = u8 [a0 + 0x17]\n 23258: a2 = a2 << 0x8\n 23261: a2 = a2 | a3\n 23264: a4 = a4 << 0x10\n 23267: a5 = a5 << 0x18\n 23270: a4 = a4 | a5\n 23273: a2 = a2 | a4\n 23276: a2 = a2 << 0x20\n 23279: t0 = a2 | a1\n 23282: a2 = u8 [a0 + 0x1]\n 23285: a3 = u8 [a0]\n 23287: a4 = u8 [a0 + 0x2]\n 23290: a5 = u8 [a0 + 0x3]\n 23293: a2 = a2 << 0x8\n 23296: a2 = a2 | a3\n 23299: a4 = a4 << 0x10\n 23302: a5 = a5 << 0x18\n 23305: a4 = a4 | a5\n 23308: a2 = a2 | a4\n 23311: a3 = u8 [a0 + 0x5]\n 23314: a4 = u8 [a0 + 0x4]\n 23317: a5 = u8 [a0 + 0x6]\n 23320: s1 = u8 [a0 + 0x7]\n 23323: a3 = a3 << 0x8\n 23326: a3 = a3 | a4\n 23329: a5 = a5 << 0x10\n 23332: s1 = s1 << 0x18\n 23335: a5 = a5 | s1\n 23338: a3 = a3 | a5\n 23341: a3 = a3 << 0x20\n 23344: a2 = a2 | a3\n 23347: a3 = u8 [a0 + 0x19]\n 23350: a4 = u8 [a0 + 0x18]\n 23353: a5 = u8 [a0 + 0x1a]\n 23356: s1 = u8 [a0 + 0x1b]\n 23359: a3 = a3 << 0x8\n 23362: a3 = a3 | a4\n 23365: a5 = a5 << 0x10\n 23368: s1 = s1 << 0x18\n 23371: a5 = a5 | s1\n 23374: a3 = a3 | a5\n 23377: a4 = u8 [a0 + 0x1d]\n 23380: a5 = u8 [a0 + 0x1c]\n 23383: s1 = u8 [a0 + 0x1e]\n 23386: a1 = u8 [a0 + 0x1f]\n 23389: a4 = a4 << 0x8\n 23392: a4 = a4 | a5\n 23395: s1 = s1 << 0x10\n 23398: a1 = a1 << 0x18\n 23401: a1 = a1 | s1\n 23404: a1 = a1 | a4\n 23407: a1 = a1 << 0x20\n 23410: a3 = a3 | a1\n 23413: a1 = u8 [a0 + 0x9]\n 23416: a4 = u8 [a0 + 0x8]\n 23419: a5 = u8 [a0 + 0xa]\n 23422: s1 = u8 [a0 + 0xb]\n 23425: a1 = a1 << 0x8\n 23428: a1 = a1 | a4\n 23431: a5 = a5 << 0x10\n 23434: s1 = s1 << 0x18\n 23437: a5 = a5 | s1\n 23440: a1 = a1 | a5\n 23443: a4 = u8 [a0 + 0xd]\n 23446: a5 = u8 [a0 + 0xc]\n 23449: s1 = u8 [a0 + 0xe]\n 23452: a0 = u8 [a0 + 0xf]\n 23455: a4 = a4 << 0x8\n 23458: a4 = a4 | a5\n 23461: s1 = s1 << 0x10\n 23464: a0 = a0 << 0x18\n 23467: a0 = a0 | s1\n 23470: a0 = a0 | a4\n 23473: a0 = a0 << 0x20\n 23476: a0 = a0 | a1\n 23479: a0 = reverse a0\n 23481: s1 = reverse a3\n 23483: a1 = reverse a2\n 23485: a2 = reverse t0\n 23487: a1 = a1 | a2\n 23490: a2 = s1 | a0\n 23493: a2 = a2 | a1\n 23496: a2 = a2 >> 0x20\n 23499: a0 = a0 | a1\n 23502: a0 = a0 << 0x20\n 23505: a0 = a0 | a2\n 23508: jump @355 if a0 == 0\n      : @352 (gas: 1)\n 23511: trap\n      : @353 (gas: 3)\n 23512: a0 = 0\n 23514: a1 = 0\n 23516: ra = 300, jump @0\n      : @354 [@dyn 150] (gas: 5)\n 23522: i32 a1 = a0 + 0\n 23524: a0 = 0x1\n 23527: a2 = 0\n 23529: ecalli 7 // 'seal_return'\n 23531: fallthrough\n      : @355 (gas: 4)\n 23532: i32 s1 = s1 + 0\n 23534: a1 = 0x20\n 23537: a0 = s1\n 23539: ra = 302, jump @0\n      : @356 [@dyn 151] (gas: 35)\n 23545: u8 [a0 + 31] = 0x1\n 23549: u8 [a0 + 30] = 0\n 23552: u8 [a0 + 29] = 0\n 23555: u8 [a0 + 28] = 0\n 23558: u8 [a0 + 27] = 0\n 23561: u8 [a0 + 26] = 0\n 23564: u8 [a0 + 25] = 0\n 23567: u8 [a0 + 24] = 0\n 23570: u8 [a0 + 23] = 0\n 23573: u8 [a0 + 22] = 0\n 23576: u8 [a0 + 21] = 0\n 23579: u8 [a0 + 20] = 0\n 23582: u8 [a0 + 19] = 0\n 23585: u8 [a0 + 18] = 0\n 23588: u8 [a0 + 17] = 0\n 23591: u8 [a0 + 16] = 0\n 23594: u8 [a0 + 15] = 0\n 23597: u8 [a0 + 14] = 0\n 23600: u8 [a0 + 13] = 0\n 23603: u8 [a0 + 12] = 0\n 23606: u8 [a0 + 11] = 0\n 23609: u8 [a0 + 10] = 0\n 23612: u8 [a0 + 9] = 0\n 23615: u8 [a0 + 8] = 0\n 23618: u8 [a0 + 7] = 0\n 23621: u8 [a0 + 6] = 0\n 23624: u8 [a0 + 5] = 0\n 23627: u8 [a0 + 4] = 0\n 23630: u8 [a0 + 3] = 0\n 23633: u8 [a0 + 2] = 0\n 23636: u8 [a0 + 1] = 0\n 23639: u8 [a0 + 0] = 0\n 23641: a1 = 0x20\n 23644: a0 = s1\n 23646: ra = 304, jump @0\n      : @357 [@dyn 152] (gas: 6)\n 23652: i32 a1 = a0 + 0\n 23654: a2 = 0x20\n 23657: a0 = 0\n 23659: ra = 0x132\n 23663: ecalli 7 // 'seal_return'\n 23665: fallthrough\n      : @358 [@dyn 153] (gas: 6)\n 23666: a1 = u8 [a1]\n 23668: u64 [a0 + 24] = 0\n 23671: u64 [a0 + 16] = 0\n 23674: u64 [a0 + 8] = 0\n 23677: u64 [a0] = a1\n 23679: ret\n      : @359 (gas: 8)\n 23681: a0 = u64 [sp + 0x10]\n 23684: a1 = u64 [sp + 0x18]\n 23687: a2 = u64 [sp + 0x8]\n 23690: a3 = u64 [sp]\n 23692: a1 = a1 | a2\n 23695: a0 = a0 | a3\n 23698: a0 = a0 | a1\n 23701: jump @364 if a0 != 0\n      : @360 (gas: 2)\n 23705: a0 = i32 [0x20044]\n 23710: jump @364 if a0 <=u 3\n      : @361 (gas: 3)\n 23715: a0 = 0x40\n 23718: a1 = 0x20\n 23721: ra = 308, jump @0\n      : @362 [@dyn 154] (gas: 100)\n 23727: a1 = u8 [a0 + 0x11]\n 23730: a2 = u8 [a0 + 0x10]\n 23733: a3 = u8 [a0 + 0x12]\n 23736: a4 = u8 [a0 + 0x13]\n 23739: a1 = a1 << 0x8\n 23742: a1 = a1 | a2\n 23745: a3 = a3 << 0x10\n 23748: a4 = a4 << 0x18\n 23751: a3 = a3 | a4\n 23754: a1 = a1 | a3\n 23757: a2 = u8 [a0 + 0x15]\n 23760: a3 = u8 [a0 + 0x14]\n 23763: a4 = u8 [a0 + 0x16]\n 23766: a5 = u8 [a0 + 0x17]\n 23769: a2 = a2 << 0x8\n 23772: a2 = a2 | a3\n 23775: a4 = a4 << 0x10\n 23778: a5 = a5 << 0x18\n 23781: a4 = a4 | a5\n 23784: a2 = a2 | a4\n 23787: a2 = a2 << 0x20\n 23790: t0 = a2 | a1\n 23793: a2 = u8 [a0 + 0x1]\n 23796: a3 = u8 [a0]\n 23798: a4 = u8 [a0 + 0x2]\n 23801: a5 = u8 [a0 + 0x3]\n 23804: a2 = a2 << 0x8\n 23807: a2 = a2 | a3\n 23810: a4 = a4 << 0x10\n 23813: a5 = a5 << 0x18\n 23816: a4 = a4 | a5\n 23819: a2 = a2 | a4\n 23822: a3 = u8 [a0 + 0x5]\n 23825: a4 = u8 [a0 + 0x4]\n 23828: a5 = u8 [a0 + 0x6]\n 23831: s1 = u8 [a0 + 0x7]\n 23834: a3 = a3 << 0x8\n 23837: a3 = a3 | a4\n 23840: a5 = a5 << 0x10\n 23843: s1 = s1 << 0x18\n 23846: a5 = a5 | s1\n 23849: a3 = a3 | a5\n 23852: a3 = a3 << 0x20\n 23855: a2 = a2 | a3\n 23858: a3 = u8 [a0 + 0x19]\n 23861: a4 = u8 [a0 + 0x18]\n 23864: a5 = u8 [a0 + 0x1a]\n 23867: s1 = u8 [a0 + 0x1b]\n 23870: a3 = a3 << 0x8\n 23873: a3 = a3 | a4\n 23876: a5 = a5 << 0x10\n 23879: s1 = s1 << 0x18\n 23882: a5 = a5 | s1\n 23885: a3 = a3 | a5\n 23888: a4 = u8 [a0 + 0x1d]\n 23891: a5 = u8 [a0 + 0x1c]\n 23894: s1 = u8 [a0 + 0x1e]\n 23897: a1 = u8 [a0 + 0x1f]\n 23900: a4 = a4 << 0x8\n 23903: a4 = a4 | a5\n 23906: s1 = s1 << 0x10\n 23909: a1 = a1 << 0x18\n 23912: a1 = a1 | s1\n 23915: a1 = a1 | a4\n 23918: a1 = a1 << 0x20\n 23921: a3 = a3 | a1\n 23924: a1 = u8 [a0 + 0x9]\n 23927: a4 = u8 [a0 + 0x8]\n 23930: a5 = u8 [a0 + 0xa]\n 23933: s1 = u8 [a0 + 0xb]\n 23936: a1 = a1 << 0x8\n 23939: a1 = a1 | a4\n 23942: a5 = a5 << 0x10\n 23945: s1 = s1 << 0x18\n 23948: a5 = a5 | s1\n 23951: a1 = a1 | a5\n 23954: a4 = u8 [a0 + 0xd]\n 23957: a5 = u8 [a0 + 0xc]\n 23960: s1 = u8 [a0 + 0xe]\n 23963: a0 = u8 [a0 + 0xf]\n 23966: a4 = a4 << 0x8\n 23969: a4 = a4 | a5\n 23972: s1 = s1 << 0x10\n 23975: a0 = a0 << 0x18\n 23978: a0 = a0 | s1\n 23981: a0 = a0 | a4\n 23984: a0 = a0 << 0x20\n 23987: a0 = a0 | a1\n 23990: a0 = reverse a0\n 23992: s1 = reverse a3\n 23994: a1 = reverse a2\n 23996: a2 = reverse t0\n 23998: a1 = a1 | a2\n 24001: a2 = s1 | a0\n 24004: a2 = a2 | a1\n 24007: a2 = a2 >> 0x20\n 24010: a0 = a0 | a1\n 24013: a0 = a0 << 0x20\n 24016: a0 = a0 | a2\n 24019: jump @366 if a0 == 0\n      : @363 (gas: 1)\n 24022: trap\n      : @364 (gas: 3)\n 24023: a0 = 0\n 24025: a1 = 0\n 24027: ra = 310, jump @0\n      : @365 [@dyn 155] (gas: 5)\n 24033: i32 a1 = a0 + 0\n 24035: a0 = 0x1\n 24038: a2 = 0\n 24040: ecalli 7 // 'seal_return'\n 24042: fallthrough\n      : @366 (gas: 4)\n 24043: i32 s1 = s1 + 0\n 24045: a1 = 0x20\n 24048: a0 = s1\n 24050: ra = 312, jump @0\n      : @367 [@dyn 156] (gas: 35)\n 24056: u8 [a0 + 31] = 0x12\n 24060: u8 [a0 + 30] = 0\n 24063: u8 [a0 + 29] = 0\n 24066: u8 [a0 + 28] = 0\n 24069: u8 [a0 + 27] = 0\n 24072: u8 [a0 + 26] = 0\n 24075: u8 [a0 + 25] = 0\n 24078: u8 [a0 + 24] = 0\n 24081: u8 [a0 + 23] = 0\n 24084: u8 [a0 + 22] = 0\n 24087: u8 [a0 + 21] = 0\n 24090: u8 [a0 + 20] = 0\n 24093: u8 [a0 + 19] = 0\n 24096: u8 [a0 + 18] = 0\n 24099: u8 [a0 + 17] = 0\n 24102: u8 [a0 + 16] = 0\n 24105: u8 [a0 + 15] = 0\n 24108: u8 [a0 + 14] = 0\n 24111: u8 [a0 + 13] = 0\n 24114: u8 [a0 + 12] = 0\n 24117: u8 [a0 + 11] = 0\n 24120: u8 [a0 + 10] = 0\n 24123: u8 [a0 + 9] = 0\n 24126: u8 [a0 + 8] = 0\n 24129: u8 [a0 + 7] = 0\n 24132: u8 [a0 + 6] = 0\n 24135: u8 [a0 + 5] = 0\n 24138: u8 [a0 + 4] = 0\n 24141: u8 [a0 + 3] = 0\n 24144: u8 [a0 + 2] = 0\n 24147: u8 [a0 + 1] = 0\n 24150: u8 [a0 + 0] = 0\n 24152: a1 = 0x20\n 24155: a0 = s1\n 24157: ra = 314, jump @0\n      : @368 [@dyn 157] (gas: 6)\n 24163: i32 a1 = a0 + 0\n 24165: a2 = 0x20\n 24168: a0 = 0\n 24170: ra = 0x13c\n 24174: ecalli 7 // 'seal_return'\n 24176: fallthrough\n      : @369 [@dyn 158] (gas: 52)\n 24177: sp = sp + 0xffffffffffffff80\n 24180: u64 [sp + 0x78] = ra\n 24183: u64 [sp + 0x70] = s0\n 24186: u64 [sp + 0x68] = s1\n 24189: s0 = sp + 0x80\n 24193: sp = sp & 0xffffffffffffffe0\n 24196: t2 = u64 [a1 + 0x10]\n 24199: a5 = u64 [a1 + 0x8]\n 24202: t0 = u64 [a2 + 0x8]\n 24205: s1 = u64 [a1]\n 24207: u64 [sp + 0x10] = s1\n 24210: a4 = u64 [a2]\n 24212: u64 [sp + 0x18] = a4\n 24215: ra = u64 [a2 + 0x10]\n 24218: a3 = t0 ^ a5\n 24221: u64 [sp + 0x38] = a3\n 24224: a3 = t0 <u a5\n 24227: a4 = a4 <u s1\n 24230: t1 = u64 [sp + 0x38]\n 24233: a3 = a4 if t1 == 0\n 24236: t1 = a4\n 24238: a1 = u64 [a1 + 0x18]\n 24241: u64 [sp + 0x38] = a1\n 24244: a1 = u64 [a2 + 0x18]\n 24247: u64 [sp + 0x20] = a1\n 24250: a1 = ra - t2\n 24253: a2 = a1 - a3\n 24256: u64 [sp + 0x28] = a2\n 24259: a2 = a1 <u a3\n 24262: u64 [sp + 0x30] = t2\n 24265: a3 = ra <u t2\n 24268: a1 = u64 [sp + 0x38]\n 24271: a4 = u64 [sp + 0x20]\n 24274: a1 = a4 - a1\n 24277: a1 = a1 - a3\n 24280: t2 = a1 - a2\n 24283: s1 = t0 - a5\n 24286: a2 = s1 - t1\n 24289: t0 = u64 [sp + 0x10]\n 24292: a1 = u64 [sp + 0x18]\n 24295: a3 = a1 - t0\n 24298: a4 = a2 >u 0\n 24300: a3 = a3 <u 0x20\n 24303: a3 = a3 ^ 0x1\n 24306: a3 = a4 if a2 != 0\n 24309: a2 = t2 >s 0\n 24311: a1 = u64 [sp + 0x28]\n 24314: a4 = a1 >u 0\n 24316: a4 = a2 if t2 != 0\n 24319: a1 = a1 | t2\n 24322: a3 = a4 if a1 != 0\n 24325: jump @375 if a3 == 0\n      : @370 (gas: 11)\n 24328: s1 = a0\n 24330: a2 = u64 [sp + 0x30]\n 24333: a0 = t0 | a2\n 24336: a1 = u64 [sp + 0x38]\n 24339: a1 = a1 | a5\n 24342: a0 = a0 | a1\n 24345: a0 = a0 >> 0x20\n 24348: a1 = a1 | a2\n 24351: a1 = a1 << 0x20\n 24354: a0 = a0 | a1\n 24357: jump @374 if a0 != 0\n      : @371 (gas: 4)\n 24360: i32 a1 = t0 + 0\n 24362: i32 a0 = sp + 0x40\n 24365: ecalli 1 // 'call_data_load'\n 24367: fallthrough\n      : @372 (gas: 10)\n 24368: a0 = u64 [sp + 0x50]\n 24371: a1 = u64 [sp + 0x58]\n 24374: a2 = 0x100000000\n 24384: a2 = a2 ^ a0\n 24387: a2 = a2 | a1\n 24390: a3 = a0 >> 0x20\n 24393: a3 = a3 <u 0x1\n 24396: a3 = 0 if a1 != 0\n 24398: a3 = 0 if a2 == 0\n 24400: jump @375 if a3 == 0\n      : @373 (gas: 12)\n 24403: a2 = u64 [sp + 0x48]\n 24406: a3 = u64 [sp + 0x40]\n 24409: u64 [s1 + 0x8] = a2\n 24412: u64 [s1] = a3\n 24414: u64 [s1 + 0x10] = a0\n 24417: u64 [s1 + 0x18] = a1\n 24420: sp = s0 + 0xffffffffffffff80\n 24423: ra = u64 [sp + 0x78]\n 24426: s0 = u64 [sp + 0x70]\n 24429: s1 = u64 [sp + 0x68]\n 24432: sp = sp + 0x80\n 24436: ret\n      : @374 (gas: 1)\n 24438: trap\n      : @375 (gas: 3)\n 24439: a0 = 0\n 24441: a1 = 0\n 24443: ra = 318, jump @0\n      : @376 [@dyn 159] (gas: 6)\n 24449: i32 a1 = a0 + 0\n 24451: a0 = 0x1\n 24454: a2 = 0\n 24456: ra = 0x140\n 24460: ecalli 7 // 'seal_return'\n 24462: fallthrough\n      : @377 [@dyn 160] (gas: 13)\n 24463: sp = sp + 0xffffffffffffff60\n 24467: u64 [sp + 0x98] = ra\n 24471: u64 [sp + 0x90] = s0\n 24475: u64 [sp + 0x88] = s1\n 24479: s0 = sp + 0xa0\n 24483: sp = sp & 0xffffffffffffffe0\n 24486: u64 [sp + 56] = 0\n 24489: u64 [sp + 48] = 0\n 24492: u64 [sp + 40] = 0\n 24495: u64 [sp + 32] = 0\n 24498: i32 a0 = sp + 0x20\n 24501: ecalli 10 // 'value_transferred'\n 24503: fallthrough\n      : @378 (gas: 8)\n 24504: a0 = u64 [sp + 0x30]\n 24507: a1 = u64 [sp + 0x38]\n 24510: a2 = u64 [sp + 0x28]\n 24513: a3 = u64 [sp + 0x20]\n 24516: a1 = a1 | a2\n 24519: a0 = a0 | a3\n 24522: a0 = a0 | a1\n 24525: jump @388 if a0 != 0\n      : @379 (gas: 2)\n 24529: a0 = i32 [0x20044]\n 24534: jump @388 if a0 <=u 35\n      : @380 (gas: 4)\n 24539: i32 a0 = sp + 0x60\n 24542: a1 = 0x4\n 24545: ecalli 1 // 'call_data_load'\n 24547: fallthrough\n      : @381 (gas: 11)\n 24548: a1 = u64 [sp + 0x70]\n 24551: s1 = u64 [sp + 0x78]\n 24554: a0 = 0x100000000\n 24564: a0 = a0 ^ a1\n 24567: a0 = a0 | s1\n 24570: u64 [sp + 0x18] = a1\n 24573: a1 = a1 >> 0x20\n 24576: a1 = a1 <u 0x1\n 24579: a1 = 0 if s1 != 0\n 24581: a1 = 0 if a0 == 0\n 24583: jump @389 if a1 == 0\n      : @382 (gas: 7)\n 24587: a0 = u64 [sp + 0x68]\n 24590: u64 [sp + 0x8] = a0\n 24593: a0 = u64 [sp + 0x60]\n 24596: u64 [sp + 0x10] = a0\n 24599: a1 = 0x20\n 24602: a0 = 0\n 24604: ra = 322, jump @0\n      : @383 [@dyn 161] (gas: 70)\n 24610: a1 = reverse s1\n 24612: a2 = u64 [sp + 0x18]\n 24615: a2 = reverse a2\n 24617: a3 = u64 [sp + 0x8]\n 24620: a3 = reverse a3\n 24622: a4 = u64 [sp + 0x10]\n 24625: a4 = reverse a4\n 24627: a5 = a4 >> 0x38\n 24630: u8 [a0 + 0x1f] = a5\n 24633: a5 = a4 >> 0x30\n 24636: u8 [a0 + 0x1e] = a5\n 24639: a5 = a4 >> 0x28\n 24642: u8 [a0 + 0x1d] = a5\n 24645: a5 = a4 >> 0x20\n 24648: u8 [a0 + 0x1c] = a5\n 24651: a5 = a4 >> 0x18\n 24654: u8 [a0 + 0x1b] = a5\n 24657: a5 = a4 >> 0x10\n 24660: u8 [a0 + 0x1a] = a5\n 24663: a5 = a4 >> 0x8\n 24666: u8 [a0 + 0x19] = a5\n 24669: u8 [a0 + 0x18] = a4\n 24672: a4 = a3 >> 0x38\n 24675: u8 [a0 + 0x17] = a4\n 24678: a4 = a3 >> 0x30\n 24681: u8 [a0 + 0x16] = a4\n 24684: a4 = a3 >> 0x28\n 24687: u8 [a0 + 0x15] = a4\n 24690: a4 = a3 >> 0x20\n 24693: u8 [a0 + 0x14] = a4\n 24696: a4 = a3 >> 0x18\n 24699: u8 [a0 + 0x13] = a4\n 24702: a4 = a3 >> 0x10\n 24705: u8 [a0 + 0x12] = a4\n 24708: a4 = a3 >> 0x8\n 24711: u8 [a0 + 0x11] = a4\n 24714: u8 [a0 + 0x10] = a3\n 24717: u8 [a0 + 0x8] = a2\n 24720: a3 = a2 >> 0x38\n 24723: u8 [a0 + 0xf] = a3\n 24726: a3 = a2 >> 0x30\n 24729: u8 [a0 + 0xe] = a3\n 24732: a3 = a2 >> 0x28\n 24735: u8 [a0 + 0xd] = a3\n 24738: a3 = a2 >> 0x20\n 24741: u8 [a0 + 0xc] = a3\n 24744: a3 = a2 >> 0x18\n 24747: u8 [a0 + 0xb] = a3\n 24750: a3 = a2 >> 0x10\n 24753: u8 [a0 + 0xa] = a3\n 24756: a2 = a2 >> 0x8\n 24759: u8 [a0 + 0x9] = a2\n 24762: u8 [a0] = a1\n 24764: a2 = a1 >> 0x38\n 24767: u8 [a0 + 0x7] = a2\n 24770: a2 = a1 >> 0x30\n 24773: u8 [a0 + 0x6] = a2\n 24776: a2 = a1 >> 0x28\n 24779: u8 [a0 + 0x5] = a2\n 24782: a2 = a1 >> 0x20\n 24785: u8 [a0 + 0x4] = a2\n 24788: a2 = a1 >> 0x18\n 24791: u8 [a0 + 0x3] = a2\n 24794: a2 = a1 >> 0x10\n 24797: u8 [a0 + 0x2] = a2\n 24800: a1 = a1 >> 0x8\n 24803: u8 [a0 + 0x1] = a1\n 24806: a0 = 0x20\n 24809: a1 = 0x20\n 24812: ra = 324, jump @0\n      : @384 [@dyn 162] (gas: 35)\n 24818: u8 [a0 + 31] = 0\n 24821: u8 [a0 + 30] = 0\n 24824: u8 [a0 + 29] = 0\n 24827: u8 [a0 + 28] = 0\n 24830: u8 [a0 + 27] = 0\n 24833: u8 [a0 + 26] = 0\n 24836: u8 [a0 + 25] = 0\n 24839: u8 [a0 + 24] = 0\n 24842: u8 [a0 + 23] = 0\n 24845: u8 [a0 + 22] = 0\n 24848: u8 [a0 + 21] = 0\n 24851: u8 [a0 + 20] = 0\n 24854: u8 [a0 + 19] = 0\n 24857: u8 [a0 + 18] = 0\n 24860: u8 [a0 + 17] = 0\n 24863: u8 [a0 + 16] = 0\n 24866: u8 [a0 + 15] = 0\n 24869: u8 [a0 + 14] = 0\n 24872: u8 [a0 + 13] = 0\n 24875: u8 [a0 + 12] = 0\n 24878: u8 [a0 + 11] = 0\n 24881: u8 [a0 + 10] = 0\n 24884: u8 [a0 + 9] = 0\n 24887: u8 [a0 + 8] = 0\n 24890: u8 [a0 + 7] = 0\n 24893: u8 [a0 + 6] = 0\n 24896: u8 [a0 + 5] = 0\n 24899: u8 [a0 + 4] = 0\n 24902: u8 [a0 + 3] = 0\n 24905: u8 [a0 + 2] = 0\n 24908: u8 [a0 + 1] = 0\n 24911: u8 [a0 + 0] = 0\n 24913: a1 = 0x40\n 24916: a0 = 0\n 24918: ra = 326, jump @0\n      : @385 [@dyn 163] (gas: 38)\n 24924: i32 a0 = a0 + 0\n 24926: i32 a2 = sp + 0x60\n 24929: a1 = 0x40\n 24932: ecalli 6 // 'hash_keccak_256'\n 24934: a0 = u64 [sp + 0x78]\n 24937: a1 = u64 [sp + 0x70]\n 24940: a2 = u64 [sp + 0x68]\n 24943: a3 = u64 [sp + 0x60]\n 24946: a0 = reverse a0\n 24948: a1 = reverse a1\n 24950: a2 = reverse a2\n 24952: a3 = reverse a3\n 24954: u64 [sp + 0x58] = a3\n 24957: u64 [sp + 0x50] = a2\n 24960: u64 [sp + 0x48] = a1\n 24963: u64 [sp + 0x40] = a0\n 24966: u64 [sp + 120] = 0\n 24969: u64 [sp + 112] = 0\n 24972: u64 [sp + 104] = 0\n 24975: u64 [sp + 96] = 0\n 24978: u32 [sp + 128] = 0x20\n 24983: i32 a1 = sp + 0x40\n 24986: i32 a3 = sp + 0x60\n 24989: i32 a4 = sp + 0x80\n 24993: a2 = 0xffffffffffffffff\n 24996: a0 = 0\n 24998: ecalli 5 // 'get_storage'\n 25000: a0 = u64 [sp + 0x78]\n 25003: u64 [sp] = a0\n 25005: a0 = u64 [sp + 0x70]\n 25008: u64 [sp + 0x8] = a0\n 25011: a0 = u64 [sp + 0x68]\n 25014: u64 [sp + 0x10] = a0\n 25017: a0 = u64 [sp + 0x60]\n 25020: u64 [sp + 0x18] = a0\n 25023: a0 = 0x40\n 25026: a1 = 0x20\n 25029: ra = 328, jump @0\n      : @386 [@dyn 164] (gas: 100)\n 25035: a1 = u8 [a0 + 0x11]\n 25038: a2 = u8 [a0 + 0x10]\n 25041: a3 = u8 [a0 + 0x12]\n 25044: a4 = u8 [a0 + 0x13]\n 25047: a1 = a1 << 0x8\n 25050: a1 = a1 | a2\n 25053: a3 = a3 << 0x10\n 25056: a4 = a4 << 0x18\n 25059: a3 = a3 | a4\n 25062: a1 = a1 | a3\n 25065: a2 = u8 [a0 + 0x15]\n 25068: a3 = u8 [a0 + 0x14]\n 25071: a4 = u8 [a0 + 0x16]\n 25074: a5 = u8 [a0 + 0x17]\n 25077: a2 = a2 << 0x8\n 25080: a2 = a2 | a3\n 25083: a4 = a4 << 0x10\n 25086: a5 = a5 << 0x18\n 25089: a4 = a4 | a5\n 25092: a2 = a2 | a4\n 25095: a2 = a2 << 0x20\n 25098: t0 = a2 | a1\n 25101: a2 = u8 [a0 + 0x1]\n 25104: a3 = u8 [a0]\n 25106: a4 = u8 [a0 + 0x2]\n 25109: a5 = u8 [a0 + 0x3]\n 25112: a2 = a2 << 0x8\n 25115: a2 = a2 | a3\n 25118: a4 = a4 << 0x10\n 25121: a5 = a5 << 0x18\n 25124: a4 = a4 | a5\n 25127: a2 = a2 | a4\n 25130: a3 = u8 [a0 + 0x5]\n 25133: a4 = u8 [a0 + 0x4]\n 25136: a5 = u8 [a0 + 0x6]\n 25139: s1 = u8 [a0 + 0x7]\n 25142: a3 = a3 << 0x8\n 25145: a3 = a3 | a4\n 25148: a5 = a5 << 0x10\n 25151: s1 = s1 << 0x18\n 25154: a5 = a5 | s1\n 25157: a3 = a3 | a5\n 25160: a3 = a3 << 0x20\n 25163: a2 = a2 | a3\n 25166: a3 = u8 [a0 + 0x19]\n 25169: a4 = u8 [a0 + 0x18]\n 25172: a5 = u8 [a0 + 0x1a]\n 25175: s1 = u8 [a0 + 0x1b]\n 25178: a3 = a3 << 0x8\n 25181: a3 = a3 | a4\n 25184: a5 = a5 << 0x10\n 25187: s1 = s1 << 0x18\n 25190: a5 = a5 | s1\n 25193: a3 = a3 | a5\n 25196: a4 = u8 [a0 + 0x1d]\n 25199: a5 = u8 [a0 + 0x1c]\n 25202: s1 = u8 [a0 + 0x1e]\n 25205: a1 = u8 [a0 + 0x1f]\n 25208: a4 = a4 << 0x8\n 25211: a4 = a4 | a5\n 25214: s1 = s1 << 0x10\n 25217: a1 = a1 << 0x18\n 25220: a1 = a1 | s1\n 25223: a1 = a1 | a4\n 25226: a1 = a1 << 0x20\n 25229: a3 = a3 | a1\n 25232: a1 = u8 [a0 + 0x9]\n 25235: a4 = u8 [a0 + 0x8]\n 25238: a5 = u8 [a0 + 0xa]\n 25241: s1 = u8 [a0 + 0xb]\n 25244: a1 = a1 << 0x8\n 25247: a1 = a1 | a4\n 25250: a5 = a5 << 0x10\n 25253: s1 = s1 << 0x18\n 25256: a5 = a5 | s1\n 25259: a1 = a1 | a5\n 25262: a4 = u8 [a0 + 0xd]\n 25265: a5 = u8 [a0 + 0xc]\n 25268: s1 = u8 [a0 + 0xe]\n 25271: a0 = u8 [a0 + 0xf]\n 25274: a4 = a4 << 0x8\n 25277: a4 = a4 | a5\n 25280: s1 = s1 << 0x10\n 25283: a0 = a0 << 0x18\n 25286: a0 = a0 | s1\n 25289: a0 = a0 | a4\n 25292: a0 = a0 << 0x20\n 25295: a0 = a0 | a1\n 25298: a1 = reverse a0\n 25300: a0 = reverse a3\n 25302: a2 = reverse a2\n 25304: a3 = reverse t0\n 25306: a2 = a2 | a3\n 25309: a3 = a0 | a1\n 25312: a3 = a3 | a2\n 25315: a3 = a3 >> 0x20\n 25318: a1 = a1 | a2\n 25321: a1 = a1 << 0x20\n 25324: a1 = a1 | a3\n 25327: jump @391 if a1 == 0\n      : @387 (gas: 1)\n 25330: trap\n      : @388 (gas: 4)\n 25331: a0 = 0\n 25333: a1 = 0\n 25335: ra = 0x14a\n 25339: jump @0\n      : @389 (gas: 2)\n 25342: a0 = 0\n 25344: ra = 330, jump @0\n      : @390 [@dyn 165] (gas: 5)\n 25350: i32 a1 = a0 + 0\n 25352: a0 = 0x1\n 25355: a2 = 0\n 25357: ecalli 7 // 'seal_return'\n 25359: fallthrough\n      : @391 (gas: 4)\n 25360: i32 s1 = a0 + 0\n 25362: a1 = 0x20\n 25365: a0 = s1\n 25367: ra = 332, jump @0\n      : @392 [@dyn 166] (gas: 71)\n 25373: a1 = u64 [sp]\n 25375: a1 = reverse a1\n 25377: a2 = u64 [sp + 0x8]\n 25380: a2 = reverse a2\n 25382: a3 = u64 [sp + 0x10]\n 25385: a3 = reverse a3\n 25387: a4 = u64 [sp + 0x18]\n 25390: a4 = reverse a4\n 25392: a5 = a4 >> 0x38\n 25395: u8 [a0 + 0x1f] = a5\n 25398: a5 = a4 >> 0x30\n 25401: u8 [a0 + 0x1e] = a5\n 25404: a5 = a4 >> 0x28\n 25407: u8 [a0 + 0x1d] = a5\n 25410: a5 = a4 >> 0x20\n 25413: u8 [a0 + 0x1c] = a5\n 25416: a5 = a4 >> 0x18\n 25419: u8 [a0 + 0x1b] = a5\n 25422: a5 = a4 >> 0x10\n 25425: u8 [a0 + 0x1a] = a5\n 25428: a5 = a4 >> 0x8\n 25431: u8 [a0 + 0x19] = a5\n 25434: u8 [a0 + 0x18] = a4\n 25437: u8 [a0 + 0x10] = a3\n 25440: a4 = a3 >> 0x38\n 25443: u8 [a0 + 0x17] = a4\n 25446: a4 = a3 >> 0x30\n 25449: u8 [a0 + 0x16] = a4\n 25452: a4 = a3 >> 0x28\n 25455: u8 [a0 + 0x15] = a4\n 25458: a4 = a3 >> 0x20\n 25461: u8 [a0 + 0x14] = a4\n 25464: a4 = a3 >> 0x18\n 25467: u8 [a0 + 0x13] = a4\n 25470: a4 = a3 >> 0x10\n 25473: u8 [a0 + 0x12] = a4\n 25476: a3 = a3 >> 0x8\n 25479: u8 [a0 + 0x11] = a3\n 25482: u8 [a0 + 0x8] = a2\n 25485: a3 = a2 >> 0x38\n 25488: u8 [a0 + 0xf] = a3\n 25491: a3 = a2 >> 0x30\n 25494: u8 [a0 + 0xe] = a3\n 25497: a3 = a2 >> 0x28\n 25500: u8 [a0 + 0xd] = a3\n 25503: a3 = a2 >> 0x20\n 25506: u8 [a0 + 0xc] = a3\n 25509: a3 = a2 >> 0x18\n 25512: u8 [a0 + 0xb] = a3\n 25515: a3 = a2 >> 0x10\n 25518: u8 [a0 + 0xa] = a3\n 25521: a2 = a2 >> 0x8\n 25524: u8 [a0 + 0x9] = a2\n 25527: u8 [a0] = a1\n 25529: a2 = a1 >> 0x38\n 25532: u8 [a0 + 0x7] = a2\n 25535: a2 = a1 >> 0x30\n 25538: u8 [a0 + 0x6] = a2\n 25541: a2 = a1 >> 0x28\n 25544: u8 [a0 + 0x5] = a2\n 25547: a2 = a1 >> 0x20\n 25550: u8 [a0 + 0x4] = a2\n 25553: a2 = a1 >> 0x18\n 25556: u8 [a0 + 0x3] = a2\n 25559: a2 = a1 >> 0x10\n 25562: u8 [a0 + 0x2] = a2\n 25565: a1 = a1 >> 0x8\n 25568: u8 [a0 + 0x1] = a1\n 25571: a1 = 0x20\n 25574: a0 = s1\n 25576: ra = 334, jump @0\n      : @393 [@dyn 167] (gas: 6)\n 25582: i32 a1 = a0 + 0\n 25584: a2 = 0x20\n 25587: a0 = 0\n 25589: ra = 0x150\n 25593: ecalli 7 // 'seal_return'\n 25595: fallthrough\n      : @394 [@dyn 168] (gas: 13)\n 25596: sp = sp + 0xfffffffffffffec0\n 25600: u64 [sp + 0x138] = ra\n 25604: u64 [sp + 0x130] = s0\n 25608: u64 [sp + 0x128] = s1\n 25612: s0 = sp + 0x140\n 25616: sp = sp & 0xffffffffffffffe0\n 25619: u64 [sp + 280] = 0\n 25623: u64 [sp + 272] = 0\n 25627: u64 [sp + 264] = 0\n 25631: u64 [sp + 256] = 0\n 25635: i32 a0 = sp + 0x100\n 25639: ecalli 10 // 'value_transferred'\n 25641: fallthrough\n      : @395 (gas: 8)\n 25642: a0 = u64 [sp + 0x110]\n 25646: a1 = u64 [sp + 0x118]\n 25650: a2 = u64 [sp + 0x108]\n 25654: a3 = u64 [sp + 0x100]\n 25658: a1 = a1 | a2\n 25661: a0 = a0 | a3\n 25664: a0 = a0 | a1\n 25667: jump @404 if a0 != 0\n      : @396 (gas: 2)\n 25671: a0 = i32 [0x20044]\n 25676: jump @404 if a0 <=u 3\n      : @397 (gas: 7)\n 25681: u64 [sp + 216] = 0\n 25685: u64 [sp + 208] = 0\n 25689: u64 [sp + 192] = 0x4\n 25694: a0 = sp + 0xe0\n 25698: a1 = sp + 0xc0\n 25702: u64 [sp + 200] = 0\n 25706: ra = 338, jump @474\n      : @398 [@dyn 169] (gas: 11)\n 25712: a0 = u64 [sp + 0xf8]\n 25716: u64 [sp + 0x40] = a0\n 25719: a0 = u64 [sp + 0xf0]\n 25723: u64 [sp + 0x48] = a0\n 25726: a0 = u64 [sp + 0xe8]\n 25730: u64 [sp + 0x50] = a0\n 25733: a0 = u64 [sp + 0xe0]\n 25737: u64 [sp + 0x58] = a0\n 25740: a0 = 0x40\n 25743: a1 = 0x20\n 25746: ra = 340, jump @0\n      : @399 [@dyn 170] (gas: 100)\n 25752: a1 = u8 [a0 + 0x11]\n 25755: a2 = u8 [a0 + 0x10]\n 25758: a3 = u8 [a0 + 0x12]\n 25761: a4 = u8 [a0 + 0x13]\n 25764: a1 = a1 << 0x8\n 25767: a1 = a1 | a2\n 25770: a3 = a3 << 0x10\n 25773: a4 = a4 << 0x18\n 25776: a3 = a3 | a4\n 25779: a1 = a1 | a3\n 25782: a2 = u8 [a0 + 0x15]\n 25785: a3 = u8 [a0 + 0x14]\n 25788: a4 = u8 [a0 + 0x16]\n 25791: a5 = u8 [a0 + 0x17]\n 25794: a2 = a2 << 0x8\n 25797: a2 = a2 | a3\n 25800: a4 = a4 << 0x10\n 25803: a5 = a5 << 0x18\n 25806: a4 = a4 | a5\n 25809: a2 = a2 | a4\n 25812: a2 = a2 << 0x20\n 25815: t0 = a2 | a1\n 25818: a2 = u8 [a0 + 0x1]\n 25821: a3 = u8 [a0]\n 25823: a4 = u8 [a0 + 0x2]\n 25826: a5 = u8 [a0 + 0x3]\n 25829: a2 = a2 << 0x8\n 25832: a2 = a2 | a3\n 25835: a4 = a4 << 0x10\n 25838: a5 = a5 << 0x18\n 25841: a4 = a4 | a5\n 25844: a2 = a2 | a4\n 25847: a3 = u8 [a0 + 0x5]\n 25850: a4 = u8 [a0 + 0x4]\n 25853: a5 = u8 [a0 + 0x6]\n 25856: s1 = u8 [a0 + 0x7]\n 25859: a3 = a3 << 0x8\n 25862: a3 = a3 | a4\n 25865: a5 = a5 << 0x10\n 25868: s1 = s1 << 0x18\n 25871: a5 = a5 | s1\n 25874: a3 = a3 | a5\n 25877: a3 = a3 << 0x20\n 25880: a2 = a2 | a3\n 25883: a3 = u8 [a0 + 0x19]\n 25886: a4 = u8 [a0 + 0x18]\n 25889: a5 = u8 [a0 + 0x1a]\n 25892: s1 = u8 [a0 + 0x1b]\n 25895: a3 = a3 << 0x8\n 25898: a3 = a3 | a4\n 25901: a5 = a5 << 0x10\n 25904: s1 = s1 << 0x18\n 25907: a5 = a5 | s1\n 25910: a3 = a3 | a5\n 25913: a4 = u8 [a0 + 0x1d]\n 25916: a5 = u8 [a0 + 0x1c]\n 25919: s1 = u8 [a0 + 0x1e]\n 25922: a1 = u8 [a0 + 0x1f]\n 25925: a4 = a4 << 0x8\n 25928: a4 = a4 | a5\n 25931: s1 = s1 << 0x10\n 25934: a1 = a1 << 0x18\n 25937: a1 = a1 | s1\n 25940: a1 = a1 | a4\n 25943: a1 = a1 << 0x20\n 25946: a3 = a3 | a1\n 25949: a1 = u8 [a0 + 0x9]\n 25952: a4 = u8 [a0 + 0x8]\n 25955: a5 = u8 [a0 + 0xa]\n 25958: s1 = u8 [a0 + 0xb]\n 25961: a1 = a1 << 0x8\n 25964: a1 = a1 | a4\n 25967: a5 = a5 << 0x10\n 25970: s1 = s1 << 0x18\n 25973: a5 = a5 | s1\n 25976: a1 = a1 | a5\n 25979: a4 = u8 [a0 + 0xd]\n 25982: a5 = u8 [a0 + 0xc]\n 25985: s1 = u8 [a0 + 0xe]\n 25988: a0 = u8 [a0 + 0xf]\n 25991: a4 = a4 << 0x8\n 25994: a4 = a4 | a5\n 25997: s1 = s1 << 0x10\n 26000: a0 = a0 << 0x18\n 26003: a0 = a0 | s1\n 26006: a0 = a0 | a4\n 26009: a0 = a0 << 0x20\n 26012: a0 = a0 | a1\n 26015: s1 = reverse a0\n 26017: a3 = reverse a3\n 26019: a4 = reverse a2\n 26021: a2 = reverse t0\n 26023: a0 = a2 | a4\n 26026: a1 = a3 | s1\n 26029: a1 = a1 | a0\n 26032: a1 = a1 >> 0x20\n 26035: a0 = a0 | s1\n 26038: a0 = a0 << 0x20\n 26041: a0 = a0 | a1\n 26044: jump @403 if a0 != 0\n      : @400 (gas: 19)\n 26048: a0 = a3 + 0x20\n 26051: u64 [sp + 0x18] = a0\n 26054: a0 = a0 <u a3\n 26057: a1 = a2 + a0\n 26060: u64 [sp + 0x8] = a1\n 26063: a1 = a1 <u a2\n 26066: a1 = a0 if a0 == 0\n 26069: a1 = a1 + s1\n 26072: u64 [sp + 0x10] = a1\n 26075: a0 = a1 <u s1\n 26078: a0 = a0 + a4\n 26081: u64 [sp + 0x20] = a0\n 26084: i32 a0 = a3 + 0\n 26086: a1 = 0x20\n 26089: u64 [sp] = a0\n 26091: u64 [sp + 0x30] = a3\n 26094: u64 [sp + 0x28] = a2\n 26097: u64 [sp + 0x38] = a4\n 26100: ra = 342, jump @0\n      : @401 [@dyn 171] (gas: 52)\n 26106: u8 [a0 + 31] = 0x20\n 26110: u8 [a0 + 30] = 0\n 26113: u8 [a0 + 29] = 0\n 26116: u8 [a0 + 28] = 0\n 26119: u8 [a0 + 27] = 0\n 26122: u8 [a0 + 26] = 0\n 26125: u8 [a0 + 25] = 0\n 26128: u8 [a0 + 24] = 0\n 26131: u8 [a0 + 23] = 0\n 26134: u8 [a0 + 22] = 0\n 26137: u8 [a0 + 21] = 0\n 26140: u8 [a0 + 20] = 0\n 26143: u8 [a0 + 19] = 0\n 26146: u8 [a0 + 18] = 0\n 26149: u8 [a0 + 17] = 0\n 26152: u8 [a0 + 16] = 0\n 26155: u8 [a0 + 15] = 0\n 26158: u8 [a0 + 14] = 0\n 26161: u8 [a0 + 13] = 0\n 26164: u8 [a0 + 12] = 0\n 26167: u8 [a0 + 11] = 0\n 26170: u8 [a0 + 10] = 0\n 26173: u8 [a0 + 9] = 0\n 26176: u8 [a0 + 8] = 0\n 26179: u8 [a0 + 7] = 0\n 26182: u8 [a0 + 6] = 0\n 26185: u8 [a0 + 5] = 0\n 26188: u8 [a0 + 4] = 0\n 26191: u8 [a0 + 3] = 0\n 26194: u8 [a0 + 2] = 0\n 26197: u8 [a0 + 1] = 0\n 26200: u8 [a0 + 0] = 0\n 26202: a0 = u64 [sp + 0x8]\n 26205: u64 [sp + 0x68] = a0\n 26208: a0 = u64 [sp + 0x18]\n 26211: u64 [sp + 0x60] = a0\n 26214: a0 = u64 [sp + 0x40]\n 26217: u64 [sp + 0x98] = a0\n 26221: a0 = u64 [sp + 0x48]\n 26224: u64 [sp + 0x90] = a0\n 26228: a0 = u64 [sp + 0x50]\n 26231: u64 [sp + 0x88] = a0\n 26235: a0 = u64 [sp + 0x58]\n 26238: u64 [sp + 0x80] = a0\n 26242: a0 = u64 [sp + 0x10]\n 26245: u64 [sp + 0x70] = a0\n 26248: a0 = sp + 0xa0\n 26252: a1 = sp + 0x80\n 26256: a2 = sp + 0x60\n 26259: a3 = u64 [sp + 0x20]\n 26262: u64 [sp + 0x78] = a3\n 26265: ra = 344, jump @262\n      : @402 [@dyn 172] (gas: 30)\n 26271: a0 = u64 [sp + 0xa8]\n 26275: t0 = u64 [sp + 0xb8]\n 26279: t1 = u64 [sp + 0xa0]\n 26283: a3 = u64 [sp + 0xb0]\n 26287: a1 = u64 [sp + 0x28]\n 26290: a4 = a0 ^ a1\n 26293: a5 = a0 <u a1\n 26296: t2 = a1\n 26298: a2 = u64 [sp + 0x30]\n 26301: a1 = t1 <u a2\n 26304: a5 = a1 if a4 == 0\n 26307: a4 = a3 - s1\n 26310: a3 = a3 <u s1\n 26313: s1 = u64 [sp + 0x38]\n 26316: s1 = t0 - s1\n 26319: s1 = s1 - a3\n 26322: a3 = a4 <u a5\n 26325: s1 = s1 - a3\n 26328: a4 = a4 - a5\n 26331: a0 = a0 - t2\n 26334: a1 = a0 - a1\n 26337: a0 = t1 - a2\n 26340: a1 = a1 | s1\n 26343: a2 = a0 | a4\n 26346: a2 = a2 | a1\n 26349: a1 = a1 | a4\n 26352: a2 = a2 >> 0x20\n 26355: a1 = a1 << 0x20\n 26358: a1 = a1 | a2\n 26361: jump @406 if a1 == 0\n      : @403 (gas: 1)\n 26364: trap\n      : @404 (gas: 3)\n 26365: a0 = 0\n 26367: a1 = 0\n 26369: ra = 346, jump @0\n      : @405 [@dyn 173] (gas: 5)\n 26375: i32 a1 = a0 + 0\n 26377: a0 = 0x1\n 26380: a2 = 0\n 26382: ecalli 7 // 'seal_return'\n 26384: fallthrough\n      : @406 (gas: 4)\n 26385: i32 s1 = a0 + 0\n 26387: a0 = u64 [sp]\n 26389: a1 = s1\n 26391: ra = 348, jump @0\n      : @407 [@dyn 174] (gas: 6)\n 26397: i32 a1 = a0 + 0\n 26399: a0 = 0\n 26401: a2 = s1\n 26403: ra = 0x15e\n 26407: ecalli 7 // 'seal_return'\n 26409: fallthrough\n      : @408 [@dyn 175] (gas: 13)\n 26410: sp = sp + 0xfffffffffffffe80\n 26414: u64 [sp + 0x178] = ra\n 26418: u64 [sp + 0x170] = s0\n 26422: u64 [sp + 0x168] = s1\n 26426: s0 = sp + 0x180\n 26430: sp = sp & 0xffffffffffffffe0\n 26433: u64 [sp + 312] = 0\n 26437: u64 [sp + 304] = 0\n 26441: u64 [sp + 296] = 0\n 26445: u64 [sp + 288] = 0\n 26449: i32 a0 = sp + 0x120\n 26453: ecalli 10 // 'value_transferred'\n 26455: fallthrough\n      : @409 (gas: 8)\n 26456: a0 = u64 [sp + 0x130]\n 26460: a1 = u64 [sp + 0x138]\n 26464: a2 = u64 [sp + 0x128]\n 26468: a3 = u64 [sp + 0x120]\n 26472: a1 = a1 | a2\n 26475: a0 = a0 | a3\n 26478: a0 = a0 | a1\n 26481: jump @415 if a0 != 0\n      : @410 (gas: 13)\n 26485: a0 = u32 [0x20044]\n 26490: u64 [sp + 184] = 0\n 26494: u64 [sp + 176] = 0\n 26498: u64 [sp + 168] = 0\n 26502: u64 [sp + 0xa0] = a0\n 26506: u64 [sp + 216] = 0\n 26510: u64 [sp + 208] = 0\n 26514: u64 [sp + 192] = 0x4\n 26519: a0 = sp + 0xe0\n 26523: a1 = sp + 0xc0\n 26527: a2 = sp + 0xa0\n 26531: u64 [sp + 200] = 0\n 26535: ra = 352, jump @301\n      : @411 [@dyn 176] (gas: 53)\n 26541: a0 = u64 [sp + 0xe0]\n 26545: u64 [sp + 0x38] = a0\n 26548: a0 = u64 [sp + 0xe8]\n 26552: u64 [sp + 0x30] = a0\n 26555: a0 = u64 [sp + 0xf0]\n 26559: u64 [sp + 0x28] = a0\n 26562: a0 = u64 [sp + 0xf8]\n 26566: u64 [sp + 0x20] = a0\n 26569: a0 = u64 [sp + 0x100]\n 26573: u64 [sp + 0x18] = a0\n 26576: a0 = u64 [sp + 0x108]\n 26580: u64 [sp + 0x10] = a0\n 26583: a0 = u64 [sp + 0x110]\n 26587: u64 [sp + 0x8] = a0\n 26590: s1 = u64 [sp + 0x118]\n 26594: i32 a0 = sp + 0x140\n 26598: ecalli 3 // 'caller'\n 26600: a0 = u64 [sp + 0x148]\n 26604: a1 = i32 [sp + 0x150]\n 26608: a2 = u64 [sp + 0x140]\n 26612: a0 = reverse a0\n 26614: a3 = a0 << 0x20\n 26617: a1 = reverse a1\n 26619: a1 = a1 >> 0x20\n 26622: a3 = a3 | a1\n 26625: a0 = a0 >> 0x20\n 26628: a1 = reverse a2\n 26630: a2 = a1 << 0x20\n 26633: a0 = a0 | a2\n 26636: a1 = a1 >> 0x20\n 26639: u64 [sp + 0x58] = s1\n 26642: a2 = u64 [sp + 0x8]\n 26645: u64 [sp + 0x50] = a2\n 26648: a2 = u64 [sp + 0x10]\n 26651: u64 [sp + 0x48] = a2\n 26654: a2 = u64 [sp + 0x18]\n 26657: u64 [sp + 0x40] = a2\n 26660: a2 = u64 [sp + 0x20]\n 26663: u64 [sp + 0x78] = a2\n 26666: a2 = u64 [sp + 0x28]\n 26669: u64 [sp + 0x70] = a2\n 26672: a2 = u64 [sp + 0x30]\n 26675: u64 [sp + 0x68] = a2\n 26678: a2 = u64 [sp + 0x38]\n 26681: u64 [sp + 0x60] = a2\n 26684: u64 [sp + 152] = 0\n 26688: u64 [sp + 0x90] = a1\n 26692: u64 [sp + 0x88] = a0\n 26696: a0 = sp + 0x80\n 26700: a1 = sp + 0x60\n 26703: a2 = sp + 0x40\n 26706: u64 [sp + 0x80] = a3\n 26710: ra = 354, jump @504\n      : @412 [@dyn 177] (gas: 3)\n 26716: a0 = 0x40\n 26719: a1 = 0x20\n 26722: ra = 356, jump @0\n      : @413 [@dyn 178] (gas: 100)\n 26728: a1 = u8 [a0 + 0x11]\n 26731: a2 = u8 [a0 + 0x10]\n 26734: a3 = u8 [a0 + 0x12]\n 26737: a4 = u8 [a0 + 0x13]\n 26740: a1 = a1 << 0x8\n 26743: a1 = a1 | a2\n 26746: a3 = a3 << 0x10\n 26749: a4 = a4 << 0x18\n 26752: a3 = a3 | a4\n 26755: a1 = a1 | a3\n 26758: a2 = u8 [a0 + 0x15]\n 26761: a3 = u8 [a0 + 0x14]\n 26764: a4 = u8 [a0 + 0x16]\n 26767: a5 = u8 [a0 + 0x17]\n 26770: a2 = a2 << 0x8\n 26773: a2 = a2 | a3\n 26776: a4 = a4 << 0x10\n 26779: a5 = a5 << 0x18\n 26782: a4 = a4 | a5\n 26785: a2 = a2 | a4\n 26788: a2 = a2 << 0x20\n 26791: t0 = a2 | a1\n 26794: a2 = u8 [a0 + 0x1]\n 26797: a3 = u8 [a0]\n 26799: a4 = u8 [a0 + 0x2]\n 26802: a5 = u8 [a0 + 0x3]\n 26805: a2 = a2 << 0x8\n 26808: a2 = a2 | a3\n 26811: a4 = a4 << 0x10\n 26814: a5 = a5 << 0x18\n 26817: a4 = a4 | a5\n 26820: a2 = a2 | a4\n 26823: a3 = u8 [a0 + 0x5]\n 26826: a4 = u8 [a0 + 0x4]\n 26829: a5 = u8 [a0 + 0x6]\n 26832: s1 = u8 [a0 + 0x7]\n 26835: a3 = a3 << 0x8\n 26838: a3 = a3 | a4\n 26841: a5 = a5 << 0x10\n 26844: s1 = s1 << 0x18\n 26847: a5 = a5 | s1\n 26850: a3 = a3 | a5\n 26853: a3 = a3 << 0x20\n 26856: a2 = a2 | a3\n 26859: a3 = u8 [a0 + 0x19]\n 26862: a4 = u8 [a0 + 0x18]\n 26865: a5 = u8 [a0 + 0x1a]\n 26868: s1 = u8 [a0 + 0x1b]\n 26871: a3 = a3 << 0x8\n 26874: a3 = a3 | a4\n 26877: a5 = a5 << 0x10\n 26880: s1 = s1 << 0x18\n 26883: a5 = a5 | s1\n 26886: a3 = a3 | a5\n 26889: a4 = u8 [a0 + 0x1d]\n 26892: a5 = u8 [a0 + 0x1c]\n 26895: s1 = u8 [a0 + 0x1e]\n 26898: a1 = u8 [a0 + 0x1f]\n 26901: a4 = a4 << 0x8\n 26904: a4 = a4 | a5\n 26907: s1 = s1 << 0x10\n 26910: a1 = a1 << 0x18\n 26913: a1 = a1 | s1\n 26916: a1 = a1 | a4\n 26919: a1 = a1 << 0x20\n 26922: a3 = a3 | a1\n 26925: a1 = u8 [a0 + 0x9]\n 26928: a4 = u8 [a0 + 0x8]\n 26931: a5 = u8 [a0 + 0xa]\n 26934: s1 = u8 [a0 + 0xb]\n 26937: a1 = a1 << 0x8\n 26940: a1 = a1 | a4\n 26943: a5 = a5 << 0x10\n 26946: s1 = s1 << 0x18\n 26949: a5 = a5 | s1\n 26952: a1 = a1 | a5\n 26955: a4 = u8 [a0 + 0xd]\n 26958: a5 = u8 [a0 + 0xc]\n 26961: s1 = u8 [a0 + 0xe]\n 26964: a0 = u8 [a0 + 0xf]\n 26967: a4 = a4 << 0x8\n 26970: a4 = a4 | a5\n 26973: s1 = s1 << 0x10\n 26976: a0 = a0 << 0x18\n 26979: a0 = a0 | s1\n 26982: a0 = a0 | a4\n 26985: a0 = a0 << 0x20\n 26988: a0 = a0 | a1\n 26991: a0 = reverse a0\n 26993: s1 = reverse a3\n 26995: a1 = reverse a2\n 26997: a2 = reverse t0\n 26999: a1 = a1 | a2\n 27002: a2 = s1 | a0\n 27005: a2 = a2 | a1\n 27008: a2 = a2 >> 0x20\n 27011: a0 = a0 | a1\n 27014: a0 = a0 << 0x20\n 27017: a0 = a0 | a2\n 27020: jump @417 if a0 == 0\n      : @414 (gas: 1)\n 27023: trap\n      : @415 (gas: 3)\n 27024: a0 = 0\n 27026: a1 = 0\n 27028: ra = 358, jump @0\n      : @416 [@dyn 179] (gas: 5)\n 27034: i32 a1 = a0 + 0\n 27036: a0 = 0x1\n 27039: a2 = 0\n 27041: ecalli 7 // 'seal_return'\n 27043: fallthrough\n      : @417 (gas: 4)\n 27044: i32 s1 = s1 + 0\n 27046: a1 = 0x20\n 27049: a0 = s1\n 27051: ra = 360, jump @0\n      : @418 [@dyn 180] (gas: 35)\n 27057: u8 [a0 + 31] = 0x1\n 27061: u8 [a0 + 30] = 0\n 27064: u8 [a0 + 29] = 0\n 27067: u8 [a0 + 28] = 0\n 27070: u8 [a0 + 27] = 0\n 27073: u8 [a0 + 26] = 0\n 27076: u8 [a0 + 25] = 0\n 27079: u8 [a0 + 24] = 0\n 27082: u8 [a0 + 23] = 0\n 27085: u8 [a0 + 22] = 0\n 27088: u8 [a0 + 21] = 0\n 27091: u8 [a0 + 20] = 0\n 27094: u8 [a0 + 19] = 0\n 27097: u8 [a0 + 18] = 0\n 27100: u8 [a0 + 17] = 0\n 27103: u8 [a0 + 16] = 0\n 27106: u8 [a0 + 15] = 0\n 27109: u8 [a0 + 14] = 0\n 27112: u8 [a0 + 13] = 0\n 27115: u8 [a0 + 12] = 0\n 27118: u8 [a0 + 11] = 0\n 27121: u8 [a0 + 10] = 0\n 27124: u8 [a0 + 9] = 0\n 27127: u8 [a0 + 8] = 0\n 27130: u8 [a0 + 7] = 0\n 27133: u8 [a0 + 6] = 0\n 27136: u8 [a0 + 5] = 0\n 27139: u8 [a0 + 4] = 0\n 27142: u8 [a0 + 3] = 0\n 27145: u8 [a0 + 2] = 0\n 27148: u8 [a0 + 1] = 0\n 27151: u8 [a0 + 0] = 0\n 27153: a1 = 0x20\n 27156: a0 = s1\n 27158: ra = 362, jump @0\n      : @419 [@dyn 181] (gas: 6)\n 27164: i32 a1 = a0 + 0\n 27166: a2 = 0x20\n 27169: a0 = 0\n 27171: ra = 0x16c\n 27175: ecalli 7 // 'seal_return'\n 27177: fallthrough\n      : @420 [@dyn 182] (gas: 47)\n 27178: sp = sp + 0xffffffffffffff80\n 27181: u64 [sp + 0x78] = ra\n 27184: u64 [sp + 0x70] = s0\n 27187: u64 [sp + 0x68] = s1\n 27190: s0 = sp + 0x80\n 27194: sp = sp & 0xffffffffffffffe0\n 27197: ra = u64 [a1 + 0x10]\n 27200: a5 = u64 [a1 + 0x8]\n 27203: a3 = u64 [a2 + 0x8]\n 27206: t1 = u64 [a1]\n 27208: a4 = u64 [a2]\n 27210: u64 [sp + 0x28] = a4\n 27213: t2 = u64 [a2 + 0x10]\n 27216: t0 = a3 ^ a5\n 27219: s1 = a3 <u a5\n 27222: a4 = a4 <u t1\n 27225: u64 [sp + 0x20] = a4\n 27228: s1 = a4 if t0 == 0\n 27231: t0 = u64 [a1 + 0x18]\n 27234: a1 = u64 [a2 + 0x18]\n 27237: u64 [sp + 0x18] = a1\n 27240: a2 = t2 - ra\n 27243: a1 = a2 - s1\n 27246: u64 [sp + 0x30] = a1\n 27249: a1 = a2 <u s1\n 27252: a4 = t2 <u ra\n 27255: u64 [sp + 0x38] = t0\n 27258: a2 = u64 [sp + 0x18]\n 27261: a2 = a2 - t0\n 27264: a2 = a2 - a4\n 27267: a2 = a2 - a1\n 27270: a1 = a3 - a5\n 27273: a3 = u64 [sp + 0x20]\n 27276: a1 = a1 - a3\n 27279: a3 = u64 [sp + 0x28]\n 27282: a3 = a3 - t1\n 27285: a4 = a1 >u 0\n 27287: a3 = a3 <u 0x40\n 27290: a3 = a3 ^ 0x1\n 27293: a3 = a4 if a1 != 0\n 27296: s1 = a2 >s 0\n 27298: a1 = u64 [sp + 0x30]\n 27301: a4 = a1 >u 0\n 27303: a4 = s1 if a2 != 0\n 27306: a1 = a1 | a2\n 27309: a3 = a4 if a1 != 0\n 27312: jump @429 if a3 == 0\n      : @421 (gas: 12)\n 27316: s1 = a0\n 27318: a0 = t1 | ra\n 27321: u64 [sp + 0x30] = a5\n 27324: a1 = u64 [sp + 0x38]\n 27327: a1 = a1 | a5\n 27330: a0 = a0 | a1\n 27333: a0 = a0 >> 0x20\n 27336: u64 [sp + 0x28] = ra\n 27339: a1 = a1 | ra\n 27342: a1 = a1 << 0x20\n 27345: a0 = a0 | a1\n 27348: jump @428 if a0 != 0\n      : @422 (gas: 6)\n 27352: u64 [sp + 0x20] = t1\n 27355: i32 a1 = t1 + 0\n 27357: i32 a0 = sp + 0x40\n 27360: u64 [sp + 0x8] = a1\n 27363: ecalli 1 // 'call_data_load'\n 27365: fallthrough\n      : @423 (gas: 10)\n 27366: a4 = u64 [sp + 0x50]\n 27369: a3 = u64 [sp + 0x58]\n 27372: a0 = 0x100000000\n 27382: a1 = a4 ^ a0\n 27385: a1 = a1 | a3\n 27388: a2 = a4 >> 0x20\n 27391: a2 = a2 <u 0x1\n 27394: a2 = 0 if a3 != 0\n 27396: a2 = 0 if a1 == 0\n 27398: jump @429 if a2 == 0\n      : @424 (gas: 12)\n 27402: u64 [sp + 0x10] = a4\n 27405: u64 [sp + 0x18] = a3\n 27408: a1 = u64 [sp + 0x28]\n 27411: a2 = u64 [sp + 0x38]\n 27414: a1 = a1 | a2\n 27417: a0 = 0xffffffe0\n 27427: a2 = u64 [sp + 0x20]\n 27430: a0 = a2 <u a0\n 27433: a2 = u64 [sp + 0x30]\n 27436: a0 = 0 if a2 != 0\n 27438: a0 = 0 if a1 != 0\n 27440: jump @428 if a0 == 0\n      : @425 (gas: 9)\n 27443: a0 = u64 [sp + 0x48]\n 27446: u64 [sp + 0x30] = a0\n 27449: a0 = u64 [sp + 0x40]\n 27452: u64 [sp + 0x38] = a0\n 27455: a0 = u64 [sp + 0x8]\n 27458: i32 a1 = a0 + 0x20\n 27461: i32 a0 = sp + 0x40\n 27464: ecalli 1 // 'call_data_load'\n 27466: fallthrough\n      : @426 (gas: 10)\n 27467: a1 = u64 [sp + 0x50]\n 27470: a0 = u64 [sp + 0x58]\n 27473: a2 = 0x100000000\n 27483: a2 = a2 ^ a1\n 27486: a2 = a2 | a0\n 27489: a3 = a1 >> 0x20\n 27492: a3 = a3 <u 0x1\n 27495: a3 = 0 if a0 != 0\n 27497: a3 = 0 if a2 == 0\n 27499: jump @429 if a3 == 0\n      : @427 (gas: 20)\n 27502: a2 = u64 [sp + 0x48]\n 27505: a3 = u64 [sp + 0x40]\n 27508: u64 [s1 + 0x28] = a2\n 27511: u64 [s1 + 0x20] = a3\n 27514: a2 = u64 [sp + 0x30]\n 27517: u64 [s1 + 0x8] = a2\n 27520: a2 = u64 [sp + 0x38]\n 27523: u64 [s1] = a2\n 27525: u64 [s1 + 0x30] = a1\n 27528: a1 = u64 [sp + 0x10]\n 27531: u64 [s1 + 0x10] = a1\n 27534: u64 [s1 + 0x38] = a0\n 27537: a0 = u64 [sp + 0x18]\n 27540: u64 [s1 + 0x18] = a0\n 27543: sp = s0 + 0xffffffffffffff80\n 27546: ra = u64 [sp + 0x78]\n 27549: s0 = u64 [sp + 0x70]\n 27552: s1 = u64 [sp + 0x68]\n 27555: sp = sp + 0x80\n 27559: ret\n      : @428 (gas: 1)\n 27561: trap\n      : @429 (gas: 3)\n 27562: a0 = 0\n 27564: a1 = 0\n 27566: ra = 366, jump @0\n      : @430 [@dyn 183] (gas: 6)\n 27572: i32 a1 = a0 + 0\n 27574: a0 = 0x1\n 27577: a2 = 0\n 27579: ra = 0x170\n 27583: ecalli 7 // 'seal_return'\n 27585: fallthrough\n      : @431 [@dyn 184] (gas: 13)\n 27586: sp = sp + 0xfffffffffffffec0\n 27590: u64 [sp + 0x138] = ra\n 27594: u64 [sp + 0x130] = s0\n 27598: u64 [sp + 0x128] = s1\n 27602: s0 = sp + 0x140\n 27606: sp = sp & 0xffffffffffffffe0\n 27609: u64 [sp + 280] = 0\n 27613: u64 [sp + 272] = 0\n 27617: u64 [sp + 264] = 0\n 27621: u64 [sp + 256] = 0\n 27625: i32 a0 = sp + 0x100\n 27629: ecalli 10 // 'value_transferred'\n 27631: fallthrough\n      : @432 (gas: 8)\n 27632: a0 = u64 [sp + 0x110]\n 27636: a1 = u64 [sp + 0x118]\n 27640: a2 = u64 [sp + 0x108]\n 27644: a3 = u64 [sp + 0x100]\n 27648: a1 = a1 | a2\n 27651: a0 = a0 | a3\n 27654: a0 = a0 | a1\n 27657: jump @438 if a0 != 0\n      : @433 (gas: 13)\n 27661: a0 = u32 [0x20044]\n 27666: u64 [sp + 152] = 0\n 27670: u64 [sp + 144] = 0\n 27674: u64 [sp + 136] = 0\n 27678: u64 [sp + 0x80] = a0\n 27682: u64 [sp + 184] = 0\n 27686: u64 [sp + 176] = 0\n 27690: u64 [sp + 160] = 0x4\n 27695: a0 = sp + 0xc0\n 27699: a1 = sp + 0xa0\n 27703: a2 = sp + 0x80\n 27707: u64 [sp + 168] = 0\n 27711: ra = 370, jump @420\n      : @434 [@dyn 185] (gas: 20)\n 27717: t0 = u64 [sp + 0xc0]\n 27721: a0 = u64 [sp + 0xc8]\n 27725: a1 = u64 [sp + 0xd0]\n 27729: a2 = u64 [sp + 0xd8]\n 27733: a4 = u64 [sp + 0xe0]\n 27737: a5 = u64 [sp + 0xe8]\n 27741: s1 = u64 [sp + 0xf0]\n 27745: a3 = u64 [sp + 0xf8]\n 27749: u64 [sp + 0x38] = a3\n 27752: u64 [sp + 0x30] = s1\n 27755: u64 [sp + 0x28] = a5\n 27758: u64 [sp + 0x20] = a4\n 27761: u64 [sp + 0x58] = a2\n 27764: u64 [sp + 0x50] = a1\n 27767: u64 [sp + 0x48] = a0\n 27770: a0 = sp + 0x60\n 27773: a1 = sp + 0x40\n 27776: a2 = sp + 0x20\n 27779: u64 [sp + 0x40] = t0\n 27782: ra = 372, jump @486\n      : @435 [@dyn 186] (gas: 11)\n 27788: a0 = u64 [sp + 0x78]\n 27791: u64 [sp] = a0\n 27793: a0 = u64 [sp + 0x70]\n 27796: u64 [sp + 0x8] = a0\n 27799: a0 = u64 [sp + 0x68]\n 27802: u64 [sp + 0x10] = a0\n 27805: a0 = u64 [sp + 0x60]\n 27808: u64 [sp + 0x18] = a0\n 27811: a0 = 0x40\n 27814: a1 = 0x20\n 27817: ra = 374, jump @0\n      : @436 [@dyn 187] (gas: 100)\n 27823: a1 = u8 [a0 + 0x11]\n 27826: a2 = u8 [a0 + 0x10]\n 27829: a3 = u8 [a0 + 0x12]\n 27832: a4 = u8 [a0 + 0x13]\n 27835: a1 = a1 << 0x8\n 27838: a1 = a1 | a2\n 27841: a3 = a3 << 0x10\n 27844: a4 = a4 << 0x18\n 27847: a3 = a3 | a4\n 27850: a1 = a1 | a3\n 27853: a2 = u8 [a0 + 0x15]\n 27856: a3 = u8 [a0 + 0x14]\n 27859: a4 = u8 [a0 + 0x16]\n 27862: a5 = u8 [a0 + 0x17]\n 27865: a2 = a2 << 0x8\n 27868: a2 = a2 | a3\n 27871: a4 = a4 << 0x10\n 27874: a5 = a5 << 0x18\n 27877: a4 = a4 | a5\n 27880: a2 = a2 | a4\n 27883: a2 = a2 << 0x20\n 27886: t0 = a2 | a1\n 27889: a2 = u8 [a0 + 0x1]\n 27892: a3 = u8 [a0]\n 27894: a4 = u8 [a0 + 0x2]\n 27897: a5 = u8 [a0 + 0x3]\n 27900: a2 = a2 << 0x8\n 27903: a2 = a2 | a3\n 27906: a4 = a4 << 0x10\n 27909: a5 = a5 << 0x18\n 27912: a4 = a4 | a5\n 27915: a2 = a2 | a4\n 27918: a3 = u8 [a0 + 0x5]\n 27921: a4 = u8 [a0 + 0x4]\n 27924: a5 = u8 [a0 + 0x6]\n 27927: s1 = u8 [a0 + 0x7]\n 27930: a3 = a3 << 0x8\n 27933: a3 = a3 | a4\n 27936: a5 = a5 << 0x10\n 27939: s1 = s1 << 0x18\n 27942: a5 = a5 | s1\n 27945: a3 = a3 | a5\n 27948: a3 = a3 << 0x20\n 27951: a2 = a2 | a3\n 27954: a3 = u8 [a0 + 0x19]\n 27957: a4 = u8 [a0 + 0x18]\n 27960: a5 = u8 [a0 + 0x1a]\n 27963: s1 = u8 [a0 + 0x1b]\n 27966: a3 = a3 << 0x8\n 27969: a3 = a3 | a4\n 27972: a5 = a5 << 0x10\n 27975: s1 = s1 << 0x18\n 27978: a5 = a5 | s1\n 27981: a3 = a3 | a5\n 27984: a4 = u8 [a0 + 0x1d]\n 27987: a5 = u8 [a0 + 0x1c]\n 27990: s1 = u8 [a0 + 0x1e]\n 27993: a1 = u8 [a0 + 0x1f]\n 27996: a4 = a4 << 0x8\n 27999: a4 = a4 | a5\n 28002: s1 = s1 << 0x10\n 28005: a1 = a1 << 0x18\n 28008: a1 = a1 | s1\n 28011: a1 = a1 | a4\n 28014: a1 = a1 << 0x20\n 28017: a3 = a3 | a1\n 28020: a1 = u8 [a0 + 0x9]\n 28023: a4 = u8 [a0 + 0x8]\n 28026: a5 = u8 [a0 + 0xa]\n 28029: s1 = u8 [a0 + 0xb]\n 28032: a1 = a1 << 0x8\n 28035: a1 = a1 | a4\n 28038: a5 = a5 << 0x10\n 28041: s1 = s1 << 0x18\n 28044: a5 = a5 | s1\n 28047: a1 = a1 | a5\n 28050: a4 = u8 [a0 + 0xd]\n 28053: a5 = u8 [a0 + 0xc]\n 28056: s1 = u8 [a0 + 0xe]\n 28059: a0 = u8 [a0 + 0xf]\n 28062: a4 = a4 << 0x8\n 28065: a4 = a4 | a5\n 28068: s1 = s1 << 0x10\n 28071: a0 = a0 << 0x18\n 28074: a0 = a0 | s1\n 28077: a0 = a0 | a4\n 28080: a0 = a0 << 0x20\n 28083: a0 = a0 | a1\n 28086: a1 = reverse a0\n 28088: a0 = reverse a3\n 28090: a2 = reverse a2\n 28092: a3 = reverse t0\n 28094: a2 = a2 | a3\n 28097: a3 = a0 | a1\n 28100: a3 = a3 | a2\n 28103: a3 = a3 >> 0x20\n 28106: a1 = a1 | a2\n 28109: a1 = a1 << 0x20\n 28112: a1 = a1 | a3\n 28115: jump @440 if a1 == 0\n      : @437 (gas: 1)\n 28118: trap\n      : @438 (gas: 3)\n 28119: a0 = 0\n 28121: a1 = 0\n 28123: ra = 376, jump @0\n      : @439 [@dyn 188] (gas: 5)\n 28129: i32 a1 = a0 + 0\n 28131: a0 = 0x1\n 28134: a2 = 0\n 28136: ecalli 7 // 'seal_return'\n 28138: fallthrough\n      : @440 (gas: 4)\n 28139: i32 s1 = a0 + 0\n 28141: a1 = 0x20\n 28144: a0 = s1\n 28146: ra = 378, jump @0\n      : @441 [@dyn 189] (gas: 71)\n 28152: a1 = u64 [sp]\n 28154: a1 = reverse a1\n 28156: a2 = u64 [sp + 0x8]\n 28159: a2 = reverse a2\n 28161: a3 = u64 [sp + 0x10]\n 28164: a3 = reverse a3\n 28166: a4 = u64 [sp + 0x18]\n 28169: a4 = reverse a4\n 28171: a5 = a4 >> 0x38\n 28174: u8 [a0 + 0x1f] = a5\n 28177: a5 = a4 >> 0x30\n 28180: u8 [a0 + 0x1e] = a5\n 28183: a5 = a4 >> 0x28\n 28186: u8 [a0 + 0x1d] = a5\n 28189: a5 = a4 >> 0x20\n 28192: u8 [a0 + 0x1c] = a5\n 28195: a5 = a4 >> 0x18\n 28198: u8 [a0 + 0x1b] = a5\n 28201: a5 = a4 >> 0x10\n 28204: u8 [a0 + 0x1a] = a5\n 28207: a5 = a4 >> 0x8\n 28210: u8 [a0 + 0x19] = a5\n 28213: u8 [a0 + 0x18] = a4\n 28216: u8 [a0 + 0x10] = a3\n 28219: a4 = a3 >> 0x38\n 28222: u8 [a0 + 0x17] = a4\n 28225: a4 = a3 >> 0x30\n 28228: u8 [a0 + 0x16] = a4\n 28231: a4 = a3 >> 0x28\n 28234: u8 [a0 + 0x15] = a4\n 28237: a4 = a3 >> 0x20\n 28240: u8 [a0 + 0x14] = a4\n 28243: a4 = a3 >> 0x18\n 28246: u8 [a0 + 0x13] = a4\n 28249: a4 = a3 >> 0x10\n 28252: u8 [a0 + 0x12] = a4\n 28255: a3 = a3 >> 0x8\n 28258: u8 [a0 + 0x11] = a3\n 28261: u8 [a0 + 0x8] = a2\n 28264: a3 = a2 >> 0x38\n 28267: u8 [a0 + 0xf] = a3\n 28270: a3 = a2 >> 0x30\n 28273: u8 [a0 + 0xe] = a3\n 28276: a3 = a2 >> 0x28\n 28279: u8 [a0 + 0xd] = a3\n 28282: a3 = a2 >> 0x20\n 28285: u8 [a0 + 0xc] = a3\n 28288: a3 = a2 >> 0x18\n 28291: u8 [a0 + 0xb] = a3\n 28294: a3 = a2 >> 0x10\n 28297: u8 [a0 + 0xa] = a3\n 28300: a2 = a2 >> 0x8\n 28303: u8 [a0 + 0x9] = a2\n 28306: u8 [a0] = a1\n 28308: a2 = a1 >> 0x38\n 28311: u8 [a0 + 0x7] = a2\n 28314: a2 = a1 >> 0x30\n 28317: u8 [a0 + 0x6] = a2\n 28320: a2 = a1 >> 0x28\n 28323: u8 [a0 + 0x5] = a2\n 28326: a2 = a1 >> 0x20\n 28329: u8 [a0 + 0x4] = a2\n 28332: a2 = a1 >> 0x18\n 28335: u8 [a0 + 0x3] = a2\n 28338: a2 = a1 >> 0x10\n 28341: u8 [a0 + 0x2] = a2\n 28344: a1 = a1 >> 0x8\n 28347: u8 [a0 + 0x1] = a1\n 28350: a1 = 0x20\n 28353: a0 = s1\n 28355: ra = 380, jump @0\n      : @442 [@dyn 190] (gas: 6)\n 28361: i32 a1 = a0 + 0\n 28363: a2 = 0x20\n 28366: a0 = 0\n 28368: ra = 0x17e\n 28372: ecalli 7 // 'seal_return'\n 28374: fallthrough\n      : @443 [@dyn 191] (gas: 6)\n 28375: u64 [a0 + 24] = 0\n 28378: u64 [a0 + 16] = 0\n 28381: u64 [a0 + 8] = 0\n 28384: a1 = 0x60\n 28387: u64 [a0] = a1\n 28389: ret\n      : @444 (gas: 20)\n 28391: sp = sp + 0xffffffffffffffb0\n 28394: u64 [sp + 0x48] = ra\n 28397: u64 [sp + 0x40] = s0\n 28400: u64 [sp + 0x38] = s1\n 28403: a4 = u64 [a1 + 0x10]\n 28406: a3 = u64 [a1 + 0x18]\n 28409: a5 = u64 [a1 + 0x8]\n 28412: s0 = u64 [a1]\n 28414: u64 [sp + 0x28] = a3\n 28417: u64 [sp + 0x20] = a5\n 28420: a1 = a5 | a3\n 28423: a3 = s0 | a4\n 28426: a3 = a3 | a1\n 28429: a3 = a3 >> 0x20\n 28432: u64 [sp + 0x30] = a4\n 28435: a1 = a1 | a4\n 28438: a1 = a1 << 0x20\n 28441: a1 = a1 | a3\n 28444: u64 [sp + 0x18] = a0\n 28447: jump @447 if a1 != 0\n      : @445 (gas: 10)\n 28451: a0 = u64 [a2 + 0x18]\n 28454: u64 [sp] = a0\n 28456: s1 = u64 [a2 + 0x10]\n 28459: a0 = u64 [a2 + 0x8]\n 28462: u64 [sp + 0x8] = a0\n 28465: a0 = u64 [a2]\n 28467: u64 [sp + 0x10] = a0\n 28470: i32 a0 = s0 + 0\n 28472: a1 = 0x20\n 28475: ra = 384, jump @0\n      : @446 [@dyn 192] (gas: 88)\n 28481: a1 = u64 [sp]\n 28483: a1 = reverse a1\n 28485: a2 = reverse s1\n 28487: a3 = u64 [sp + 0x8]\n 28490: a3 = reverse a3\n 28492: a4 = u64 [sp + 0x10]\n 28495: a4 = reverse a4\n 28497: a5 = a4 >> 0x38\n 28500: u8 [a0 + 0x1f] = a5\n 28503: a5 = a4 >> 0x30\n 28506: u8 [a0 + 0x1e] = a5\n 28509: a5 = a4 >> 0x28\n 28512: u8 [a0 + 0x1d] = a5\n 28515: a5 = a4 >> 0x20\n 28518: u8 [a0 + 0x1c] = a5\n 28521: a5 = a4 >> 0x18\n 28524: u8 [a0 + 0x1b] = a5\n 28527: a5 = a4 >> 0x10\n 28530: u8 [a0 + 0x1a] = a5\n 28533: a5 = a4 >> 0x8\n 28536: u8 [a0 + 0x19] = a5\n 28539: u8 [a0 + 0x18] = a4\n 28542: u8 [a0 + 0x10] = a3\n 28545: a4 = a3 >> 0x38\n 28548: u8 [a0 + 0x17] = a4\n 28551: a4 = a3 >> 0x30\n 28554: u8 [a0 + 0x16] = a4\n 28557: a4 = a3 >> 0x28\n 28560: u8 [a0 + 0x15] = a4\n 28563: a4 = a3 >> 0x20\n 28566: u8 [a0 + 0x14] = a4\n 28569: a4 = a3 >> 0x18\n 28572: u8 [a0 + 0x13] = a4\n 28575: a4 = a3 >> 0x10\n 28578: u8 [a0 + 0x12] = a4\n 28581: a3 = a3 >> 0x8\n 28584: u8 [a0 + 0x11] = a3\n 28587: u8 [a0 + 0x8] = a2\n 28590: a3 = a2 >> 0x38\n 28593: u8 [a0 + 0xf] = a3\n 28596: a3 = a2 >> 0x30\n 28599: u8 [a0 + 0xe] = a3\n 28602: a3 = a2 >> 0x28\n 28605: u8 [a0 + 0xd] = a3\n 28608: a3 = a2 >> 0x20\n 28611: u8 [a0 + 0xc] = a3\n 28614: a3 = a2 >> 0x18\n 28617: u8 [a0 + 0xb] = a3\n 28620: a3 = a2 >> 0x10\n 28623: u8 [a0 + 0xa] = a3\n 28626: a2 = a2 >> 0x8\n 28629: u8 [a0 + 0x9] = a2\n 28632: u8 [a0] = a1\n 28634: a2 = a1 >> 0x38\n 28637: u8 [a0 + 0x7] = a2\n 28640: a2 = a1 >> 0x30\n 28643: u8 [a0 + 0x6] = a2\n 28646: a2 = a1 >> 0x28\n 28649: u8 [a0 + 0x5] = a2\n 28652: a2 = a1 >> 0x20\n 28655: u8 [a0 + 0x4] = a2\n 28658: a2 = a1 >> 0x18\n 28661: u8 [a0 + 0x3] = a2\n 28664: a2 = a1 >> 0x10\n 28667: u8 [a0 + 0x2] = a2\n 28670: a1 = a1 >> 0x8\n 28673: u8 [a0 + 0x1] = a1\n 28676: a0 = s0 + 0x20\n 28679: a1 = a0 <u s0\n 28682: a3 = u64 [sp + 0x20]\n 28685: a2 = a3 + a1\n 28688: a3 = a2 <u a3\n 28691: a3 = a1 if a1 == 0\n 28694: a1 = u64 [sp + 0x30]\n 28697: a3 = a3 + a1\n 28700: a1 = a3 <u a1\n 28703: a4 = u64 [sp + 0x28]\n 28706: a1 = a1 + a4\n 28709: a4 = u64 [sp + 0x18]\n 28712: u64 [a4] = a0\n 28714: u64 [a4 + 0x8] = a2\n 28717: u64 [a4 + 0x10] = a3\n 28720: u64 [a4 + 0x18] = a1\n 28723: ra = u64 [sp + 0x48]\n 28726: s0 = u64 [sp + 0x40]\n 28729: s1 = u64 [sp + 0x38]\n 28732: sp = sp + 0x50\n 28735: ret\n      : @447 (gas: 1)\n 28737: trap\n      : @448 (gas: 39)\n 28738: sp = sp + 0xfffffffffffffea0\n 28742: u64 [sp + 0x158] = ra\n 28746: u64 [sp + 0x150] = s0\n 28750: u64 [sp + 0x148] = s1\n 28754: s0 = sp + 0x160\n 28758: sp = sp & 0xffffffffffffffe0\n 28761: u64 [sp + 0x8] = a0\n 28764: a0 = u64 [a2 + 0x18]\n 28767: u64 [sp + 0xb0] = a0\n 28771: a0 = u64 [a2 + 0x10]\n 28774: u64 [sp + 0xa8] = a0\n 28778: a0 = u64 [a2 + 0x8]\n 28781: u64 [sp + 0xa0] = a0\n 28785: a0 = u64 [a2]\n 28787: u64 [sp + 0xb8] = a0\n 28791: a4 = u64 [a1 + 0x18]\n 28794: a3 = u64 [a1 + 0x10]\n 28797: a2 = u64 [a1 + 0x8]\n 28800: a0 = u64 [a1]\n 28802: u64 [sp + 0x18] = a4\n 28805: u64 [sp + 0x118] = a4\n 28809: u64 [sp + 0x20] = a3\n 28812: u64 [sp + 0x110] = a3\n 28816: u64 [sp + 0x68] = a2\n 28819: u64 [sp + 0x108] = a2\n 28823: u64 [sp + 0x70] = a0\n 28826: u64 [sp + 0x100] = a0\n 28830: u64 [sp + 312] = 0\n 28834: u64 [sp + 304] = 0\n 28838: u64 [sp + 296] = 0\n 28842: u64 [sp + 288] = 0\n 28846: u32 [sp + 320] = 0x20\n 28851: i32 a1 = sp + 0x100\n 28855: i32 a3 = sp + 0x120\n 28859: i32 a4 = sp + 0x140\n 28863: a2 = 0xffffffffffffffff\n 28866: a0 = 0\n 28868: ecalli 5 // 'get_storage'\n 28870: fallthrough\n      : @449 (gas: 32)\n 28871: t0 = u64 [sp + 0x130]\n 28875: t1 = u64 [sp + 0x128]\n 28879: t2 = u64 [sp + 0x138]\n 28883: a5 = u64 [sp + 0x120]\n 28887: a0 = t0 << 0x3f\n 28890: a1 = t1 >> 0x1\n 28893: a0 = a0 | a1\n 28896: a1 = t2 << 0x3f\n 28899: a2 = t0 >> 0x1\n 28902: a1 = a1 | a2\n 28905: a2 = t1 << 0x3f\n 28908: a3 = a5 >> 0x1\n 28911: a4 = a3 | a2\n 28914: a2 = t2 >> 0x1\n 28917: u64 [sp + 0x78] = a5\n 28920: a5 = a5 & 0x1\n 28923: a3 = -a5\n 28925: ra = a4 & 0x7f\n 28928: a1 = a1 & a3\n 28931: s1 = a3 & a0\n 28934: a4 = ra if a5 == 0\n 28937: a2 = a2 & a3\n 28940: u64 [sp + 0x58] = a4\n 28943: a0 = a4 <u 0x20\n 28946: u64 [sp + 0x48] = s1\n 28949: a0 = 0 if s1 != 0\n 28951: u64 [sp + 0x50] = a1\n 28954: u64 [sp + 0x40] = a2\n 28957: a1 = a1 | a2\n 28960: a0 = 0 if a1 != 0\n 28962: a1 = a5 <u 0x1\n 28965: jump @468 if a1 != a0\n      : @450 (gas: 17)\n 28969: u64 [sp + 0x98] = a5\n 28973: u64 [sp + 0x10] = ra\n 28976: u64 [sp + 0x80] = t1\n 28980: u64 [sp + 0x88] = t0\n 28984: u64 [sp + 0x90] = t2\n 28988: a0 = u64 [sp + 0xb8]\n 28992: a2 = u64 [sp + 0xa8]\n 28996: a0 = a0 | a2\n 28999: a1 = u64 [sp + 0xb0]\n 29003: a3 = u64 [sp + 0xa0]\n 29007: a1 = a1 | a3\n 29010: a0 = a0 | a1\n 29013: a0 = a0 >> 0x20\n 29016: a1 = a1 | a2\n 29019: a1 = a1 << 0x20\n 29022: a0 = a0 | a1\n 29025: jump @467 if a0 != 0\n      : @451 (gas: 4)\n 29029: s1 = u64 [sp + 0xb8]\n 29033: i32 a0 = s1 + 0\n 29035: a1 = 0x20\n 29038: ra = 386, jump @0\n      : @452 [@dyn 193] (gas: 85)\n 29044: a1 = u64 [sp + 0x40]\n 29047: a1 = reverse a1\n 29049: a2 = u64 [sp + 0x58]\n 29052: a2 = reverse a2\n 29054: a3 = a2 >> 0x38\n 29057: u8 [a0 + 0x1f] = a3\n 29060: a3 = a2 >> 0x30\n 29063: u8 [a0 + 0x1e] = a3\n 29066: a3 = a2 >> 0x28\n 29069: u8 [a0 + 0x1d] = a3\n 29072: a3 = a2 >> 0x20\n 29075: u8 [a0 + 0x1c] = a3\n 29078: a3 = a2 >> 0x18\n 29081: u8 [a0 + 0x1b] = a3\n 29084: a3 = a2 >> 0x10\n 29087: u8 [a0 + 0x1a] = a3\n 29090: a3 = a2 >> 0x8\n 29093: u8 [a0 + 0x19] = a3\n 29096: a3 = u64 [sp + 0x48]\n 29099: a3 = reverse a3\n 29101: u8 [a0 + 0x18] = a2\n 29104: a2 = a3 >> 0x38\n 29107: u8 [a0 + 0x17] = a2\n 29110: a2 = a3 >> 0x30\n 29113: u8 [a0 + 0x16] = a2\n 29116: a2 = a3 >> 0x28\n 29119: u8 [a0 + 0x15] = a2\n 29122: a2 = a3 >> 0x20\n 29125: u8 [a0 + 0x14] = a2\n 29128: a2 = a3 >> 0x18\n 29131: u8 [a0 + 0x13] = a2\n 29134: a2 = a3 >> 0x10\n 29137: u8 [a0 + 0x12] = a2\n 29140: a2 = u64 [sp + 0x50]\n 29143: a2 = reverse a2\n 29145: u8 [a0 + 0x10] = a3\n 29148: a3 = a3 >> 0x8\n 29151: u8 [a0 + 0x11] = a3\n 29154: u8 [a0 + 0x8] = a2\n 29157: a3 = a2 >> 0x38\n 29160: u8 [a0 + 0xf] = a3\n 29163: a3 = a2 >> 0x30\n 29166: u8 [a0 + 0xe] = a3\n 29169: a3 = a2 >> 0x28\n 29172: u8 [a0 + 0xd] = a3\n 29175: a3 = a2 >> 0x20\n 29178: u8 [a0 + 0xc] = a3\n 29181: a3 = a2 >> 0x18\n 29184: u8 [a0 + 0xb] = a3\n 29187: a3 = a2 >> 0x10\n 29190: u8 [a0 + 0xa] = a3\n 29193: a2 = a2 >> 0x8\n 29196: u8 [a0 + 0x9] = a2\n 29199: u8 [a0] = a1\n 29201: a2 = a1 >> 0x38\n 29204: u8 [a0 + 0x7] = a2\n 29207: a2 = a1 >> 0x30\n 29210: u8 [a0 + 0x6] = a2\n 29213: a2 = a1 >> 0x28\n 29216: u8 [a0 + 0x5] = a2\n 29219: a2 = a1 >> 0x20\n 29222: u8 [a0 + 0x4] = a2\n 29225: a2 = a1 >> 0x18\n 29228: u8 [a0 + 0x3] = a2\n 29231: a2 = a1 >> 0x10\n 29234: u8 [a0 + 0x2] = a2\n 29237: a1 = a1 >> 0x8\n 29240: u8 [a0 + 0x1] = a1\n 29243: a0 = s1 + 0x20\n 29246: u64 [sp + 0x60] = a0\n 29249: a0 = a0 <u s1\n 29252: a3 = u64 [sp + 0xa0]\n 29256: a1 = a3 + a0\n 29259: u64 [sp + 0x28] = a1\n 29262: a1 = a1 <u a3\n 29265: a1 = a0 if a0 == 0\n 29268: a0 = u64 [sp + 0xa8]\n 29272: a1 = a1 + a0\n 29275: u64 [sp + 0x30] = a1\n 29278: a0 = a1 <u a0\n 29281: a1 = u64 [sp + 0xb0]\n 29285: a0 = a0 + a1\n 29288: u64 [sp + 0x38] = a0\n 29291: a0 = u64 [sp + 0x98]\n 29295: jump @456 if a0 != 0\n      : @453 (gas: 9)\n 29299: a0 = u64 [sp + 0xb0]\n 29303: a1 = u64 [sp + 0xa8]\n 29307: a0 = a0 | a1\n 29310: a1 = 0xffffffe0\n 29320: a2 = u64 [sp + 0xb8]\n 29324: a1 = a2 <u a1\n 29327: a1 = 0 if a3 != 0\n 29329: a1 = 0 if a0 != 0\n 29331: jump @467 if a1 == 0\n      : @454 (gas: 5)\n 29335: a0 = u64 [sp + 0x78]\n 29338: s1 = a0 & 0xffffffffffffff00\n 29342: a0 = i32 [sp + 0x60]\n 29345: a1 = 0x20\n 29348: ra = 388, jump @0\n      : @455 [@dyn 194] (gas: 73)\n 29354: t0 = 0\n 29356: t1 = 0\n 29358: u64 [sp + 176] = 0\n 29362: a3 = reverse s1\n 29364: a4 = a3 >> 0x30\n 29367: u8 [a0 + 0x1e] = a4\n 29370: a4 = a3 >> 0x28\n 29373: u8 [a0 + 0x1d] = a4\n 29376: a4 = a3 >> 0x20\n 29379: u8 [a0 + 0x1c] = a4\n 29382: a4 = a3 >> 0x18\n 29385: u8 [a0 + 0x1b] = a4\n 29388: a4 = a3 >> 0x10\n 29391: u8 [a0 + 0x1a] = a4\n 29394: a1 = u64 [sp + 0x80]\n 29398: a4 = reverse a1\n 29400: u8 [a0 + 0x18] = a3\n 29403: a3 = a3 >> 0x8\n 29406: u8 [a0 + 0x19] = a3\n 29409: a3 = a4 >> 0x38\n 29412: u8 [a0 + 0x17] = a3\n 29415: a3 = a4 >> 0x30\n 29418: u8 [a0 + 0x16] = a3\n 29421: a3 = a4 >> 0x28\n 29424: u8 [a0 + 0x15] = a3\n 29427: a3 = a4 >> 0x20\n 29430: u8 [a0 + 0x14] = a3\n 29433: a3 = a4 >> 0x18\n 29436: u8 [a0 + 0x13] = a3\n 29439: a3 = a4 >> 0x10\n 29442: u8 [a0 + 0x12] = a3\n 29445: a1 = u64 [sp + 0x88]\n 29449: a3 = reverse a1\n 29451: u8 [a0 + 0x10] = a4\n 29454: a4 = a4 >> 0x8\n 29457: u8 [a0 + 0x11] = a4\n 29460: a4 = a3 >> 0x38\n 29463: u8 [a0 + 0xf] = a4\n 29466: a4 = a3 >> 0x30\n 29469: u8 [a0 + 0xe] = a4\n 29472: a4 = a3 >> 0x28\n 29475: u8 [a0 + 0xd] = a4\n 29478: a4 = a3 >> 0x20\n 29481: u8 [a0 + 0xc] = a4\n 29484: a4 = a3 >> 0x18\n 29487: u8 [a0 + 0xb] = a4\n 29490: a4 = a3 >> 0x10\n 29493: u8 [a0 + 0xa] = a4\n 29496: a1 = u64 [sp + 0x90]\n 29500: a4 = reverse a1\n 29502: u8 [a0 + 31] = 0\n 29505: u8 [a0 + 0x8] = a3\n 29508: a3 = a3 >> 0x8\n 29511: u8 [a0 + 0x9] = a3\n 29514: u8 [a0] = a4\n 29516: a3 = a4 >> 0x38\n 29519: u8 [a0 + 0x7] = a3\n 29522: a3 = a4 >> 0x30\n 29525: u8 [a0 + 0x6] = a3\n 29528: a3 = a4 >> 0x28\n 29531: u8 [a0 + 0x5] = a3\n 29534: a3 = a4 >> 0x20\n 29537: u8 [a0 + 0x4] = a3\n 29540: a3 = a4 >> 0x18\n 29543: u8 [a0 + 0x3] = a3\n 29546: a3 = a4 >> 0x10\n 29549: u8 [a0 + 0x2] = a3\n 29552: a4 = a4 >> 0x8\n 29555: u8 [a0 + 0x1] = a4\n 29558: a0 = u64 [sp + 0x10]\n 29561: a0 = a0 >u 0\n 29563: ra = a0 << 0x5\n 29566: jump @466\n      : @456 (gas: 3)\n 29569: a1 = 0x20\n 29572: a0 = 0\n 29574: ra = 390, jump @0\n      : @457 [@dyn 195] (gas: 71)\n 29580: a1 = u64 [sp + 0x18]\n 29583: a1 = reverse a1\n 29585: a2 = u64 [sp + 0x20]\n 29588: a2 = reverse a2\n 29590: a3 = u64 [sp + 0x68]\n 29593: a3 = reverse a3\n 29595: a4 = u64 [sp + 0x70]\n 29598: a4 = reverse a4\n 29600: a5 = a4 >> 0x38\n 29603: u8 [a0 + 0x1f] = a5\n 29606: a5 = a4 >> 0x30\n 29609: u8 [a0 + 0x1e] = a5\n 29612: a5 = a4 >> 0x28\n 29615: u8 [a0 + 0x1d] = a5\n 29618: a5 = a4 >> 0x20\n 29621: u8 [a0 + 0x1c] = a5\n 29624: a5 = a4 >> 0x18\n 29627: u8 [a0 + 0x1b] = a5\n 29630: a5 = a4 >> 0x10\n 29633: u8 [a0 + 0x1a] = a5\n 29636: a5 = a4 >> 0x8\n 29639: u8 [a0 + 0x19] = a5\n 29642: u8 [a0 + 0x18] = a4\n 29645: u8 [a0 + 0x10] = a3\n 29648: a4 = a3 >> 0x38\n 29651: u8 [a0 + 0x17] = a4\n 29654: a4 = a3 >> 0x30\n 29657: u8 [a0 + 0x16] = a4\n 29660: a4 = a3 >> 0x28\n 29663: u8 [a0 + 0x15] = a4\n 29666: a4 = a3 >> 0x20\n 29669: u8 [a0 + 0x14] = a4\n 29672: a4 = a3 >> 0x18\n 29675: u8 [a0 + 0x13] = a4\n 29678: a4 = a3 >> 0x10\n 29681: u8 [a0 + 0x12] = a4\n 29684: a3 = a3 >> 0x8\n 29687: u8 [a0 + 0x11] = a3\n 29690: u8 [a0 + 0x8] = a2\n 29693: a3 = a2 >> 0x38\n 29696: u8 [a0 + 0xf] = a3\n 29699: a3 = a2 >> 0x30\n 29702: u8 [a0 + 0xe] = a3\n 29705: a3 = a2 >> 0x28\n 29708: u8 [a0 + 0xd] = a3\n 29711: a3 = a2 >> 0x20\n 29714: u8 [a0 + 0xc] = a3\n 29717: a3 = a2 >> 0x18\n 29720: u8 [a0 + 0xb] = a3\n 29723: a3 = a2 >> 0x10\n 29726: u8 [a0 + 0xa] = a3\n 29729: a2 = a2 >> 0x8\n 29732: u8 [a0 + 0x9] = a2\n 29735: u8 [a0] = a1\n 29737: a2 = a1 >> 0x38\n 29740: u8 [a0 + 0x7] = a2\n 29743: a2 = a1 >> 0x30\n 29746: u8 [a0 + 0x6] = a2\n 29749: a2 = a1 >> 0x28\n 29752: u8 [a0 + 0x5] = a2\n 29755: a2 = a1 >> 0x20\n 29758: u8 [a0 + 0x4] = a2\n 29761: a2 = a1 >> 0x18\n 29764: u8 [a0 + 0x3] = a2\n 29767: a2 = a1 >> 0x10\n 29770: u8 [a0 + 0x2] = a2\n 29773: a1 = a1 >> 0x8\n 29776: u8 [a0 + 0x1] = a1\n 29779: a1 = 0x20\n 29782: a0 = 0\n 29784: ra = 392, jump @0\n      : @458 [@dyn 196] (gas: 5)\n 29790: i32 a0 = a0 + 0\n 29792: i32 a2 = sp + 0x120\n 29796: a1 = 0x20\n 29799: ecalli 6 // 'hash_keccak_256'\n 29801: fallthrough\n      : @459 (gas: 9)\n 29802: a0 = u64 [sp + 0x78]\n 29805: a0 = a0 <u 0x2\n 29808: a1 = u64 [sp + 0x80]\n 29812: a0 = 0 if a1 != 0\n 29814: a1 = u64 [sp + 0x90]\n 29818: a2 = u64 [sp + 0x88]\n 29822: a1 = a1 | a2\n 29825: a0 = 0 if a1 != 0\n 29827: jump @461 if a0 == 0\n      : @460 (gas: 5)\n 29830: ra = 0\n 29832: t0 = 0\n 29834: t1 = 0\n 29836: u64 [sp + 176] = 0\n 29840: jump @466\n      : @461 (gas: 19)\n 29843: u64 [sp + 168] = 0\n 29847: u64 [sp + 160] = 0\n 29851: s1 = 0\n 29853: u64 [sp + 176] = 0\n 29857: a0 = u64 [sp + 0x120]\n 29861: a1 = u64 [sp + 0x128]\n 29865: a2 = u64 [sp + 0x130]\n 29869: a3 = u64 [sp + 0x138]\n 29873: a0 = reverse a0\n 29875: a5 = reverse a1\n 29877: a1 = reverse a2\n 29879: t2 = reverse a3\n 29881: i32 a3 = sp + 0x100\n 29885: u64 [sp + 0x20] = a3\n 29888: i32 a3 = sp + 0x120\n 29892: u64 [sp + 0x18] = a3\n 29895: i32 a3 = sp + 0x140\n 29899: u64 [sp + 0x10] = a3\n 29902: fallthrough\n      : @462 (gas: 20)\n 29903: u64 [sp + 0x88] = a5\n 29907: u64 [sp + 0x110] = a5\n 29911: u64 [sp + 0xb8] = a1\n 29915: u64 [sp + 0x108] = a1\n 29919: u64 [sp + 0x90] = t2\n 29923: u64 [sp + 0x100] = t2\n 29927: u64 [sp + 0x98] = a0\n 29931: u64 [sp + 0x118] = a0\n 29935: u64 [sp + 312] = 0\n 29939: u64 [sp + 304] = 0\n 29943: u64 [sp + 296] = 0\n 29947: u64 [sp + 288] = 0\n 29951: u32 [sp + 320] = 0x20\n 29956: a2 = 0xffffffffffffffff\n 29959: a0 = 0\n 29961: a1 = u64 [sp + 0x20]\n 29964: a3 = u64 [sp + 0x18]\n 29967: a4 = u64 [sp + 0x10]\n 29970: ecalli 5 // 'get_storage'\n 29972: fallthrough\n      : @463 (gas: 30)\n 29973: a0 = u64 [sp + 0x60]\n 29976: a1 = u64 [sp + 0xa8]\n 29980: a0 = a0 + a1\n 29983: a1 = a0 <u a1\n 29986: a2 = u64 [sp + 0x28]\n 29989: a4 = u64 [sp + 0xa0]\n 29993: a2 = a2 + a4\n 29996: a2 = a2 + a1\n 29999: a3 = a2 ^ a4\n 30002: a4 = a2 <u a4\n 30005: a4 = a1 if a3 == 0\n 30008: a1 = u64 [sp + 0x30]\n 30011: a1 = a1 + s1\n 30014: u64 [sp + 0x80] = s1\n 30018: a3 = a1 <u s1\n 30021: a5 = u64 [sp + 0x38]\n 30024: s1 = u64 [sp + 0xb0]\n 30028: a5 = a5 + s1\n 30031: a3 = a3 + a5\n 30034: a4 = a4 + a1\n 30037: a1 = a4 <u a1\n 30040: a1 = a1 + a3\n 30043: a1 = a1 | a2\n 30046: a2 = a0 | a4\n 30049: a2 = a2 | a1\n 30052: a1 = a1 | a4\n 30055: a2 = a2 >> 0x20\n 30058: a1 = a1 << 0x20\n 30061: a1 = a1 | a2\n 30064: jump @467 if a1 != 0\n      : @464 (gas: 10)\n 30068: a1 = u64 [sp + 0x138]\n 30072: u64 [sp + 0x70] = a1\n 30075: a1 = u64 [sp + 0x130]\n 30079: u64 [sp + 0x78] = a1\n 30082: a1 = u64 [sp + 0x128]\n 30086: u64 [sp + 0x68] = a1\n 30089: s1 = u64 [sp + 0x120]\n 30093: i32 a0 = a0 + 0\n 30095: a1 = 0x20\n 30098: ra = 394, jump @0\n      : @465 [@dyn 197] (gas: 115)\n 30104: a1 = reverse s1\n 30106: a2 = a1 >> 0x38\n 30109: u8 [a0 + 0x1f] = a2\n 30112: a2 = a1 >> 0x30\n 30115: u8 [a0 + 0x1e] = a2\n 30118: a2 = a1 >> 0x28\n 30121: u8 [a0 + 0x1d] = a2\n 30124: a2 = a1 >> 0x20\n 30127: u8 [a0 + 0x1c] = a2\n 30130: a2 = a1 >> 0x18\n 30133: u8 [a0 + 0x1b] = a2\n 30136: a2 = a1 >> 0x10\n 30139: u8 [a0 + 0x1a] = a2\n 30142: a2 = a1 >> 0x8\n 30145: u8 [a0 + 0x19] = a2\n 30148: a2 = u64 [sp + 0x68]\n 30151: a2 = reverse a2\n 30153: u8 [a0 + 0x18] = a1\n 30156: a1 = a2 >> 0x38\n 30159: u8 [a0 + 0x17] = a1\n 30162: a1 = a2 >> 0x30\n 30165: u8 [a0 + 0x16] = a1\n 30168: a1 = a2 >> 0x28\n 30171: u8 [a0 + 0x15] = a1\n 30174: a1 = a2 >> 0x20\n 30177: u8 [a0 + 0x14] = a1\n 30180: a1 = a2 >> 0x18\n 30183: u8 [a0 + 0x13] = a1\n 30186: a1 = a2 >> 0x10\n 30189: u8 [a0 + 0x12] = a1\n 30192: a1 = u64 [sp + 0x70]\n 30195: a1 = reverse a1\n 30197: a3 = u64 [sp + 0x78]\n 30200: a3 = reverse a3\n 30202: u8 [a0 + 0x10] = a2\n 30205: a2 = a2 >> 0x8\n 30208: u8 [a0 + 0x11] = a2\n 30211: u8 [a0 + 0x8] = a3\n 30214: a2 = a3 >> 0x38\n 30217: u8 [a0 + 0xf] = a2\n 30220: a2 = a3 >> 0x30\n 30223: u8 [a0 + 0xe] = a2\n 30226: a2 = a3 >> 0x28\n 30229: u8 [a0 + 0xd] = a2\n 30232: a2 = a3 >> 0x20\n 30235: u8 [a0 + 0xc] = a2\n 30238: a2 = a3 >> 0x18\n 30241: u8 [a0 + 0xb] = a2\n 30244: a2 = a3 >> 0x10\n 30247: u8 [a0 + 0xa] = a2\n 30250: a3 = a3 >> 0x8\n 30253: u8 [a0 + 0x9] = a3\n 30256: u8 [a0] = a1\n 30258: a2 = a1 >> 0x38\n 30261: u8 [a0 + 0x7] = a2\n 30264: a2 = a1 >> 0x30\n 30267: u8 [a0 + 0x6] = a2\n 30270: a2 = a1 >> 0x28\n 30273: u8 [a0 + 0x5] = a2\n 30276: a2 = a1 >> 0x20\n 30279: u8 [a0 + 0x4] = a2\n 30282: a2 = a1 >> 0x18\n 30285: u8 [a0 + 0x3] = a2\n 30288: a2 = a1 >> 0x10\n 30291: u8 [a0 + 0x2] = a2\n 30294: a1 = a1 >> 0x8\n 30297: u8 [a0 + 0x1] = a1\n 30300: t2 = u64 [sp + 0x90]\n 30304: t2 = t2 + 0x1\n 30307: a0 = t2 <u 0x1\n 30310: a1 = u64 [sp + 0xb8]\n 30314: a1 = a1 + a0\n 30317: u64 [sp + 0xb8] = a1\n 30321: a0 = u64 [sp + 0xa8]\n 30325: ra = a0 + 0x20\n 30328: a2 = ra <u a0\n 30331: a0 = u64 [sp + 0xa0]\n 30335: t0 = a0 + a2\n 30338: a3 = t0 <u a0\n 30341: a3 = a2 if a2 == 0\n 30344: a0 = u64 [sp + 0x80]\n 30348: t1 = a0 + a3\n 30351: a3 = t1 <u a0\n 30354: a5 = u64 [sp + 0xb0]\n 30358: a5 = a5 + a3\n 30361: a1 = u64 [sp + 0x50]\n 30364: a0 = t1 <u a1\n 30367: u64 [sp + 0xa8] = a0\n 30371: a2 = u64 [sp + 0x58]\n 30374: a4 = ra <u a2\n 30377: a2 = u64 [sp + 0x48]\n 30380: s1 = t0 ^ a2\n 30383: a3 = t0 <u a2\n 30386: a3 = a4 if s1 == 0\n 30389: a2 = u64 [sp + 0x40]\n 30392: a0 = a5 ^ a2\n 30395: u64 [sp + 0xb0] = a5\n 30399: s1 = a5 <u a2\n 30402: a2 = u64 [sp + 0xa8]\n 30406: s1 = a2 if a0 == 0\n 30409: a4 = t1 ^ a1\n 30412: a1 = u64 [sp + 0xb8]\n 30416: a0 = a0 | a4\n 30419: a5 = t2 | a1\n 30422: a5 = a5 <u 0x1\n 30425: a4 = u64 [sp + 0x88]\n 30429: a5 = a5 + a4\n 30432: a4 = a5 <u a4\n 30435: a3 = s1 if a0 != 0\n 30438: a0 = u64 [sp + 0x98]\n 30442: a0 = a0 + a4\n 30445: u64 [sp + 0xa8] = ra\n 30449: u64 [sp + 0xa0] = t0\n 30453: s1 = t1\n 30455: jump @462 if a3 != 0\n      : @466 (gas: 30)\n 30459: a3 = u64 [sp + 0x60]\n 30462: a3 = a3 + ra\n 30465: a0 = a3 <u ra\n 30468: a4 = u64 [sp + 0x28]\n 30471: a4 = a4 + t0\n 30474: a4 = a4 + a0\n 30477: a5 = a4 ^ t0\n 30480: a1 = a4 <u t0\n 30483: a1 = a0 if a5 == 0\n 30486: a0 = u64 [sp + 0x30]\n 30489: a0 = a0 + t1\n 30492: a1 = a1 + a0\n 30495: a5 = a1 <u a0\n 30498: a0 = a0 <u t1\n 30501: a2 = u64 [sp + 0x38]\n 30504: s1 = u64 [sp + 0xb0]\n 30508: a2 = a2 + s1\n 30511: a0 = a0 + a2\n 30514: a0 = a0 + a5\n 30517: a2 = u64 [sp + 0x8]\n 30520: u64 [a2] = a3\n 30522: u64 [a2 + 0x8] = a4\n 30525: u64 [a2 + 0x10] = a1\n 30528: u64 [a2 + 0x18] = a0\n 30531: sp = s0 + 0xfffffffffffffea0\n 30535: ra = u64 [sp + 0x158]\n 30539: s0 = u64 [sp + 0x150]\n 30543: s1 = u64 [sp + 0x148]\n 30547: sp = sp + 0x160\n 30551: ret\n      : @467 (gas: 1)\n 30553: trap\n      : @468 (gas: 8)\n 30554: u64 [sp + 240] = 0\n 30558: u64 [sp + 232] = 0\n 30562: u64 [sp + 224] = 0\n 30566: a0 = 0x4e487b7100000000\n 30576: a1 = sp + 0xe0\n 30580: u64 [sp + 0xf8] = a0\n 30584: a0 = 0\n 30586: ra = 396, jump @23\n      : @469 [@dyn 198] (gas: 7)\n 30592: u64 [sp + 216] = 0\n 30596: u64 [sp + 208] = 0\n 30600: u64 [sp + 192] = 0x22\n 30605: a0 = 0x4\n 30608: a1 = sp + 0xc0\n 30612: u64 [sp + 200] = 0\n 30616: ra = 398, jump @23\n      : @470 [@dyn 199] (gas: 3)\n 30622: a1 = 0x24\n 30625: a0 = 0\n 30627: ra = 400, jump @0\n      : @471 [@dyn 200] (gas: 6)\n 30633: i32 a1 = a0 + 0\n 30635: a0 = 0x1\n 30638: a2 = 0x24\n 30641: ra = 0x192\n 30645: ecalli 7 // 'seal_return'\n 30647: fallthrough\n      : @472 [@dyn 201] (gas: 27)\n 30648: sp = sp + 0xffffffffffffff80\n 30651: u64 [sp + 0x78] = ra\n 30654: u64 [sp + 0x70] = s0\n 30657: u64 [sp + 0x68] = s1\n 30660: s0 = sp + 0x80\n 30664: sp = sp & 0xfffffffffffffff0\n 30667: t0 = u64 [a1]\n 30669: t1 = u64 [a1 + 0x8]\n 30672: t2 = u64 [a1 + 0x10]\n 30675: a1 = u64 [a1 + 0x18]\n 30678: a3 = u64 [a2]\n 30680: a4 = u64 [a2 + 0x8]\n 30683: a5 = u64 [a2 + 0x10]\n 30686: a2 = u64 [a2 + 0x18]\n 30689: s1 = a0\n 30691: u64 [sp + 0x18] = a2\n 30694: u64 [sp + 0x10] = a5\n 30697: u64 [sp + 0x8] = a4\n 30700: u64 [sp] = a3\n 30702: u64 [sp + 0x38] = a1\n 30705: u64 [sp + 0x30] = t2\n 30708: u64 [sp + 0x28] = t1\n 30711: a0 = sp + 0x40\n 30714: a1 = sp + 0x20\n 30717: a2 = sp\n 30719: u64 [sp + 0x20] = t0\n 30722: ra = 404, jump @448\n      : @473 [@dyn 202] (gas: 14)\n 30728: a0 = u64 [sp + 0x50]\n 30731: a1 = u64 [sp + 0x58]\n 30734: a2 = u64 [sp + 0x40]\n 30737: a3 = u64 [sp + 0x48]\n 30740: u64 [s1 + 0x10] = a0\n 30743: u64 [s1 + 0x18] = a1\n 30746: u64 [s1] = a2\n 30748: u64 [s1 + 0x8] = a3\n 30751: sp = s0 + 0xffffffffffffff80\n 30754: ra = u64 [sp + 0x78]\n 30757: s0 = u64 [sp + 0x70]\n 30760: s1 = u64 [sp + 0x68]\n 30763: sp = sp + 0x80\n 30767: ret\n      : @474 (gas: 18)\n 30769: sp = sp + 0xffffffffffffff00\n 30773: u64 [sp + 0xf8] = ra\n 30777: u64 [sp + 0xf0] = s0\n 30781: u64 [sp + 0xe8] = s1\n 30785: s0 = sp + 0x100\n 30789: sp = sp & 0xfffffffffffffff0\n 30792: a2 = u64 [a1]\n 30794: u64 [sp + 0x20] = a2\n 30797: a2 = u64 [a1 + 0x8]\n 30800: u64 [sp + 0x10] = a2\n 30803: a2 = u64 [a1 + 0x10]\n 30806: u64 [sp + 0x8] = a2\n 30809: a1 = u64 [a1 + 0x18]\n 30812: u64 [sp] = a1\n 30814: u64 [sp + 0x18] = a0\n 30817: a0 = 0x40\n 30820: a1 = 0x20\n 30823: ra = 406, jump @0\n      : @475 [@dyn 203] (gas: 111)\n 30829: a1 = u8 [a0 + 0x1]\n 30832: a2 = u8 [a0]\n 30834: a3 = u8 [a0 + 0x2]\n 30837: a4 = u8 [a0 + 0x3]\n 30840: a1 = a1 << 0x8\n 30843: a1 = a1 | a2\n 30846: a3 = a3 << 0x10\n 30849: a4 = a4 << 0x18\n 30852: a3 = a3 | a4\n 30855: a1 = a1 | a3\n 30858: a2 = u8 [a0 + 0x5]\n 30861: a3 = u8 [a0 + 0x4]\n 30864: a4 = u8 [a0 + 0x6]\n 30867: a5 = u8 [a0 + 0x7]\n 30870: a2 = a2 << 0x8\n 30873: a2 = a2 | a3\n 30876: a4 = a4 << 0x10\n 30879: a5 = a5 << 0x18\n 30882: a4 = a4 | a5\n 30885: a2 = a2 | a4\n 30888: a2 = a2 << 0x20\n 30891: t0 = a2 | a1\n 30894: a2 = u8 [a0 + 0x9]\n 30897: a3 = u8 [a0 + 0x8]\n 30900: a4 = u8 [a0 + 0xa]\n 30903: a5 = u8 [a0 + 0xb]\n 30906: a2 = a2 << 0x8\n 30909: a2 = a2 | a3\n 30912: a4 = a4 << 0x10\n 30915: a5 = a5 << 0x18\n 30918: a4 = a4 | a5\n 30921: a2 = a2 | a4\n 30924: a3 = u8 [a0 + 0xd]\n 30927: a4 = u8 [a0 + 0xc]\n 30930: a5 = u8 [a0 + 0xe]\n 30933: s1 = u8 [a0 + 0xf]\n 30936: a3 = a3 << 0x8\n 30939: a3 = a3 | a4\n 30942: a5 = a5 << 0x10\n 30945: s1 = s1 << 0x18\n 30948: a5 = a5 | s1\n 30951: a3 = a3 | a5\n 30954: a3 = a3 << 0x20\n 30957: a2 = a2 | a3\n 30960: a3 = u8 [a0 + 0x11]\n 30963: a4 = u8 [a0 + 0x10]\n 30966: a5 = u8 [a0 + 0x12]\n 30969: s1 = u8 [a0 + 0x13]\n 30972: a3 = a3 << 0x8\n 30975: a3 = a3 | a4\n 30978: a5 = a5 << 0x10\n 30981: s1 = s1 << 0x18\n 30984: a5 = a5 | s1\n 30987: a3 = a3 | a5\n 30990: a4 = u8 [a0 + 0x15]\n 30993: a5 = u8 [a0 + 0x14]\n 30996: s1 = u8 [a0 + 0x16]\n 30999: a1 = u8 [a0 + 0x17]\n 31002: a4 = a4 << 0x8\n 31005: a4 = a4 | a5\n 31008: s1 = s1 << 0x10\n 31011: a1 = a1 << 0x18\n 31014: a1 = a1 | s1\n 31017: a1 = a1 | a4\n 31020: a1 = a1 << 0x20\n 31023: a3 = a3 | a1\n 31026: a1 = u8 [a0 + 0x19]\n 31029: a4 = u8 [a0 + 0x18]\n 31032: a5 = u8 [a0 + 0x1a]\n 31035: s1 = u8 [a0 + 0x1b]\n 31038: a1 = a1 << 0x8\n 31041: a1 = a1 | a4\n 31044: a5 = a5 << 0x10\n 31047: s1 = s1 << 0x18\n 31050: a5 = a5 | s1\n 31053: a1 = a1 | a5\n 31056: a4 = u8 [a0 + 0x1d]\n 31059: a5 = u8 [a0 + 0x1c]\n 31062: s1 = u8 [a0 + 0x1e]\n 31065: a0 = u8 [a0 + 0x1f]\n 31068: a4 = a4 << 0x8\n 31071: a4 = a4 | a5\n 31074: s1 = s1 << 0x10\n 31077: a0 = a0 << 0x18\n 31080: a0 = a0 | s1\n 31083: a0 = a0 | a4\n 31086: a0 = a0 << 0x20\n 31089: a0 = a0 | a1\n 31092: a4 = reverse a0\n 31094: u64 [sp + 0x38] = a4\n 31097: s1 = reverse a3\n 31099: a2 = reverse a2\n 31101: u64 [sp + 0x30] = a2\n 31104: a1 = reverse t0\n 31106: u64 [sp + 0x28] = a1\n 31109: a0 = u64 [sp]\n 31111: u64 [sp + 0xb8] = a0\n 31115: a0 = u64 [sp + 0x8]\n 31118: u64 [sp + 0xb0] = a0\n 31122: a0 = u64 [sp + 0x10]\n 31125: u64 [sp + 0xa8] = a0\n 31129: a0 = u64 [sp + 0x20]\n 31132: u64 [sp + 0xa0] = a0\n 31136: u64 [sp + 0x98] = a1\n 31140: u64 [sp + 0x90] = a2\n 31144: u64 [sp + 0x88] = s1\n 31148: a0 = sp + 0xc0\n 31152: a1 = sp + 0xa0\n 31156: a2 = sp + 0x80\n 31160: u64 [sp + 0x80] = a4\n 31164: ra = 408, jump @448\n      : @476 [@dyn 204] (gas: 58)\n 31170: t2 = s1\n 31172: a3 = u64 [sp + 0xc8]\n 31176: a0 = u64 [sp + 0xd8]\n 31180: u64 [sp + 0x10] = a0\n 31183: a4 = u64 [sp + 0xc0]\n 31187: t1 = u64 [sp + 0xd0]\n 31191: a5 = a3 ^ s1\n 31194: a1 = a3 <u s1\n 31197: a2 = u64 [sp + 0x38]\n 31200: s1 = a4 <u a2\n 31203: a1 = s1 if a5 == 0\n 31206: a3 = a3 - t2\n 31209: a3 = a3 - s1\n 31212: u64 [sp + 0x8] = a3\n 31215: a4 = a4 - a2\n 31218: a5 = a4 + 0x1f\n 31221: a4 = a5 <u a4\n 31224: a3 = a3 + a4\n 31227: a5 = a5 & 0xffffffffffffffe0\n 31230: a0 = a3 + t2\n 31233: a2 = a2 + a5\n 31236: u64 [sp + 0x20] = a2\n 31239: a5 = a2 <u a5\n 31242: t0 = a0 + a5\n 31245: a0 = t0 ^ a3\n 31248: a2 = t0 <u a3\n 31251: a2 = a5 if a0 == 0\n 31254: s1 = u64 [sp + 0x30]\n 31257: a0 = t1 - s1\n 31260: a5 = t1 <u s1\n 31263: t1 = s1\n 31265: ra = u64 [sp + 0x28]\n 31268: s1 = u64 [sp + 0x10]\n 31271: s1 = s1 - ra\n 31274: s1 = s1 - a5\n 31277: a5 = a0 <u a1\n 31280: s1 = s1 - a5\n 31283: a0 = a0 - a1\n 31286: a1 = u64 [sp + 0x8]\n 31289: a1 = a3 <u a1\n 31292: a1 = a4 if a4 == 0\n 31295: a1 = a1 + a0\n 31298: a0 = a1 <u a0\n 31301: a3 = a1 + t1\n 31304: a5 = a3 + a2\n 31307: a1 = a3 <u a1\n 31310: a2 = a5 <u a3\n 31313: s1 = s1 + ra\n 31316: a0 = a0 + s1\n 31319: a0 = a0 + a1\n 31322: s1 = a0 + a2\n 31325: a0 = s1 >u 0\n 31327: a1 = a5 >u 0\n 31329: a1 = a0 if s1 != 0\n 31332: a0 = a5 | s1\n 31335: a2 = t0 >u 0\n 31337: a2 = a1 if a0 != 0\n 31340: jump @480 if a2 != 0\n      : @477 (gas: 15)\n 31344: a4 = t1\n 31346: a0 = u64 [sp + 0x38]\n 31349: a1 = u64 [sp + 0x20]\n 31352: a0 = a1 <u a0\n 31355: a1 = t0 ^ t2\n 31358: a2 = t0 <u t2\n 31361: a2 = a0 if a1 == 0\n 31364: a0 = a5 <u t1\n 31367: a1 = s1 ^ ra\n 31370: a3 = s1 <u ra\n 31373: a3 = a0 if a1 == 0\n 31376: a0 = a5 ^ t1\n 31379: a0 = a0 | a1\n 31382: a3 = a2 if a0 == 0\n 31385: jump @480 if a3 != 0\n      : @478 (gas: 6)\n 31389: a0 = 0x40\n 31392: a1 = 0x20\n 31395: u64 [sp + 0x10] = t2\n 31398: u64 [sp + 0x8] = t0\n 31401: u64 [sp] = a5\n 31403: ra = 410, jump @0\n      : @479 [@dyn 205] (gas: 82)\n 31409: a1 = reverse s1\n 31411: a2 = u64 [sp]\n 31413: a2 = reverse a2\n 31415: a3 = u64 [sp + 0x8]\n 31418: a3 = reverse a3\n 31420: a4 = u64 [sp + 0x20]\n 31423: a4 = reverse a4\n 31425: u8 [a0 + 0x18] = a4\n 31428: a5 = a4 >> 0x38\n 31431: u8 [a0 + 0x1f] = a5\n 31434: a5 = a4 >> 0x30\n 31437: u8 [a0 + 0x1e] = a5\n 31440: a5 = a4 >> 0x28\n 31443: u8 [a0 + 0x1d] = a5\n 31446: a5 = a4 >> 0x20\n 31449: u8 [a0 + 0x1c] = a5\n 31452: a5 = a4 >> 0x18\n 31455: u8 [a0 + 0x1b] = a5\n 31458: a5 = a4 >> 0x10\n 31461: u8 [a0 + 0x1a] = a5\n 31464: a4 = a4 >> 0x8\n 31467: u8 [a0 + 0x19] = a4\n 31470: u8 [a0 + 0x10] = a3\n 31473: a4 = a3 >> 0x38\n 31476: u8 [a0 + 0x17] = a4\n 31479: a4 = a3 >> 0x30\n 31482: u8 [a0 + 0x16] = a4\n 31485: a4 = a3 >> 0x28\n 31488: u8 [a0 + 0x15] = a4\n 31491: a4 = a3 >> 0x20\n 31494: u8 [a0 + 0x14] = a4\n 31497: a4 = a3 >> 0x18\n 31500: u8 [a0 + 0x13] = a4\n 31503: a4 = a3 >> 0x10\n 31506: u8 [a0 + 0x12] = a4\n 31509: a3 = a3 >> 0x8\n 31512: u8 [a0 + 0x11] = a3\n 31515: u8 [a0 + 0x8] = a2\n 31518: a3 = a2 >> 0x38\n 31521: u8 [a0 + 0xf] = a3\n 31524: a3 = a2 >> 0x30\n 31527: u8 [a0 + 0xe] = a3\n 31530: a3 = a2 >> 0x28\n 31533: u8 [a0 + 0xd] = a3\n 31536: a3 = a2 >> 0x20\n 31539: u8 [a0 + 0xc] = a3\n 31542: a3 = a2 >> 0x18\n 31545: u8 [a0 + 0xb] = a3\n 31548: a3 = a2 >> 0x10\n 31551: u8 [a0 + 0xa] = a3\n 31554: a2 = a2 >> 0x8\n 31557: u8 [a0 + 0x9] = a2\n 31560: u8 [a0] = a1\n 31562: a2 = a1 >> 0x38\n 31565: u8 [a0 + 0x7] = a2\n 31568: a2 = a1 >> 0x30\n 31571: u8 [a0 + 0x6] = a2\n 31574: a2 = a1 >> 0x28\n 31577: u8 [a0 + 0x5] = a2\n 31580: a2 = a1 >> 0x20\n 31583: u8 [a0 + 0x4] = a2\n 31586: a2 = a1 >> 0x18\n 31589: u8 [a0 + 0x3] = a2\n 31592: a2 = a1 >> 0x10\n 31595: u8 [a0 + 0x2] = a2\n 31598: a1 = a1 >> 0x8\n 31601: u8 [a0 + 0x1] = a1\n 31604: a0 = u64 [sp + 0x18]\n 31607: a1 = u64 [sp + 0x38]\n 31610: u64 [a0] = a1\n 31612: a1 = u64 [sp + 0x28]\n 31615: u64 [a0 + 0x18] = a1\n 31618: a1 = u64 [sp + 0x10]\n 31621: u64 [a0 + 0x8] = a1\n 31624: a1 = u64 [sp + 0x30]\n 31627: u64 [a0 + 0x10] = a1\n 31630: sp = s0 + 0xffffffffffffff00\n 31634: ra = u64 [sp + 0xf8]\n 31638: s0 = u64 [sp + 0xf0]\n 31642: s1 = u64 [sp + 0xe8]\n 31646: sp = sp + 0x100\n 31650: ret\n      : @480 (gas: 8)\n 31652: u64 [sp + 112] = 0\n 31655: u64 [sp + 104] = 0\n 31658: u64 [sp + 96] = 0\n 31661: a0 = 0x4e487b7100000000\n 31671: a1 = sp + 0x60\n 31674: u64 [sp + 0x78] = a0\n 31677: a0 = 0\n 31679: ra = 412, jump @23\n      : @481 [@dyn 206] (gas: 7)\n 31685: u64 [sp + 88] = 0\n 31688: u64 [sp + 80] = 0\n 31691: u64 [sp + 64] = 0x41\n 31695: a0 = 0x4\n 31698: a1 = sp + 0x40\n 31701: u64 [sp + 72] = 0\n 31704: ra = 414, jump @23\n      : @482 [@dyn 207] (gas: 3)\n 31710: a1 = 0x24\n 31713: a0 = 0\n 31715: ra = 416, jump @0\n      : @483 [@dyn 208] (gas: 6)\n 31721: i32 a1 = a0 + 0\n 31723: a0 = 0x1\n 31726: a2 = 0x24\n 31729: ra = 0x1a2\n 31733: ecalli 7 // 'seal_return'\n 31735: fallthrough\n      : @484 [@dyn 209] (gas: 18)\n 31736: sp = sp + 0xffffffffffffffa0\n 31739: u64 [sp + 0x58] = ra\n 31742: u64 [sp + 0x50] = s0\n 31745: u64 [sp + 0x48] = s1\n 31748: s0 = sp + 0x60\n 31751: sp = sp & 0xfffffffffffffff0\n 31754: a2 = u64 [a1]\n 31756: a3 = u64 [a1 + 0x8]\n 31759: a4 = u64 [a1 + 0x10]\n 31762: a1 = u64 [a1 + 0x18]\n 31765: s1 = a0\n 31767: u64 [sp + 0x18] = a1\n 31770: u64 [sp + 0x10] = a4\n 31773: u64 [sp + 0x8] = a3\n 31776: a0 = sp + 0x20\n 31779: a1 = sp\n 31781: u64 [sp] = a2\n 31783: ra = 420, jump @474\n      : @485 [@dyn 210] (gas: 14)\n 31789: a0 = u64 [sp + 0x30]\n 31792: a1 = u64 [sp + 0x38]\n 31795: a2 = u64 [sp + 0x20]\n 31798: a3 = u64 [sp + 0x28]\n 31801: u64 [s1 + 0x10] = a0\n 31804: u64 [s1 + 0x18] = a1\n 31807: u64 [s1] = a2\n 31809: u64 [s1 + 0x8] = a3\n 31812: sp = s0 + 0xffffffffffffffa0\n 31815: ra = u64 [sp + 0x58]\n 31818: s0 = u64 [sp + 0x50]\n 31821: s1 = u64 [sp + 0x48]\n 31824: sp = sp + 0x60\n 31827: ret\n      : @486 (gas: 21)\n 31829: sp = sp + 0xffffffffffffff60\n 31833: u64 [sp + 0x98] = ra\n 31837: u64 [sp + 0x90] = s0\n 31841: u64 [sp + 0x88] = s1\n 31845: s0 = sp + 0xa0\n 31849: sp = sp & 0xffffffffffffffe0\n 31852: a3 = u64 [a2]\n 31854: u64 [sp + 0x30] = a3\n 31857: a3 = u64 [a2 + 0x8]\n 31860: u64 [sp + 0x28] = a3\n 31863: a2 = u32 [a2 + 0x10]\n 31866: u64 [sp + 0x20] = a2\n 31869: a2 = u64 [a1]\n 31871: u64 [sp + 0x18] = a2\n 31874: a2 = u64 [a1 + 0x8]\n 31877: u64 [sp + 0x10] = a2\n 31880: s1 = u32 [a1 + 0x10]\n 31883: u64 [sp + 0x38] = a0\n 31886: a1 = 0x20\n 31889: a0 = 0\n 31891: ra = 422, jump @0\n      : @487 [@dyn 211] (gas: 58)\n 31897: a1 = reverse s1\n 31899: a2 = u64 [sp + 0x10]\n 31902: a2 = reverse a2\n 31904: a3 = u64 [sp + 0x18]\n 31907: a3 = reverse a3\n 31909: a4 = a3 >> 0x38\n 31912: u8 [a0 + 0x1f] = a4\n 31915: a4 = a3 >> 0x30\n 31918: u8 [a0 + 0x1e] = a4\n 31921: a4 = a3 >> 0x28\n 31924: u8 [a0 + 0x1d] = a4\n 31927: a4 = a3 >> 0x20\n 31930: u8 [a0 + 0x1c] = a4\n 31933: a4 = a3 >> 0x18\n 31936: u8 [a0 + 0x1b] = a4\n 31939: a4 = a3 >> 0x10\n 31942: u8 [a0 + 0x1a] = a4\n 31945: a4 = a3 >> 0x8\n 31948: u8 [a0 + 0x19] = a4\n 31951: u8 [a0 + 0x18] = a3\n 31954: a3 = a2 >> 0x38\n 31957: u8 [a0 + 0x17] = a3\n 31960: a3 = a2 >> 0x30\n 31963: u8 [a0 + 0x16] = a3\n 31966: a3 = a2 >> 0x28\n 31969: u8 [a0 + 0x15] = a3\n 31972: a3 = a2 >> 0x20\n 31975: u8 [a0 + 0x14] = a3\n 31978: a3 = a2 >> 0x18\n 31981: u8 [a0 + 0x13] = a3\n 31984: a3 = a2 >> 0x10\n 31987: u8 [a0 + 0x12] = a3\n 31990: a3 = a2 >> 0x8\n 31993: u8 [a0 + 0x11] = a3\n 31996: u8 [a0 + 0x10] = a2\n 31999: a2 = a1 >> 0x38\n 32002: u8 [a0 + 0xf] = a2\n 32005: a2 = a1 >> 0x30\n 32008: u8 [a0 + 0xe] = a2\n 32011: a2 = a1 >> 0x28\n 32014: u8 [a0 + 0xd] = a2\n 32017: a2 = a1 >> 0x20\n 32020: u8 [a0 + 0xc] = a2\n 32023: u8 [a0 + 11] = 0\n 32026: u8 [a0 + 10] = 0\n 32029: u8 [a0 + 9] = 0\n 32032: u8 [a0 + 0x8] = a1\n 32035: u8 [a0 + 7] = 0\n 32038: u8 [a0 + 6] = 0\n 32041: u8 [a0 + 5] = 0\n 32044: u8 [a0 + 4] = 0\n 32047: u8 [a0 + 3] = 0\n 32050: u8 [a0 + 2] = 0\n 32053: u8 [a0 + 1] = 0\n 32056: u8 [a0 + 0] = 0\n 32058: a0 = 0x20\n 32061: a1 = 0x20\n 32064: ra = 424, jump @0\n      : @488 [@dyn 212] (gas: 35)\n 32070: u8 [a0 + 31] = 0x1\n 32074: u8 [a0 + 30] = 0\n 32077: u8 [a0 + 29] = 0\n 32080: u8 [a0 + 28] = 0\n 32083: u8 [a0 + 27] = 0\n 32086: u8 [a0 + 26] = 0\n 32089: u8 [a0 + 25] = 0\n 32092: u8 [a0 + 24] = 0\n 32095: u8 [a0 + 23] = 0\n 32098: u8 [a0 + 22] = 0\n 32101: u8 [a0 + 21] = 0\n 32104: u8 [a0 + 20] = 0\n 32107: u8 [a0 + 19] = 0\n 32110: u8 [a0 + 18] = 0\n 32113: u8 [a0 + 17] = 0\n 32116: u8 [a0 + 16] = 0\n 32119: u8 [a0 + 15] = 0\n 32122: u8 [a0 + 14] = 0\n 32125: u8 [a0 + 13] = 0\n 32128: u8 [a0 + 12] = 0\n 32131: u8 [a0 + 11] = 0\n 32134: u8 [a0 + 10] = 0\n 32137: u8 [a0 + 9] = 0\n 32140: u8 [a0 + 8] = 0\n 32143: u8 [a0 + 7] = 0\n 32146: u8 [a0 + 6] = 0\n 32149: u8 [a0 + 5] = 0\n 32152: u8 [a0 + 4] = 0\n 32155: u8 [a0 + 3] = 0\n 32158: u8 [a0 + 2] = 0\n 32161: u8 [a0 + 1] = 0\n 32164: u8 [a0 + 0] = 0\n 32166: a1 = 0x40\n 32169: a0 = 0\n 32171: ra = 426, jump @0\n      : @489 [@dyn 213] (gas: 14)\n 32177: i32 a0 = a0 + 0\n 32179: i32 a2 = sp + 0x60\n 32182: a1 = 0x40\n 32185: ecalli 6 // 'hash_keccak_256'\n 32187: a0 = u64 [sp + 0x60]\n 32190: u64 [sp + 0x18] = a0\n 32193: a0 = u64 [sp + 0x68]\n 32196: u64 [sp + 0x10] = a0\n 32199: a0 = u64 [sp + 0x70]\n 32202: u64 [sp + 0x8] = a0\n 32205: s1 = u64 [sp + 0x78]\n 32208: a1 = 0x20\n 32211: a0 = 0\n 32213: ra = 428, jump @0\n      : @490 [@dyn 214] (gas: 59)\n 32219: a1 = u64 [sp + 0x20]\n 32222: a1 = reverse a1\n 32224: a2 = u64 [sp + 0x28]\n 32227: a2 = reverse a2\n 32229: a3 = u64 [sp + 0x30]\n 32232: a3 = reverse a3\n 32234: a4 = a3 >> 0x38\n 32237: u8 [a0 + 0x1f] = a4\n 32240: a4 = a3 >> 0x30\n 32243: u8 [a0 + 0x1e] = a4\n 32246: a4 = a3 >> 0x28\n 32249: u8 [a0 + 0x1d] = a4\n 32252: a4 = a3 >> 0x20\n 32255: u8 [a0 + 0x1c] = a4\n 32258: a4 = a3 >> 0x18\n 32261: u8 [a0 + 0x1b] = a4\n 32264: a4 = a3 >> 0x10\n 32267: u8 [a0 + 0x1a] = a4\n 32270: a4 = a3 >> 0x8\n 32273: u8 [a0 + 0x19] = a4\n 32276: u8 [a0 + 0x18] = a3\n 32279: a3 = a2 >> 0x38\n 32282: u8 [a0 + 0x17] = a3\n 32285: a3 = a2 >> 0x30\n 32288: u8 [a0 + 0x16] = a3\n 32291: a3 = a2 >> 0x28\n 32294: u8 [a0 + 0x15] = a3\n 32297: a3 = a2 >> 0x20\n 32300: u8 [a0 + 0x14] = a3\n 32303: a3 = a2 >> 0x18\n 32306: u8 [a0 + 0x13] = a3\n 32309: a3 = a2 >> 0x10\n 32312: u8 [a0 + 0x12] = a3\n 32315: a3 = a2 >> 0x8\n 32318: u8 [a0 + 0x11] = a3\n 32321: u8 [a0 + 0x10] = a2\n 32324: a2 = a1 >> 0x38\n 32327: u8 [a0 + 0xf] = a2\n 32330: a2 = a1 >> 0x30\n 32333: u8 [a0 + 0xe] = a2\n 32336: a2 = a1 >> 0x28\n 32339: u8 [a0 + 0xd] = a2\n 32342: a2 = a1 >> 0x20\n 32345: u8 [a0 + 0xc] = a2\n 32348: u8 [a0 + 11] = 0\n 32351: u8 [a0 + 10] = 0\n 32354: u8 [a0 + 9] = 0\n 32357: u8 [a0 + 0x8] = a1\n 32360: u8 [a0 + 7] = 0\n 32363: u8 [a0 + 6] = 0\n 32366: u8 [a0 + 5] = 0\n 32369: u8 [a0 + 4] = 0\n 32372: u8 [a0 + 3] = 0\n 32375: u8 [a0 + 2] = 0\n 32378: u8 [a0 + 1] = 0\n 32381: u8 [a0 + 0] = 0\n 32383: a0 = 0x20\n 32386: a1 = 0x20\n 32389: ra = 430, jump @0\n      : @491 [@dyn 215] (gas: 66)\n 32395: a1 = s1 >> 0x38\n 32398: u8 [a0 + 0x1f] = a1\n 32401: a1 = s1 >> 0x30\n 32404: u8 [a0 + 0x1e] = a1\n 32407: a1 = s1 >> 0x28\n 32410: u8 [a0 + 0x1d] = a1\n 32413: a1 = s1 >> 0x20\n 32416: u8 [a0 + 0x1c] = a1\n 32419: a1 = s1 >> 0x18\n 32422: u8 [a0 + 0x1b] = a1\n 32425: a1 = s1 >> 0x10\n 32428: u8 [a0 + 0x1a] = a1\n 32431: a1 = s1 >> 0x8\n 32434: u8 [a0 + 0x19] = a1\n 32437: u8 [a0 + 0x18] = s1\n 32440: a2 = u64 [sp + 0x8]\n 32443: a1 = a2 >> 0x38\n 32446: u8 [a0 + 0x17] = a1\n 32449: a1 = a2 >> 0x30\n 32452: u8 [a0 + 0x16] = a1\n 32455: a1 = a2 >> 0x28\n 32458: u8 [a0 + 0x15] = a1\n 32461: a1 = a2 >> 0x20\n 32464: u8 [a0 + 0x14] = a1\n 32467: a1 = a2 >> 0x18\n 32470: u8 [a0 + 0x13] = a1\n 32473: a1 = a2 >> 0x10\n 32476: u8 [a0 + 0x12] = a1\n 32479: a1 = a2 >> 0x8\n 32482: u8 [a0 + 0x11] = a1\n 32485: u8 [a0 + 0x10] = a2\n 32488: a2 = u64 [sp + 0x10]\n 32491: a1 = a2 >> 0x38\n 32494: u8 [a0 + 0xf] = a1\n 32497: a1 = a2 >> 0x30\n 32500: u8 [a0 + 0xe] = a1\n 32503: a1 = a2 >> 0x28\n 32506: u8 [a0 + 0xd] = a1\n 32509: a1 = a2 >> 0x20\n 32512: u8 [a0 + 0xc] = a1\n 32515: a1 = a2 >> 0x18\n 32518: u8 [a0 + 0xb] = a1\n 32521: a1 = a2 >> 0x10\n 32524: u8 [a0 + 0xa] = a1\n 32527: a1 = a2 >> 0x8\n 32530: u8 [a0 + 0x9] = a1\n 32533: u8 [a0 + 0x8] = a2\n 32536: a2 = u64 [sp + 0x18]\n 32539: a1 = a2 >> 0x38\n 32542: u8 [a0 + 0x7] = a1\n 32545: a1 = a2 >> 0x30\n 32548: u8 [a0 + 0x6] = a1\n 32551: a1 = a2 >> 0x28\n 32554: u8 [a0 + 0x5] = a1\n 32557: a1 = a2 >> 0x20\n 32560: u8 [a0 + 0x4] = a1\n 32563: a1 = a2 >> 0x18\n 32566: u8 [a0 + 0x3] = a1\n 32569: a1 = a2 >> 0x10\n 32572: u8 [a0 + 0x2] = a1\n 32575: a1 = a2 >> 0x8\n 32578: u8 [a0 + 0x1] = a1\n 32581: u8 [a0] = a2\n 32583: a1 = 0x40\n 32586: a0 = 0\n 32588: ra = 432, jump @0\n      : @492 [@dyn 216] (gas: 42)\n 32594: i32 a0 = a0 + 0\n 32596: i32 a2 = sp + 0x60\n 32599: a1 = 0x40\n 32602: ecalli 6 // 'hash_keccak_256'\n 32604: a0 = u64 [sp + 0x78]\n 32607: a1 = u64 [sp + 0x70]\n 32610: a2 = u64 [sp + 0x68]\n 32613: a3 = u64 [sp + 0x60]\n 32616: a0 = reverse a0\n 32618: a1 = reverse a1\n 32620: a2 = reverse a2\n 32622: a3 = reverse a3\n 32624: u64 [sp + 0x58] = a3\n 32627: u64 [sp + 0x50] = a2\n 32630: u64 [sp + 0x48] = a1\n 32633: u64 [sp + 0x40] = a0\n 32636: u64 [sp + 120] = 0\n 32639: u64 [sp + 112] = 0\n 32642: u64 [sp + 104] = 0\n 32645: u64 [sp + 96] = 0\n 32648: u32 [sp + 128] = 0x20\n 32653: i32 a1 = sp + 0x40\n 32656: i32 a3 = sp + 0x60\n 32659: i32 a4 = sp + 0x80\n 32663: a2 = 0xffffffffffffffff\n 32666: a0 = 0\n 32668: ecalli 5 // 'get_storage'\n 32670: a0 = u64 [sp + 0x78]\n 32673: a1 = u64 [sp + 0x70]\n 32676: a2 = u64 [sp + 0x68]\n 32679: a3 = u64 [sp + 0x60]\n 32682: a4 = u64 [sp + 0x38]\n 32685: u64 [a4 + 0x18] = a0\n 32688: u64 [a4 + 0x10] = a1\n 32691: u64 [a4 + 0x8] = a2\n 32694: u64 [a4] = a3\n 32696: sp = s0 + 0xffffffffffffff60\n 32700: ra = u64 [sp + 0x98]\n 32704: s0 = u64 [sp + 0x90]\n 32708: s1 = u64 [sp + 0x88]\n 32712: sp = sp + 0xa0\n 32716: ret\n      : @493 [@dyn 217] (gas: 9)\n 32718: a4 = u64 [sp + 0x1f8]\n 32722: a5 = u64 [sp + 0x1f0]\n 32726: a3 = u64 [sp + 0x1e8]\n 32730: ra = u64 [sp + 0x1e0]\n 32734: a0 = a3 & a4\n 32737: a1 = ra & a5\n 32740: a0 = a0 & a1\n 32743: a1 = 0xffffffffffffffff\n 32746: jump @496 if a0 == a1\n      : @494 (gas: 19)\n 32750: t0 = u64 [sp + 0x78]\n 32753: t2 = ra <u t0\n 32756: t1 = u64 [sp + 0x70]\n 32759: a2 = a3 ^ t1\n 32762: u64 [sp + 0x18] = a3\n 32765: a1 = a3 <u t1\n 32768: a1 = t2 if a2 == 0\n 32771: a2 = u64 [sp + 0x68]\n 32774: a0 = a5 <u a2\n 32777: s1 = u64 [sp + 0x40]\n 32780: a3 = a4 ^ s1\n 32783: u64 [sp + 0x10] = a4\n 32786: a4 = a4 <u s1\n 32789: a4 = a0 if a3 == 0\n 32792: u64 [sp + 0x8] = a5\n 32795: a5 = a5 ^ a2\n 32798: a3 = a3 | a5\n 32801: a4 = a1 if a3 == 0\n 32804: jump @497 if a4 != 0\n      : @495 (gas: 41)\n 32808: a3 = u64 [sp + 0x8]\n 32811: a3 = a3 - a2\n 32814: a4 = a3 <u a1\n 32817: a5 = u64 [sp + 0x10]\n 32820: a5 = a5 - s1\n 32823: a5 = a5 - a0\n 32826: a4 = a5 - a4\n 32829: a3 = a3 - a1\n 32832: a0 = u64 [sp + 0x18]\n 32835: a1 = a0 - t1\n 32838: a1 = a1 - t2\n 32841: a0 = ra - t0\n 32844: u64 [sp + 312] = 0\n 32848: u64 [sp + 304] = 0\n 32852: u64 [sp + 296] = 0\n 32856: u64 [sp + 288] = 0\n 32860: a2 = u64 [sp + 0x48]\n 32863: u64 [sp + 0x160] = a2\n 32867: a2 = u64 [sp + 0x20]\n 32870: u64 [sp + 0x180] = a2\n 32874: u64 [sp + 0x140] = a0\n 32878: a0 = u64 [sp + 0x58]\n 32881: u64 [sp + 0x168] = a0\n 32885: a0 = u64 [sp + 0x28]\n 32888: u64 [sp + 0x188] = a0\n 32892: a0 = u64 [sp + 0x50]\n 32895: u64 [sp + 0x170] = a0\n 32899: a0 = u64 [sp + 0x30]\n 32902: u64 [sp + 0x190] = a0\n 32906: u64 [sp + 0x148] = a1\n 32910: a0 = u64 [sp + 0x60]\n 32913: u64 [sp + 0x178] = a0\n 32917: a0 = u64 [sp + 0x38]\n 32920: u64 [sp + 0x198] = a0\n 32924: u64 [sp + 0x150] = a3\n 32928: a0 = sp + 0x180\n 32932: a1 = sp + 0x160\n 32936: a2 = sp + 0x140\n 32940: a3 = sp + 0x120\n 32944: u64 [sp + 0x158] = a4\n 32948: ra = 436, jump @516\n      : @496 [@dyn 218] (gas: 6)\n 32954: sp = s0 + 0xfffffffffffffde0\n 32958: ra = u64 [sp + 0x218]\n 32962: s0 = u64 [sp + 0x210]\n 32966: s1 = u64 [sp + 0x208]\n 32970: sp = sp + 0x220\n 32974: ret\n      : @497 (gas: 4)\n 32976: a1 = 0x20\n 32979: a0 = 0\n 32981: u64 [sp + 0x38] = ra\n 32984: ra = 438, jump @0\n      : @498 [@dyn 219] (gas: 65)\n 32991: u8 [a0 + 31] = 0\n 32994: u8 [a0 + 30] = 0\n 32997: u8 [a0 + 29] = 0\n 33000: u8 [a0 + 28] = 0\n 33003: u8 [a0 + 27] = 0\n 33006: u8 [a0 + 26] = 0\n 33009: u8 [a0 + 25] = 0\n 33012: u8 [a0 + 24] = 0\n 33015: u8 [a0 + 23] = 0\n 33018: u8 [a0 + 22] = 0\n 33021: u8 [a0 + 21] = 0\n 33024: u8 [a0 + 20] = 0\n 33027: u8 [a0 + 19] = 0\n 33030: u8 [a0 + 18] = 0\n 33033: u8 [a0 + 17] = 0\n 33036: u8 [a0 + 16] = 0\n 33039: u8 [a0 + 15] = 0\n 33042: u8 [a0 + 14] = 0\n 33045: u8 [a0 + 13] = 0\n 33048: u8 [a0 + 12] = 0\n 33051: u8 [a0 + 11] = 0\n 33054: u8 [a0 + 10] = 0\n 33057: u8 [a0 + 9] = 0\n 33060: u8 [a0 + 8] = 0\n 33063: u8 [a0 + 7] = 0\n 33066: u8 [a0 + 6] = 0\n 33069: u8 [a0 + 5] = 0\n 33072: u8 [a0 + 4] = 0\n 33075: u8 [a0 + 3] = 0xb2\n 33080: u8 [a0 + 2] = 0x41\n 33084: u8 [a0 + 1] = 0x8f\n 33089: u8 [a0 + 0] = 0xfb\n 33093: u64 [sp + 0x98] = s1\n 33097: a0 = u64 [sp + 0x68]\n 33100: u64 [sp + 0x90] = a0\n 33104: a0 = u64 [sp + 0x70]\n 33107: u64 [sp + 0x88] = a0\n 33111: a0 = u64 [sp + 0x78]\n 33114: u64 [sp + 0x80] = a0\n 33118: a0 = u64 [sp + 0x10]\n 33121: u64 [sp + 0xb8] = a0\n 33125: a0 = u64 [sp + 0x8]\n 33128: u64 [sp + 0xb0] = a0\n 33132: a0 = u64 [sp + 0x18]\n 33135: u64 [sp + 0xa8] = a0\n 33139: a0 = u64 [sp + 0x38]\n 33142: u64 [sp + 0xa0] = a0\n 33146: a0 = u64 [sp + 0x60]\n 33149: u64 [sp + 0xd8] = a0\n 33153: a0 = u64 [sp + 0x50]\n 33156: u64 [sp + 0xd0] = a0\n 33160: a0 = u64 [sp + 0x58]\n 33163: u64 [sp + 0xc8] = a0\n 33167: a0 = u64 [sp + 0x48]\n 33170: u64 [sp + 0xc0] = a0\n 33174: u64 [sp + 248] = 0\n 33178: u64 [sp + 240] = 0\n 33182: u64 [sp + 224] = 0x4\n 33187: a0 = sp + 0x100\n 33191: a1 = sp + 0xe0\n 33195: a2 = sp + 0xc0\n 33199: a3 = sp + 0xa0\n 33203: a4 = sp + 0x80\n 33207: u64 [sp + 232] = 0\n 33211: ra = 440, jump @218\n      : @499 [@dyn 220] (gas: 12)\n 33217: a0 = u64 [sp + 0x118]\n 33221: a1 = u64 [sp + 0x110]\n 33225: a2 = u64 [sp + 0x108]\n 33229: s1 = u64 [sp + 0x100]\n 33233: a0 = a0 | a2\n 33236: a2 = s1 | a1\n 33239: a2 = a2 | a0\n 33242: a2 = a2 >> 0x20\n 33245: a0 = a0 | a1\n 33248: a0 = a0 << 0x20\n 33251: a0 = a0 | a2\n 33254: jump @501 if a0 == 0\n      : @500 (gas: 1)\n 33257: trap\n      : @501 (gas: 3)\n 33258: i32 s1 = s1 + 0\n 33260: a1 = s1\n 33262: ra = 442, jump @0\n      : @502 [@dyn 221] (gas: 6)\n 33269: i32 a1 = a0 + 0\n 33271: a0 = 0x1\n 33274: a2 = s1\n 33276: ra = 0x1bc\n 33280: ecalli 7 // 'seal_return'\n 33282: fallthrough\n      : @503 [@dyn 222] (gas: 9)\n 33283: a2 = u64 [a1 + 0x18]\n 33286: a3 = u64 [a1 + 0x10]\n 33289: a4 = u64 [a1 + 0x8]\n 33292: a1 = u64 [a1]\n 33294: u64 [a0 + 0x18] = a2\n 33297: u64 [a0 + 0x10] = a3\n 33300: u64 [a0 + 0x8] = a4\n 33303: u64 [a0] = a1\n 33305: ret\n      : @504 (gas: 15)\n 33307: sp = sp + 0xffffffffffffff70\n 33311: u64 [sp + 0x88] = ra\n 33315: u64 [sp + 0x80] = s0\n 33319: u64 [sp + 0x78] = s1\n 33322: s0 = sp + 0x90\n 33326: sp = sp & 0xfffffffffffffff0\n 33329: a3 = u64 [a0 + 0x10]\n 33332: t1 = u64 [a0 + 0x8]\n 33335: t2 = u64 [a0]\n 33337: u64 [sp + 0x8] = a3\n 33340: a3 = a3 << 0x20\n 33343: a3 = a3 >> 0x20\n 33346: a4 = t2 | t1\n 33349: a3 = a3 | a4\n 33352: jump @508 if a3 == 0\n      : @505 (gas: 10)\n 33356: ra = u64 [a1 + 0x10]\n 33359: t0 = u64 [a1 + 0x8]\n 33362: a5 = u64 [a1]\n 33364: a3 = 0xffffffff\n 33374: a4 = t0 & 0xffffffffffffffff\n 33377: s1 = a5 & 0xffffffffffffffff\n 33380: a3 = ra & a3\n 33383: a3 = a3 | s1\n 33386: a3 = a3 | a4\n 33389: jump @510 if a3 == 0\n      : @506 (gas: 25)\n 33393: a3 = u64 [a2 + 0x18]\n 33396: a4 = u64 [a2 + 0x10]\n 33399: s1 = u64 [a2 + 0x8]\n 33402: a2 = u64 [a2]\n 33404: a1 = u64 [a1 + 0x18]\n 33407: a0 = u64 [a0 + 0x18]\n 33410: u64 [sp] = a0\n 33412: u64 [sp + 0x10] = a2\n 33415: u64 [sp + 0x30] = a5\n 33418: u64 [sp + 0x50] = t2\n 33421: u64 [sp + 0x18] = s1\n 33424: u64 [sp + 0x38] = t0\n 33427: u64 [sp + 0x58] = t1\n 33430: u64 [sp + 0x20] = a4\n 33433: u64 [sp + 0x40] = ra\n 33436: a0 = u64 [sp + 0x8]\n 33439: u64 [sp + 0x60] = a0\n 33442: u64 [sp + 0x28] = a3\n 33445: u64 [sp + 0x48] = a1\n 33448: a0 = sp + 0x50\n 33451: a1 = sp + 0x30\n 33454: a2 = sp + 0x10\n 33457: a3 = u64 [sp]\n 33459: u64 [sp + 0x68] = a3\n 33462: ra = 446, jump @226\n      : @507 [@dyn 223] (gas: 6)\n 33468: sp = s0 + 0xffffffffffffff70\n 33472: ra = u64 [sp + 0x88]\n 33476: s0 = u64 [sp + 0x80]\n 33480: s1 = u64 [sp + 0x78]\n 33483: sp = sp + 0x90\n 33487: ret\n      : @508 (gas: 3)\n 33489: a1 = 0x20\n 33492: a0 = 0\n 33494: ra = 448, jump @0\n      : @509 [@dyn 224] (gas: 33)\n 33501: u8 [a0 + 31] = 0\n 33504: u8 [a0 + 30] = 0\n 33507: u8 [a0 + 29] = 0\n 33510: u8 [a0 + 28] = 0\n 33513: u8 [a0 + 27] = 0\n 33516: u8 [a0 + 26] = 0\n 33519: u8 [a0 + 25] = 0\n 33522: u8 [a0 + 24] = 0\n 33525: u8 [a0 + 23] = 0\n 33528: u8 [a0 + 22] = 0\n 33531: u8 [a0 + 21] = 0\n 33534: u8 [a0 + 20] = 0\n 33537: u8 [a0 + 19] = 0\n 33540: u8 [a0 + 18] = 0\n 33543: u8 [a0 + 17] = 0\n 33546: u8 [a0 + 16] = 0\n 33549: u8 [a0 + 15] = 0\n 33552: u8 [a0 + 14] = 0\n 33555: u8 [a0 + 13] = 0\n 33558: u8 [a0 + 12] = 0\n 33561: u8 [a0 + 11] = 0\n 33564: u8 [a0 + 10] = 0\n 33567: u8 [a0 + 9] = 0\n 33570: u8 [a0 + 8] = 0\n 33573: u8 [a0 + 7] = 0\n 33576: u8 [a0 + 6] = 0\n 33579: u8 [a0 + 5] = 0\n 33582: u8 [a0 + 4] = 0\n 33585: u8 [a0 + 3] = 0x1e\n 33589: u8 [a0 + 2] = 0xfd\n 33594: u8 [a0 + 1] = 0xc6\n 33599: a1 = 0x96\n 33603: jump @512\n      : @510 (gas: 3)\n 33605: a1 = 0x20\n 33608: a0 = 0\n 33610: ra = 450, jump @0\n      : @511 [@dyn 225] (gas: 33)\n 33617: u8 [a0 + 31] = 0\n 33620: u8 [a0 + 30] = 0\n 33623: u8 [a0 + 29] = 0\n 33626: u8 [a0 + 28] = 0\n 33629: u8 [a0 + 27] = 0\n 33632: u8 [a0 + 26] = 0\n 33635: u8 [a0 + 25] = 0\n 33638: u8 [a0 + 24] = 0\n 33641: u8 [a0 + 23] = 0\n 33644: u8 [a0 + 22] = 0\n 33647: u8 [a0 + 21] = 0\n 33650: u8 [a0 + 20] = 0\n 33653: u8 [a0 + 19] = 0\n 33656: u8 [a0 + 18] = 0\n 33659: u8 [a0 + 17] = 0\n 33662: u8 [a0 + 16] = 0\n 33665: u8 [a0 + 15] = 0\n 33668: u8 [a0 + 14] = 0\n 33671: u8 [a0 + 13] = 0\n 33674: u8 [a0 + 12] = 0\n 33677: u8 [a0 + 11] = 0\n 33680: u8 [a0 + 10] = 0\n 33683: u8 [a0 + 9] = 0\n 33686: u8 [a0 + 8] = 0\n 33689: u8 [a0 + 7] = 0\n 33692: u8 [a0 + 6] = 0\n 33695: u8 [a0 + 5] = 0\n 33698: u8 [a0 + 4] = 0\n 33701: u8 [a0 + 3] = 0x5\n 33705: u8 [a0 + 2] = 0x2f\n 33709: u8 [a0 + 1] = 0x44\n 33713: a1 = 0xec\n 33717: fallthrough\n      : @512 (gas: 4)\n 33718: u8 [a0] = a1\n 33720: a0 = 0x4\n 33723: a1 = 0x20\n 33726: ra = 452, jump @0\n      : @513 [@dyn 226] (gas: 35)\n 33733: u8 [a0 + 31] = 0\n 33736: u8 [a0 + 30] = 0\n 33739: u8 [a0 + 29] = 0\n 33742: u8 [a0 + 28] = 0\n 33745: u8 [a0 + 27] = 0\n 33748: u8 [a0 + 26] = 0\n 33751: u8 [a0 + 25] = 0\n 33754: u8 [a0 + 24] = 0\n 33757: u8 [a0 + 23] = 0\n 33760: u8 [a0 + 22] = 0\n 33763: u8 [a0 + 21] = 0\n 33766: u8 [a0 + 20] = 0\n 33769: u8 [a0 + 19] = 0\n 33772: u8 [a0 + 18] = 0\n 33775: u8 [a0 + 17] = 0\n 33778: u8 [a0 + 16] = 0\n 33781: u8 [a0 + 15] = 0\n 33784: u8 [a0 + 14] = 0\n 33787: u8 [a0 + 13] = 0\n 33790: u8 [a0 + 12] = 0\n 33793: u8 [a0 + 11] = 0\n 33796: u8 [a0 + 10] = 0\n 33799: u8 [a0 + 9] = 0\n 33802: u8 [a0 + 8] = 0\n 33805: u8 [a0 + 7] = 0\n 33808: u8 [a0 + 6] = 0\n 33811: u8 [a0 + 5] = 0\n 33814: u8 [a0 + 4] = 0\n 33817: u8 [a0 + 3] = 0\n 33820: u8 [a0 + 2] = 0\n 33823: u8 [a0 + 1] = 0\n 33826: u8 [a0 + 0] = 0\n 33828: a1 = 0x24\n 33831: a0 = 0\n 33833: ra = 454, jump @0\n      : @514 [@dyn 227] (gas: 6)\n 33840: i32 a1 = a0 + 0\n 33842: a0 = 0x1\n 33845: a2 = 0x24\n 33848: ra = 0x1c8\n 33852: ecalli 7 // 'seal_return'\n 33854: fallthrough\n      : @515 [@dyn 228] (gas: 9)\n 33855: a2 = u64 [a1 + 0x18]\n 33858: a3 = u64 [a1 + 0x10]\n 33861: a4 = u64 [a1 + 0x8]\n 33864: a1 = u64 [a1]\n 33866: u64 [a0 + 0x18] = a2\n 33869: u64 [a0 + 0x10] = a3\n 33872: u64 [a0 + 0x8] = a4\n 33875: u64 [a0] = a1\n 33877: ret\n      : @516 (gas: 12)\n 33879: sp = sp + 0xfffffffffffffea0\n 33883: u64 [sp + 0x158] = ra\n 33887: u64 [sp + 0x150] = s0\n 33891: u64 [sp + 0x148] = s1\n 33895: s0 = sp + 0x160\n 33899: sp = sp & 0xffffffffffffffe0\n 33902: a5 = u32 [a0 + 0x10]\n 33905: a4 = u64 [a0]\n 33907: s1 = u64 [a0 + 0x8]\n 33910: a0 = a4 | a5\n 33913: a0 = a0 | s1\n 33916: jump @533 if a0 == 0\n      : @517 (gas: 17)\n 33920: u64 [sp + 0x30] = s1\n 33923: u64 [sp + 0x38] = a5\n 33926: u64 [sp + 0x40] = a4\n 33929: a0 = u64 [a1 + 0x10]\n 33932: a4 = u64 [a1 + 0x8]\n 33935: a1 = u64 [a1]\n 33937: a5 = 0xffffffffffffffff\n 33940: s1 = 0xffffffff\n 33950: a4 = a4 & a5\n 33953: a1 = a1 & a5\n 33956: a0 = a0 & s1\n 33959: u64 [sp + 0x58] = a1\n 33962: u64 [sp + 0x48] = a0\n 33965: a0 = a0 | a1\n 33968: u64 [sp + 0x50] = a4\n 33971: a0 = a0 | a4\n 33974: jump @535 if a0 == 0\n      : @518 (gas: 19)\n 33978: a0 = u64 [a3 + 0x18]\n 33981: u64 [sp + 0x78] = a0\n 33984: a0 = u64 [a3 + 0x10]\n 33987: u64 [sp + 0x68] = a0\n 33990: a0 = u64 [a3 + 0x8]\n 33993: u64 [sp + 0x70] = a0\n 33996: a0 = u64 [a3]\n 33998: u64 [sp + 0x60] = a0\n 34001: a0 = u64 [a2 + 0x18]\n 34004: u64 [sp + 0x80] = a0\n 34008: a0 = u64 [a2 + 0x10]\n 34011: u64 [sp + 0x88] = a0\n 34015: a0 = u64 [a2 + 0x8]\n 34018: u64 [sp + 0x90] = a0\n 34022: a0 = u64 [a2]\n 34024: u64 [sp + 0x98] = a0\n 34028: a1 = 0x20\n 34031: a0 = 0\n 34033: ra = 458, jump @0\n      : @519 [@dyn 229] (gas: 62)\n 34040: a1 = u64 [sp + 0x38]\n 34043: a2 = reverse a1\n 34045: a1 = u64 [sp + 0x30]\n 34048: a3 = reverse a1\n 34050: a1 = u64 [sp + 0x40]\n 34053: a4 = reverse a1\n 34055: a1 = a4 >> 0x38\n 34058: u8 [a0 + 0x1f] = a1\n 34061: a1 = a4 >> 0x30\n 34064: u8 [a0 + 0x1e] = a1\n 34067: a1 = a4 >> 0x28\n 34070: u8 [a0 + 0x1d] = a1\n 34073: a1 = a4 >> 0x20\n 34076: u8 [a0 + 0x1c] = a1\n 34079: a1 = a4 >> 0x18\n 34082: u8 [a0 + 0x1b] = a1\n 34085: a1 = a4 >> 0x10\n 34088: u8 [a0 + 0x1a] = a1\n 34091: a1 = a4 >> 0x8\n 34094: u8 [a0 + 0x19] = a1\n 34097: u64 [sp + 0x18] = a4\n 34100: u8 [a0 + 0x18] = a4\n 34103: u8 [a0 + 0x10] = a3\n 34106: u8 [a0 + 11] = 0\n 34109: u8 [a0 + 10] = 0\n 34112: u8 [a0 + 9] = 0\n 34115: u8 [a0 + 7] = 0\n 34118: u8 [a0 + 6] = 0\n 34121: u8 [a0 + 5] = 0\n 34124: u8 [a0 + 4] = 0\n 34127: u8 [a0 + 3] = 0\n 34130: u8 [a0 + 2] = 0\n 34133: u8 [a0 + 1] = 0\n 34136: u8 [a0 + 0] = 0\n 34138: a1 = a3 >> 0x38\n 34141: u8 [a0 + 0x17] = a1\n 34144: a1 = a3 >> 0x30\n 34147: u8 [a0 + 0x16] = a1\n 34150: a1 = a3 >> 0x28\n 34153: u8 [a0 + 0x15] = a1\n 34156: a1 = a3 >> 0x20\n 34159: u8 [a0 + 0x14] = a1\n 34162: a1 = a3 >> 0x18\n 34165: u8 [a0 + 0x13] = a1\n 34168: a1 = a3 >> 0x10\n 34171: u8 [a0 + 0x12] = a1\n 34174: u64 [sp + 0x20] = a3\n 34177: a1 = a3 >> 0x8\n 34180: u8 [a0 + 0x11] = a1\n 34183: u8 [a0 + 0x8] = a2\n 34186: a1 = a2 >> 0x38\n 34189: u8 [a0 + 0xf] = a1\n 34192: a1 = a2 >> 0x30\n 34195: u8 [a0 + 0xe] = a1\n 34198: a1 = a2 >> 0x28\n 34201: u8 [a0 + 0xd] = a1\n 34204: u64 [sp + 0x28] = a2\n 34207: a1 = a2 >> 0x20\n 34210: u8 [a0 + 0xc] = a1\n 34213: a0 = 0x20\n 34216: a1 = 0x20\n 34219: ra = 460, jump @0\n      : @520 [@dyn 230] (gas: 35)\n 34226: u8 [a0 + 31] = 0x1\n 34230: u8 [a0 + 30] = 0\n 34233: u8 [a0 + 29] = 0\n 34236: u8 [a0 + 28] = 0\n 34239: u8 [a0 + 27] = 0\n 34242: u8 [a0 + 26] = 0\n 34245: u8 [a0 + 25] = 0\n 34248: u8 [a0 + 24] = 0\n 34251: u8 [a0 + 23] = 0\n 34254: u8 [a0 + 22] = 0\n 34257: u8 [a0 + 21] = 0\n 34260: u8 [a0 + 20] = 0\n 34263: u8 [a0 + 19] = 0\n 34266: u8 [a0 + 18] = 0\n 34269: u8 [a0 + 17] = 0\n 34272: u8 [a0 + 16] = 0\n 34275: u8 [a0 + 15] = 0\n 34278: u8 [a0 + 14] = 0\n 34281: u8 [a0 + 13] = 0\n 34284: u8 [a0 + 12] = 0\n 34287: u8 [a0 + 11] = 0\n 34290: u8 [a0 + 10] = 0\n 34293: u8 [a0 + 9] = 0\n 34296: u8 [a0 + 8] = 0\n 34299: u8 [a0 + 7] = 0\n 34302: u8 [a0 + 6] = 0\n 34305: u8 [a0 + 5] = 0\n 34308: u8 [a0 + 4] = 0\n 34311: u8 [a0 + 3] = 0\n 34314: u8 [a0 + 2] = 0\n 34317: u8 [a0 + 1] = 0\n 34320: u8 [a0 + 0] = 0\n 34322: a1 = 0x40\n 34325: a0 = 0\n 34327: ra = 462, jump @0\n      : @521 [@dyn 231] (gas: 14)\n 34334: i32 a0 = a0 + 0\n 34336: i32 a2 = sp + 0xe0\n 34340: a1 = 0x40\n 34343: ecalli 6 // 'hash_keccak_256'\n 34345: a0 = u64 [sp + 0xe0]\n 34349: u64 [sp + 0x40] = a0\n 34352: a0 = u64 [sp + 0xe8]\n 34356: u64 [sp + 0x38] = a0\n 34359: a0 = u64 [sp + 0xf0]\n 34363: u64 [sp + 0x30] = a0\n 34366: s1 = u64 [sp + 0xf8]\n 34370: a1 = 0x20\n 34373: a0 = 0\n 34375: ra = 464, jump @0\n      : @522 [@dyn 232] (gas: 62)\n 34382: a1 = u64 [sp + 0x48]\n 34385: a2 = reverse a1\n 34387: a1 = u64 [sp + 0x50]\n 34390: a3 = reverse a1\n 34392: a1 = u64 [sp + 0x58]\n 34395: a4 = reverse a1\n 34397: a1 = a4 >> 0x38\n 34400: u8 [a0 + 0x1f] = a1\n 34403: a1 = a4 >> 0x30\n 34406: u8 [a0 + 0x1e] = a1\n 34409: a1 = a4 >> 0x28\n 34412: u8 [a0 + 0x1d] = a1\n 34415: a1 = a4 >> 0x20\n 34418: u8 [a0 + 0x1c] = a1\n 34421: a1 = a4 >> 0x18\n 34424: u8 [a0 + 0x1b] = a1\n 34427: a1 = a4 >> 0x10\n 34430: u8 [a0 + 0x1a] = a1\n 34433: a1 = a4 >> 0x8\n 34436: u8 [a0 + 0x19] = a1\n 34439: u64 [sp] = a4\n 34441: u8 [a0 + 0x18] = a4\n 34444: a1 = a3 >> 0x38\n 34447: u8 [a0 + 0x17] = a1\n 34450: a1 = a3 >> 0x30\n 34453: u8 [a0 + 0x16] = a1\n 34456: a1 = a3 >> 0x28\n 34459: u8 [a0 + 0x15] = a1\n 34462: a1 = a3 >> 0x20\n 34465: u8 [a0 + 0x14] = a1\n 34468: a1 = a3 >> 0x18\n 34471: u8 [a0 + 0x13] = a1\n 34474: a1 = a3 >> 0x10\n 34477: u8 [a0 + 0x12] = a1\n 34480: a1 = a3 >> 0x8\n 34483: u8 [a0 + 0x11] = a1\n 34486: u64 [sp + 0x8] = a3\n 34489: u8 [a0 + 0x10] = a3\n 34492: a1 = a2 >> 0x38\n 34495: u8 [a0 + 0xf] = a1\n 34498: a1 = a2 >> 0x30\n 34501: u8 [a0 + 0xe] = a1\n 34504: a1 = a2 >> 0x28\n 34507: u8 [a0 + 0xd] = a1\n 34510: a1 = a2 >> 0x20\n 34513: u8 [a0 + 0xc] = a1\n 34516: u8 [a0 + 11] = 0\n 34519: u8 [a0 + 10] = 0\n 34522: u8 [a0 + 9] = 0\n 34525: u64 [sp + 0x10] = a2\n 34528: u8 [a0 + 0x8] = a2\n 34531: u8 [a0 + 7] = 0\n 34534: u8 [a0 + 6] = 0\n 34537: u8 [a0 + 5] = 0\n 34540: u8 [a0 + 4] = 0\n 34543: u8 [a0 + 3] = 0\n 34546: u8 [a0 + 2] = 0\n 34549: u8 [a0 + 1] = 0\n 34552: u8 [a0 + 0] = 0\n 34554: a0 = 0x20\n 34557: a1 = 0x20\n 34560: ra = 466, jump @0\n      : @523 [@dyn 233] (gas: 66)\n 34567: a1 = s1 >> 0x38\n 34570: u8 [a0 + 0x1f] = a1\n 34573: a1 = s1 >> 0x30\n 34576: u8 [a0 + 0x1e] = a1\n 34579: a1 = s1 >> 0x28\n 34582: u8 [a0 + 0x1d] = a1\n 34585: a1 = s1 >> 0x20\n 34588: u8 [a0 + 0x1c] = a1\n 34591: a1 = s1 >> 0x18\n 34594: u8 [a0 + 0x1b] = a1\n 34597: a1 = s1 >> 0x10\n 34600: u8 [a0 + 0x1a] = a1\n 34603: a1 = s1 >> 0x8\n 34606: u8 [a0 + 0x19] = a1\n 34609: u8 [a0 + 0x18] = s1\n 34612: a2 = u64 [sp + 0x30]\n 34615: a1 = a2 >> 0x38\n 34618: u8 [a0 + 0x17] = a1\n 34621: a1 = a2 >> 0x30\n 34624: u8 [a0 + 0x16] = a1\n 34627: a1 = a2 >> 0x28\n 34630: u8 [a0 + 0x15] = a1\n 34633: a1 = a2 >> 0x20\n 34636: u8 [a0 + 0x14] = a1\n 34639: a1 = a2 >> 0x18\n 34642: u8 [a0 + 0x13] = a1\n 34645: a1 = a2 >> 0x10\n 34648: u8 [a0 + 0x12] = a1\n 34651: a1 = a2 >> 0x8\n 34654: u8 [a0 + 0x11] = a1\n 34657: u8 [a0 + 0x10] = a2\n 34660: a2 = u64 [sp + 0x38]\n 34663: a1 = a2 >> 0x38\n 34666: u8 [a0 + 0xf] = a1\n 34669: a1 = a2 >> 0x30\n 34672: u8 [a0 + 0xe] = a1\n 34675: a1 = a2 >> 0x28\n 34678: u8 [a0 + 0xd] = a1\n 34681: a1 = a2 >> 0x20\n 34684: u8 [a0 + 0xc] = a1\n 34687: a1 = a2 >> 0x18\n 34690: u8 [a0 + 0xb] = a1\n 34693: a1 = a2 >> 0x10\n 34696: u8 [a0 + 0xa] = a1\n 34699: a1 = a2 >> 0x8\n 34702: u8 [a0 + 0x9] = a1\n 34705: u8 [a0 + 0x8] = a2\n 34708: a2 = u64 [sp + 0x40]\n 34711: a1 = a2 >> 0x38\n 34714: u8 [a0 + 0x7] = a1\n 34717: a1 = a2 >> 0x30\n 34720: u8 [a0 + 0x6] = a1\n 34723: a1 = a2 >> 0x28\n 34726: u8 [a0 + 0x5] = a1\n 34729: a1 = a2 >> 0x20\n 34732: u8 [a0 + 0x4] = a1\n 34735: a1 = a2 >> 0x18\n 34738: u8 [a0 + 0x3] = a1\n 34741: a1 = a2 >> 0x10\n 34744: u8 [a0 + 0x2] = a1\n 34747: a1 = a2 >> 0x8\n 34750: u8 [a0 + 0x1] = a1\n 34753: u8 [a0] = a2\n 34755: a1 = 0x40\n 34758: a0 = 0\n 34760: ra = 468, jump @0\n      : @524 [@dyn 234] (gas: 52)\n 34767: i32 a0 = a0 + 0\n 34769: i32 a2 = sp + 0xe0\n 34773: a1 = 0x40\n 34776: ecalli 6 // 'hash_keccak_256'\n 34778: a0 = u64 [sp + 0xf8]\n 34782: a1 = u64 [sp + 0xf0]\n 34786: a2 = u64 [sp + 0xe8]\n 34790: a3 = u64 [sp + 0xe0]\n 34794: a0 = reverse a0\n 34796: u64 [sp + 0x58] = a0\n 34799: a1 = reverse a1\n 34801: u64 [sp + 0x50] = a1\n 34804: a2 = reverse a2\n 34806: u64 [sp + 0x48] = a2\n 34809: s1 = reverse a3\n 34811: u64 [sp + 0xd8] = s1\n 34815: u64 [sp + 0xd0] = a2\n 34819: u64 [sp + 0xc8] = a1\n 34823: u64 [sp + 0xc0] = a0\n 34827: u64 [sp + 248] = 0\n 34831: u64 [sp + 240] = 0\n 34835: u64 [sp + 232] = 0\n 34839: u64 [sp + 224] = 0\n 34843: u32 [sp + 160] = 0x20\n 34848: i32 a1 = sp + 0xc0\n 34852: i32 a3 = sp + 0xe0\n 34856: i32 a4 = sp + 0xa0\n 34860: a2 = 0xffffffffffffffff\n 34863: a0 = 0\n 34865: ecalli 5 // 'get_storage'\n 34867: u64 [sp + 0xd8] = s1\n 34871: a0 = u64 [sp + 0x48]\n 34874: u64 [sp + 0xd0] = a0\n 34878: a0 = u64 [sp + 0x50]\n 34881: u64 [sp + 0xc8] = a0\n 34885: a0 = u64 [sp + 0x58]\n 34888: u64 [sp + 0xc0] = a0\n 34892: a0 = u64 [sp + 0x80]\n 34896: u64 [sp + 0xf8] = a0\n 34900: a0 = u64 [sp + 0x88]\n 34904: u64 [sp + 0xf0] = a0\n 34908: a0 = u64 [sp + 0x90]\n 34912: u64 [sp + 0xe8] = a0\n 34916: a0 = u64 [sp + 0x98]\n 34920: u64 [sp + 0xe0] = a0\n 34924: i32 a1 = sp + 0xc0\n 34928: i32 a3 = sp + 0xe0\n 34932: a2 = 0xffffffffffffffff\n 34935: a4 = 0x20\n 34938: a0 = 0\n 34940: ecalli 9 // 'set_storage'\n 34942: fallthrough\n      : @525 (gas: 8)\n 34943: a0 = u64 [sp + 0x68]\n 34946: a1 = u64 [sp + 0x60]\n 34949: a0 = a0 | a1\n 34952: a1 = u64 [sp + 0x78]\n 34955: a2 = u64 [sp + 0x70]\n 34958: a1 = a1 | a2\n 34961: a0 = a0 | a1\n 34964: jump @531 if a0 == 0\n      : @526 (gas: 3)\n 34968: a0 = 0x40\n 34971: a1 = 0x20\n 34974: ra = 470, jump @0\n      : @527 [@dyn 235] (gas: 100)\n 34981: a1 = u8 [a0 + 0x11]\n 34984: a2 = u8 [a0 + 0x10]\n 34987: a3 = u8 [a0 + 0x12]\n 34990: a4 = u8 [a0 + 0x13]\n 34993: a1 = a1 << 0x8\n 34996: a1 = a1 | a2\n 34999: a3 = a3 << 0x10\n 35002: a4 = a4 << 0x18\n 35005: a3 = a3 | a4\n 35008: a1 = a1 | a3\n 35011: a2 = u8 [a0 + 0x15]\n 35014: a3 = u8 [a0 + 0x14]\n 35017: a4 = u8 [a0 + 0x16]\n 35020: a5 = u8 [a0 + 0x17]\n 35023: a2 = a2 << 0x8\n 35026: a2 = a2 | a3\n 35029: a4 = a4 << 0x10\n 35032: a5 = a5 << 0x18\n 35035: a4 = a4 | a5\n 35038: a2 = a2 | a4\n 35041: a2 = a2 << 0x20\n 35044: t0 = a2 | a1\n 35047: a2 = u8 [a0 + 0x1]\n 35050: a3 = u8 [a0]\n 35052: a4 = u8 [a0 + 0x2]\n 35055: a5 = u8 [a0 + 0x3]\n 35058: a2 = a2 << 0x8\n 35061: a2 = a2 | a3\n 35064: a4 = a4 << 0x10\n 35067: a5 = a5 << 0x18\n 35070: a4 = a4 | a5\n 35073: a2 = a2 | a4\n 35076: a3 = u8 [a0 + 0x5]\n 35079: a4 = u8 [a0 + 0x4]\n 35082: a5 = u8 [a0 + 0x6]\n 35085: s1 = u8 [a0 + 0x7]\n 35088: a3 = a3 << 0x8\n 35091: a3 = a3 | a4\n 35094: a5 = a5 << 0x10\n 35097: s1 = s1 << 0x18\n 35100: a5 = a5 | s1\n 35103: a3 = a3 | a5\n 35106: a3 = a3 << 0x20\n 35109: a2 = a2 | a3\n 35112: a3 = u8 [a0 + 0x19]\n 35115: a4 = u8 [a0 + 0x18]\n 35118: a5 = u8 [a0 + 0x1a]\n 35121: s1 = u8 [a0 + 0x1b]\n 35124: a3 = a3 << 0x8\n 35127: a3 = a3 | a4\n 35130: a5 = a5 << 0x10\n 35133: s1 = s1 << 0x18\n 35136: a5 = a5 | s1\n 35139: a3 = a3 | a5\n 35142: a4 = u8 [a0 + 0x1d]\n 35145: a5 = u8 [a0 + 0x1c]\n 35148: s1 = u8 [a0 + 0x1e]\n 35151: a1 = u8 [a0 + 0x1f]\n 35154: a4 = a4 << 0x8\n 35157: a4 = a4 | a5\n 35160: s1 = s1 << 0x10\n 35163: a1 = a1 << 0x18\n 35166: a1 = a1 | s1\n 35169: a1 = a1 | a4\n 35172: a1 = a1 << 0x20\n 35175: a3 = a3 | a1\n 35178: a1 = u8 [a0 + 0x9]\n 35181: a4 = u8 [a0 + 0x8]\n 35184: a5 = u8 [a0 + 0xa]\n 35187: s1 = u8 [a0 + 0xb]\n 35190: a1 = a1 << 0x8\n 35193: a1 = a1 | a4\n 35196: a5 = a5 << 0x10\n 35199: s1 = s1 << 0x18\n 35202: a5 = a5 | s1\n 35205: a1 = a1 | a5\n 35208: a4 = u8 [a0 + 0xd]\n 35211: a5 = u8 [a0 + 0xc]\n 35214: s1 = u8 [a0 + 0xe]\n 35217: a0 = u8 [a0 + 0xf]\n 35220: a4 = a4 << 0x8\n 35223: a4 = a4 | a5\n 35226: s1 = s1 << 0x10\n 35229: a0 = a0 << 0x18\n 35232: a0 = a0 | s1\n 35235: a0 = a0 | a4\n 35238: a0 = a0 << 0x20\n 35241: a0 = a0 | a1\n 35244: a1 = reverse a0\n 35246: a0 = reverse a3\n 35248: a2 = reverse a2\n 35250: a3 = reverse t0\n 35252: a2 = a2 | a3\n 35255: a3 = a0 | a1\n 35258: a3 = a3 | a2\n 35261: a3 = a3 >> 0x20\n 35264: a1 = a1 | a2\n 35267: a1 = a1 << 0x20\n 35270: a1 = a1 | a3\n 35273: jump @532 if a1 != 0\n      : @528 (gas: 4)\n 35277: i32 s1 = a0 + 0\n 35279: a1 = 0x20\n 35282: a0 = s1\n 35284: ra = 472, jump @0\n      : @529 [@dyn 236] (gas: 71)\n 35291: a1 = u64 [sp + 0x80]\n 35295: a1 = reverse a1\n 35297: a2 = u64 [sp + 0x88]\n 35301: a2 = reverse a2\n 35303: a3 = u64 [sp + 0x90]\n 35307: a3 = reverse a3\n 35309: a4 = u64 [sp + 0x98]\n 35313: a4 = reverse a4\n 35315: a5 = a4 >> 0x38\n 35318: u8 [a0 + 0x1f] = a5\n 35321: a5 = a4 >> 0x30\n 35324: u8 [a0 + 0x1e] = a5\n 35327: a5 = a4 >> 0x28\n 35330: u8 [a0 + 0x1d] = a5\n 35333: a5 = a4 >> 0x20\n 35336: u8 [a0 + 0x1c] = a5\n 35339: a5 = a4 >> 0x18\n 35342: u8 [a0 + 0x1b] = a5\n 35345: a5 = a4 >> 0x10\n 35348: u8 [a0 + 0x1a] = a5\n 35351: a5 = a4 >> 0x8\n 35354: u8 [a0 + 0x19] = a5\n 35357: u8 [a0 + 0x18] = a4\n 35360: u8 [a0 + 0x10] = a3\n 35363: a4 = a3 >> 0x38\n 35366: u8 [a0 + 0x17] = a4\n 35369: a4 = a3 >> 0x30\n 35372: u8 [a0 + 0x16] = a4\n 35375: a4 = a3 >> 0x28\n 35378: u8 [a0 + 0x15] = a4\n 35381: a4 = a3 >> 0x20\n 35384: u8 [a0 + 0x14] = a4\n 35387: a4 = a3 >> 0x18\n 35390: u8 [a0 + 0x13] = a4\n 35393: a4 = a3 >> 0x10\n 35396: u8 [a0 + 0x12] = a4\n 35399: a3 = a3 >> 0x8\n 35402: u8 [a0 + 0x11] = a3\n 35405: u8 [a0 + 0x8] = a2\n 35408: a3 = a2 >> 0x38\n 35411: u8 [a0 + 0xf] = a3\n 35414: a3 = a2 >> 0x30\n 35417: u8 [a0 + 0xe] = a3\n 35420: a3 = a2 >> 0x28\n 35423: u8 [a0 + 0xd] = a3\n 35426: a3 = a2 >> 0x20\n 35429: u8 [a0 + 0xc] = a3\n 35432: a3 = a2 >> 0x18\n 35435: u8 [a0 + 0xb] = a3\n 35438: a3 = a2 >> 0x10\n 35441: u8 [a0 + 0xa] = a3\n 35444: a2 = a2 >> 0x8\n 35447: u8 [a0 + 0x9] = a2\n 35450: u8 [a0] = a1\n 35452: a2 = a1 >> 0x38\n 35455: u8 [a0 + 0x7] = a2\n 35458: a2 = a1 >> 0x30\n 35461: u8 [a0 + 0x6] = a2\n 35464: a2 = a1 >> 0x28\n 35467: u8 [a0 + 0x5] = a2\n 35470: a2 = a1 >> 0x20\n 35473: u8 [a0 + 0x4] = a2\n 35476: a2 = a1 >> 0x18\n 35479: u8 [a0 + 0x3] = a2\n 35482: a2 = a1 >> 0x10\n 35485: u8 [a0 + 0x2] = a2\n 35488: a1 = a1 >> 0x8\n 35491: u8 [a0 + 0x1] = a1\n 35494: a1 = 0x20\n 35497: a0 = s1\n 35499: ra = 474, jump @0\n      : @530 [@dyn 237] (gas: 28)\n 35506: a1 = u64 [0x20020]\n 35511: a2 = u64 [0x20028]\n 35516: a3 = u64 [0x20030]\n 35521: a4 = u64 [0x20038]\n 35526: u64 [sp + 0xf8] = a1\n 35530: u64 [sp + 0xf0] = a2\n 35534: u64 [sp + 0xe8] = a3\n 35538: u64 [sp + 0xe0] = a4\n 35542: a1 = u64 [sp + 0x18]\n 35545: u64 [sp + 0x118] = a1\n 35549: a1 = u64 [sp + 0x20]\n 35552: u64 [sp + 0x110] = a1\n 35556: a1 = u64 [sp + 0x28]\n 35559: u64 [sp + 0x108] = a1\n 35563: u64 [sp + 256] = 0\n 35567: a1 = u64 [sp]\n 35569: u64 [sp + 0x138] = a1\n 35573: a1 = u64 [sp + 0x8]\n 35576: u64 [sp + 0x130] = a1\n 35580: a1 = u64 [sp + 0x10]\n 35583: u64 [sp + 0x128] = a1\n 35587: u64 [sp + 288] = 0\n 35591: i32 a2 = a0 + 0\n 35593: i32 a0 = sp + 0xe0\n 35597: a1 = 0x3\n 35600: a3 = 0x20\n 35603: ecalli 4 // 'deposit_event'\n 35605: fallthrough\n      : @531 (gas: 6)\n 35606: sp = s0 + 0xfffffffffffffea0\n 35610: ra = u64 [sp + 0x158]\n 35614: s0 = u64 [sp + 0x150]\n 35618: s1 = u64 [sp + 0x148]\n 35622: sp = sp + 0x160\n 35626: ret\n      : @532 (gas: 1)\n 35628: trap\n      : @533 (gas: 2)\n 35629: a1 = 0x20\n 35632: ra = 476, jump @0\n      : @534 [@dyn 238] (gas: 33)\n 35639: u8 [a0 + 31] = 0\n 35642: u8 [a0 + 30] = 0\n 35645: u8 [a0 + 29] = 0\n 35648: u8 [a0 + 28] = 0\n 35651: u8 [a0 + 27] = 0\n 35654: u8 [a0 + 26] = 0\n 35657: u8 [a0 + 25] = 0\n 35660: u8 [a0 + 24] = 0\n 35663: u8 [a0 + 23] = 0\n 35666: u8 [a0 + 22] = 0\n 35669: u8 [a0 + 21] = 0\n 35672: u8 [a0 + 20] = 0\n 35675: u8 [a0 + 19] = 0\n 35678: u8 [a0 + 18] = 0\n 35681: u8 [a0 + 17] = 0\n 35684: u8 [a0 + 16] = 0\n 35687: u8 [a0 + 15] = 0\n 35690: u8 [a0 + 14] = 0\n 35693: u8 [a0 + 13] = 0\n 35696: u8 [a0 + 12] = 0\n 35699: u8 [a0 + 11] = 0\n 35702: u8 [a0 + 10] = 0\n 35705: u8 [a0 + 9] = 0\n 35708: u8 [a0 + 8] = 0\n 35711: u8 [a0 + 7] = 0\n 35714: u8 [a0 + 6] = 0\n 35717: u8 [a0 + 5] = 0\n 35720: u8 [a0 + 4] = 0\n 35723: u8 [a0 + 3] = 0x5\n 35727: u8 [a0 + 2] = 0xdf\n 35732: u8 [a0 + 1] = 0x2\n 35736: a1 = 0xe6\n 35740: jump @537\n      : @535 (gas: 2)\n 35742: a1 = 0x20\n 35745: ra = 478, jump @0\n      : @536 [@dyn 239] (gas: 33)\n 35752: u8 [a0 + 31] = 0\n 35755: u8 [a0 + 30] = 0\n 35758: u8 [a0 + 29] = 0\n 35761: u8 [a0 + 28] = 0\n 35764: u8 [a0 + 27] = 0\n 35767: u8 [a0 + 26] = 0\n 35770: u8 [a0 + 25] = 0\n 35773: u8 [a0 + 24] = 0\n 35776: u8 [a0 + 23] = 0\n 35779: u8 [a0 + 22] = 0\n 35782: u8 [a0 + 21] = 0\n 35785: u8 [a0 + 20] = 0\n 35788: u8 [a0 + 19] = 0\n 35791: u8 [a0 + 18] = 0\n 35794: u8 [a0 + 17] = 0\n 35797: u8 [a0 + 16] = 0\n 35800: u8 [a0 + 15] = 0\n 35803: u8 [a0 + 14] = 0\n 35806: u8 [a0 + 13] = 0\n 35809: u8 [a0 + 12] = 0\n 35812: u8 [a0 + 11] = 0\n 35815: u8 [a0 + 10] = 0\n 35818: u8 [a0 + 9] = 0\n 35821: u8 [a0 + 8] = 0\n 35824: u8 [a0 + 7] = 0\n 35827: u8 [a0 + 6] = 0\n 35830: u8 [a0 + 5] = 0\n 35833: u8 [a0 + 4] = 0\n 35836: u8 [a0 + 3] = 0x62\n 35840: u8 [a0 + 2] = 0xd\n 35844: u8 [a0 + 1] = 0x28\n 35848: a1 = 0x94\n 35852: fallthrough\n      : @537 (gas: 4)\n 35853: u8 [a0] = a1\n 35855: a0 = 0x4\n 35858: a1 = 0x20\n 35861: ra = 480, jump @0\n      : @538 [@dyn 240] (gas: 35)\n 35868: u8 [a0 + 31] = 0\n 35871: u8 [a0 + 30] = 0\n 35874: u8 [a0 + 29] = 0\n 35877: u8 [a0 + 28] = 0\n 35880: u8 [a0 + 27] = 0\n 35883: u8 [a0 + 26] = 0\n 35886: u8 [a0 + 25] = 0\n 35889: u8 [a0 + 24] = 0\n 35892: u8 [a0 + 23] = 0\n 35895: u8 [a0 + 22] = 0\n 35898: u8 [a0 + 21] = 0\n 35901: u8 [a0 + 20] = 0\n 35904: u8 [a0 + 19] = 0\n 35907: u8 [a0 + 18] = 0\n 35910: u8 [a0 + 17] = 0\n 35913: u8 [a0 + 16] = 0\n 35916: u8 [a0 + 15] = 0\n 35919: u8 [a0 + 14] = 0\n 35922: u8 [a0 + 13] = 0\n 35925: u8 [a0 + 12] = 0\n 35928: u8 [a0 + 11] = 0\n 35931: u8 [a0 + 10] = 0\n 35934: u8 [a0 + 9] = 0\n 35937: u8 [a0 + 8] = 0\n 35940: u8 [a0 + 7] = 0\n 35943: u8 [a0 + 6] = 0\n 35946: u8 [a0 + 5] = 0\n 35949: u8 [a0 + 4] = 0\n 35952: u8 [a0 + 3] = 0\n 35955: u8 [a0 + 2] = 0\n 35958: u8 [a0 + 1] = 0\n 35961: u8 [a0 + 0] = 0\n 35963: a1 = 0x24\n 35966: a0 = 0\n 35968: ra = 482, jump @0\n      : @539 [@dyn 241] (gas: 7)\n 35975: i32 a1 = a0 + 0\n 35977: a0 = 0x1\n 35980: a2 = 0x24\n 35983: ecalli 7 // 'seal_return'\n 35985: a0 = 0\n 35987: ra = 0x1e4\n 35991: jump @25\n      : @540 [export #0: 'call'] (gas: 2)\n 35995: a0 = 0\n 35997: ra = 484, jump @25\n      : @541 [@dyn 242] [export #1: 'deploy'] (gas: 2)\n 36004: a0 = 0x1\n 36007: ra = 486, jump @25\n      : @542 [@dyn 243] (gas: 27)\n 36014: sp = sp + 0xffffffffffffff80\n 36017: u64 [sp + 0x78] = ra\n 36020: u64 [sp + 0x70] = s0\n 36023: u64 [sp + 0x68] = s1\n 36026: s0 = sp + 0x80\n 36030: sp = sp & 0xfffffffffffffff0\n 36033: t0 = u64 [a1]\n 36035: t1 = u64 [a1 + 0x8]\n 36038: t2 = u64 [a1 + 0x10]\n 36041: a1 = u64 [a1 + 0x18]\n 36044: a3 = u64 [a2]\n 36046: a4 = u64 [a2 + 0x8]\n 36049: a5 = u64 [a2 + 0x10]\n 36052: a2 = u64 [a2 + 0x18]\n 36055: s1 = a0\n 36057: u64 [sp + 0x18] = a2\n 36060: u64 [sp + 0x10] = a5\n 36063: u64 [sp + 0x8] = a4\n 36066: u64 [sp] = a3\n 36068: u64 [sp + 0x38] = a1\n 36071: u64 [sp + 0x30] = t2\n 36074: u64 [sp + 0x28] = t1\n 36077: a0 = sp + 0x40\n 36080: a1 = sp + 0x20\n 36083: a2 = sp\n 36085: u64 [sp + 0x20] = t0\n 36088: ra = 488, jump @444\n      : @543 [@dyn 244] (gas: 14)\n 36094: a0 = u64 [sp + 0x50]\n 36097: a1 = u64 [sp + 0x58]\n 36100: a2 = u64 [sp + 0x40]\n 36103: a3 = u64 [sp + 0x48]\n 36106: u64 [s1 + 0x10] = a0\n 36109: u64 [s1 + 0x18] = a1\n 36112: u64 [s1] = a2\n 36114: u64 [s1 + 0x8] = a3\n 36117: sp = s0 + 0xffffffffffffff80\n 36120: ra = u64 [sp + 0x78]\n 36123: s0 = u64 [sp + 0x70]\n 36126: s1 = u64 [sp + 0x68]\n 36129: sp = sp + 0x80\n 36133: ret\n",
						"bytecode": {
							"object": ""
						},
						"deployedBytecode": {
							"object": ""
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"irOptimized": "/// @use-src 0:\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\", 1:\"@openzeppelin/contracts/token/ERC20/ERC20.sol\", 2:\"@openzeppelin/contracts/token/ERC20/IERC20.sol\", 3:\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\", 4:\"@openzeppelin/contracts/utils/Context.sol\", 5:\"contracts/MockERC20.sol\"\nobject \"MockERC20_809\" {\n    code {\n        {\n            /// @src 5:114:295  \"contract MockERC20 is ERC20 {...\"\n            mstore(64, memoryguard(0x80))\n            if callvalue()\n            {\n                revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb()\n            }\n            let _1, _2 := copy_arguments_for_constructor_object_MockERC20()\n            constructor_MockERC20(_1, _2)\n            let _3 := allocate_unbounded()\n            codecopy(_3, dataoffset(\"MockERC20_809_deployed\"), datasize(\"MockERC20_809_deployed\"))\n            return(_3, datasize(\"MockERC20_809_deployed\"))\n        }\n        function allocate_unbounded() -> memPtr\n        { memPtr := mload(64) }\n        function revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb()\n        { revert(0, 0) }\n        function round_up_to_mul_of(value) -> result\n        {\n            result := and(add(value, 31), not(31))\n        }\n        function panic_error_0x41()\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x41)\n            revert(0, 0x24)\n        }\n        function finalize_allocation(memPtr, size)\n        {\n            let newFreePtr := add(memPtr, round_up_to_mul_of(size))\n            if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n            mstore(64, newFreePtr)\n        }\n        function allocate_memory(size) -> memPtr\n        {\n            memPtr := allocate_unbounded()\n            finalize_allocation(memPtr, size)\n        }\n        function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b()\n        { revert(0, 0) }\n        function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db()\n        { revert(0, 0) }\n        function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d()\n        { revert(0, 0) }\n        function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae()\n        { revert(0, 0) }\n        function array_allocation_size_string(length) -> size\n        {\n            if gt(length, sub(shl(64, 1), 1)) { panic_error_0x41() }\n            size := round_up_to_mul_of(length)\n            size := add(size, 0x20)\n        }\n        function copy_memory_to_memory_with_cleanup(src, dst, length)\n        {\n            mcopy(dst, src, length)\n            mstore(add(dst, length), 0)\n        }\n        function abi_decode_available_length_string_fromMemory(src, length, end) -> array\n        {\n            array := allocate_memory(array_allocation_size_string(length))\n            mstore(array, length)\n            let dst := add(array, 0x20)\n            if gt(add(src, length), end)\n            {\n                revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae()\n            }\n            copy_memory_to_memory_with_cleanup(src, dst, length)\n        }\n        function abi_decode_string_fromMemory(offset, end) -> array\n        {\n            if iszero(slt(add(offset, 0x1f), end))\n            {\n                revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d()\n            }\n            let length := mload(offset)\n            array := abi_decode_available_length_string_fromMemory(add(offset, 0x20), length, end)\n        }\n        function abi_decode_stringt_string_fromMemory(headStart, dataEnd) -> value0, value1\n        {\n            if slt(sub(dataEnd, headStart), 64)\n            {\n                revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b()\n            }\n            let offset := mload(add(headStart, 0))\n            if gt(offset, sub(shl(64, 1), 1))\n            {\n                revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db()\n            }\n            value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n            let offset_1 := mload(add(headStart, 32))\n            if gt(offset_1, sub(shl(64, 1), 1))\n            {\n                revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db()\n            }\n            value1 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n        }\n        function copy_arguments_for_constructor_object_MockERC20() -> ret_param, ret_param_1\n        {\n            let programSize := datasize(\"MockERC20_809\")\n            let argSize := sub(codesize(), programSize)\n            let memoryDataOffset := allocate_memory(argSize)\n            codecopy(memoryDataOffset, programSize, argSize)\n            ret_param, ret_param_1 := abi_decode_stringt_string_fromMemory(memoryDataOffset, add(memoryDataOffset, argSize))\n        }\n        function cleanup_t_rational_by(value) -> cleaned\n        { cleaned := value }\n        function cleanup_uint256(value) -> cleaned\n        { cleaned := value }\n        function identity(value) -> ret\n        { ret := value }\n        function convert_rational_by_to_uint256(value) -> converted\n        {\n            converted := cleanup_uint256(identity(cleanup_t_rational_by(value)))\n        }\n        /// @ast-id 808 @src 5:148:293  \"constructor(string memory name, string memory symbol) ERC20(name, symbol) {...\"\n        function constructor_MockERC20(var_name_792_mpos, var_symbol_794_mpos)\n        {\n            /// @src 5:208:212  \"name\"\n            let _4_mpos := var_name_792_mpos\n            let expr_797_mpos := _4_mpos\n            let _5_mpos := expr_797_mpos\n            /// @src 5:214:220  \"symbol\"\n            let _6_mpos := var_symbol_794_mpos\n            let expr_798_mpos := _6_mpos\n            let _mpos := expr_798_mpos\n            /// @src 5:148:293  \"constructor(string memory name, string memory symbol) ERC20(name, symbol) {...\"\n            constructor_ERC20(_5_mpos, _mpos)\n            /// @src 5:238:248  \"msg.sender\"\n            let expr := caller()\n            /// @src 5:250:254  \"1e24\"\n            let expr_1 := 0xd3c21bcecceda1000000\n            /// @src 5:232:255  \"_mint(msg.sender, 1e24)\"\n            let _1 := convert_rational_by_to_uint256(expr_1)\n            fun_mint(expr, _1)\n        }\n        /// @src 5:114:295  \"contract MockERC20 is ERC20 {...\"\n        function array_length_string(value) -> length\n        { length := mload(value) }\n        function panic_error_0x22()\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n        function extract_byte_array_length(data) -> length\n        {\n            length := div(data, 2)\n            let outOfPlaceEncoding := and(data, 1)\n            if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n            if eq(outOfPlaceEncoding, lt(length, 32)) { panic_error_0x22() }\n        }\n        function array_dataslot_string_storage(ptr) -> data\n        {\n            data := ptr\n            mstore(0, ptr)\n            data := keccak256(0, 0x20)\n        }\n        function divide_by_ceil(value) -> result\n        {\n            result := div(add(value, 31), 32)\n        }\n        function shift_left_dynamic(bits, value) -> newValue\n        { newValue := shl(bits, value) }\n        function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result\n        {\n            let shiftBits := mul(shiftBytes, 8)\n            let mask := shift_left_dynamic(shiftBits, not(0))\n            toInsert := shift_left_dynamic(shiftBits, toInsert)\n            value := and(value, not(mask))\n            result := or(value, and(toInsert, mask))\n        }\n        function convert_uint256_to_uint256(value) -> converted\n        {\n            converted := cleanup_uint256(identity(cleanup_uint256(value)))\n        }\n        function prepare_store_uint256(value) -> ret\n        { ret := value }\n        function update_storage_value_uint256_to_uint256(slot, offset, value)\n        {\n            let convertedValue := convert_uint256_to_uint256(value)\n            sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_uint256(convertedValue)))\n        }\n        function zero_value_for_split_uint256() -> ret\n        { ret := 0 }\n        function storage_set_to_zero_uint256(slot, offset)\n        {\n            let zero := zero_value_for_split_uint256()\n            update_storage_value_uint256_to_uint256(slot, offset, zero)\n        }\n        function clear_storage_range_bytes1(start, end)\n        {\n            for { } lt(start, end) { start := add(start, 1) }\n            {\n                storage_set_to_zero_uint256(start, 0)\n            }\n        }\n        function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n        {\n            if gt(len, 31)\n            {\n                let dataArea := array_dataslot_string_storage(array)\n                let deleteStart := add(dataArea, divide_by_ceil(startIndex))\n                if lt(startIndex, 32) { deleteStart := dataArea }\n                clear_storage_range_bytes1(deleteStart, add(dataArea, divide_by_ceil(len)))\n            }\n        }\n        function shift_right_unsigned_dynamic(bits, value) -> newValue\n        { newValue := shr(bits, value) }\n        function mask_bytes_dynamic(data, bytes) -> result\n        {\n            let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n            result := and(data, mask)\n        }\n        function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n        {\n            data := mask_bytes_dynamic(data, len)\n            used := or(data, mul(2, len))\n        }\n        function copy_byte_array_to_storage_from_string_to_string(slot, src)\n        {\n            let newLen := array_length_string(src)\n            if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n            let oldLen := extract_byte_array_length(sload(slot))\n            clean_up_bytearray_end_slots_string_storage(slot, oldLen, newLen)\n            let srcOffset := 0\n            srcOffset := 0x20\n            switch gt(newLen, 31)\n            case 1 {\n                let loopEnd := and(newLen, not(0x1f))\n                let dstPtr := array_dataslot_string_storage(slot)\n                let i := 0\n                for { } lt(i, loopEnd) { i := add(i, 0x20) }\n                {\n                    sstore(dstPtr, mload(add(src, srcOffset)))\n                    dstPtr := add(dstPtr, 1)\n                    srcOffset := add(srcOffset, 32)\n                }\n                if lt(loopEnd, newLen)\n                {\n                    let lastValue := mload(add(src, srcOffset))\n                    sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n                }\n                sstore(slot, add(mul(newLen, 2), 1))\n            }\n            default {\n                let value := 0\n                if newLen\n                {\n                    value := mload(add(src, srcOffset))\n                }\n                sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n            }\n        }\n        function update_storage_value_offset_string_to_string(slot, value)\n        {\n            copy_byte_array_to_storage_from_string_to_string(slot, value)\n        }\n        /// @ast-id 188 @src 1:1582:1695  \"constructor(string memory name_, string memory symbol_) {...\"\n        function constructor_ERC20(var_name_mpos, var_symbol_mpos)\n        {\n            /// @src 1:1656:1661  \"name_\"\n            let _9_mpos := var_name_mpos\n            let expr_mpos := _9_mpos\n            /// @src 1:1648:1661  \"_name = name_\"\n            update_storage_value_offset_string_to_string(0x03, expr_mpos)\n            /// @src 1:1681:1688  \"symbol_\"\n            let _11_mpos := var_symbol_mpos\n            let expr_184_mpos := _11_mpos\n            /// @src 1:1671:1688  \"_symbol = symbol_\"\n            update_storage_value_offset_string_to_string(0x04, expr_184_mpos)\n        }\n        /// @src 5:114:295  \"contract MockERC20 is ERC20 {...\"\n        function cleanup_rational_by(value) -> cleaned\n        { cleaned := value }\n        function cleanup_uint160(value) -> cleaned\n        {\n            cleaned := and(value, sub(shl(160, 1), 1))\n        }\n        function convert_rational_by_to_uint160(value) -> converted\n        {\n            converted := cleanup_uint160(identity(cleanup_rational_by(value)))\n        }\n        function convert_rational_by_to_address(value) -> converted\n        {\n            converted := convert_rational_by_to_uint160(value)\n        }\n        function cleanup_address(value) -> cleaned\n        {\n            cleaned := cleanup_uint160(value)\n        }\n        function abi_encode_address(value, pos)\n        {\n            mstore(pos, cleanup_address(value))\n        }\n        function abi_encode_tuple_address(headStart, value0) -> tail\n        {\n            tail := add(headStart, 32)\n            abi_encode_address(value0, add(headStart, 0))\n        }\n        /// @ast-id 491 @src 1:7439:7647  \"function _mint(address account, uint256 value) internal {...\"\n        function fun_mint(var_account, var_value)\n        {\n            /// @src 1:7509:7516  \"account\"\n            let _1 := var_account\n            let expr := _1\n            /// @src 1:7528:7529  \"0\"\n            let expr_1 := 0x00\n            /// @src 1:7520:7530  \"address(0)\"\n            let expr_2 := convert_rational_by_to_address(expr_1)\n            /// @src 1:7509:7530  \"account == address(0)\"\n            let expr_3 := eq(cleanup_address(expr), cleanup_address(expr_2))\n            /// @src 1:7505:7596  \"if (account == address(0)) {...\"\n            if expr_3\n            {\n                /// @src 1:7582:7583  \"0\"\n                let expr_4 := 0x00\n                /// @src 1:7574:7584  \"address(0)\"\n                let expr_5 := convert_rational_by_to_address(expr_4)\n                /// @src 1:7553:7585  \"ERC20InvalidReceiver(address(0))\"\n                let _2 := 0\n                mstore(_2, shl(224, 0xec442f05))\n                let _3 := abi_encode_tuple_address(add(_2, 4), expr_5)\n                revert(_2, sub(_3, _2))\n            }\n            /// @src 1:7621:7622  \"0\"\n            let expr_6 := 0x00\n            /// @src 1:7613:7623  \"address(0)\"\n            let expr_7 := convert_rational_by_to_address(expr_6)\n            /// @src 1:7625:7632  \"account\"\n            let _4 := var_account\n            let expr_8 := _4\n            /// @src 1:7634:7639  \"value\"\n            let _5 := var_value\n            let expr_9 := _5\n            fun_update(expr_7, expr_8, expr_9)\n        }\n        /// @src 5:114:295  \"contract MockERC20 is ERC20 {...\"\n        function convert_uint160_to_uint160(value) -> converted\n        {\n            converted := cleanup_uint160(identity(cleanup_uint160(value)))\n        }\n        function convert_uint160_to_address(value) -> converted\n        {\n            converted := convert_uint160_to_uint160(value)\n        }\n        function convert_address_to_address(value) -> converted\n        {\n            converted := convert_uint160_to_address(value)\n        }\n        function mapping_index_access_mapping_address_uint256_of_address(slot, key) -> dataSlot\n        {\n            mstore(0, convert_address_to_address(key))\n            mstore(0x20, slot)\n            dataSlot := keccak256(0, 0x40)\n        }\n        function shift_right_unsigned(value) -> newValue\n        { newValue := shr(0, value) }\n        function cleanup_from_storage_uint256(value) -> cleaned\n        { cleaned := value }\n        function extract_from_storage_value_offset_uint256(slot_value) -> value\n        {\n            value := cleanup_from_storage_uint256(shift_right_unsigned(slot_value))\n        }\n        function read_from_storage_split_offset_uint256(slot) -> value\n        {\n            value := extract_from_storage_value_offset_uint256(sload(slot))\n        }\n        function abi_encode_uint256_to_uint256(value, pos)\n        {\n            mstore(pos, cleanup_uint256(value))\n        }\n        function abi_encode_address_uint256_uint256(headStart, value0, value1, value2) -> tail\n        {\n            tail := add(headStart, 96)\n            abi_encode_address(value0, add(headStart, 0))\n            abi_encode_uint256_to_uint256(value1, add(headStart, 32))\n            abi_encode_uint256_to_uint256(value2, add(headStart, 64))\n        }\n        function wrapping_sub_uint256(x, y) -> diff\n        {\n            diff := cleanup_uint256(sub(x, y))\n        }\n        function shift_left(value) -> newValue\n        { newValue := shl(0, value) }\n        function update_byte_slice_shift(value, toInsert) -> result\n        {\n            let mask := not(0)\n            toInsert := shift_left(toInsert)\n            value := and(value, not(mask))\n            result := or(value, and(toInsert, mask))\n        }\n        function update_storage_value_offset_uint256_to_uint256(slot, value)\n        {\n            let convertedValue := convert_uint256_to_uint256(value)\n            sstore(slot, update_byte_slice_shift(sload(slot), prepare_store_uint256(convertedValue)))\n        }\n        function panic_error_0x11()\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        function checked_add_uint256(x, y) -> sum\n        {\n            x := cleanup_uint256(x)\n            y := cleanup_uint256(y)\n            sum := add(x, y)\n            if gt(x, sum) { panic_error_0x11() }\n        }\n        function wrapping_add_uint256(x, y) -> sum\n        {\n            sum := cleanup_uint256(add(x, y))\n        }\n        function abi_encode_uint256(headStart, value0) -> tail\n        {\n            tail := add(headStart, 32)\n            abi_encode_uint256_to_uint256(value0, add(headStart, 0))\n        }\n        /// @ast-id 458 @src 1:5989:7096  \"function _update(address from, address to, uint256 value) internal virtual {...\"\n        function fun_update(var_from, var_to, var_value)\n        {\n            /// @src 1:6078:6082  \"from\"\n            let _1 := var_from\n            let expr := _1\n            /// @src 1:6094:6095  \"0\"\n            let expr_1 := 0x00\n            /// @src 1:6086:6096  \"address(0)\"\n            let expr_2 := convert_rational_by_to_address(expr_1)\n            /// @src 1:6078:6096  \"from == address(0)\"\n            let expr_3 := eq(cleanup_address(expr), cleanup_address(expr_2))\n            /// @src 1:6074:6614  \"if (from == address(0)) {...\"\n            switch expr_3\n            case 0 {\n                /// @src 1:6288:6297  \"_balances\"\n                let _19_slot := 0x00\n                let expr_404_slot := _19_slot\n                /// @src 1:6298:6302  \"from\"\n                let _2 := var_from\n                let expr_4 := _2\n                /// @src 1:6288:6303  \"_balances[from]\"\n                let _3 := mapping_index_access_mapping_address_uint256_of_address(expr_404_slot, expr_4)\n                let _4 := read_from_storage_split_offset_uint256(_3)\n                let expr_5 := _4\n                /// @src 1:6266:6303  \"uint256 fromBalance = _balances[from]\"\n                let var_fromBalance := expr_5\n                /// @src 1:6321:6332  \"fromBalance\"\n                let _5 := var_fromBalance\n                let expr_6 := _5\n                /// @src 1:6335:6340  \"value\"\n                let _6 := var_value\n                let expr_7 := _6\n                /// @src 1:6321:6340  \"fromBalance < value\"\n                let expr_8 := lt(cleanup_uint256(expr_6), cleanup_uint256(expr_7))\n                /// @src 1:6317:6432  \"if (fromBalance < value) {...\"\n                if expr_8\n                {\n                    /// @src 1:6392:6396  \"from\"\n                    let _7 := var_from\n                    let expr_9 := _7\n                    /// @src 1:6398:6409  \"fromBalance\"\n                    let _8 := var_fromBalance\n                    let expr_10 := _8\n                    /// @src 1:6411:6416  \"value\"\n                    let _9 := var_value\n                    let expr_11 := _9\n                    /// @src 1:6367:6417  \"ERC20InsufficientBalance(from, fromBalance, value)\"\n                    let _10 := 0\n                    mstore(_10, shl(226, 0x391434e3))\n                    let _11 := abi_encode_address_uint256_uint256(add(_10, 4), expr_9, expr_10, expr_11)\n                    revert(_10, sub(_11, _10))\n                }\n                /// @src 1:6570:6581  \"fromBalance\"\n                let _12 := var_fromBalance\n                let expr_12 := _12\n                /// @src 1:6584:6589  \"value\"\n                let _13 := var_value\n                let expr_13 := _13\n                /// @src 1:6570:6589  \"fromBalance - value\"\n                let expr_14 := wrapping_sub_uint256(expr_12, expr_13)\n                /// @src 1:6552:6561  \"_balances\"\n                let _slot := 0x00\n                let expr_slot := _slot\n                /// @src 1:6562:6566  \"from\"\n                let _14 := var_from\n                let expr_15 := _14\n                /// @src 1:6552:6567  \"_balances[from]\"\n                let _15 := mapping_index_access_mapping_address_uint256_of_address(expr_slot, expr_15)\n                /// @src 1:6552:6589  \"_balances[from] = fromBalance - value\"\n                update_storage_value_offset_uint256_to_uint256(_15, expr_14)\n            }\n            default /// @src 1:6074:6614  \"if (from == address(0)) {...\"\n            {\n                /// @src 1:6230:6235  \"value\"\n                let _16 := var_value\n                let expr_16 := _16\n                /// @src 1:6214:6235  \"_totalSupply += value\"\n                let _17 := read_from_storage_split_offset_uint256(0x02)\n                let expr_17 := checked_add_uint256(_17, expr_16)\n                update_storage_value_offset_uint256_to_uint256(0x02, expr_17)\n            }\n            /// @src 1:6628:6630  \"to\"\n            let _18 := var_to\n            let expr_18 := _18\n            /// @src 1:6642:6643  \"0\"\n            let expr_19 := 0x00\n            /// @src 1:6634:6644  \"address(0)\"\n            let expr_20 := convert_rational_by_to_address(expr_19)\n            /// @src 1:6628:6644  \"to == address(0)\"\n            let expr_21 := eq(cleanup_address(expr_18), cleanup_address(expr_20))\n            /// @src 1:6624:7049  \"if (to == address(0)) {...\"\n            switch expr_21\n            case 0 {\n                /// @src 1:7019:7024  \"value\"\n                let _19 := var_value\n                let expr_22 := _19\n                /// @src 1:7002:7011  \"_balances\"\n                let _39_slot := 0x00\n                let expr_442_slot := _39_slot\n                /// @src 1:7012:7014  \"to\"\n                let _20 := var_to\n                let expr_23 := _20\n                /// @src 1:7002:7015  \"_balances[to]\"\n                let _21 := mapping_index_access_mapping_address_uint256_of_address(expr_442_slot, expr_23)\n                /// @src 1:7002:7024  \"_balances[to] += value\"\n                let _22 := read_from_storage_split_offset_uint256(_21)\n                let expr_24 := wrapping_add_uint256(_22, expr_22)\n                update_storage_value_offset_uint256_to_uint256(_21, expr_24)\n            }\n            default /// @src 1:6624:7049  \"if (to == address(0)) {...\"\n            {\n                /// @src 1:6807:6812  \"value\"\n                let _23 := var_value\n                let expr_25 := _23\n                /// @src 1:6791:6812  \"_totalSupply -= value\"\n                let _24 := read_from_storage_split_offset_uint256(0x02)\n                let expr_26 := wrapping_sub_uint256(_24, expr_25)\n                update_storage_value_offset_uint256_to_uint256(0x02, expr_26)\n            }\n            /// @src 1:7073:7077  \"from\"\n            let _25 := var_from\n            let expr_27 := _25\n            /// @src 1:7079:7081  \"to\"\n            let _26 := var_to\n            let expr_28 := _26\n            /// @src 1:7083:7088  \"value\"\n            let _27 := var_value\n            let expr_29 := _27\n            /// @src 1:7064:7089  \"Transfer(from, to, value)\"\n            let _28 := 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n            let _29 := convert_address_to_address(expr_27)\n            let _30 := convert_address_to_address(expr_28)\n            let _31 := allocate_unbounded()\n            let _32 := abi_encode_uint256(_31, expr_29)\n            log3(_31, sub(_32, _31), _28, _29, _30)\n        }\n    }\n    /// @use-src 1:\"@openzeppelin/contracts/token/ERC20/ERC20.sol\", 4:\"@openzeppelin/contracts/utils/Context.sol\", 5:\"contracts/MockERC20.sol\"\n    object \"MockERC20_809_deployed\" {\n        code {\n            {\n                /// @src 5:114:295  \"contract MockERC20 is ERC20 {...\"\n                mstore(64, memoryguard(0x80))\n                if iszero(lt(calldatasize(), 4))\n                {\n                    let selector := shift_right_unsigned(calldataload(0))\n                    switch selector\n                    case 0x06fdde03 { external_fun_name() }\n                    case 0x095ea7b3 { external_fun_approve() }\n                    case 0x18160ddd { external_fun_totalSupply() }\n                    case 0x23b872dd { external_fun_transferFrom() }\n                    case 0x313ce567 { external_fun_decimals() }\n                    case 0x70a08231 { external_fun_balanceOf() }\n                    case 0x95d89b41 { external_fun_symbol() }\n                    case 0xa9059cbb { external_fun_transfer() }\n                    case 0xdd62ed3e { external_fun_allowance() }\n                    default { }\n                }\n                revert_error_42b3090547df1d2001c96683413b8cf91c1b902ef5e3cb8d9f6f304cf7446f74()\n            }\n            function shift_right_unsigned(value) -> newValue\n            { newValue := shr(224, value) }\n            function allocate_unbounded() -> memPtr\n            { memPtr := mload(64) }\n            function revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb()\n            { revert(0, 0) }\n            function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b()\n            { revert(0, 0) }\n            function abi_decode(headStart, dataEnd)\n            {\n                if slt(sub(dataEnd, headStart), 0)\n                {\n                    revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b()\n                }\n            }\n            function array_length_string(value) -> length\n            { length := mload(value) }\n            function array_storeLengthForEncoding_string_fromStack(pos, length) -> updated_pos\n            {\n                mstore(pos, length)\n                updated_pos := add(pos, 0x20)\n            }\n            function copy_memory_to_memory_with_cleanup(src, dst, length)\n            {\n                mcopy(dst, src, length)\n                mstore(add(dst, length), 0)\n            }\n            function round_up_to_mul_of(value) -> result\n            {\n                result := and(add(value, 31), not(31))\n            }\n            function abi_encode_string_memory_ptr(value, pos) -> end\n            {\n                let length := array_length_string(value)\n                pos := array_storeLengthForEncoding_string_fromStack(pos, length)\n                copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n                end := add(pos, round_up_to_mul_of(length))\n            }\n            function abi_encode_string(headStart, value0) -> tail\n            {\n                tail := add(headStart, 32)\n                mstore(add(headStart, 0), sub(tail, headStart))\n                tail := abi_encode_string_memory_ptr(value0, tail)\n            }\n            function external_fun_name()\n            {\n                if callvalue()\n                {\n                    revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb()\n                }\n                abi_decode(4, calldatasize())\n                let ret := fun_name()\n                let memPos := allocate_unbounded()\n                let memEnd := abi_encode_string(memPos, ret)\n                return(memPos, sub(memEnd, memPos))\n            }\n            function cleanup_uint160(value) -> cleaned\n            {\n                cleaned := and(value, sub(shl(160, 1), 1))\n            }\n            function cleanup_address(value) -> cleaned\n            {\n                cleaned := cleanup_uint160(value)\n            }\n            function validator_revert_address(value)\n            {\n                if iszero(eq(value, cleanup_address(value))) { revert(0, 0) }\n            }\n            function abi_decode_address(offset, end) -> value\n            {\n                value := calldataload(offset)\n                validator_revert_address(value)\n            }\n            function cleanup_uint256(value) -> cleaned\n            { cleaned := value }\n            function validator_revert_uint256(value)\n            {\n                if iszero(eq(value, cleanup_uint256(value))) { revert(0, 0) }\n            }\n            function abi_decode_uint256(offset, end) -> value\n            {\n                value := calldataload(offset)\n                validator_revert_uint256(value)\n            }\n            function abi_decode_addresst_uint256(headStart, dataEnd) -> value0, value1\n            {\n                if slt(sub(dataEnd, headStart), 64)\n                {\n                    revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b()\n                }\n                let offset := 0\n                value0 := abi_decode_address(add(headStart, offset), dataEnd)\n                let offset_1 := 32\n                value1 := abi_decode_uint256(add(headStart, offset_1), dataEnd)\n            }\n            function cleanup_bool(value) -> cleaned\n            {\n                cleaned := iszero(iszero(value))\n            }\n            function abi_encode_bool_to_bool(value, pos)\n            {\n                mstore(pos, cleanup_bool(value))\n            }\n            function abi_encode_bool(headStart, value0) -> tail\n            {\n                tail := add(headStart, 32)\n                abi_encode_bool_to_bool(value0, add(headStart, 0))\n            }\n            function external_fun_approve()\n            {\n                if callvalue()\n                {\n                    revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb()\n                }\n                let param, param_1 := abi_decode_addresst_uint256(4, calldatasize())\n                let ret := fun_approve(param, param_1)\n                let memPos := allocate_unbounded()\n                let memEnd := abi_encode_bool(memPos, ret)\n                return(memPos, sub(memEnd, memPos))\n            }\n            function abi_encode_uint256_to_uint256(value, pos)\n            {\n                mstore(pos, cleanup_uint256(value))\n            }\n            function abi_encode_uint256(headStart, value0) -> tail\n            {\n                tail := add(headStart, 32)\n                abi_encode_uint256_to_uint256(value0, add(headStart, 0))\n            }\n            function external_fun_totalSupply()\n            {\n                if callvalue()\n                {\n                    revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb()\n                }\n                abi_decode(4, calldatasize())\n                let ret := fun_totalSupply()\n                let memPos := allocate_unbounded()\n                let memEnd := abi_encode_uint256(memPos, ret)\n                return(memPos, sub(memEnd, memPos))\n            }\n            function abi_decode_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n            {\n                if slt(sub(dataEnd, headStart), 96)\n                {\n                    revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b()\n                }\n                let offset := 0\n                value0 := abi_decode_address(add(headStart, offset), dataEnd)\n                let offset_1 := 32\n                value1 := abi_decode_address(add(headStart, offset_1), dataEnd)\n                let offset_2 := 64\n                value2 := abi_decode_uint256(add(headStart, offset_2), dataEnd)\n            }\n            function external_fun_transferFrom()\n            {\n                if callvalue()\n                {\n                    revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb()\n                }\n                let param, param_1, param_2 := abi_decode_addresst_addresst_uint256(4, calldatasize())\n                let ret := fun_transferFrom(param, param_1, param_2)\n                let memPos := allocate_unbounded()\n                let memEnd := abi_encode_bool(memPos, ret)\n                return(memPos, sub(memEnd, memPos))\n            }\n            function cleanup_uint8(value) -> cleaned\n            { cleaned := and(value, 0xff) }\n            function abi_encode_uint8_to_uint8(value, pos)\n            {\n                mstore(pos, cleanup_uint8(value))\n            }\n            function abi_encode_uint8(headStart, value0) -> tail\n            {\n                tail := add(headStart, 32)\n                abi_encode_uint8_to_uint8(value0, add(headStart, 0))\n            }\n            function external_fun_decimals()\n            {\n                if callvalue()\n                {\n                    revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb()\n                }\n                abi_decode(4, calldatasize())\n                let ret := fun_decimals()\n                let memPos := allocate_unbounded()\n                let memEnd := abi_encode_uint8(memPos, ret)\n                return(memPos, sub(memEnd, memPos))\n            }\n            function abi_decode_tuple_address(headStart, dataEnd) -> value0\n            {\n                if slt(sub(dataEnd, headStart), 32)\n                {\n                    revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b()\n                }\n                let offset := 0\n                value0 := abi_decode_address(add(headStart, offset), dataEnd)\n            }\n            function external_fun_balanceOf()\n            {\n                if callvalue()\n                {\n                    revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb()\n                }\n                let param := abi_decode_tuple_address(4, calldatasize())\n                let ret := fun_balanceOf(param)\n                let memPos := allocate_unbounded()\n                let memEnd := abi_encode_uint256(memPos, ret)\n                return(memPos, sub(memEnd, memPos))\n            }\n            function external_fun_symbol()\n            {\n                if callvalue()\n                {\n                    revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb()\n                }\n                abi_decode(4, calldatasize())\n                let ret := fun_symbol()\n                let memPos := allocate_unbounded()\n                let memEnd := abi_encode_string(memPos, ret)\n                return(memPos, sub(memEnd, memPos))\n            }\n            function external_fun_transfer()\n            {\n                if callvalue()\n                {\n                    revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb()\n                }\n                let param, param_1 := abi_decode_addresst_uint256(4, calldatasize())\n                let ret := fun_transfer(param, param_1)\n                let memPos := allocate_unbounded()\n                let memEnd := abi_encode_bool(memPos, ret)\n                return(memPos, sub(memEnd, memPos))\n            }\n            function abi_decode_addresst_address(headStart, dataEnd) -> value0, value1\n            {\n                if slt(sub(dataEnd, headStart), 64)\n                {\n                    revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b()\n                }\n                let offset := 0\n                value0 := abi_decode_address(add(headStart, offset), dataEnd)\n                let offset_1 := 32\n                value1 := abi_decode_address(add(headStart, offset_1), dataEnd)\n            }\n            function external_fun_allowance()\n            {\n                if callvalue()\n                {\n                    revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb()\n                }\n                let param, param_1 := abi_decode_addresst_address(4, calldatasize())\n                let ret := fun_allowance(param, param_1)\n                let memPos := allocate_unbounded()\n                let memEnd := abi_encode_uint256(memPos, ret)\n                return(memPos, sub(memEnd, memPos))\n            }\n            function revert_error_42b3090547df1d2001c96683413b8cf91c1b902ef5e3cb8d9f6f304cf7446f74()\n            { revert(0, 0) }\n            function zero_value_for_split_string() -> ret\n            { ret := 96 }\n            function panic_error_0x22()\n            {\n                mstore(0, shl(224, 0x4e487b71))\n                mstore(4, 0x22)\n                revert(0, 0x24)\n            }\n            function extract_byte_array_length(data) -> length\n            {\n                length := div(data, 2)\n                let outOfPlaceEncoding := and(data, 1)\n                if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n                if eq(outOfPlaceEncoding, lt(length, 32)) { panic_error_0x22() }\n            }\n            function array_storeLengthForEncoding_string(pos, length) -> updated_pos\n            {\n                mstore(pos, length)\n                updated_pos := add(pos, 0x20)\n            }\n            function array_dataslot_string_storage(ptr) -> data\n            {\n                data := ptr\n                mstore(0, ptr)\n                data := keccak256(0, 0x20)\n            }\n            function abi_encode_string_storage(value, pos) -> ret\n            {\n                let slotValue := sload(value)\n                let length := extract_byte_array_length(slotValue)\n                pos := array_storeLengthForEncoding_string(pos, length)\n                switch and(slotValue, 1)\n                case 0 {\n                    mstore(pos, and(slotValue, not(0xff)))\n                    ret := add(pos, mul(0x20, iszero(iszero(length))))\n                }\n                case 1 {\n                    let dataPos := array_dataslot_string_storage(value)\n                    let i := 0\n                    for { } lt(i, length) { i := add(i, 0x20) }\n                    {\n                        mstore(add(pos, i), sload(dataPos))\n                        dataPos := add(dataPos, 1)\n                    }\n                    ret := add(pos, i)\n                }\n            }\n            function abi_encodeUpdatedPos_string_storage(value0, pos) -> updatedPos\n            {\n                updatedPos := abi_encode_string_storage(value0, pos)\n            }\n            function panic_error_0x41()\n            {\n                mstore(0, shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(0, 0x24)\n            }\n            function finalize_allocation(memPtr, size)\n            {\n                let newFreePtr := add(memPtr, round_up_to_mul_of(size))\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n                mstore(64, newFreePtr)\n            }\n            function copy_array_from_storage_to_memory_string(slot) -> memPtr\n            {\n                memPtr := allocate_unbounded()\n                let end := abi_encodeUpdatedPos_string_storage(slot, memPtr)\n                finalize_allocation(memPtr, sub(end, memPtr))\n            }\n            function convert_array_string_storage_to_string(value) -> converted\n            {\n                converted := copy_array_from_storage_to_memory_string(value)\n            }\n            /// @ast-id 197 @src 1:1760:1849  \"function name() public view virtual returns (string memory) {...\"\n            function fun_name() -> var_mpos\n            {\n                /// @src 1:1805:1818  \"string memory\"\n                let zero_string_memory_ptr_mpos := zero_value_for_split_string()\n                var_mpos := zero_string_memory_ptr_mpos\n                /// @src 1:1837:1842  \"_name\"\n                let _2_slot := 0x03\n                let expr_194_slot := _2_slot\n                /// @src 1:1830:1842  \"return _name\"\n                var_mpos := convert_array_string_storage_to_string(expr_194_slot)\n                leave\n            }\n            /// @src 5:114:295  \"contract MockERC20 is ERC20 {...\"\n            function zero_value_for_split_bool() -> ret\n            { ret := 0 }\n            /// @ast-id 302 @src 1:3979:4165  \"function approve(address spender, uint256 value) public virtual returns (bool) {...\"\n            function fun_approve(var_spender, var_value) -> var\n            {\n                /// @src 1:4052:4056  \"bool\"\n                let zero_bool := zero_value_for_split_bool()\n                var := zero_bool\n                /// @src 1:4084:4096  \"_msgSender()\"\n                let expr := fun_msgSender()\n                /// @src 1:4068:4096  \"address owner = _msgSender()\"\n                let var_owner := expr\n                /// @src 1:4115:4120  \"owner\"\n                let _1 := var_owner\n                let expr_1 := _1\n                /// @src 1:4122:4129  \"spender\"\n                let _2 := var_spender\n                let expr_2 := _2\n                /// @src 1:4131:4136  \"value\"\n                let _3 := var_value\n                let expr_3 := _3\n                fun__approve(expr_1, expr_2, expr_3)\n                /// @src 1:4154:4158  \"true\"\n                let expr_4 := 0x01\n                /// @src 1:4147:4158  \"return true\"\n                var := expr_4\n                leave\n            }\n            /// @src 5:114:295  \"contract MockERC20 is ERC20 {...\"\n            function zero_value_for_split_uint256() -> ret\n            { ret := 0 }\n            function shift_right_0_unsigned(value) -> newValue\n            { newValue := shr(0, value) }\n            function cleanup_from_storage_uint256(value) -> cleaned\n            { cleaned := value }\n            function extract_from_storage_value_offset_uint256(slot_value) -> value\n            {\n                value := cleanup_from_storage_uint256(shift_right_0_unsigned(slot_value))\n            }\n            function read_from_storage_split_offset_uint256(slot) -> value\n            {\n                value := extract_from_storage_value_offset_uint256(sload(slot))\n            }\n            /// @ast-id 224 @src 1:2830:2927  \"function totalSupply() public view virtual returns (uint256) {...\"\n            function fun_totalSupply() -> var_\n            {\n                /// @src 1:2882:2889  \"uint256\"\n                let zero_uint256 := zero_value_for_split_uint256()\n                var_ := zero_uint256\n                /// @src 1:2908:2920  \"_totalSupply\"\n                let _1 := read_from_storage_split_offset_uint256(0x02)\n                let expr := _1\n                /// @src 1:2901:2920  \"return _totalSupply\"\n                var_ := expr\n                leave\n            }\n            /// @ast-id 334 @src 1:4757:5001  \"function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {...\"\n            function fun_transferFrom(var_from, var_to, var_value) -> var\n            {\n                /// @src 1:4844:4848  \"bool\"\n                let zero_t_bool := zero_value_for_split_bool()\n                var := zero_t_bool\n                /// @src 1:4878:4890  \"_msgSender()\"\n                let expr := fun_msgSender()\n                /// @src 1:4860:4890  \"address spender = _msgSender()\"\n                let var_spender := expr\n                /// @src 1:4916:4920  \"from\"\n                let _1 := var_from\n                let expr_1 := _1\n                /// @src 1:4922:4929  \"spender\"\n                let _2 := var_spender\n                let expr_2 := _2\n                /// @src 1:4931:4936  \"value\"\n                let _3 := var_value\n                let expr_3 := _3\n                fun_spendAllowance(expr_1, expr_2, expr_3)\n                /// @src 1:4957:4961  \"from\"\n                let _4 := var_from\n                let expr_4 := _4\n                /// @src 1:4963:4965  \"to\"\n                let _5 := var_to\n                let expr_5 := _5\n                /// @src 1:4967:4972  \"value\"\n                let _6 := var_value\n                let expr_6 := _6\n                fun__transfer(expr_4, expr_5, expr_6)\n                /// @src 1:4990:4994  \"true\"\n                let expr_7 := 0x01\n                /// @src 1:4983:4994  \"return true\"\n                var := expr_7\n                leave\n            }\n            /// @src 5:114:295  \"contract MockERC20 is ERC20 {...\"\n            function zero_value_for_split_uint8() -> ret\n            { ret := 0 }\n            function cleanup_rational_by(value) -> cleaned\n            { cleaned := value }\n            function identity(value) -> ret\n            { ret := value }\n            function convert_rational_by_to_uint8(value) -> converted\n            {\n                converted := cleanup_uint8(identity(cleanup_rational_by(value)))\n            }\n            /// @ast-id 215 @src 1:2688:2770  \"function decimals() public view virtual returns (uint8) {...\"\n            function fun_decimals() -> var\n            {\n                /// @src 1:2737:2742  \"uint8\"\n                let zero_uint8 := zero_value_for_split_uint8()\n                var := zero_uint8\n                /// @src 1:2761:2763  \"18\"\n                let expr := 0x12\n                /// @src 1:2754:2763  \"return 18\"\n                var := convert_rational_by_to_uint8(expr)\n                leave\n            }\n            /// @src 5:114:295  \"contract MockERC20 is ERC20 {...\"\n            function convert_uint160_to_uint160(value) -> converted\n            {\n                converted := cleanup_uint160(identity(cleanup_uint160(value)))\n            }\n            function convert_uint160_to_address(value) -> converted\n            {\n                converted := convert_uint160_to_uint160(value)\n            }\n            function convert_address_to_address(value) -> converted\n            {\n                converted := convert_uint160_to_address(value)\n            }\n            function mapping_index_access_mapping_address_uint256_of_address(slot, key) -> dataSlot\n            {\n                mstore(0, convert_address_to_address(key))\n                mstore(0x20, slot)\n                dataSlot := keccak256(0, 0x40)\n            }\n            /// @ast-id 237 @src 1:2985:3101  \"function balanceOf(address account) public view virtual returns (uint256) {...\"\n            function fun_balanceOf(var_account) -> var\n            {\n                /// @src 1:3050:3057  \"uint256\"\n                let zero_uint256 := zero_value_for_split_uint256()\n                var := zero_uint256\n                /// @src 1:3076:3085  \"_balances\"\n                let _slot := 0x00\n                let expr_232_slot := _slot\n                /// @src 1:3086:3093  \"account\"\n                let _1 := var_account\n                let expr := _1\n                /// @src 1:3076:3094  \"_balances[account]\"\n                let _2 := mapping_index_access_mapping_address_uint256_of_address(expr_232_slot, expr)\n                let _3 := read_from_storage_split_offset_uint256(_2)\n                let expr_1 := _3\n                /// @src 1:3069:3094  \"return _balances[account]\"\n                var := expr_1\n                leave\n            }\n            /// @ast-id 206 @src 1:1962:2055  \"function symbol() public view virtual returns (string memory) {...\"\n            function fun_symbol() -> var__mpos\n            {\n                /// @src 1:2009:2022  \"string memory\"\n                let zero_string_mpos := zero_value_for_split_string()\n                var__mpos := zero_string_mpos\n                /// @src 1:2041:2048  \"_symbol\"\n                let _23_slot := 0x04\n                let expr_203_slot := _23_slot\n                /// @src 1:2034:2048  \"return _symbol\"\n                var__mpos := convert_array_string_storage_to_string(expr_203_slot)\n                leave\n            }\n            /// @ast-id 261 @src 1:3296:3474  \"function transfer(address to, uint256 value) public virtual returns (bool) {...\"\n            function fun_transfer(var_to, var_value) -> var\n            {\n                /// @src 1:3365:3369  \"bool\"\n                let zero_bool := zero_value_for_split_bool()\n                var := zero_bool\n                /// @src 1:3397:3409  \"_msgSender()\"\n                let expr := fun_msgSender()\n                /// @src 1:3381:3409  \"address owner = _msgSender()\"\n                let var_owner := expr\n                /// @src 1:3429:3434  \"owner\"\n                let _1 := var_owner\n                let expr_1 := _1\n                /// @src 1:3436:3438  \"to\"\n                let _2 := var_to\n                let expr_2 := _2\n                /// @src 1:3440:3445  \"value\"\n                let _3 := var_value\n                let expr_3 := _3\n                fun__transfer(expr_1, expr_2, expr_3)\n                /// @src 1:3463:3467  \"true\"\n                let expr_4 := 0x01\n                /// @src 1:3456:3467  \"return true\"\n                var := expr_4\n                leave\n            }\n            /// @src 5:114:295  \"contract MockERC20 is ERC20 {...\"\n            function mapping_index_access_mapping_address_mapping_address_uint256_of_address(slot, key) -> dataSlot\n            {\n                mstore(0, convert_address_to_address(key))\n                mstore(0x20, slot)\n                dataSlot := keccak256(0, 0x40)\n            }\n            /// @ast-id 278 @src 1:3532:3672  \"function allowance(address owner, address spender) public view virtual returns (uint256) {...\"\n            function fun_allowance(var_owner, var_spender) -> var\n            {\n                /// @src 1:3612:3619  \"uint256\"\n                let zero_t_uint256 := zero_value_for_split_uint256()\n                var := zero_t_uint256\n                /// @src 1:3638:3649  \"_allowances\"\n                let _29_slot := 0x01\n                let expr_271_slot := _29_slot\n                /// @src 1:3650:3655  \"owner\"\n                let _1 := var_owner\n                let expr := _1\n                /// @src 1:3638:3656  \"_allowances[owner]\"\n                let _2 := mapping_index_access_mapping_address_mapping_address_uint256_of_address(expr_271_slot, expr)\n                let _32_slot := _2\n                let expr_273_slot := _32_slot\n                /// @src 1:3657:3664  \"spender\"\n                let _3 := var_spender\n                let expr_1 := _3\n                /// @src 1:3638:3665  \"_allowances[owner][spender]\"\n                let _4 := mapping_index_access_mapping_address_uint256_of_address(expr_273_slot, expr_1)\n                let _5 := read_from_storage_split_offset_uint256(_4)\n                let expr_2 := _5\n                /// @src 1:3631:3665  \"return _allowances[owner][spender]\"\n                var := expr_2\n                leave\n            }\n            /// @src 5:114:295  \"contract MockERC20 is ERC20 {...\"\n            function zero_value_for_split_address() -> ret\n            { ret := 0 }\n            /// @ast-id 767 @src 4:656:752  \"function _msgSender() internal view virtual returns (address) {...\"\n            function fun_msgSender() -> var\n            {\n                /// @src 4:709:716  \"address\"\n                let zero_address := zero_value_for_split_address()\n                var := zero_address\n                /// @src 4:735:745  \"msg.sender\"\n                let expr := caller()\n                /// @src 4:728:745  \"return msg.sender\"\n                var := expr\n                leave\n            }\n            /// @ast-id 542 @src 1:8707:8835  \"function _approve(address owner, address spender, uint256 value) internal {...\"\n            function fun__approve(var_owner, var_spender, var_value)\n            {\n                /// @src 1:8800:8805  \"owner\"\n                let _1 := var_owner\n                let expr := _1\n                /// @src 1:8807:8814  \"spender\"\n                let _2 := var_spender\n                let expr_1 := _2\n                /// @src 1:8816:8821  \"value\"\n                let _3 := var_value\n                let expr_2 := _3\n                /// @src 1:8823:8827  \"true\"\n                let expr_3 := 0x01\n                fun_approve_602(expr, expr_1, expr_2, expr_3)\n            }\n            /// @src 5:114:295  \"contract MockERC20 is ERC20 {...\"\n            function abi_encode_address(value, pos)\n            {\n                mstore(pos, cleanup_address(value))\n            }\n            function abi_encode_address_uint256_uint256(headStart, value0, value1, value2) -> tail\n            {\n                tail := add(headStart, 96)\n                abi_encode_address(value0, add(headStart, 0))\n                abi_encode_uint256_to_uint256(value1, add(headStart, 32))\n                abi_encode_uint256_to_uint256(value2, add(headStart, 64))\n            }\n            function wrapping_sub_uint256(x, y) -> diff\n            {\n                diff := cleanup_uint256(sub(x, y))\n            }\n            /// @ast-id 650 @src 1:10396:10872  \"function _spendAllowance(address owner, address spender, uint256 value) internal virtual {...\"\n            function fun_spendAllowance(var_owner, var_spender, var_value)\n            {\n                /// @src 1:10532:10537  \"owner\"\n                let _1 := var_owner\n                let expr := _1\n                /// @src 1:10539:10546  \"spender\"\n                let _2 := var_spender\n                let expr_1 := _2\n                /// @src 1:10522:10547  \"allowance(owner, spender)\"\n                let expr_2 := fun_allowance(expr, expr_1)\n                /// @src 1:10495:10547  \"uint256 currentAllowance = allowance(owner, spender)\"\n                let var_currentAllowance := expr_2\n                /// @src 1:10561:10577  \"currentAllowance\"\n                let _3 := var_currentAllowance\n                let expr_3 := _3\n                /// @src 1:10580:10597  \"type(uint256).max\"\n                let expr_4 := not(0)\n                /// @src 1:10561:10597  \"currentAllowance < type(uint256).max\"\n                let expr_5 := lt(cleanup_uint256(expr_3), cleanup_uint256(expr_4))\n                /// @src 1:10557:10866  \"if (currentAllowance < type(uint256).max) {...\"\n                if expr_5\n                {\n                    /// @src 1:10617:10633  \"currentAllowance\"\n                    let _4 := var_currentAllowance\n                    let expr_6 := _4\n                    /// @src 1:10636:10641  \"value\"\n                    let _5 := var_value\n                    let expr_7 := _5\n                    /// @src 1:10617:10641  \"currentAllowance < value\"\n                    let expr_8 := lt(cleanup_uint256(expr_6), cleanup_uint256(expr_7))\n                    /// @src 1:10613:10743  \"if (currentAllowance < value) {...\"\n                    if expr_8\n                    {\n                        /// @src 1:10695:10702  \"spender\"\n                        let _6 := var_spender\n                        let expr_9 := _6\n                        /// @src 1:10704:10720  \"currentAllowance\"\n                        let _7 := var_currentAllowance\n                        let expr_10 := _7\n                        /// @src 1:10722:10727  \"value\"\n                        let _8 := var_value\n                        let expr_11 := _8\n                        /// @src 1:10668:10728  \"ERC20InsufficientAllowance(spender, currentAllowance, value)\"\n                        let _9 := 0\n                        mstore(_9, shl(225, 0x7dc7a0d9))\n                        let _10 := abi_encode_address_uint256_uint256(add(_9, 4), expr_9, expr_10, expr_11)\n                        revert(_9, sub(_10, _9))\n                    }\n                    /// @src 1:10793:10798  \"owner\"\n                    let _11 := var_owner\n                    let expr_12 := _11\n                    /// @src 1:10800:10807  \"spender\"\n                    let _12 := var_spender\n                    let expr_13 := _12\n                    /// @src 1:10809:10825  \"currentAllowance\"\n                    let _13 := var_currentAllowance\n                    let expr_14 := _13\n                    /// @src 1:10828:10833  \"value\"\n                    let _14 := var_value\n                    let expr_15 := _14\n                    /// @src 1:10809:10833  \"currentAllowance - value\"\n                    let expr_16 := wrapping_sub_uint256(expr_14, expr_15)\n                    /// @src 1:10835:10840  \"false\"\n                    let expr_17 := 0x00\n                    fun_approve_602(expr_12, expr_13, expr_16, expr_17)\n                }\n            }\n            /// @src 5:114:295  \"contract MockERC20 is ERC20 {...\"\n            function cleanup_t_rational_by(value) -> cleaned\n            { cleaned := value }\n            function convert_rational_by_to_uint160(value) -> converted\n            {\n                converted := cleanup_uint160(identity(cleanup_t_rational_by(value)))\n            }\n            function convert_rational_by_to_address(value) -> converted\n            {\n                converted := convert_rational_by_to_uint160(value)\n            }\n            function abi_encode_tuple_address(headStart, value0) -> tail\n            {\n                tail := add(headStart, 32)\n                abi_encode_address(value0, add(headStart, 0))\n            }\n            /// @ast-id 381 @src 1:5374:5674  \"function _transfer(address from, address to, uint256 value) internal {...\"\n            function fun__transfer(var_from, var_to, var_value)\n            {\n                /// @src 1:5457:5461  \"from\"\n                let _1 := var_from\n                let expr := _1\n                /// @src 1:5473:5474  \"0\"\n                let expr_1 := 0x00\n                /// @src 1:5465:5475  \"address(0)\"\n                let expr_2 := convert_rational_by_to_address(expr_1)\n                /// @src 1:5457:5475  \"from == address(0)\"\n                let expr_3 := eq(cleanup_address(expr), cleanup_address(expr_2))\n                /// @src 1:5453:5539  \"if (from == address(0)) {...\"\n                if expr_3\n                {\n                    /// @src 1:5525:5526  \"0\"\n                    let expr_4 := 0x00\n                    /// @src 1:5517:5527  \"address(0)\"\n                    let expr_5 := convert_rational_by_to_address(expr_4)\n                    /// @src 1:5498:5528  \"ERC20InvalidSender(address(0))\"\n                    let _2 := 0\n                    mstore(_2, shl(225, 0x4b637e8f))\n                    let _3 := abi_encode_tuple_address(add(_2, 4), expr_5)\n                    revert(_2, sub(_3, _2))\n                }\n                /// @src 1:5552:5554  \"to\"\n                let _4 := var_to\n                let expr_6 := _4\n                /// @src 1:5566:5567  \"0\"\n                let expr_7 := 0x00\n                /// @src 1:5558:5568  \"address(0)\"\n                let expr_8 := convert_rational_by_to_address(expr_7)\n                /// @src 1:5552:5568  \"to == address(0)\"\n                let expr_9 := eq(cleanup_address(expr_6), cleanup_address(expr_8))\n                /// @src 1:5548:5634  \"if (to == address(0)) {...\"\n                if expr_9\n                {\n                    /// @src 1:5620:5621  \"0\"\n                    let expr_10 := 0x00\n                    /// @src 1:5612:5622  \"address(0)\"\n                    let expr_11 := convert_rational_by_to_address(expr_10)\n                    /// @src 1:5591:5623  \"ERC20InvalidReceiver(address(0))\"\n                    let _5 := 0\n                    mstore(_5, shl(224, 0xec442f05))\n                    let _6 := abi_encode_tuple_address(add(_5, 4), expr_11)\n                    revert(_5, sub(_6, _5))\n                }\n                /// @src 1:5651:5655  \"from\"\n                let _7 := var_from\n                let expr_12 := _7\n                /// @src 1:5657:5659  \"to\"\n                let _8 := var_to\n                let expr_13 := _8\n                /// @src 1:5661:5666  \"value\"\n                let _9 := var_value\n                let expr_14 := _9\n                fun_update(expr_12, expr_13, expr_14)\n            }\n            /// @src 5:114:295  \"contract MockERC20 is ERC20 {...\"\n            function shift_left(value) -> newValue\n            { newValue := shl(0, value) }\n            function update_byte_slice_shift(value, toInsert) -> result\n            {\n                let mask := /** @src 1:10580:10597  \"type(uint256).max\" */ not(0)\n                /// @src 5:114:295  \"contract MockERC20 is ERC20 {...\"\n                toInsert := shift_left(toInsert)\n                value := and(value, not(mask))\n                result := or(value, and(toInsert, mask))\n            }\n            function convert_uint256_to_uint256(value) -> converted\n            {\n                converted := cleanup_uint256(identity(cleanup_uint256(value)))\n            }\n            function prepare_store_uint256(value) -> ret\n            { ret := value }\n            function update_storage_value_offset_uint256_to_uint256(slot, value)\n            {\n                let convertedValue := convert_uint256_to_uint256(value)\n                sstore(slot, update_byte_slice_shift(sload(slot), prepare_store_uint256(convertedValue)))\n            }\n            /// @ast-id 602 @src 1:9682:10114  \"function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {...\"\n            function fun_approve_602(var_owner, var_spender, var_value, var_emitEvent)\n            {\n                /// @src 1:9794:9799  \"owner\"\n                let _1 := var_owner\n                let expr := _1\n                /// @src 1:9811:9812  \"0\"\n                let expr_1 := 0x00\n                /// @src 1:9803:9813  \"address(0)\"\n                let expr_2 := convert_rational_by_to_address(expr_1)\n                /// @src 1:9794:9813  \"owner == address(0)\"\n                let expr_3 := eq(cleanup_address(expr), cleanup_address(expr_2))\n                /// @src 1:9790:9879  \"if (owner == address(0)) {...\"\n                if expr_3\n                {\n                    /// @src 1:9865:9866  \"0\"\n                    let expr_4 := 0x00\n                    /// @src 1:9857:9867  \"address(0)\"\n                    let expr_5 := convert_rational_by_to_address(expr_4)\n                    /// @src 1:9836:9868  \"ERC20InvalidApprover(address(0))\"\n                    let _2 := 0\n                    mstore(_2, shl(224, 0xe602df05))\n                    let _3 := abi_encode_tuple_address(add(_2, 4), expr_5)\n                    revert(_2, sub(_3, _2))\n                }\n                /// @src 1:9892:9899  \"spender\"\n                let _4 := var_spender\n                let expr_6 := _4\n                /// @src 1:9911:9912  \"0\"\n                let expr_7 := 0x00\n                /// @src 1:9903:9913  \"address(0)\"\n                let expr_8 := convert_rational_by_to_address(expr_7)\n                /// @src 1:9892:9913  \"spender == address(0)\"\n                let expr_9 := eq(cleanup_address(expr_6), cleanup_address(expr_8))\n                /// @src 1:9888:9978  \"if (spender == address(0)) {...\"\n                if expr_9\n                {\n                    /// @src 1:9964:9965  \"0\"\n                    let expr_10 := 0x00\n                    /// @src 1:9956:9966  \"address(0)\"\n                    let expr_11 := convert_rational_by_to_address(expr_10)\n                    /// @src 1:9936:9967  \"ERC20InvalidSpender(address(0))\"\n                    let _5 := 0\n                    mstore(_5, shl(225, 0x4a1406b1))\n                    let _6 := abi_encode_tuple_address(add(_5, 4), expr_11)\n                    revert(_5, sub(_6, _5))\n                }\n                /// @src 1:10017:10022  \"value\"\n                let _7 := var_value\n                let expr_12 := _7\n                /// @src 1:9987:9998  \"_allowances\"\n                let _70_slot := 0x01\n                let expr_584_slot := _70_slot\n                /// @src 1:9999:10004  \"owner\"\n                let _8 := var_owner\n                let expr_13 := _8\n                /// @src 1:9987:10005  \"_allowances[owner]\"\n                let _9 := mapping_index_access_mapping_address_mapping_address_uint256_of_address(expr_584_slot, expr_13)\n                let _73_slot := _9\n                let expr_587_slot := _73_slot\n                /// @src 1:10006:10013  \"spender\"\n                let _10 := var_spender\n                let expr_14 := _10\n                /// @src 1:9987:10014  \"_allowances[owner][spender]\"\n                let _11 := mapping_index_access_mapping_address_uint256_of_address(expr_587_slot, expr_14)\n                /// @src 1:9987:10022  \"_allowances[owner][spender] = value\"\n                update_storage_value_offset_uint256_to_uint256(_11, expr_12)\n                /// @src 1:10036:10045  \"emitEvent\"\n                let _12 := var_emitEvent\n                let expr_15 := _12\n                /// @src 1:10032:10108  \"if (emitEvent) {...\"\n                if expr_15\n                {\n                    /// @src 1:10075:10080  \"owner\"\n                    let _13 := var_owner\n                    let expr_16 := _13\n                    /// @src 1:10082:10089  \"spender\"\n                    let _14 := var_spender\n                    let expr_17 := _14\n                    /// @src 1:10091:10096  \"value\"\n                    let _15 := var_value\n                    let expr_18 := _15\n                    /// @src 1:10066:10097  \"Approval(owner, spender, value)\"\n                    let _16 := 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n                    let _17 := convert_address_to_address(expr_16)\n                    let _18 := convert_address_to_address(expr_17)\n                    let _19 := allocate_unbounded()\n                    let _20 := abi_encode_uint256(_19, expr_18)\n                    log3(_19, sub(_20, _19), _16, _17, _18)\n                }\n            }\n            /// @src 5:114:295  \"contract MockERC20 is ERC20 {...\"\n            function panic_error_0x11()\n            {\n                mstore(0, shl(224, 0x4e487b71))\n                mstore(4, 0x11)\n                revert(0, 0x24)\n            }\n            function checked_add_uint256(x, y) -> sum\n            {\n                x := cleanup_uint256(x)\n                y := cleanup_uint256(y)\n                sum := add(x, y)\n                if gt(x, sum) { panic_error_0x11() }\n            }\n            function wrapping_add_uint256(x, y) -> sum\n            {\n                sum := cleanup_uint256(add(x, y))\n            }\n            /// @ast-id 458 @src 1:5989:7096  \"function _update(address from, address to, uint256 value) internal virtual {...\"\n            function fun_update(var_from, var_to, var_value)\n            {\n                /// @src 1:6078:6082  \"from\"\n                let _1 := var_from\n                let expr := _1\n                /// @src 1:6094:6095  \"0\"\n                let expr_1 := 0x00\n                /// @src 1:6086:6096  \"address(0)\"\n                let expr_2 := convert_rational_by_to_address(expr_1)\n                /// @src 1:6078:6096  \"from == address(0)\"\n                let expr_3 := eq(cleanup_address(expr), cleanup_address(expr_2))\n                /// @src 1:6074:6614  \"if (from == address(0)) {...\"\n                switch expr_3\n                case 0 {\n                    /// @src 1:6288:6297  \"_balances\"\n                    let _86_slot := 0x00\n                    let expr_404_slot := _86_slot\n                    /// @src 1:6298:6302  \"from\"\n                    let _2 := var_from\n                    let expr_4 := _2\n                    /// @src 1:6288:6303  \"_balances[from]\"\n                    let _3 := mapping_index_access_mapping_address_uint256_of_address(expr_404_slot, expr_4)\n                    let _4 := read_from_storage_split_offset_uint256(_3)\n                    let expr_5 := _4\n                    /// @src 1:6266:6303  \"uint256 fromBalance = _balances[from]\"\n                    let var_fromBalance := expr_5\n                    /// @src 1:6321:6332  \"fromBalance\"\n                    let _5 := var_fromBalance\n                    let expr_6 := _5\n                    /// @src 1:6335:6340  \"value\"\n                    let _6 := var_value\n                    let expr_7 := _6\n                    /// @src 1:6321:6340  \"fromBalance < value\"\n                    let expr_8 := lt(cleanup_uint256(expr_6), cleanup_uint256(expr_7))\n                    /// @src 1:6317:6432  \"if (fromBalance < value) {...\"\n                    if expr_8\n                    {\n                        /// @src 1:6392:6396  \"from\"\n                        let _7 := var_from\n                        let expr_9 := _7\n                        /// @src 1:6398:6409  \"fromBalance\"\n                        let _8 := var_fromBalance\n                        let expr_10 := _8\n                        /// @src 1:6411:6416  \"value\"\n                        let _9 := var_value\n                        let expr_11 := _9\n                        /// @src 1:6367:6417  \"ERC20InsufficientBalance(from, fromBalance, value)\"\n                        let _10 := 0\n                        mstore(_10, shl(226, 0x391434e3))\n                        let _11 := abi_encode_address_uint256_uint256(add(_10, 4), expr_9, expr_10, expr_11)\n                        revert(_10, sub(_11, _10))\n                    }\n                    /// @src 1:6570:6581  \"fromBalance\"\n                    let _12 := var_fromBalance\n                    let expr_12 := _12\n                    /// @src 1:6584:6589  \"value\"\n                    let _13 := var_value\n                    let expr_13 := _13\n                    /// @src 1:6570:6589  \"fromBalance - value\"\n                    let expr_14 := wrapping_sub_uint256(expr_12, expr_13)\n                    /// @src 1:6552:6561  \"_balances\"\n                    let _99_slot := 0x00\n                    let expr_slot := _99_slot\n                    /// @src 1:6562:6566  \"from\"\n                    let _14 := var_from\n                    let expr_15 := _14\n                    /// @src 1:6552:6567  \"_balances[from]\"\n                    let _15 := mapping_index_access_mapping_address_uint256_of_address(expr_slot, expr_15)\n                    /// @src 1:6552:6589  \"_balances[from] = fromBalance - value\"\n                    update_storage_value_offset_uint256_to_uint256(_15, expr_14)\n                }\n                default /// @src 1:6074:6614  \"if (from == address(0)) {...\"\n                {\n                    /// @src 1:6230:6235  \"value\"\n                    let _16 := var_value\n                    let expr_16 := _16\n                    /// @src 1:6214:6235  \"_totalSupply += value\"\n                    let _17 := read_from_storage_split_offset_uint256(0x02)\n                    let expr_17 := checked_add_uint256(_17, expr_16)\n                    update_storage_value_offset_uint256_to_uint256(0x02, expr_17)\n                }\n                /// @src 1:6628:6630  \"to\"\n                let _18 := var_to\n                let expr_18 := _18\n                /// @src 1:6642:6643  \"0\"\n                let expr_19 := 0x00\n                /// @src 1:6634:6644  \"address(0)\"\n                let expr_20 := convert_rational_by_to_address(expr_19)\n                /// @src 1:6628:6644  \"to == address(0)\"\n                let expr_21 := eq(cleanup_address(expr_18), cleanup_address(expr_20))\n                /// @src 1:6624:7049  \"if (to == address(0)) {...\"\n                switch expr_21\n                case 0 {\n                    /// @src 1:7019:7024  \"value\"\n                    let _19 := var_value\n                    let expr_22 := _19\n                    /// @src 1:7002:7011  \"_balances\"\n                    let _106_slot := 0x00\n                    let expr_442_slot := _106_slot\n                    /// @src 1:7012:7014  \"to\"\n                    let _20 := var_to\n                    let expr_23 := _20\n                    /// @src 1:7002:7015  \"_balances[to]\"\n                    let _21 := mapping_index_access_mapping_address_uint256_of_address(expr_442_slot, expr_23)\n                    /// @src 1:7002:7024  \"_balances[to] += value\"\n                    let _22 := read_from_storage_split_offset_uint256(_21)\n                    let expr_24 := wrapping_add_uint256(_22, expr_22)\n                    update_storage_value_offset_uint256_to_uint256(_21, expr_24)\n                }\n                default /// @src 1:6624:7049  \"if (to == address(0)) {...\"\n                {\n                    /// @src 1:6807:6812  \"value\"\n                    let _23 := var_value\n                    let expr_25 := _23\n                    /// @src 1:6791:6812  \"_totalSupply -= value\"\n                    let _24 := read_from_storage_split_offset_uint256(0x02)\n                    let expr_26 := wrapping_sub_uint256(_24, expr_25)\n                    update_storage_value_offset_uint256_to_uint256(0x02, expr_26)\n                }\n                /// @src 1:7073:7077  \"from\"\n                let _25 := var_from\n                let expr_27 := _25\n                /// @src 1:7079:7081  \"to\"\n                let _26 := var_to\n                let expr_28 := _26\n                /// @src 1:7083:7088  \"value\"\n                let _27 := var_value\n                let expr_29 := _27\n                /// @src 1:7064:7089  \"Transfer(from, to, value)\"\n                let _28 := 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n                let _29 := convert_address_to_address(expr_27)\n                let _30 := convert_address_to_address(expr_28)\n                let _31 := allocate_unbounded()\n                let _32 := abi_encode_uint256(_31, expr_29)\n                log3(_31, sub(_32, _31), _28, _29, _30)\n            }\n        }\n        data \".metadata\" hex\"a2646970667358221220faec337c1e01abab0202d8a7399b138b95e544c26756b5bd21ebb36855ca42a964736f6c634300081c0033\"\n    }\n}\n",
					"hash": "1dc644fbdaf514d34acabf951a2c533d713186bbc6ab81cf175226b52ce545e1",
					"factoryDependencies": {}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"id": 0,
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							136
						],
						"IERC20Errors": [
							41
						],
						"IERC721Errors": [
							89
						]
					},
					"id": 137,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "138:141:0",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 41,
							"linearizedBaseContracts": [
								41
							],
							"name": "IERC20Errors",
							"nameLocation": "290:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "309:309:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 11,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "629:24:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "662:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "654:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "678:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "670:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "695:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "687:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:49:0"
									},
									"src": "623:80:0"
								},
								{
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "709:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 16,
									"name": "ERC20InvalidSender",
									"nameLocation": "872:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "899:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "891:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:16:0"
									},
									"src": "866:41:0"
								},
								{
									"documentation": {
										"id": 17,
										"nodeType": "StructuredDocumentation",
										"src": "913:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 21,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1083:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1112:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "1104:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 18,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:18:0"
									},
									"src": "1077:45:0"
								},
								{
									"documentation": {
										"id": 22,
										"nodeType": "StructuredDocumentation",
										"src": "1128:345:0",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 30,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1484:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1511:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 23,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 26,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1536:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1528:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 25,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1555:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1547:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 27,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:52:0"
									},
									"src": "1478:85:0"
								},
								{
									"documentation": {
										"id": 31,
										"nodeType": "StructuredDocumentation",
										"src": "1569:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 35,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1754:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1783:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "1775:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 32,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:18:0"
									},
									"src": "1748:45:0"
								},
								{
									"documentation": {
										"id": 36,
										"nodeType": "StructuredDocumentation",
										"src": "1799:195:0",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 40,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2005:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2033:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "2025:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 37,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:17:0"
									},
									"src": "1999:43:0"
								}
							],
							"scope": 137,
							"src": "280:1764:0",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 42,
								"nodeType": "StructuredDocumentation",
								"src": "2046:143:0",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 89,
							"linearizedBaseContracts": [
								89
							],
							"name": "IERC721Errors",
							"nameLocation": "2200:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 43,
										"nodeType": "StructuredDocumentation",
										"src": "2220:219:0",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 47,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2450:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2477:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 47,
												"src": "2469:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 44,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:15:0"
									},
									"src": "2444:40:0"
								},
								{
									"documentation": {
										"id": 48,
										"nodeType": "StructuredDocumentation",
										"src": "2490:132:0",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 52,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2633:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 50,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2664:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "2656:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 49,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2655:17:0"
									},
									"src": "2627:46:0"
								},
								{
									"documentation": {
										"id": 53,
										"nodeType": "StructuredDocumentation",
										"src": "2679:289:0",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 61,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2979:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 55,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3008:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3000:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 54,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3000:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3024:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3016:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 56,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3016:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3041:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3033:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 58,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2999:48:0"
									},
									"src": "2973:75:0"
								},
								{
									"documentation": {
										"id": 62,
										"nodeType": "StructuredDocumentation",
										"src": "3054:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 66,
									"name": "ERC721InvalidSender",
									"nameLocation": "3217:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3245:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 66,
												"src": "3237:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 63,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:16:0"
									},
									"src": "3211:42:0"
								},
								{
									"documentation": {
										"id": 67,
										"nodeType": "StructuredDocumentation",
										"src": "3259:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 71,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3429:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3459:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "3451:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:18:0"
									},
									"src": "3423:46:0"
								},
								{
									"documentation": {
										"id": 72,
										"nodeType": "StructuredDocumentation",
										"src": "3475:247:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 78,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3733:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3768:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3760:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 73,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3786:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3778:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 75,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3778:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:35:0"
									},
									"src": "3727:68:0"
								},
								{
									"documentation": {
										"id": 79,
										"nodeType": "StructuredDocumentation",
										"src": "3801:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 83,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3986:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 81,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4016:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "4008:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 80,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4007:18:0"
									},
									"src": "3980:46:0"
								},
								{
									"documentation": {
										"id": 84,
										"nodeType": "StructuredDocumentation",
										"src": "4032:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 88,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4240:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4270:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "4262:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:18:0"
									},
									"src": "4234:46:0"
								}
							],
							"scope": 137,
							"src": "2190:2092:0",
							"usedErrors": [
								47,
								52,
								61,
								66,
								71,
								78,
								83,
								88
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 90,
								"nodeType": "StructuredDocumentation",
								"src": "4284:145:0",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 136,
							"linearizedBaseContracts": [
								136
							],
							"name": "IERC1155Errors",
							"nameLocation": "4440:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 91,
										"nodeType": "StructuredDocumentation",
										"src": "4461:361:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 101,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4833:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4868:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4860:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4884:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4876:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 94,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4901:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4893:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4917:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4909:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 98,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:66:0"
									},
									"src": "4827:99:0"
								},
								{
									"documentation": {
										"id": 102,
										"nodeType": "StructuredDocumentation",
										"src": "4932:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 106,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5095:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5124:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "5116:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 103,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5115:16:0"
									},
									"src": "5089:43:0"
								},
								{
									"documentation": {
										"id": 107,
										"nodeType": "StructuredDocumentation",
										"src": "5138:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 111,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5308:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5339:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "5331:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5331:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5330:18:0"
									},
									"src": "5302:47:0"
								},
								{
									"documentation": {
										"id": 112,
										"nodeType": "StructuredDocumentation",
										"src": "5355:256:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 118,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5622:28:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5659:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "5651:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5677:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "5669:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 115,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5669:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:33:0"
									},
									"src": "5616:68:0"
								},
								{
									"documentation": {
										"id": 119,
										"nodeType": "StructuredDocumentation",
										"src": "5690:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 123,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5875:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5906:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "5898:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 120,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:18:0"
									},
									"src": "5869:47:0"
								},
								{
									"documentation": {
										"id": 124,
										"nodeType": "StructuredDocumentation",
										"src": "5922:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 128,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6130:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 126,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6161:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "6153:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6153:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6152:18:0"
									},
									"src": "6124:47:0"
								},
								{
									"documentation": {
										"id": 129,
										"nodeType": "StructuredDocumentation",
										"src": "6177:280:0",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 135,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6468:25:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6502:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "6494:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 130,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6494:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6521:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "6513:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 132,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6513:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6493:41:0"
									},
									"src": "6462:73:0"
								}
							],
							"scope": 137,
							"src": "4430:2107:0",
							"usedErrors": [
								101,
								106,
								111,
								118,
								123,
								128,
								135
							],
							"usedEvents": []
						}
					],
					"src": "112:6426:0"
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"id": 1,
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							785
						],
						"ERC20": [
							651
						],
						"IERC20": [
							729
						],
						"IERC20Errors": [
							41
						],
						"IERC20Metadata": [
							755
						]
					},
					"id": 652,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 138,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 140,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 730,
							"src": "131:36:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 139,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 729,
										"src": "139:6:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 142,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 756,
							"src": "168:63:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 141,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 755,
										"src": "176:14:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 144,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 786,
							"src": "232:48:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 143,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 785,
										"src": "240:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 146,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 137,
							"src": "281:65:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 145,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 41,
										"src": "289:12:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 148,
										"name": "Context",
										"nameLocations": [
											"1133:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 785,
										"src": "1133:7:1"
									},
									"id": 149,
									"nodeType": "InheritanceSpecifier",
									"src": "1133:7:1"
								},
								{
									"baseName": {
										"id": 150,
										"name": "IERC20",
										"nameLocations": [
											"1142:6:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 729,
										"src": "1142:6:1"
									},
									"id": 151,
									"nodeType": "InheritanceSpecifier",
									"src": "1142:6:1"
								},
								{
									"baseName": {
										"id": 152,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1150:14:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 755,
										"src": "1150:14:1"
									},
									"id": 153,
									"nodeType": "InheritanceSpecifier",
									"src": "1150:14:1"
								},
								{
									"baseName": {
										"id": 154,
										"name": "IERC20Errors",
										"nameLocations": [
											"1166:12:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 41,
										"src": "1166:12:1"
									},
									"id": 155,
									"nodeType": "InheritanceSpecifier",
									"src": "1166:12:1"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 147,
								"nodeType": "StructuredDocumentation",
								"src": "348:757:1",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 651,
							"linearizedBaseContracts": [
								651,
								41,
								755,
								729,
								785
							],
							"name": "ERC20",
							"nameLocation": "1124:5:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 159,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1229:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1185:53:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 158,
										"keyName": "account",
										"keyNameLocation": "1201:7:1",
										"keyType": {
											"id": 156,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1193:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1185:35:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 157,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1212:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 165,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1317:11:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1245:83:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 164,
										"keyName": "account",
										"keyNameLocation": "1261:7:1",
										"keyType": {
											"id": 160,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1253:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1245:63:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 163,
											"keyName": "spender",
											"keyNameLocation": "1288:7:1",
											"keyType": {
												"id": 161,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1280:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1272:35:1",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 162,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1299:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 167,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1351:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1335:28:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 166,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1335:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 169,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1385:5:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1370:20:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 168,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1370:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 171,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1411:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1396:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 170,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1396:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 187,
										"nodeType": "Block",
										"src": "1638:57:1",
										"statements": [
											{
												"expression": {
													"id": 181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 179,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 169,
														"src": "1648:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 180,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 174,
														"src": "1656:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1648:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 182,
												"nodeType": "ExpressionStatement",
												"src": "1648:13:1"
											},
											{
												"expression": {
													"id": 185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 183,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 171,
														"src": "1671:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 184,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 176,
														"src": "1681:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1671:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 186,
												"nodeType": "ExpressionStatement",
												"src": "1671:17:1"
											}
										]
									},
									"documentation": {
										"id": 172,
										"nodeType": "StructuredDocumentation",
										"src": "1425:152:1",
										"text": " @dev Sets the values for {name} and {symbol}.\n Both values are immutable: they can only be set once during construction."
									},
									"id": 188,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1608:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "1594:19:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 173,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1594:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1629:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "1615:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 175,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1615:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1593:44:1"
									},
									"returnParameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1638:0:1"
									},
									"scope": 651,
									"src": "1582:113:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										742
									],
									"body": {
										"id": 196,
										"nodeType": "Block",
										"src": "1820:29:1",
										"statements": [
											{
												"expression": {
													"id": 194,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 169,
													"src": "1837:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 193,
												"id": 195,
												"nodeType": "Return",
												"src": "1830:12:1"
											}
										]
									},
									"documentation": {
										"id": 189,
										"nodeType": "StructuredDocumentation",
										"src": "1701:54:1",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 197,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1769:4:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1773:2:1"
									},
									"returnParameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "1805:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 191,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1805:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1804:15:1"
									},
									"scope": 651,
									"src": "1760:89:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										748
									],
									"body": {
										"id": 205,
										"nodeType": "Block",
										"src": "2024:31:1",
										"statements": [
											{
												"expression": {
													"id": 203,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 171,
													"src": "2041:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 202,
												"id": 204,
												"nodeType": "Return",
												"src": "2034:14:1"
											}
										]
									},
									"documentation": {
										"id": 198,
										"nodeType": "StructuredDocumentation",
										"src": "1855:102:1",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 206,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1971:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1977:2:1"
									},
									"returnParameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "2009:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 200,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2009:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2008:15:1"
									},
									"scope": 651,
									"src": "1962:93:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										754
									],
									"body": {
										"id": 214,
										"nodeType": "Block",
										"src": "2744:26:1",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 212,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2761:2:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 211,
												"id": 213,
												"nodeType": "Return",
												"src": "2754:9:1"
											}
										]
									},
									"documentation": {
										"id": 207,
										"nodeType": "StructuredDocumentation",
										"src": "2061:622:1",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 215,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "2697:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2705:2:1"
									},
									"returnParameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "2737:5:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 209,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2737:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2736:7:1"
									},
									"scope": 651,
									"src": "2688:82:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										678
									],
									"body": {
										"id": 223,
										"nodeType": "Block",
										"src": "2891:36:1",
										"statements": [
											{
												"expression": {
													"id": 221,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 167,
													"src": "2908:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 220,
												"id": 222,
												"nodeType": "Return",
												"src": "2901:19:1"
											}
										]
									},
									"documentation": {
										"id": 216,
										"nodeType": "StructuredDocumentation",
										"src": "2776:49:1",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 224,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2839:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 217,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2850:2:1"
									},
									"returnParameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2882:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2882:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2881:9:1"
									},
									"scope": 651,
									"src": "2830:97:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										686
									],
									"body": {
										"id": 236,
										"nodeType": "Block",
										"src": "3059:42:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 232,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 159,
														"src": "3076:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 234,
													"indexExpression": {
														"id": 233,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 227,
														"src": "3086:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3076:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 231,
												"id": 235,
												"nodeType": "Return",
												"src": "3069:25:1"
											}
										]
									},
									"documentation": {
										"id": 225,
										"nodeType": "StructuredDocumentation",
										"src": "2933:47:1",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 237,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "2994:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 227,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3012:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "3004:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 226,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3004:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3003:17:1"
									},
									"returnParameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "3050:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 229,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3050:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3049:9:1"
									},
									"scope": 651,
									"src": "2985:116:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										696
									],
									"body": {
										"id": 260,
										"nodeType": "Block",
										"src": "3371:103:1",
										"statements": [
											{
												"assignments": [
													248
												],
												"declarations": [
													{
														"constant": false,
														"id": 248,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3389:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 260,
														"src": "3381:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 247,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3381:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 251,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 249,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "3397:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3397:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3381:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 253,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 248,
															"src": "3429:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 254,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 240,
															"src": "3436:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 255,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 242,
															"src": "3440:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 252,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 381,
														"src": "3419:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3419:27:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 257,
												"nodeType": "ExpressionStatement",
												"src": "3419:27:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 258,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3463:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 246,
												"id": 259,
												"nodeType": "Return",
												"src": "3456:11:1"
											}
										]
									},
									"documentation": {
										"id": 238,
										"nodeType": "StructuredDocumentation",
										"src": "3107:184:1",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 261,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3305:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3322:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3314:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 239,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3314:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3334:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3326:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 241,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3326:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3313:27:1"
									},
									"returnParameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3365:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 244,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3365:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3364:6:1"
									},
									"scope": 651,
									"src": "3296:178:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										706
									],
									"body": {
										"id": 277,
										"nodeType": "Block",
										"src": "3621:51:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 271,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 165,
															"src": "3638:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 273,
														"indexExpression": {
															"id": 272,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 264,
															"src": "3650:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3638:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 275,
													"indexExpression": {
														"id": 274,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 266,
														"src": "3657:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3638:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 270,
												"id": 276,
												"nodeType": "Return",
												"src": "3631:34:1"
											}
										]
									},
									"documentation": {
										"id": 262,
										"nodeType": "StructuredDocumentation",
										"src": "3480:47:1",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 278,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3541:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3559:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3551:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3551:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 266,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3574:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3566:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 265,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3566:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3550:32:1"
									},
									"returnParameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3612:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 268,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3612:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3611:9:1"
									},
									"scope": 651,
									"src": "3532:140:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										716
									],
									"body": {
										"id": 301,
										"nodeType": "Block",
										"src": "4058:107:1",
										"statements": [
											{
												"assignments": [
													289
												],
												"declarations": [
													{
														"constant": false,
														"id": 289,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4076:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4068:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 288,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4068:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 292,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 290,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "4084:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4084:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4068:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 294,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 289,
															"src": "4115:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 295,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 281,
															"src": "4122:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 296,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 283,
															"src": "4131:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 293,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															542,
															602
														],
														"referencedDeclaration": 542,
														"src": "4106:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4106:31:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 298,
												"nodeType": "ExpressionStatement",
												"src": "4106:31:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 299,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4154:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 287,
												"id": 300,
												"nodeType": "Return",
												"src": "4147:11:1"
											}
										]
									},
									"documentation": {
										"id": 279,
										"nodeType": "StructuredDocumentation",
										"src": "3678:296:1",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 302,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3988:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4004:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "3996:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 280,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3996:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4021:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "4013:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 282,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4013:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3995:32:1"
									},
									"returnParameters": {
										"id": 287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "4052:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 285,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4052:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4051:6:1"
									},
									"scope": 651,
									"src": "3979:186:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										728
									],
									"body": {
										"id": 333,
										"nodeType": "Block",
										"src": "4850:151:1",
										"statements": [
											{
												"assignments": [
													315
												],
												"declarations": [
													{
														"constant": false,
														"id": 315,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "4868:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 333,
														"src": "4860:15:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 314,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4860:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 318,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 316,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "4878:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 317,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4878:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4860:30:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 320,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "4916:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 321,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 315,
															"src": "4922:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 322,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "4931:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 319,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 650,
														"src": "4900:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 323,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4900:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 324,
												"nodeType": "ExpressionStatement",
												"src": "4900:37:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 326,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "4957:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 327,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 307,
															"src": "4963:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 328,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "4967:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 325,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 381,
														"src": "4947:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4947:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "4947:26:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 331,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4990:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 313,
												"id": 332,
												"nodeType": "Return",
												"src": "4983:11:1"
											}
										]
									},
									"documentation": {
										"id": 303,
										"nodeType": "StructuredDocumentation",
										"src": "4171:581:1",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 334,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4766:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4787:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "4779:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 304,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4779:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 307,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4801:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "4793:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 306,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4793:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4813:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "4805:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 308,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4805:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4778:41:1"
									},
									"returnParameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "4844:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 311,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4844:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4843:6:1"
									},
									"scope": 651,
									"src": "4757:244:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 380,
										"nodeType": "Block",
										"src": "5443:231:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 349,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 344,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 337,
														"src": "5457:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 347,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5473:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 346,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5465:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 345,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5465:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 348,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5465:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5457:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 358,
												"nodeType": "IfStatement",
												"src": "5453:86:1",
												"trueBody": {
													"id": 357,
													"nodeType": "Block",
													"src": "5477:62:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 353,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5525:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 352,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5517:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 351,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5517:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 354,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5517:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 350,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "5498:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 355,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5498:30:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 356,
															"nodeType": "RevertStatement",
															"src": "5491:37:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 359,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 339,
														"src": "5552:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 362,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5566:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 361,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5558:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 360,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5558:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 363,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5558:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5552:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 373,
												"nodeType": "IfStatement",
												"src": "5548:86:1",
												"trueBody": {
													"id": 372,
													"nodeType": "Block",
													"src": "5570:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 368,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5620:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 367,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5612:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 366,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5612:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 369,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5612:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 365,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 21,
																	"src": "5591:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 370,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5591:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 371,
															"nodeType": "RevertStatement",
															"src": "5584:39:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 375,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 337,
															"src": "5651:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 376,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 339,
															"src": "5657:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 377,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 341,
															"src": "5661:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 374,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "5643:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5643:24:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 379,
												"nodeType": "ExpressionStatement",
												"src": "5643:24:1"
											}
										]
									},
									"documentation": {
										"id": 335,
										"nodeType": "StructuredDocumentation",
										"src": "5007:362:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 381,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5383:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 337,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5401:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5393:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 336,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5393:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5415:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5407:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 338,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5407:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5427:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5419:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 340,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5419:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5392:41:1"
									},
									"returnParameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5443:0:1"
									},
									"scope": 651,
									"src": "5374:300:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 457,
										"nodeType": "Block",
										"src": "6064:1032:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 391,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 384,
														"src": "6078:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 394,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6094:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 393,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6086:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 392,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6086:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 395,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6086:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6078:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 428,
													"nodeType": "Block",
													"src": "6252:362:1",
													"statements": [
														{
															"assignments": [
																403
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 403,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6274:11:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 428,
																	"src": "6266:19:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 402,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6266:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 407,
															"initialValue": {
																"baseExpression": {
																	"id": 404,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 159,
																	"src": "6288:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 406,
																"indexExpression": {
																	"id": 405,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 384,
																	"src": "6298:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6288:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6266:37:1"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 410,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 408,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 403,
																	"src": "6321:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 409,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 388,
																	"src": "6335:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6321:19:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 418,
															"nodeType": "IfStatement",
															"src": "6317:115:1",
															"trueBody": {
																"id": 417,
																"nodeType": "Block",
																"src": "6342:90:1",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 412,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 384,
																					"src": "6392:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 413,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 403,
																					"src": "6398:11:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 414,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 388,
																					"src": "6411:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 411,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 11,
																				"src": "6367:24:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 415,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6367:50:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 416,
																		"nodeType": "RevertStatement",
																		"src": "6360:57:1"
																	}
																]
															}
														},
														{
															"id": 427,
															"nodeType": "UncheckedBlock",
															"src": "6445:159:1",
															"statements": [
																{
																	"expression": {
																		"id": 425,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 419,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "6552:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 421,
																			"indexExpression": {
																				"id": 420,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 384,
																				"src": "6562:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6552:15:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 424,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 422,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 403,
																				"src": "6570:11:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 423,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 388,
																				"src": "6584:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6570:19:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6552:37:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 426,
																	"nodeType": "ExpressionStatement",
																	"src": "6552:37:1"
																}
															]
														}
													]
												},
												"id": 429,
												"nodeType": "IfStatement",
												"src": "6074:540:1",
												"trueBody": {
													"id": 401,
													"nodeType": "Block",
													"src": "6098:148:1",
													"statements": [
														{
															"expression": {
																"id": 399,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 397,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 167,
																	"src": "6214:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 398,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 388,
																	"src": "6230:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6214:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 400,
															"nodeType": "ExpressionStatement",
															"src": "6214:21:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 435,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 430,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 386,
														"src": "6628:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 433,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6642:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 432,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6634:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 431,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6634:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 434,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6634:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6628:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 449,
													"nodeType": "Block",
													"src": "6843:206:1",
													"statements": [
														{
															"id": 448,
															"nodeType": "UncheckedBlock",
															"src": "6857:182:1",
															"statements": [
																{
																	"expression": {
																		"id": 446,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 442,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "7002:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 444,
																			"indexExpression": {
																				"id": 443,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 386,
																				"src": "7012:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7002:13:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 445,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 388,
																			"src": "7019:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7002:22:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 447,
																	"nodeType": "ExpressionStatement",
																	"src": "7002:22:1"
																}
															]
														}
													]
												},
												"id": 450,
												"nodeType": "IfStatement",
												"src": "6624:425:1",
												"trueBody": {
													"id": 441,
													"nodeType": "Block",
													"src": "6646:191:1",
													"statements": [
														{
															"id": 440,
															"nodeType": "UncheckedBlock",
															"src": "6660:167:1",
															"statements": [
																{
																	"expression": {
																		"id": 438,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 436,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 167,
																			"src": "6791:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 437,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 388,
																			"src": "6807:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6791:21:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 439,
																	"nodeType": "ExpressionStatement",
																	"src": "6791:21:1"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 452,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 384,
															"src": "7073:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 453,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 386,
															"src": "7079:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 454,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "7083:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 451,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 663,
														"src": "7064:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7064:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 456,
												"nodeType": "EmitStatement",
												"src": "7059:30:1"
											}
										]
									},
									"documentation": {
										"id": 382,
										"nodeType": "StructuredDocumentation",
										"src": "5680:304:1",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 458,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "5998:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6014:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "6006:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6006:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6028:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "6020:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 385,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6020:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6040:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "6032:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 387,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6032:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6005:41:1"
									},
									"returnParameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6064:0:1"
									},
									"scope": 651,
									"src": "5989:1107:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 490,
										"nodeType": "Block",
										"src": "7495:152:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 466,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 461,
														"src": "7509:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 469,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7528:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 468,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7520:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 467,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7520:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 470,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7520:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7509:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 480,
												"nodeType": "IfStatement",
												"src": "7505:91:1",
												"trueBody": {
													"id": 479,
													"nodeType": "Block",
													"src": "7532:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 475,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7582:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 474,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7574:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 473,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7574:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 476,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7574:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 472,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 21,
																	"src": "7553:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 477,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7553:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 478,
															"nodeType": "RevertStatement",
															"src": "7546:39:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 484,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7621:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 483,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7613:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 482,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7613:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 485,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7613:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 486,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 461,
															"src": "7625:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 487,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "7634:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 481,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "7605:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 488,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7605:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 489,
												"nodeType": "ExpressionStatement",
												"src": "7605:35:1"
											}
										]
									},
									"documentation": {
										"id": 459,
										"nodeType": "StructuredDocumentation",
										"src": "7102:332:1",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 491,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7448:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 461,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7462:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "7454:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 460,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7454:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7479:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "7471:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 462,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7471:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7453:32:1"
									},
									"returnParameters": {
										"id": 465,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7495:0:1"
									},
									"scope": 651,
									"src": "7439:208:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 523,
										"nodeType": "Block",
										"src": "8021:150:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 499,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 494,
														"src": "8035:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 502,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8054:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 501,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8046:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 500,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8046:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 503,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8046:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8035:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 513,
												"nodeType": "IfStatement",
												"src": "8031:89:1",
												"trueBody": {
													"id": 512,
													"nodeType": "Block",
													"src": "8058:62:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 508,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8106:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 507,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8098:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 506,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8098:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 509,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8098:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 505,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "8079:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 510,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8079:30:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 511,
															"nodeType": "RevertStatement",
															"src": "8072:37:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 515,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 494,
															"src": "8137:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 518,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8154:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 517,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8146:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 516,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8146:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 519,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8146:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 520,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 496,
															"src": "8158:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 514,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "8129:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 521,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8129:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 522,
												"nodeType": "ExpressionStatement",
												"src": "8129:35:1"
											}
										]
									},
									"documentation": {
										"id": 492,
										"nodeType": "StructuredDocumentation",
										"src": "7653:307:1",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 524,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "7974:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 494,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7988:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "7980:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 493,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7980:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 496,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8005:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "7997:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 495,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7997:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7979:32:1"
									},
									"returnParameters": {
										"id": 498,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8021:0:1"
									},
									"scope": 651,
									"src": "7965:206:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 541,
										"nodeType": "Block",
										"src": "8781:54:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 535,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 527,
															"src": "8800:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 536,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 529,
															"src": "8807:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 537,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 531,
															"src": "8816:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 538,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8823:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 534,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															542,
															602
														],
														"referencedDeclaration": 602,
														"src": "8791:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8791:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 540,
												"nodeType": "ExpressionStatement",
												"src": "8791:37:1"
											}
										]
									},
									"documentation": {
										"id": 525,
										"nodeType": "StructuredDocumentation",
										"src": "8177:525:1",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 542,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8716:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 527,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8733:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "8725:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 526,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8725:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 529,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8748:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "8740:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 528,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8740:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8765:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "8757:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 530,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8757:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8724:47:1"
									},
									"returnParameters": {
										"id": 533,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8781:0:1"
									},
									"scope": 651,
									"src": "8707:128:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 601,
										"nodeType": "Block",
										"src": "9780:334:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 559,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 554,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 545,
														"src": "9794:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 557,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9811:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 556,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9803:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 555,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9803:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 558,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9803:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9794:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 568,
												"nodeType": "IfStatement",
												"src": "9790:89:1",
												"trueBody": {
													"id": 567,
													"nodeType": "Block",
													"src": "9815:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 563,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9865:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 562,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9857:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 561,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9857:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 564,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9857:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 560,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 35,
																	"src": "9836:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 565,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9836:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 566,
															"nodeType": "RevertStatement",
															"src": "9829:39:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 574,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 569,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 547,
														"src": "9892:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 572,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9911:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 571,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9903:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 570,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9903:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 573,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9903:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9892:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 583,
												"nodeType": "IfStatement",
												"src": "9888:90:1",
												"trueBody": {
													"id": 582,
													"nodeType": "Block",
													"src": "9915:63:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 578,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9964:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 577,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9956:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 576,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9956:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 579,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9956:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 575,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "9936:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 580,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9936:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 581,
															"nodeType": "RevertStatement",
															"src": "9929:38:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 590,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 584,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 165,
																"src": "9987:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 587,
															"indexExpression": {
																"id": 585,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 545,
																"src": "9999:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9987:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 588,
														"indexExpression": {
															"id": 586,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 547,
															"src": "10006:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9987:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 589,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 549,
														"src": "10017:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9987:35:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 591,
												"nodeType": "ExpressionStatement",
												"src": "9987:35:1"
											},
											{
												"condition": {
													"id": 592,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 551,
													"src": "10036:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 600,
												"nodeType": "IfStatement",
												"src": "10032:76:1",
												"trueBody": {
													"id": 599,
													"nodeType": "Block",
													"src": "10047:61:1",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 594,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 545,
																		"src": "10075:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 595,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 547,
																		"src": "10082:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 596,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 549,
																		"src": "10091:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 593,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 672,
																	"src": "10066:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 597,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10066:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 598,
															"nodeType": "EmitStatement",
															"src": "10061:36:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 543,
										"nodeType": "StructuredDocumentation",
										"src": "8841:836:1",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 602,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9691:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 552,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 545,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9708:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9700:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 544,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9700:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 547,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9723:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9715:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 546,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9715:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 549,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9740:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9732:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 548,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9732:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 551,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "9752:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9747:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 550,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9747:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9699:63:1"
									},
									"returnParameters": {
										"id": 553,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9780:0:1"
									},
									"scope": 651,
									"src": "9682:432:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 649,
										"nodeType": "Block",
										"src": "10485:387:1",
										"statements": [
											{
												"assignments": [
													613
												],
												"declarations": [
													{
														"constant": false,
														"id": 613,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10503:16:1",
														"nodeType": "VariableDeclaration",
														"scope": 649,
														"src": "10495:24:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 612,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10495:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 618,
												"initialValue": {
													"arguments": [
														{
															"id": 615,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 605,
															"src": "10532:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 616,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 607,
															"src": "10539:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 614,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 278,
														"src": "10522:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 617,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10522:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10495:52:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 625,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 619,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 613,
														"src": "10561:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 622,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10585:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 621,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10585:7:1",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 620,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10580:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 623,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10580:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 624,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10594:3:1",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10580:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10561:36:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 648,
												"nodeType": "IfStatement",
												"src": "10557:309:1",
												"trueBody": {
													"id": 647,
													"nodeType": "Block",
													"src": "10599:267:1",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 628,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 626,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 613,
																	"src": "10617:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 627,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 609,
																	"src": "10636:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10617:24:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 636,
															"nodeType": "IfStatement",
															"src": "10613:130:1",
															"trueBody": {
																"id": 635,
																"nodeType": "Block",
																"src": "10643:100:1",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 630,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 607,
																					"src": "10695:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 631,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 613,
																					"src": "10704:16:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 632,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 609,
																					"src": "10722:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 629,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 30,
																				"src": "10668:26:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 633,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10668:60:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 634,
																		"nodeType": "RevertStatement",
																		"src": "10661:67:1"
																	}
																]
															}
														},
														{
															"id": 646,
															"nodeType": "UncheckedBlock",
															"src": "10756:100:1",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 638,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 605,
																				"src": "10793:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 639,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 607,
																				"src": "10800:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 642,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 640,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 613,
																					"src": "10809:16:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 641,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 609,
																					"src": "10828:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10809:24:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 643,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10835:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 637,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				542,
																				602
																			],
																			"referencedDeclaration": 602,
																			"src": "10784:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 644,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10784:57:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 645,
																	"nodeType": "ExpressionStatement",
																	"src": "10784:57:1"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 603,
										"nodeType": "StructuredDocumentation",
										"src": "10120:271:1",
										"text": " @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 650,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10405:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 605,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10429:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10421:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 604,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10421:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 607,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10444:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10436:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 606,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10436:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10461:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10453:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 608,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10453:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10420:47:1"
									},
									"returnParameters": {
										"id": 611,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10485:0:1"
									},
									"scope": 651,
									"src": "10396:476:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 652,
							"src": "1106:9768:1",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "105:10770:1"
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"id": 2,
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							729
						]
					},
					"id": 730,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 653,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 654,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:2",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 729,
							"linearizedBaseContracts": [
								729
							],
							"name": "IERC20",
							"nameLocation": "214:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 655,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:2",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 663,
									"name": "Transfer",
									"nameLocation": "396:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 662,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 657,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "405:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 656,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 659,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "427:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 658,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 661,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "447:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 660,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:2"
									},
									"src": "390:72:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 664,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:2",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 672,
									"name": "Approval",
									"nameLocation": "627:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 671,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 666,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "636:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 665,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 668,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "659:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 667,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 670,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "684:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 669,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:2"
									},
									"src": "621:78:2"
								},
								{
									"documentation": {
										"id": 673,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:2",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 678,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 674,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:2"
									},
									"returnParameters": {
										"id": 677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 676,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 678,
												"src": "821:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 675,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:2"
									},
									"scope": 729,
									"src": "775:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 679,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:2",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 686,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 681,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "931:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 680,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:2"
									},
									"returnParameters": {
										"id": 685,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 684,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "971:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 683,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:2"
									},
									"scope": 729,
									"src": "912:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 687,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:2",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 696,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 692,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 689,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1222:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 688,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 691,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1234:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 690,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:2"
									},
									"returnParameters": {
										"id": 695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 694,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1267:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 693,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:2"
									},
									"scope": 729,
									"src": "1204:69:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 697,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:2",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 706,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 702,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1567:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 698,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 701,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1582:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 700,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:2"
									},
									"returnParameters": {
										"id": 705,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 704,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1622:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 703,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:2"
									},
									"scope": 729,
									"src": "1548:83:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 707,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:2",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 716,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 712,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 709,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2326:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 708,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 711,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2343:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 710,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:2"
									},
									"returnParameters": {
										"id": 715,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 714,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2376:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 713,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:2"
									},
									"scope": 729,
									"src": "2309:73:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 717,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 728,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 724,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 719,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2712:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 718,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 721,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2726:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 720,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 723,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2738:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 722,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:2"
									},
									"returnParameters": {
										"id": 727,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 726,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2771:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 725,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:2"
									},
									"scope": 729,
									"src": "2690:87:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 730,
							"src": "204:2575:2",
							"usedErrors": [],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "106:2674:2"
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"id": 3,
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							729
						],
						"IERC20Metadata": [
							755
						]
					},
					"id": 756,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 731,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 733,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 756,
							"sourceUnit": 730,
							"src": "151:37:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 732,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 729,
										"src": "159:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 735,
										"name": "IERC20",
										"nameLocations": [
											"306:6:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 729,
										"src": "306:6:3"
									},
									"id": 736,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:3"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 734,
								"nodeType": "StructuredDocumentation",
								"src": "190:87:3",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 755,
							"linearizedBaseContracts": [
								755,
								729
							],
							"name": "IERC20Metadata",
							"nameLocation": "288:14:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 737,
										"nodeType": "StructuredDocumentation",
										"src": "319:54:3",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 742,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "387:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 738,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:3"
									},
									"returnParameters": {
										"id": 741,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 740,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 742,
												"src": "417:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 739,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:3"
									},
									"scope": 755,
									"src": "378:54:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 743,
										"nodeType": "StructuredDocumentation",
										"src": "438:56:3",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 748,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "508:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 744,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:2:3"
									},
									"returnParameters": {
										"id": 747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 746,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 748,
												"src": "540:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 745,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:3"
									},
									"scope": 755,
									"src": "499:56:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 749,
										"nodeType": "StructuredDocumentation",
										"src": "561:65:3",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 754,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "640:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 750,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:3"
									},
									"returnParameters": {
										"id": 753,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 752,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 754,
												"src": "674:5:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 751,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:7:3"
									},
									"scope": 755,
									"src": "631:50:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 756,
							"src": "278:405:3",
							"usedErrors": [],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "125:559:3"
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"id": 4,
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							785
						]
					},
					"id": 786,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 757,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:4"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 758,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:4",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 785,
							"linearizedBaseContracts": [
								785
							],
							"name": "Context",
							"nameLocation": "642:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 766,
										"nodeType": "Block",
										"src": "718:34:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 763,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 764,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:4",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 762,
												"id": 765,
												"nodeType": "Return",
												"src": "728:17:4"
											}
										]
									},
									"id": 767,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:4"
									},
									"returnParameters": {
										"id": 762,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 761,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 767,
												"src": "709:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 760,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:4"
									},
									"scope": 785,
									"src": "656:96:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 775,
										"nodeType": "Block",
										"src": "825:32:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 772,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:4",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 771,
												"id": 774,
												"nodeType": "Return",
												"src": "835:15:4"
											}
										]
									},
									"id": 776,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 768,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:4"
									},
									"returnParameters": {
										"id": 771,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 770,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "809:14:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 769,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:4"
									},
									"scope": 785,
									"src": "758:99:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 783,
										"nodeType": "Block",
										"src": "935:25:4",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 781,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 780,
												"id": 782,
												"nodeType": "Return",
												"src": "945:8:4"
											}
										]
									},
									"id": 784,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 777,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:4"
									},
									"returnParameters": {
										"id": 780,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 779,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 784,
												"src": "926:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 778,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:4"
									},
									"scope": 785,
									"src": "863:97:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 786,
							"src": "624:338:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:4"
				}
			},
			"contracts/MockERC20.sol": {
				"id": 5,
				"ast": {
					"absolutePath": "contracts/MockERC20.sol",
					"exportedSymbols": {
						"Context": [
							785
						],
						"ERC20": [
							651
						],
						"IERC20": [
							729
						],
						"IERC20Errors": [
							41
						],
						"IERC20Metadata": [
							755
						],
						"MockERC20": [
							809
						]
					},
					"id": 810,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 787,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".18"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 788,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 810,
							"sourceUnit": 652,
							"src": "57:55:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 789,
										"name": "ERC20",
										"nameLocations": [
											"136:5:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 651,
										"src": "136:5:5"
									},
									"id": 790,
									"nodeType": "InheritanceSpecifier",
									"src": "136:5:5"
								}
							],
							"canonicalName": "MockERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 809,
							"linearizedBaseContracts": [
								809,
								651,
								41,
								755,
								729,
								785
							],
							"name": "MockERC20",
							"nameLocation": "123:9:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 807,
										"nodeType": "Block",
										"src": "222:71:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 802,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "238:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 803,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "242:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "238:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "31653234",
															"id": 804,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "250:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000000000"
															},
															"value": "1e24"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_1000000000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000000000"
															}
														],
														"id": 801,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 491,
														"src": "232:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 805,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "232:23:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 806,
												"nodeType": "ExpressionStatement",
												"src": "232:23:5"
											}
										]
									},
									"id": 808,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 797,
													"name": "name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 792,
													"src": "208:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												{
													"id": 798,
													"name": "symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 794,
													"src": "214:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												}
											],
											"id": 799,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 796,
												"name": "ERC20",
												"nameLocations": [
													"202:5:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 651,
												"src": "202:5:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "202:19:5"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 795,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 792,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "174:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 808,
												"src": "160:18:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 791,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "160:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 794,
												"mutability": "mutable",
												"name": "symbol",
												"nameLocation": "194:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 808,
												"src": "180:20:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 793,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "180:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "159:42:5"
									},
									"returnParameters": {
										"id": 800,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "222:0:5"
									},
									"scope": 809,
									"src": "148:145:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 810,
							"src": "114:181:5",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "32:264:5"
				}
			}
		},
		"errors": [],
		"version": "0.8.28",
		"long_version": "0.8.28+commit.7893614a.Emscripten.clang",
		"revive_version": "0.1.0-dev.12+commit.66f9a4d.llvm-18.1.8"
	}
}